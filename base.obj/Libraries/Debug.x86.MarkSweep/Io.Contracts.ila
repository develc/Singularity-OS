
//  Microsoft (R) .NET Framework IL Disassembler.  Version 2.0.50727.42
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v1.1.9999
.assembly extern Corlib
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly extern Microsoft.SingSharp.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:3555:0
}
.assembly extern System.Compiler.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:5031:5
}
.assembly extern Directory.Contracts
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly Io.Contracts
{
  .custom instance void [Corlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 18 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E   // ...Microsoft.Sin
                                                                                            67 75 6C 61 72 69 74 79 2E 49 6F 00 00 )          // gularity.Io..
  .custom instance void [Corlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 2B 4D 69 63 72 6F 73 6F 66 74 20 52 65 73   // ..+Microsoft Res
                                                                                              65 61 72 63 68 20 53 69 6E 67 75 6C 61 72 69 74   // earch Singularit
                                                                                              79 20 49 4F 20 43 6F 6E 74 72 61 63 74 73 00 00 ) // y IO Contracts..
  .custom instance void [Corlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                              70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom instance void [Corlib]System.Reflection.AssemblyKeyFileAttribute::.ctor(string) = ( 01 00 0A 70 75 62 6C 69 63 2E 73 6E 6B 00 00 )    // ...public.snk..
  .custom instance void [Corlib]System.Reflection.AssemblyDelaySignAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [Corlib]System.Diagnostics.DebuggableAttribute::.ctor(bool,
  //                                                                              bool) = ( 01 00 01 01 00 00 ) 

  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                2B 96 12 82 73 B1 F0 B2 89 A1 53 81 A7 A1 1A BF   // +...s.....S.....
                07 40 A0 08 21 51 DE DF 0D 8C 66 0D 61 9A 97 19   // .@..!Q....f.a...
                07 08 76 E4 94 44 5A AB 22 BC B3 97 D7 B4 FF 97   // ..v..DZ.".......
                CA 80 ED 49 B3 FC 2B 87 BB 76 7B 60 CA FB F9 49   // ...I..+..v{`...I
                AA 43 5F CF 17 DE B3 19 01 BE 16 49 3C 87 DF E6   // .C_........I<...
                1D 71 F5 18 5F 06 97 A7 0A B5 E0 F1 E0 5C 70 46   // .q.._........\pF
                DB 0D 28 C1 BE 6D 83 DA 3F AC 58 16 1C 56 3C A5   // ..(..m..?.X..V<.
                9D C2 EF 9C E3 02 30 D9 37 7A A6 3D D2 76 CD BF ) // ......0.7z.=.v..
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module Io.Contracts.dll
// MVID: {B3D91E66-367B-4520-BBAC-FE89C183EE3B}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00010001    //  ILONLY TRACKDEBUGDATA
// Image base: 0x027D0000


// =============== CLASS MEMBERS DECLARATION ===================

.class public auto ansi sealed Microsoft.Singularity.Io.CursorSize
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname uint8 value__
  .field public static literal valuetype Microsoft.Singularity.Io.CursorSize Large = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Io.CursorSize Small = int32(0x00000001)
} // end of class Microsoft.Singularity.Io.CursorSize

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.ConsoleDeviceContract
       extends Microsoft.Singularity.Io.DeviceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000023)
    .field public static literal specialname int32 Clear = int32(0x00000003)
    .field public static literal specialname int32 AckClear = int32(0x00000004)
    .field public static literal specialname int32 NakClear = int32(0x00000005)
    .field public static literal specialname int32 GetDisplayDimensions = int32(0x00000006)
    .field public static literal specialname int32 DisplayDimensions = int32(0x00000007)
    .field public static literal specialname int32 GetCursorPosition = int32(0x00000008)
    .field public static literal specialname int32 CursorPosition = int32(0x00000009)
    .field public static literal specialname int32 SetCursorPosition = int32(0x0000000A)
    .field public static literal specialname int32 AckSetCursorPosition = int32(0x0000000B)
    .field public static literal specialname int32 InvalidPosition = int32(0x0000000C)
    .field public static literal specialname int32 SetCursorSize = int32(0x0000000D)
    .field public static literal specialname int32 AckSetCursorSize = int32(0x0000000E)
    .field public static literal specialname int32 NotSupported = int32(0x0000000F)
    .field public static literal specialname int32 Write = int32(0x00000010)
    .field public static literal specialname int32 AckWrite = int32(0x00000011)
    .field public static literal specialname int32 NakWrite = int32(0x00000012)
    .field public static literal specialname int32 PutChar = int32(0x00000013)
    .field public static literal specialname int32 AckPutChar = int32(0x00000014)
    .field public static literal specialname int32 PutCharAt = int32(0x00000015)
    .field public static literal specialname int32 AckPutCharAt = int32(0x00000016)
    .field public static literal specialname int32 ClearCursorToEndOfLine = int32(0x00000017)
    .field public static literal specialname int32 AckClearCursorToEndOfLine = int32(0x00000018)
    .field public static literal specialname int32 CursorFlash = int32(0x00000019)
    .field public static literal specialname int32 AckCursorFlash = int32(0x0000001A)
    .field public static literal specialname int32 NakCursorFlash = int32(0x0000001B)
    .field public static literal specialname int32 CursorHide = int32(0x0000001C)
    .field public static literal specialname int32 AckCursorHide = int32(0x0000001D)
    .field public static literal specialname int32 NakCursorHide = int32(0x0000001E)
    .field public static literal specialname int32 CursorShow = int32(0x0000001F)
    .field public static literal specialname int32 AckCursorShow = int32(0x00000020)
    .field public static literal specialname int32 NakCursorShow = int32(0x00000021)
    .field public static literal specialname int32 Success = int32(0x00000022)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear AckClearPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear NakClearPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions DisplayDimensionsPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition CursorPositionPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition AckSetCursorPositionPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition InvalidPositionPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize AckSetCursorSizePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported NotSupportedPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite AckWritePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite NakWritePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar AckPutCharPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt AckPutCharAtPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine AckClearCursorToEndOfLinePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash AckCursorFlashPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash NakCursorFlashPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide AckCursorHidePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide NakCursorHidePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow AckCursorShowPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow NakCursorShowPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000038'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::CanonicalState$PST06000005(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::CanonicalState$PST06000005(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       462 (0x1ce)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_00c2

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  beq        IL_00cd

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   22
      IL_001f:  beq        IL_00d8

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   21
      IL_0027:  beq        IL_00e3

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   20
      IL_002f:  beq        IL_00ee

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   19
      IL_0037:  beq        IL_00f9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   18
      IL_003f:  beq        IL_0104

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   17
      IL_0047:  beq        IL_010f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   16
      IL_004f:  beq        IL_011a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   15
      IL_0057:  beq        IL_0125

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  beq        IL_0130

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_013b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   12
      IL_006f:  beq        IL_0146

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   11
      IL_0077:  beq        IL_0151

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   10
      IL_007f:  beq        IL_015c

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   9
      IL_0087:  beq        IL_0167

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.8
      IL_008e:  beq        IL_0172

      IL_0093:  ldloc.0
      IL_0094:  ldc.i4.7
      IL_0095:  beq        IL_017d

      IL_009a:  ldloc.0
      IL_009b:  ldc.i4.6
      IL_009c:  beq        IL_0188

      IL_00a1:  ldloc.0
      IL_00a2:  ldc.i4.5
      IL_00a3:  beq        IL_0193

      IL_00a8:  ldloc.0
      IL_00a9:  ldc.i4.4
      IL_00aa:  beq        IL_019e

      IL_00af:  ldloc.0
      IL_00b0:  ldc.i4.3
      IL_00b1:  beq        IL_01a9

      IL_00b6:  ldloc.0
      IL_00b7:  ldc.i4.2
      IL_00b8:  beq        IL_01b4

      IL_00bd:  br         IL_01bf

      IL_00c2:  ldstr      "Ready"
      IL_00c7:  stloc.1
      IL_00c8:  br         IL_01ca

      IL_00cd:  ldstr      "Ready$0"
      IL_00d2:  stloc.1
      IL_00d3:  br         IL_01ca

      IL_00d8:  ldstr      "Ready$1"
      IL_00dd:  stloc.1
      IL_00de:  br         IL_01ca

      IL_00e3:  ldstr      "Ready$2"
      IL_00e8:  stloc.1
      IL_00e9:  br         IL_01ca

      IL_00ee:  ldstr      "Ready$3"
      IL_00f3:  stloc.1
      IL_00f4:  br         IL_01ca

      IL_00f9:  ldstr      "Ready$4"
      IL_00fe:  stloc.1
      IL_00ff:  br         IL_01ca

      IL_0104:  ldstr      "Ready$5"
      IL_0109:  stloc.1
      IL_010a:  br         IL_01ca

      IL_010f:  ldstr      "Ready$6"
      IL_0114:  stloc.1
      IL_0115:  br         IL_01ca

      IL_011a:  ldstr      "Ready$7"
      IL_011f:  stloc.1
      IL_0120:  br         IL_01ca

      IL_0125:  ldstr      "Ready$8"
      IL_012a:  stloc.1
      IL_012b:  br         IL_01ca

      IL_0130:  ldstr      "Ready$9"
      IL_0135:  stloc.1
      IL_0136:  br         IL_01ca

      IL_013b:  ldstr      "Ready$10"
      IL_0140:  stloc.1
      IL_0141:  br         IL_01ca

      IL_0146:  ldstr      "Ready$11"
      IL_014b:  stloc.1
      IL_014c:  br         IL_01ca

      IL_0151:  ldstr      "Ready$12"
      IL_0156:  stloc.1
      IL_0157:  br         IL_01ca

      IL_015c:  ldstr      "Ready$13"
      IL_0161:  stloc.1
      IL_0162:  br         IL_01ca

      IL_0167:  ldstr      "Ready$14"
      IL_016c:  stloc.1
      IL_016d:  br         IL_01ca

      IL_0172:  ldstr      "Ready$15"
      IL_0177:  stloc.1
      IL_0178:  br         IL_01ca

      IL_017d:  ldstr      "Ready$16"
      IL_0182:  stloc.1
      IL_0183:  br         IL_01ca

      IL_0188:  ldstr      "Ready$17"
      IL_018d:  stloc.1
      IL_018e:  br         IL_01ca

      IL_0193:  ldstr      "Ready$18"
      IL_0198:  stloc.1
      IL_0199:  br         IL_01ca

      IL_019e:  ldstr      "Ready$19"
      IL_01a3:  stloc.1
      IL_01a4:  br         IL_01ca

      IL_01a9:  ldstr      "Start"
      IL_01ae:  stloc.1
      IL_01af:  br         IL_01ca

      IL_01b4:  ldstr      "DoneState"
      IL_01b9:  stloc.1
      IL_01ba:  br         IL_01ca

      IL_01bf:  ldstr      "<protocol terminated>"
      IL_01c4:  stloc.1
      IL_01c5:  br         IL_01ca

      IL_01ca:  ldloc.1
      IL_01cb:  stloc.2
      IL_01cc:  ldloc.1
      IL_01cd:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendClear() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverClear0$PST060000C4()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverClear0$PST060000C5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   23
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send Clear in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendClear

    .method public instance void  RecvAckClear() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckClear when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckClearPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   22
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckClear in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckClear

    .method public instance void  RecvNakClear() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv NakClear when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakClearPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   22
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakClear in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakClear

    .method public instance void  SendGetDisplayDimensions() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverGetDisplayDimensions0$PST060000C6()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverGetDisplayDimensions0$PST060000C7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   21
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetDisplayDimensions in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetDisplayDimensions

    .method public instance void  RecvDisplayDimensions([out] int32& columns,
                                                        [out] int32& rows) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv DisplayDimensions when next message has"
      + " tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DisplayDimensionsPod0
      IL_008e:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions::columns
      IL_0093:  stind.i4
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DisplayDimensionsPod0
      IL_009b:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions::rows
      IL_00a0:  stind.i4
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DisplayDimensionsPod0
      IL_00b0:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   24
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv DisplayDimensions in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Imp::RecvDisplayDimensions

    .method public instance void  SendGetCursorPosition() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverGetCursorPosition0$PST060000C8()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverGetCursorPosition0$PST060000C9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   20
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetCursorPosition in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetCursorPosition

    .method public instance void  RecvCursorPosition([out] int32& column,
                                                     [out] int32& row) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       225 (0xe1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ca

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CursorPosition when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CursorPositionPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition::column
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CursorPositionPod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition::row
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CursorPositionPod0
      IL_00b2:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   24
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_00e0

      IL_00ca:  ldstr      "can't recv CursorPosition in state "
      IL_00cf:  ldarg.0
      IL_00d0:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00d5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00da:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00df:  throw

      IL_00e0:  ret
    } // end of method Imp::RecvCursorPosition

    .method public instance void  SendSetCursorPosition(int32 column,
                                                        int32 row) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverSetCursorPosition0$PST060000CA(int32,
                                                                                                                                   int32)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverSetCursorPosition0$PST060000CB(int32,
                                                                                                                                           int32,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.s   19
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send SetCursorPosition in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0075:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Imp::SendSetCursorPosition

    .method public instance void  RecvAckSetCursorPosition() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckSetCursorPosition when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckSetCursorPositionPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   18
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckSetCursorPosition in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckSetCursorPosition

    .method public instance void  RecvInvalidPosition() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       363 (0x16b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  beq        IL_00b8

      IL_001c:  br         IL_0154

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.s   12
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006c:  ldloc.2
      IL_006d:  ldc.i4.s   12
      IL_006f:  beq        IL_0091

      IL_0074:  ldstr      "can't recv InvalidPosition when next message has t"
      + "ag "
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0081:  box        [Corlib]System.Int32
      IL_0086:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_008b:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ldarg.0
      IL_0092:  ldc.i4.0
      IL_0093:  volatile.
      IL_0095:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::InvalidPositionPod0
      IL_00a0:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition
      IL_00a6:  ldarg.0
      IL_00a7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ac:  ldc.i4.s   18
      IL_00ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b3:  br         IL_016a

      IL_00b8:  ldc.i4.0
      IL_00b9:  stloc.3
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_4
      IL_00c4:  ldloc.s    V_4
      IL_00c6:  brtrue     IL_00dc

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  ldc.i4.0
      IL_00df:  ceq
      IL_00e1:  brfalse    IL_00ff

      IL_00e6:  ldloc.3
      IL_00e7:  brfalse    IL_00f7

      IL_00ec:  ldstr      "Peer is closed"
      IL_00f1:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ldarg.0
      IL_00f8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00fd:  br.s       IL_00b8

      IL_00ff:  ldarg.0
      IL_0100:  ldc.i4.s   12
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0107:  ldloc.s    V_4
      IL_0109:  ldc.i4.s   12
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv InvalidPosition when next message has t"
      + "ag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_011d:  box        [Corlib]System.Int32
      IL_0122:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::InvalidPositionPod0
      IL_013c:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.s   11
      IL_014a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014f:  br         IL_016a

      IL_0154:  ldstr      "can't recv InvalidPosition in state "
      IL_0159:  ldarg.0
      IL_015a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_015f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0164:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0169:  throw

      IL_016a:  ret
    } // end of method Imp::RecvInvalidPosition

    .method public instance void  SendSetCursorSize(valuetype Microsoft.Singularity.Io.CursorSize cursorSize) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverSetCursorSize0$PST060000CC(valuetype Microsoft.Singularity.Io.CursorSize)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverSetCursorSize0$PST060000CD(valuetype Microsoft.Singularity.Io.CursorSize,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   17
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send SetCursorSize in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendSetCursorSize

    .method public instance void  RecvAckSetCursorSize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckSetCursorSize when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckSetCursorSizePod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   16
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckSetCursorSize in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckSetCursorSize

    .method public instance void  RecvNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NotSupported when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NotSupportedPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   16
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv NotSupported in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvNotSupported

    .method public instance void  SendWrite(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                            int32 offset,
                                            int32 count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       143 (0x8f)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0078

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0051

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  ldarg.3
      IL_0047:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverWrite0$PST060000CE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                       int32,
                                                                                                                       int32)
      IL_004c:  br         IL_0060

      IL_0051:  ldloc.3
      IL_0052:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0057:  ldarg.1
      IL_0058:  ldarg.2
      IL_0059:  ldarg.3
      IL_005a:  ldarg.0
      IL_005b:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverWrite0$PST060000CF(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32,
                                                                                                                               int32,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.s   15
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0073:  br         IL_008e

      IL_0078:  ldstr      "can't send Write in state "
      IL_007d:  ldarg.0
      IL_007e:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0083:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0088:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008d:  throw

      IL_008e:  ret
    } // end of method Imp::SendWrite

    .method public instance void  RecvAckWrite([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   17
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   17
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckWrite when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckWritePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckWritePod0
      IL_00a5:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   14
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv AckWrite in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvAckWrite

    .method public instance void  RecvNakWrite([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   18
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   18
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakWrite when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakWritePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakWritePod0
      IL_00a5:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   14
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv NakWrite in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvNakWrite

    .method public instance void  SendPutChar(char c) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverPutChar0$PST060000D0(char)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverPutChar0$PST060000D1(char,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send PutChar in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendPutChar

    .method public instance void  RecvAckPutChar() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   20
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   20
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckPutChar when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckPutCharPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   24
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckPutChar in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckPutChar

    .method public instance void  SendPutCharAt(char c,
                                                int32 column,
                                                int32 row) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       131 (0x83)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006c

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0045

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  ldarg.3
      IL_003b:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverPutCharAt0$PST060000D2(char,
                                                                                                                           int32,
                                                                                                                           int32)
      IL_0040:  br         IL_0054

      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_004b:  ldarg.1
      IL_004c:  ldarg.2
      IL_004d:  ldarg.3
      IL_004e:  ldarg.0
      IL_004f:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverPutCharAt0$PST060000D3(char,
                                                                                                                                   int32,
                                                                                                                                   int32,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005a:  ldarg.0
      IL_005b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0060:  ldc.i4.s   12
      IL_0062:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0067:  br         IL_0082

      IL_006c:  ldstr      "can't send PutCharAt in state "
      IL_0071:  ldarg.0
      IL_0072:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0077:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007c:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0081:  throw

      IL_0082:  ret
    } // end of method Imp::SendPutCharAt

    .method public instance void  RecvAckPutCharAt() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   22
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckPutCharAt when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckPutCharAtPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   11
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckPutCharAt in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckPutCharAt

    .method public instance void  SendClearCursorToEndOfLine() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverClearCursorToEndOfLine0$PST060000D4()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverClearCursorToEndOfLine0$PST060000D5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   10
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send ClearCursorToEndOfLine in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendClearCursorToEndOfLine

    .method public instance void  RecvAckClearCursorToEndOfLine() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   24
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   24
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckClearCursorToEndOfLine when next mes"
      + "sage has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckClearCursorToEndOfLinePod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   24
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckClearCursorToEndOfLine in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckClearCursorToEndOfLine

    .method public instance void  SendCursorFlash() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverCursorFlash0$PST060000D6()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverCursorFlash0$PST060000D7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   9
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send CursorFlash in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendCursorFlash

    .method public instance void  RecvAckCursorFlash() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   26
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   26
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckCursorFlash when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckCursorFlashPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.8
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv AckCursorFlash in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvAckCursorFlash

    .method public instance void  RecvNakCursorFlash() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   27
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   27
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCursorFlash when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakCursorFlashPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.8
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv NakCursorFlash in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvNakCursorFlash

    .method public instance void  SendCursorHide() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverCursorHide0$PST060000D8()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverCursorHide0$PST060000D9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.7
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send CursorHide in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendCursorHide

    .method public instance void  RecvAckCursorHide() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   29
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   29
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckCursorHide when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckCursorHidePod0
      IL_0097:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.6
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckCursorHide in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckCursorHide

    .method public instance void  RecvNakCursorHide() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   30
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   30
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakCursorHide when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakCursorHidePod0
      IL_0097:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.6
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakCursorHide in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakCursorHide

    .method public instance void  SendCursorShow() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverCursorShow0$PST060000DA()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallDeliverCursorShow0$PST060000DB(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.5
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send CursorShow in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendCursorShow

    .method public instance void  RecvAckCursorShow() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   32
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   32
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckCursorShow when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckCursorShowPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckCursorShow in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckCursorShow

    .method public instance void  RecvNakCursorShow() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 21 00 00 00 00 00 )                         // ..!.....
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   33
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   33
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakCursorShow when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakCursorShowPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakCursorShow in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakCursorShow

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 22 00 00 00 00 00 )                         // ..".....
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   34
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   34
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   24
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Success in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ConsoleDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ConsoleDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.ConsoleDeviceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1143 (0x477)
      .maxstack  17
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               int32 V_31)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0080

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_00c0

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_0108

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   10
      IL_0027:  beq        IL_0150

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   12
      IL_002f:  beq        IL_0198

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   13
      IL_0037:  beq        IL_01e0

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   15
      IL_003f:  beq        IL_0228

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.s   17
      IL_0047:  beq        IL_0270

      IL_004c:  ldloc.1
      IL_004d:  ldc.i4.s   19
      IL_004f:  beq        IL_02b8

      IL_0054:  ldloc.1
      IL_0055:  ldc.i4.s   20
      IL_0057:  beq        IL_0300

      IL_005c:  ldloc.1
      IL_005d:  ldc.i4.s   21
      IL_005f:  beq        IL_0348

      IL_0064:  ldloc.1
      IL_0065:  ldc.i4.s   23
      IL_0067:  beq        IL_0390

      IL_006c:  ldloc.1
      IL_006d:  ldc.i4.s   24
      IL_006f:  beq        IL_03d8

      IL_0074:  ldloc.1
      IL_0075:  ldc.i4.3
      IL_0076:  beq        IL_0420

      IL_007b:  br         IL_0468

      IL_0080:  ldc.i4.0
      IL_0081:  stloc.2
      IL_0082:  ldarg.0
      IL_0083:  volatile.
      IL_0085:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_008a:  stloc.3
      IL_008b:  ldloc.3
      IL_008c:  brtrue     IL_00a1

      IL_0091:  ldarg.0
      IL_0092:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0097:  stloc.2
      IL_0098:  ldarg.0
      IL_0099:  volatile.
      IL_009b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00a0:  stloc.3
      IL_00a1:  ldloc.3
      IL_00a2:  ldc.i4.0
      IL_00a3:  ceq
      IL_00a5:  brfalse    IL_00b8

      IL_00aa:  ldloc.2
      IL_00ab:  brfalse    IL_00b8

      IL_00b0:  ldc.i4.m1
      IL_00b1:  stloc.s    V_4
      IL_00b3:  br         IL_0470

      IL_00b8:  ldloc.3
      IL_00b9:  stloc.s    V_4
      IL_00bb:  br         IL_0470

      IL_00c0:  ldc.i4.0
      IL_00c1:  stloc.s    V_5
      IL_00c3:  ldarg.0
      IL_00c4:  volatile.
      IL_00c6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00cb:  stloc.s    V_6
      IL_00cd:  ldloc.s    V_6
      IL_00cf:  brtrue     IL_00e6

      IL_00d4:  ldarg.0
      IL_00d5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00da:  stloc.s    V_5
      IL_00dc:  ldarg.0
      IL_00dd:  volatile.
      IL_00df:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_00e4:  stloc.s    V_6
      IL_00e6:  ldloc.s    V_6
      IL_00e8:  ldc.i4.0
      IL_00e9:  ceq
      IL_00eb:  brfalse    IL_00ff

      IL_00f0:  ldloc.s    V_5
      IL_00f2:  brfalse    IL_00ff

      IL_00f7:  ldc.i4.m1
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_0470

      IL_00ff:  ldloc.s    V_6
      IL_0101:  stloc.s    V_4
      IL_0103:  br         IL_0470

      IL_0108:  ldc.i4.0
      IL_0109:  stloc.s    V_7
      IL_010b:  ldarg.0
      IL_010c:  volatile.
      IL_010e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0113:  stloc.s    V_8
      IL_0115:  ldloc.s    V_8
      IL_0117:  brtrue     IL_012e

      IL_011c:  ldarg.0
      IL_011d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0122:  stloc.s    V_7
      IL_0124:  ldarg.0
      IL_0125:  volatile.
      IL_0127:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_012c:  stloc.s    V_8
      IL_012e:  ldloc.s    V_8
      IL_0130:  ldc.i4.0
      IL_0131:  ceq
      IL_0133:  brfalse    IL_0147

      IL_0138:  ldloc.s    V_7
      IL_013a:  brfalse    IL_0147

      IL_013f:  ldc.i4.m1
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_0470

      IL_0147:  ldloc.s    V_8
      IL_0149:  stloc.s    V_4
      IL_014b:  br         IL_0470

      IL_0150:  ldc.i4.0
      IL_0151:  stloc.s    V_9
      IL_0153:  ldarg.0
      IL_0154:  volatile.
      IL_0156:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_015b:  stloc.s    V_10
      IL_015d:  ldloc.s    V_10
      IL_015f:  brtrue     IL_0176

      IL_0164:  ldarg.0
      IL_0165:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016a:  stloc.s    V_9
      IL_016c:  ldarg.0
      IL_016d:  volatile.
      IL_016f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0174:  stloc.s    V_10
      IL_0176:  ldloc.s    V_10
      IL_0178:  ldc.i4.0
      IL_0179:  ceq
      IL_017b:  brfalse    IL_018f

      IL_0180:  ldloc.s    V_9
      IL_0182:  brfalse    IL_018f

      IL_0187:  ldc.i4.m1
      IL_0188:  stloc.s    V_4
      IL_018a:  br         IL_0470

      IL_018f:  ldloc.s    V_10
      IL_0191:  stloc.s    V_4
      IL_0193:  br         IL_0470

      IL_0198:  ldc.i4.0
      IL_0199:  stloc.s    V_11
      IL_019b:  ldarg.0
      IL_019c:  volatile.
      IL_019e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_01a3:  stloc.s    V_12
      IL_01a5:  ldloc.s    V_12
      IL_01a7:  brtrue     IL_01be

      IL_01ac:  ldarg.0
      IL_01ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01b2:  stloc.s    V_11
      IL_01b4:  ldarg.0
      IL_01b5:  volatile.
      IL_01b7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_01bc:  stloc.s    V_12
      IL_01be:  ldloc.s    V_12
      IL_01c0:  ldc.i4.0
      IL_01c1:  ceq
      IL_01c3:  brfalse    IL_01d7

      IL_01c8:  ldloc.s    V_11
      IL_01ca:  brfalse    IL_01d7

      IL_01cf:  ldc.i4.m1
      IL_01d0:  stloc.s    V_4
      IL_01d2:  br         IL_0470

      IL_01d7:  ldloc.s    V_12
      IL_01d9:  stloc.s    V_4
      IL_01db:  br         IL_0470

      IL_01e0:  ldc.i4.0
      IL_01e1:  stloc.s    V_13
      IL_01e3:  ldarg.0
      IL_01e4:  volatile.
      IL_01e6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_01eb:  stloc.s    V_14
      IL_01ed:  ldloc.s    V_14
      IL_01ef:  brtrue     IL_0206

      IL_01f4:  ldarg.0
      IL_01f5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01fa:  stloc.s    V_13
      IL_01fc:  ldarg.0
      IL_01fd:  volatile.
      IL_01ff:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0204:  stloc.s    V_14
      IL_0206:  ldloc.s    V_14
      IL_0208:  ldc.i4.0
      IL_0209:  ceq
      IL_020b:  brfalse    IL_021f

      IL_0210:  ldloc.s    V_13
      IL_0212:  brfalse    IL_021f

      IL_0217:  ldc.i4.m1
      IL_0218:  stloc.s    V_4
      IL_021a:  br         IL_0470

      IL_021f:  ldloc.s    V_14
      IL_0221:  stloc.s    V_4
      IL_0223:  br         IL_0470

      IL_0228:  ldc.i4.0
      IL_0229:  stloc.s    V_15
      IL_022b:  ldarg.0
      IL_022c:  volatile.
      IL_022e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0233:  stloc.s    V_16
      IL_0235:  ldloc.s    V_16
      IL_0237:  brtrue     IL_024e

      IL_023c:  ldarg.0
      IL_023d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0242:  stloc.s    V_15
      IL_0244:  ldarg.0
      IL_0245:  volatile.
      IL_0247:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_024c:  stloc.s    V_16
      IL_024e:  ldloc.s    V_16
      IL_0250:  ldc.i4.0
      IL_0251:  ceq
      IL_0253:  brfalse    IL_0267

      IL_0258:  ldloc.s    V_15
      IL_025a:  brfalse    IL_0267

      IL_025f:  ldc.i4.m1
      IL_0260:  stloc.s    V_4
      IL_0262:  br         IL_0470

      IL_0267:  ldloc.s    V_16
      IL_0269:  stloc.s    V_4
      IL_026b:  br         IL_0470

      IL_0270:  ldc.i4.0
      IL_0271:  stloc.s    V_17
      IL_0273:  ldarg.0
      IL_0274:  volatile.
      IL_0276:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_027b:  stloc.s    V_18
      IL_027d:  ldloc.s    V_18
      IL_027f:  brtrue     IL_0296

      IL_0284:  ldarg.0
      IL_0285:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_028a:  stloc.s    V_17
      IL_028c:  ldarg.0
      IL_028d:  volatile.
      IL_028f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0294:  stloc.s    V_18
      IL_0296:  ldloc.s    V_18
      IL_0298:  ldc.i4.0
      IL_0299:  ceq
      IL_029b:  brfalse    IL_02af

      IL_02a0:  ldloc.s    V_17
      IL_02a2:  brfalse    IL_02af

      IL_02a7:  ldc.i4.m1
      IL_02a8:  stloc.s    V_4
      IL_02aa:  br         IL_0470

      IL_02af:  ldloc.s    V_18
      IL_02b1:  stloc.s    V_4
      IL_02b3:  br         IL_0470

      IL_02b8:  ldc.i4.0
      IL_02b9:  stloc.s    V_19
      IL_02bb:  ldarg.0
      IL_02bc:  volatile.
      IL_02be:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_02c3:  stloc.s    V_20
      IL_02c5:  ldloc.s    V_20
      IL_02c7:  brtrue     IL_02de

      IL_02cc:  ldarg.0
      IL_02cd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02d2:  stloc.s    V_19
      IL_02d4:  ldarg.0
      IL_02d5:  volatile.
      IL_02d7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_02dc:  stloc.s    V_20
      IL_02de:  ldloc.s    V_20
      IL_02e0:  ldc.i4.0
      IL_02e1:  ceq
      IL_02e3:  brfalse    IL_02f7

      IL_02e8:  ldloc.s    V_19
      IL_02ea:  brfalse    IL_02f7

      IL_02ef:  ldc.i4.m1
      IL_02f0:  stloc.s    V_4
      IL_02f2:  br         IL_0470

      IL_02f7:  ldloc.s    V_20
      IL_02f9:  stloc.s    V_4
      IL_02fb:  br         IL_0470

      IL_0300:  ldc.i4.0
      IL_0301:  stloc.s    V_21
      IL_0303:  ldarg.0
      IL_0304:  volatile.
      IL_0306:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_030b:  stloc.s    V_22
      IL_030d:  ldloc.s    V_22
      IL_030f:  brtrue     IL_0326

      IL_0314:  ldarg.0
      IL_0315:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_031a:  stloc.s    V_21
      IL_031c:  ldarg.0
      IL_031d:  volatile.
      IL_031f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0324:  stloc.s    V_22
      IL_0326:  ldloc.s    V_22
      IL_0328:  ldc.i4.0
      IL_0329:  ceq
      IL_032b:  brfalse    IL_033f

      IL_0330:  ldloc.s    V_21
      IL_0332:  brfalse    IL_033f

      IL_0337:  ldc.i4.m1
      IL_0338:  stloc.s    V_4
      IL_033a:  br         IL_0470

      IL_033f:  ldloc.s    V_22
      IL_0341:  stloc.s    V_4
      IL_0343:  br         IL_0470

      IL_0348:  ldc.i4.0
      IL_0349:  stloc.s    V_23
      IL_034b:  ldarg.0
      IL_034c:  volatile.
      IL_034e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0353:  stloc.s    V_24
      IL_0355:  ldloc.s    V_24
      IL_0357:  brtrue     IL_036e

      IL_035c:  ldarg.0
      IL_035d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0362:  stloc.s    V_23
      IL_0364:  ldarg.0
      IL_0365:  volatile.
      IL_0367:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_036c:  stloc.s    V_24
      IL_036e:  ldloc.s    V_24
      IL_0370:  ldc.i4.0
      IL_0371:  ceq
      IL_0373:  brfalse    IL_0387

      IL_0378:  ldloc.s    V_23
      IL_037a:  brfalse    IL_0387

      IL_037f:  ldc.i4.m1
      IL_0380:  stloc.s    V_4
      IL_0382:  br         IL_0470

      IL_0387:  ldloc.s    V_24
      IL_0389:  stloc.s    V_4
      IL_038b:  br         IL_0470

      IL_0390:  ldc.i4.0
      IL_0391:  stloc.s    V_25
      IL_0393:  ldarg.0
      IL_0394:  volatile.
      IL_0396:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_039b:  stloc.s    V_26
      IL_039d:  ldloc.s    V_26
      IL_039f:  brtrue     IL_03b6

      IL_03a4:  ldarg.0
      IL_03a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03aa:  stloc.s    V_25
      IL_03ac:  ldarg.0
      IL_03ad:  volatile.
      IL_03af:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_03b4:  stloc.s    V_26
      IL_03b6:  ldloc.s    V_26
      IL_03b8:  ldc.i4.0
      IL_03b9:  ceq
      IL_03bb:  brfalse    IL_03cf

      IL_03c0:  ldloc.s    V_25
      IL_03c2:  brfalse    IL_03cf

      IL_03c7:  ldc.i4.m1
      IL_03c8:  stloc.s    V_4
      IL_03ca:  br         IL_0470

      IL_03cf:  ldloc.s    V_26
      IL_03d1:  stloc.s    V_4
      IL_03d3:  br         IL_0470

      IL_03d8:  ldc.i4.0
      IL_03d9:  stloc.s    V_27
      IL_03db:  ldarg.0
      IL_03dc:  volatile.
      IL_03de:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_03e3:  stloc.s    V_28
      IL_03e5:  ldloc.s    V_28
      IL_03e7:  brtrue     IL_03fe

      IL_03ec:  ldarg.0
      IL_03ed:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03f2:  stloc.s    V_27
      IL_03f4:  ldarg.0
      IL_03f5:  volatile.
      IL_03f7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_03fc:  stloc.s    V_28
      IL_03fe:  ldloc.s    V_28
      IL_0400:  ldc.i4.0
      IL_0401:  ceq
      IL_0403:  brfalse    IL_0417

      IL_0408:  ldloc.s    V_27
      IL_040a:  brfalse    IL_0417

      IL_040f:  ldc.i4.m1
      IL_0410:  stloc.s    V_4
      IL_0412:  br         IL_0470

      IL_0417:  ldloc.s    V_28
      IL_0419:  stloc.s    V_4
      IL_041b:  br         IL_0470

      IL_0420:  ldc.i4.0
      IL_0421:  stloc.s    V_29
      IL_0423:  ldarg.0
      IL_0424:  volatile.
      IL_0426:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_042b:  stloc.s    V_30
      IL_042d:  ldloc.s    V_30
      IL_042f:  brtrue     IL_0446

      IL_0434:  ldarg.0
      IL_0435:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_043a:  stloc.s    V_29
      IL_043c:  ldarg.0
      IL_043d:  volatile.
      IL_043f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0444:  stloc.s    V_30
      IL_0446:  ldloc.s    V_30
      IL_0448:  ldc.i4.0
      IL_0449:  ceq
      IL_044b:  brfalse    IL_045f

      IL_0450:  ldloc.s    V_29
      IL_0452:  brfalse    IL_045f

      IL_0457:  ldc.i4.m1
      IL_0458:  stloc.s    V_4
      IL_045a:  br         IL_0470

      IL_045f:  ldloc.s    V_30
      IL_0461:  stloc.s    V_4
      IL_0463:  br         IL_0470

      IL_0468:  ldc.i4.m1
      IL_0469:  stloc.s    V_4
      IL_046b:  br         IL_0470

      IL_0470:  ldloc.s    V_4
      IL_0472:  stloc.s    V_31
      IL_0474:  ldloc.s    V_4
      IL_0476:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckClear0$PST06000069() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckClear0

    .method privatescope instance void  MarshallDeliverAckClear0$PST0600006A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckClear0$PST06000069()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckClearPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckClear0

    .method privatescope instance void  DeliverNakClear0$PST0600006B() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakClear0

    .method privatescope instance void  MarshallDeliverNakClear0$PST0600006C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakClear0$PST0600006B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakClearPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakClear0

    .method privatescope instance void  DeliverDisplayDimensions0$PST0600006D(int32 columns,
                                                                              int32 rows) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DisplayDimensionsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions::columns
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DisplayDimensionsPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions::rows
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.7
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.7
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0028:  ret
    } // end of method Imp::DeliverDisplayDimensions0

    .method privatescope instance void  MarshallDeliverDisplayDimensions0$PST0600006E(int32 columns,
                                                                                      int32 rows,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverDisplayDimensions0$PST0600006D(int32,
                                                                                                                                   int32)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DisplayDimensionsPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverDisplayDimensions0

    .method privatescope instance void  DeliverCursorPosition0$PST0600006F(int32 column,
                                                                           int32 row) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CursorPositionPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition::column
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CursorPositionPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition::row
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   9
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   9
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverCursorPosition0

    .method privatescope instance void  MarshallDeliverCursorPosition0$PST06000070(int32 column,
                                                                                   int32 row,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverCursorPosition0$PST0600006F(int32,
                                                                                                                                int32)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::CursorPositionPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverCursorPosition0

    .method privatescope instance void  DeliverAckSetCursorPosition0$PST06000071() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckSetCursorPosition0

    .method privatescope instance void  MarshallDeliverAckSetCursorPosition0$PST06000072(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckSetCursorPosition0$PST06000071()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckSetCursorPositionPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckSetCursorPosition0

    .method privatescope instance void  DeliverInvalidPosition0$PST06000073() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverInvalidPosition0

    .method privatescope instance void  MarshallDeliverInvalidPosition0$PST06000074(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverInvalidPosition0$PST06000073()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::InvalidPositionPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition::MarshallAll(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverInvalidPosition0

    .method privatescope instance void  DeliverAckSetCursorSize0$PST06000075() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   14
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   14
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckSetCursorSize0

    .method privatescope instance void  MarshallDeliverAckSetCursorSize0$PST06000076(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckSetCursorSize0$PST06000075()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckSetCursorSizePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize::MarshallAll(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckSetCursorSize0

    .method privatescope instance void  DeliverNotSupported0$PST06000077() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   15
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   15
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNotSupported0

    .method privatescope instance void  MarshallDeliverNotSupported0$PST06000078(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNotSupported0$PST06000077()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported::MarshallAll(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNotSupported0

    .method privatescope instance void  DeliverAckWrite0$PST06000079(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   17
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckWrite0

    .method privatescope instance void  MarshallDeliverAckWrite0$PST0600007A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckWrite0$PST06000079(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckWritePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckWrite0

    .method privatescope instance void  DeliverNakWrite0$PST0600007B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakWrite0

    .method privatescope instance void  MarshallDeliverNakWrite0$PST0600007C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakWrite0$PST0600007B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakWritePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakWrite0

    .method privatescope instance void  DeliverAckPutChar0$PST0600007D() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   20
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   20
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckPutChar0

    .method privatescope instance void  MarshallDeliverAckPutChar0$PST0600007E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckPutChar0$PST0600007D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckPutCharPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckPutChar0

    .method privatescope instance void  DeliverAckPutCharAt0$PST0600007F() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   22
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   22
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckPutCharAt0

    .method privatescope instance void  MarshallDeliverAckPutCharAt0$PST06000080(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckPutCharAt0$PST0600007F()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckPutCharAtPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt::MarshallAll(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckPutCharAt0

    .method privatescope instance void  DeliverAckClearCursorToEndOfLine0$PST06000081() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckClearCursorToEndOfLine0

    .method privatescope instance void  MarshallDeliverAckClearCursorToEndOfLine0$PST06000082(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckClearCursorToEndOfLine0$PST06000081()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckClearCursorToEndOfLinePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckClearCursorToEndOfLine0

    .method privatescope instance void  DeliverAckCursorFlash0$PST06000083() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   26
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   26
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCursorFlash0

    .method privatescope instance void  MarshallDeliverAckCursorFlash0$PST06000084(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckCursorFlash0$PST06000083()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckCursorFlashPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCursorFlash0

    .method privatescope instance void  DeliverNakCursorFlash0$PST06000085() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   27
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   27
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakCursorFlash0

    .method privatescope instance void  MarshallDeliverNakCursorFlash0$PST06000086(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakCursorFlash0$PST06000085()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakCursorFlashPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakCursorFlash0

    .method privatescope instance void  DeliverAckCursorHide0$PST06000087() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   29
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   29
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCursorHide0

    .method privatescope instance void  MarshallDeliverAckCursorHide0$PST06000088(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckCursorHide0$PST06000087()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckCursorHidePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide::MarshallAll(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCursorHide0

    .method privatescope instance void  DeliverNakCursorHide0$PST06000089() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   30
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   30
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakCursorHide0

    .method privatescope instance void  MarshallDeliverNakCursorHide0$PST0600008A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakCursorHide0$PST06000089()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakCursorHidePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide::MarshallAll(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakCursorHide0

    .method privatescope instance void  DeliverAckCursorShow0$PST0600008B() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   32
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   32
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCursorShow0

    .method privatescope instance void  MarshallDeliverAckCursorShow0$PST0600008C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckCursorShow0$PST0600008B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::AckCursorShowPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow::MarshallAll(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCursorShow0

    .method privatescope instance void  DeliverNakCursorShow0$PST0600008D() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   33
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   33
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakCursorShow0

    .method privatescope instance void  MarshallDeliverNakCursorShow0$PST0600008E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakCursorShow0$PST0600008D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::NakCursorShowPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow::MarshallAll(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakCursorShow0

    .method privatescope instance void  DeliverSuccess0$PST0600008F() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   34
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   34
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000090(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverSuccess0$PST0600008F()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Success::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000091() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000092(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverContractNotSupported0$PST06000091()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Io.DeviceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear ClearPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions GetDisplayDimensionsPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition GetCursorPositionPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition SetCursorPositionPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize SetCursorSizePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write WritePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar PutCharPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt PutCharAtPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine ClearCursorToEndOfLinePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash CursorFlashPod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide CursorHidePod0
    .field family valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow CursorShowPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::CanonicalState$PST06000005(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::CanonicalState$PST06000005(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       462 (0x1ce)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_00c2

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  beq        IL_00cd

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   22
      IL_001f:  beq        IL_00d8

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   21
      IL_0027:  beq        IL_00e3

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   20
      IL_002f:  beq        IL_00ee

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   19
      IL_0037:  beq        IL_00f9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   18
      IL_003f:  beq        IL_0104

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   17
      IL_0047:  beq        IL_010f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   16
      IL_004f:  beq        IL_011a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   15
      IL_0057:  beq        IL_0125

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  beq        IL_0130

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_013b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   12
      IL_006f:  beq        IL_0146

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   11
      IL_0077:  beq        IL_0151

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   10
      IL_007f:  beq        IL_015c

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   9
      IL_0087:  beq        IL_0167

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.8
      IL_008e:  beq        IL_0172

      IL_0093:  ldloc.0
      IL_0094:  ldc.i4.7
      IL_0095:  beq        IL_017d

      IL_009a:  ldloc.0
      IL_009b:  ldc.i4.6
      IL_009c:  beq        IL_0188

      IL_00a1:  ldloc.0
      IL_00a2:  ldc.i4.5
      IL_00a3:  beq        IL_0193

      IL_00a8:  ldloc.0
      IL_00a9:  ldc.i4.4
      IL_00aa:  beq        IL_019e

      IL_00af:  ldloc.0
      IL_00b0:  ldc.i4.3
      IL_00b1:  beq        IL_01a9

      IL_00b6:  ldloc.0
      IL_00b7:  ldc.i4.2
      IL_00b8:  beq        IL_01b4

      IL_00bd:  br         IL_01bf

      IL_00c2:  ldstr      "Ready"
      IL_00c7:  stloc.1
      IL_00c8:  br         IL_01ca

      IL_00cd:  ldstr      "Ready$0"
      IL_00d2:  stloc.1
      IL_00d3:  br         IL_01ca

      IL_00d8:  ldstr      "Ready$1"
      IL_00dd:  stloc.1
      IL_00de:  br         IL_01ca

      IL_00e3:  ldstr      "Ready$2"
      IL_00e8:  stloc.1
      IL_00e9:  br         IL_01ca

      IL_00ee:  ldstr      "Ready$3"
      IL_00f3:  stloc.1
      IL_00f4:  br         IL_01ca

      IL_00f9:  ldstr      "Ready$4"
      IL_00fe:  stloc.1
      IL_00ff:  br         IL_01ca

      IL_0104:  ldstr      "Ready$5"
      IL_0109:  stloc.1
      IL_010a:  br         IL_01ca

      IL_010f:  ldstr      "Ready$6"
      IL_0114:  stloc.1
      IL_0115:  br         IL_01ca

      IL_011a:  ldstr      "Ready$7"
      IL_011f:  stloc.1
      IL_0120:  br         IL_01ca

      IL_0125:  ldstr      "Ready$8"
      IL_012a:  stloc.1
      IL_012b:  br         IL_01ca

      IL_0130:  ldstr      "Ready$9"
      IL_0135:  stloc.1
      IL_0136:  br         IL_01ca

      IL_013b:  ldstr      "Ready$10"
      IL_0140:  stloc.1
      IL_0141:  br         IL_01ca

      IL_0146:  ldstr      "Ready$11"
      IL_014b:  stloc.1
      IL_014c:  br         IL_01ca

      IL_0151:  ldstr      "Ready$12"
      IL_0156:  stloc.1
      IL_0157:  br         IL_01ca

      IL_015c:  ldstr      "Ready$13"
      IL_0161:  stloc.1
      IL_0162:  br         IL_01ca

      IL_0167:  ldstr      "Ready$14"
      IL_016c:  stloc.1
      IL_016d:  br         IL_01ca

      IL_0172:  ldstr      "Ready$15"
      IL_0177:  stloc.1
      IL_0178:  br         IL_01ca

      IL_017d:  ldstr      "Ready$16"
      IL_0182:  stloc.1
      IL_0183:  br         IL_01ca

      IL_0188:  ldstr      "Ready$17"
      IL_018d:  stloc.1
      IL_018e:  br         IL_01ca

      IL_0193:  ldstr      "Ready$18"
      IL_0198:  stloc.1
      IL_0199:  br         IL_01ca

      IL_019e:  ldstr      "Ready$19"
      IL_01a3:  stloc.1
      IL_01a4:  br         IL_01ca

      IL_01a9:  ldstr      "Start"
      IL_01ae:  stloc.1
      IL_01af:  br         IL_01ca

      IL_01b4:  ldstr      "DoneState"
      IL_01b9:  stloc.1
      IL_01ba:  br         IL_01ca

      IL_01bf:  ldstr      "<protocol terminated>"
      IL_01c4:  stloc.1
      IL_01c5:  br         IL_01ca

      IL_01ca:  ldloc.1
      IL_01cb:  stloc.2
      IL_01cc:  ldloc.1
      IL_01cd:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvClear() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Clear when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::ClearPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/Clear
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   23
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv Clear in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvClear

    .method public instance void  SendAckClear() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckClear0$PST06000069()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckClear0$PST0600006A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   22
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckClear in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckClear

    .method public instance void  SendNakClear() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakClear0$PST0600006B()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverNakClear0$PST0600006C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   22
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send NakClear in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendNakClear

    .method public instance void  RecvGetDisplayDimensions() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetDisplayDimensions when next message "
      + "has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::GetDisplayDimensionsPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   21
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetDisplayDimensions in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetDisplayDimensions

    .method public instance void  SendDisplayDimensions(int32 columns,
                                                        int32 rows) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverDisplayDimensions0$PST0600006D(int32,
                                                                                                                                   int32)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverDisplayDimensions0$PST0600006E(int32,
                                                                                                                                           int32,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.s   24
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send DisplayDimensions in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0075:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Exp::SendDisplayDimensions

    .method public instance void  RecvGetCursorPosition() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetCursorPosition when next message has"
      + " tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::GetCursorPositionPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   20
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetCursorPosition in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetCursorPosition

    .method public instance void  SendCursorPosition(int32 column,
                                                     int32 row) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006a

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverCursorPosition0$PST0600006F(int32,
                                                                                                                                int32)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverCursorPosition0$PST06000070(int32,
                                                                                                                                        int32,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.s   24
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send CursorPosition in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0075:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Exp::SendCursorPosition

    .method public instance void  RecvSetCursorPosition([out] int32& column,
                                                        [out] int32& row) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       225 (0xe1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ca

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SetCursorPosition when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorPositionPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition::column
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorPositionPod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition::row
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorPositionPod0
      IL_00b2:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   19
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_00e0

      IL_00ca:  ldstr      "can't recv SetCursorPosition in state "
      IL_00cf:  ldarg.0
      IL_00d0:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00d5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00da:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00df:  throw

      IL_00e0:  ret
    } // end of method Exp::RecvSetCursorPosition

    .method public instance void  SendAckSetCursorPosition() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckSetCursorPosition0$PST06000071()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckSetCursorPosition0$PST06000072(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   18
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckSetCursorPosition in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckSetCursorPosition

    .method public instance void  SendInvalidPosition() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  beq        IL_006e

      IL_001c:  br         IL_00c2

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_004a

      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0040:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverInvalidPosition0$PST06000073()
      IL_0045:  br         IL_0056

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0050:  ldarg.0
      IL_0051:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverInvalidPosition0$PST06000074(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.s   18
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_00d8

      IL_006e:  ldarg.0
      IL_006f:  ldloca.s   V_5
      IL_0071:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0076:  stloc.s    V_6
      IL_0078:  ldloc.s    V_6
      IL_007a:  stloc.s    V_7
      IL_007c:  ldloc.s    V_7
      IL_007e:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0083:  stloc.s    V_8
      IL_0085:  ldloc.s    V_5
      IL_0087:  brtrue     IL_009d

      IL_008c:  ldloc.s    V_7
      IL_008e:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0093:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverInvalidPosition0$PST06000073()
      IL_0098:  br         IL_00aa

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverInvalidPosition0$PST06000074(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.s   11
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send InvalidPosition in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00cd:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Exp::SendInvalidPosition

    .method public instance void  RecvSetCursorSize([out] valuetype Microsoft.Singularity.Io.CursorSize& cursorSize) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SetCursorSize when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorSizePod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Io.CursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize::cursorSize
      IL_0095:  stobj      Microsoft.Singularity.Io.CursorSize
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorSizePod0
      IL_00a9:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   17
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv SetCursorSize in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Exp::RecvSetCursorSize

    .method public instance void  SendAckSetCursorSize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckSetCursorSize0$PST06000075()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckSetCursorSize0$PST06000076(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   16
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckSetCursorSize in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckSetCursorSize

    .method public instance void  SendNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNotSupported0$PST06000077()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverNotSupported0$PST06000078(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   16
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send NotSupported in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendNotSupported

    .method public instance void  RecvWrite([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer,
                                            [out] int32& offset,
                                            [out] int32& count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       238 (0xee)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d7

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   16
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   16
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Write when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/Write::offset
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_00aa:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/Write::count
      IL_00af:  stind.i4
      IL_00b0:  ldarg.0
      IL_00b1:  ldc.i4.0
      IL_00b2:  volatile.
      IL_00b4:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_00bf:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/Write
      IL_00c5:  ldarg.0
      IL_00c6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cb:  ldc.i4.s   15
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d2:  br         IL_00ed

      IL_00d7:  ldstr      "can't recv Write in state "
      IL_00dc:  ldarg.0
      IL_00dd:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00e2:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e7:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ec:  throw

      IL_00ed:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  SendAckWrite(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckWrite0$PST06000079(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckWrite0$PST0600007A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   14
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send AckWrite in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendAckWrite

    .method public instance void  SendNakWrite(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakWrite0$PST0600007B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverNakWrite0$PST0600007C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   14
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send NakWrite in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendNakWrite

    .method public instance void  RecvPutChar([out] char& c) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   19
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   19
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv PutChar when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharPod0
      IL_0090:  ldfld      char Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar::c
      IL_0095:  stobj      [Corlib]System.Char
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharPod0
      IL_00a9:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   13
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv PutChar in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Exp::RecvPutChar

    .method public instance void  SendAckPutChar() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckPutChar0$PST0600007D()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckPutChar0$PST0600007E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   24
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckPutChar in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckPutChar

    .method public instance void  RecvPutCharAt([out] char& c,
                                                [out] int32& column,
                                                [out] int32& row) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   21
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   21
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv PutCharAt when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_0090:  ldfld      char Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::c
      IL_0095:  stobj      [Corlib]System.Char
      IL_009a:  ldarg.2
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_00a1:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::column
      IL_00a6:  stind.i4
      IL_00a7:  ldarg.3
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_00ae:  ldfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::row
      IL_00b3:  stind.i4
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_00c3:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   12
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv PutCharAt in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Exp::RecvPutCharAt

    .method public instance void  SendAckPutCharAt() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckPutCharAt0$PST0600007F()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckPutCharAt0$PST06000080(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   11
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckPutCharAt in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckPutCharAt

    .method public instance void  RecvClearCursorToEndOfLine() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   23
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   23
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ClearCursorToEndOfLine when next messag"
      + "e has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::ClearCursorToEndOfLinePod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   10
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv ClearCursorToEndOfLine in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvClearCursorToEndOfLine

    .method public instance void  SendAckClearCursorToEndOfLine() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckClearCursorToEndOfLine0$PST06000081()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckClearCursorToEndOfLine0$PST06000082(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   24
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckClearCursorToEndOfLine in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckClearCursorToEndOfLine

    .method public instance void  RecvCursorFlash() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   25
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   25
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CursorFlash when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CursorFlashPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   9
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv CursorFlash in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvCursorFlash

    .method public instance void  SendAckCursorFlash() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckCursorFlash0$PST06000083()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckCursorFlash0$PST06000084(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.8
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send AckCursorFlash in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendAckCursorFlash

    .method public instance void  SendNakCursorFlash() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakCursorFlash0$PST06000085()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverNakCursorFlash0$PST06000086(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.8
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send NakCursorFlash in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendNakCursorFlash

    .method public instance void  RecvCursorHide() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   28
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   28
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CursorHide when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CursorHidePod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.7
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv CursorHide in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvCursorHide

    .method public instance void  SendAckCursorHide() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckCursorHide0$PST06000087()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckCursorHide0$PST06000088(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckCursorHide in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckCursorHide

    .method public instance void  SendNakCursorHide() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakCursorHide0$PST06000089()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverNakCursorHide0$PST0600008A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakCursorHide in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakCursorHide

    .method public instance void  RecvCursorShow() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   31
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   31
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CursorShow when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CursorShowPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.5
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv CursorShow in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvCursorShow

    .method public instance void  SendAckCursorShow() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverAckCursorShow0$PST0600008B()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverAckCursorShow0$PST0600008C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckCursorShow in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckCursorShow

    .method public instance void  SendNakCursorShow() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 21 00 00 00 00 00 )                         // ..!.....
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverNakCursorShow0$PST0600008D()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverNakCursorShow0$PST0600008E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakCursorShow in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakCursorShow

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 22 00 00 00 00 00 )                         // ..".....
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverSuccess0$PST0600008F()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverSuccess0$PST06000090(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   24
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Success in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::DeliverContractNotSupported0$PST06000091()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::MarshallDeliverContractNotSupported0$PST06000092(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ConsoleDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ConsoleDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.ConsoleDeviceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1143 (0x477)
      .maxstack  17
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               int32 V_31)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0080

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_00c0

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_0108

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   10
      IL_0027:  beq        IL_0150

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   12
      IL_002f:  beq        IL_0198

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   13
      IL_0037:  beq        IL_01e0

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   15
      IL_003f:  beq        IL_0228

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.s   17
      IL_0047:  beq        IL_0270

      IL_004c:  ldloc.1
      IL_004d:  ldc.i4.s   19
      IL_004f:  beq        IL_02b8

      IL_0054:  ldloc.1
      IL_0055:  ldc.i4.s   20
      IL_0057:  beq        IL_0300

      IL_005c:  ldloc.1
      IL_005d:  ldc.i4.s   21
      IL_005f:  beq        IL_0348

      IL_0064:  ldloc.1
      IL_0065:  ldc.i4.s   23
      IL_0067:  beq        IL_0390

      IL_006c:  ldloc.1
      IL_006d:  ldc.i4.s   24
      IL_006f:  beq        IL_03d8

      IL_0074:  ldloc.1
      IL_0075:  ldc.i4.3
      IL_0076:  beq        IL_0420

      IL_007b:  br         IL_0468

      IL_0080:  ldc.i4.0
      IL_0081:  stloc.2
      IL_0082:  ldarg.0
      IL_0083:  volatile.
      IL_0085:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008a:  stloc.3
      IL_008b:  ldloc.3
      IL_008c:  brtrue     IL_00a1

      IL_0091:  ldarg.0
      IL_0092:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0097:  stloc.2
      IL_0098:  ldarg.0
      IL_0099:  volatile.
      IL_009b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a0:  stloc.3
      IL_00a1:  ldloc.3
      IL_00a2:  ldc.i4.0
      IL_00a3:  ceq
      IL_00a5:  brfalse    IL_00b8

      IL_00aa:  ldloc.2
      IL_00ab:  brfalse    IL_00b8

      IL_00b0:  ldc.i4.m1
      IL_00b1:  stloc.s    V_4
      IL_00b3:  br         IL_0470

      IL_00b8:  ldloc.3
      IL_00b9:  stloc.s    V_4
      IL_00bb:  br         IL_0470

      IL_00c0:  ldc.i4.0
      IL_00c1:  stloc.s    V_5
      IL_00c3:  ldarg.0
      IL_00c4:  volatile.
      IL_00c6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00cb:  stloc.s    V_6
      IL_00cd:  ldloc.s    V_6
      IL_00cf:  brtrue     IL_00e6

      IL_00d4:  ldarg.0
      IL_00d5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00da:  stloc.s    V_5
      IL_00dc:  ldarg.0
      IL_00dd:  volatile.
      IL_00df:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e4:  stloc.s    V_6
      IL_00e6:  ldloc.s    V_6
      IL_00e8:  ldc.i4.0
      IL_00e9:  ceq
      IL_00eb:  brfalse    IL_00ff

      IL_00f0:  ldloc.s    V_5
      IL_00f2:  brfalse    IL_00ff

      IL_00f7:  ldc.i4.m1
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_0470

      IL_00ff:  ldloc.s    V_6
      IL_0101:  stloc.s    V_4
      IL_0103:  br         IL_0470

      IL_0108:  ldc.i4.0
      IL_0109:  stloc.s    V_7
      IL_010b:  ldarg.0
      IL_010c:  volatile.
      IL_010e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0113:  stloc.s    V_8
      IL_0115:  ldloc.s    V_8
      IL_0117:  brtrue     IL_012e

      IL_011c:  ldarg.0
      IL_011d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0122:  stloc.s    V_7
      IL_0124:  ldarg.0
      IL_0125:  volatile.
      IL_0127:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_012c:  stloc.s    V_8
      IL_012e:  ldloc.s    V_8
      IL_0130:  ldc.i4.0
      IL_0131:  ceq
      IL_0133:  brfalse    IL_0147

      IL_0138:  ldloc.s    V_7
      IL_013a:  brfalse    IL_0147

      IL_013f:  ldc.i4.m1
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_0470

      IL_0147:  ldloc.s    V_8
      IL_0149:  stloc.s    V_4
      IL_014b:  br         IL_0470

      IL_0150:  ldc.i4.0
      IL_0151:  stloc.s    V_9
      IL_0153:  ldarg.0
      IL_0154:  volatile.
      IL_0156:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_015b:  stloc.s    V_10
      IL_015d:  ldloc.s    V_10
      IL_015f:  brtrue     IL_0176

      IL_0164:  ldarg.0
      IL_0165:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016a:  stloc.s    V_9
      IL_016c:  ldarg.0
      IL_016d:  volatile.
      IL_016f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0174:  stloc.s    V_10
      IL_0176:  ldloc.s    V_10
      IL_0178:  ldc.i4.0
      IL_0179:  ceq
      IL_017b:  brfalse    IL_018f

      IL_0180:  ldloc.s    V_9
      IL_0182:  brfalse    IL_018f

      IL_0187:  ldc.i4.m1
      IL_0188:  stloc.s    V_4
      IL_018a:  br         IL_0470

      IL_018f:  ldloc.s    V_10
      IL_0191:  stloc.s    V_4
      IL_0193:  br         IL_0470

      IL_0198:  ldc.i4.0
      IL_0199:  stloc.s    V_11
      IL_019b:  ldarg.0
      IL_019c:  volatile.
      IL_019e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01a3:  stloc.s    V_12
      IL_01a5:  ldloc.s    V_12
      IL_01a7:  brtrue     IL_01be

      IL_01ac:  ldarg.0
      IL_01ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01b2:  stloc.s    V_11
      IL_01b4:  ldarg.0
      IL_01b5:  volatile.
      IL_01b7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01bc:  stloc.s    V_12
      IL_01be:  ldloc.s    V_12
      IL_01c0:  ldc.i4.0
      IL_01c1:  ceq
      IL_01c3:  brfalse    IL_01d7

      IL_01c8:  ldloc.s    V_11
      IL_01ca:  brfalse    IL_01d7

      IL_01cf:  ldc.i4.m1
      IL_01d0:  stloc.s    V_4
      IL_01d2:  br         IL_0470

      IL_01d7:  ldloc.s    V_12
      IL_01d9:  stloc.s    V_4
      IL_01db:  br         IL_0470

      IL_01e0:  ldc.i4.0
      IL_01e1:  stloc.s    V_13
      IL_01e3:  ldarg.0
      IL_01e4:  volatile.
      IL_01e6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01eb:  stloc.s    V_14
      IL_01ed:  ldloc.s    V_14
      IL_01ef:  brtrue     IL_0206

      IL_01f4:  ldarg.0
      IL_01f5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01fa:  stloc.s    V_13
      IL_01fc:  ldarg.0
      IL_01fd:  volatile.
      IL_01ff:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0204:  stloc.s    V_14
      IL_0206:  ldloc.s    V_14
      IL_0208:  ldc.i4.0
      IL_0209:  ceq
      IL_020b:  brfalse    IL_021f

      IL_0210:  ldloc.s    V_13
      IL_0212:  brfalse    IL_021f

      IL_0217:  ldc.i4.m1
      IL_0218:  stloc.s    V_4
      IL_021a:  br         IL_0470

      IL_021f:  ldloc.s    V_14
      IL_0221:  stloc.s    V_4
      IL_0223:  br         IL_0470

      IL_0228:  ldc.i4.0
      IL_0229:  stloc.s    V_15
      IL_022b:  ldarg.0
      IL_022c:  volatile.
      IL_022e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0233:  stloc.s    V_16
      IL_0235:  ldloc.s    V_16
      IL_0237:  brtrue     IL_024e

      IL_023c:  ldarg.0
      IL_023d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0242:  stloc.s    V_15
      IL_0244:  ldarg.0
      IL_0245:  volatile.
      IL_0247:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_024c:  stloc.s    V_16
      IL_024e:  ldloc.s    V_16
      IL_0250:  ldc.i4.0
      IL_0251:  ceq
      IL_0253:  brfalse    IL_0267

      IL_0258:  ldloc.s    V_15
      IL_025a:  brfalse    IL_0267

      IL_025f:  ldc.i4.m1
      IL_0260:  stloc.s    V_4
      IL_0262:  br         IL_0470

      IL_0267:  ldloc.s    V_16
      IL_0269:  stloc.s    V_4
      IL_026b:  br         IL_0470

      IL_0270:  ldc.i4.0
      IL_0271:  stloc.s    V_17
      IL_0273:  ldarg.0
      IL_0274:  volatile.
      IL_0276:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_027b:  stloc.s    V_18
      IL_027d:  ldloc.s    V_18
      IL_027f:  brtrue     IL_0296

      IL_0284:  ldarg.0
      IL_0285:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_028a:  stloc.s    V_17
      IL_028c:  ldarg.0
      IL_028d:  volatile.
      IL_028f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0294:  stloc.s    V_18
      IL_0296:  ldloc.s    V_18
      IL_0298:  ldc.i4.0
      IL_0299:  ceq
      IL_029b:  brfalse    IL_02af

      IL_02a0:  ldloc.s    V_17
      IL_02a2:  brfalse    IL_02af

      IL_02a7:  ldc.i4.m1
      IL_02a8:  stloc.s    V_4
      IL_02aa:  br         IL_0470

      IL_02af:  ldloc.s    V_18
      IL_02b1:  stloc.s    V_4
      IL_02b3:  br         IL_0470

      IL_02b8:  ldc.i4.0
      IL_02b9:  stloc.s    V_19
      IL_02bb:  ldarg.0
      IL_02bc:  volatile.
      IL_02be:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02c3:  stloc.s    V_20
      IL_02c5:  ldloc.s    V_20
      IL_02c7:  brtrue     IL_02de

      IL_02cc:  ldarg.0
      IL_02cd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02d2:  stloc.s    V_19
      IL_02d4:  ldarg.0
      IL_02d5:  volatile.
      IL_02d7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02dc:  stloc.s    V_20
      IL_02de:  ldloc.s    V_20
      IL_02e0:  ldc.i4.0
      IL_02e1:  ceq
      IL_02e3:  brfalse    IL_02f7

      IL_02e8:  ldloc.s    V_19
      IL_02ea:  brfalse    IL_02f7

      IL_02ef:  ldc.i4.m1
      IL_02f0:  stloc.s    V_4
      IL_02f2:  br         IL_0470

      IL_02f7:  ldloc.s    V_20
      IL_02f9:  stloc.s    V_4
      IL_02fb:  br         IL_0470

      IL_0300:  ldc.i4.0
      IL_0301:  stloc.s    V_21
      IL_0303:  ldarg.0
      IL_0304:  volatile.
      IL_0306:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_030b:  stloc.s    V_22
      IL_030d:  ldloc.s    V_22
      IL_030f:  brtrue     IL_0326

      IL_0314:  ldarg.0
      IL_0315:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_031a:  stloc.s    V_21
      IL_031c:  ldarg.0
      IL_031d:  volatile.
      IL_031f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0324:  stloc.s    V_22
      IL_0326:  ldloc.s    V_22
      IL_0328:  ldc.i4.0
      IL_0329:  ceq
      IL_032b:  brfalse    IL_033f

      IL_0330:  ldloc.s    V_21
      IL_0332:  brfalse    IL_033f

      IL_0337:  ldc.i4.m1
      IL_0338:  stloc.s    V_4
      IL_033a:  br         IL_0470

      IL_033f:  ldloc.s    V_22
      IL_0341:  stloc.s    V_4
      IL_0343:  br         IL_0470

      IL_0348:  ldc.i4.0
      IL_0349:  stloc.s    V_23
      IL_034b:  ldarg.0
      IL_034c:  volatile.
      IL_034e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0353:  stloc.s    V_24
      IL_0355:  ldloc.s    V_24
      IL_0357:  brtrue     IL_036e

      IL_035c:  ldarg.0
      IL_035d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0362:  stloc.s    V_23
      IL_0364:  ldarg.0
      IL_0365:  volatile.
      IL_0367:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_036c:  stloc.s    V_24
      IL_036e:  ldloc.s    V_24
      IL_0370:  ldc.i4.0
      IL_0371:  ceq
      IL_0373:  brfalse    IL_0387

      IL_0378:  ldloc.s    V_23
      IL_037a:  brfalse    IL_0387

      IL_037f:  ldc.i4.m1
      IL_0380:  stloc.s    V_4
      IL_0382:  br         IL_0470

      IL_0387:  ldloc.s    V_24
      IL_0389:  stloc.s    V_4
      IL_038b:  br         IL_0470

      IL_0390:  ldc.i4.0
      IL_0391:  stloc.s    V_25
      IL_0393:  ldarg.0
      IL_0394:  volatile.
      IL_0396:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_039b:  stloc.s    V_26
      IL_039d:  ldloc.s    V_26
      IL_039f:  brtrue     IL_03b6

      IL_03a4:  ldarg.0
      IL_03a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03aa:  stloc.s    V_25
      IL_03ac:  ldarg.0
      IL_03ad:  volatile.
      IL_03af:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03b4:  stloc.s    V_26
      IL_03b6:  ldloc.s    V_26
      IL_03b8:  ldc.i4.0
      IL_03b9:  ceq
      IL_03bb:  brfalse    IL_03cf

      IL_03c0:  ldloc.s    V_25
      IL_03c2:  brfalse    IL_03cf

      IL_03c7:  ldc.i4.m1
      IL_03c8:  stloc.s    V_4
      IL_03ca:  br         IL_0470

      IL_03cf:  ldloc.s    V_26
      IL_03d1:  stloc.s    V_4
      IL_03d3:  br         IL_0470

      IL_03d8:  ldc.i4.0
      IL_03d9:  stloc.s    V_27
      IL_03db:  ldarg.0
      IL_03dc:  volatile.
      IL_03de:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03e3:  stloc.s    V_28
      IL_03e5:  ldloc.s    V_28
      IL_03e7:  brtrue     IL_03fe

      IL_03ec:  ldarg.0
      IL_03ed:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03f2:  stloc.s    V_27
      IL_03f4:  ldarg.0
      IL_03f5:  volatile.
      IL_03f7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03fc:  stloc.s    V_28
      IL_03fe:  ldloc.s    V_28
      IL_0400:  ldc.i4.0
      IL_0401:  ceq
      IL_0403:  brfalse    IL_0417

      IL_0408:  ldloc.s    V_27
      IL_040a:  brfalse    IL_0417

      IL_040f:  ldc.i4.m1
      IL_0410:  stloc.s    V_4
      IL_0412:  br         IL_0470

      IL_0417:  ldloc.s    V_28
      IL_0419:  stloc.s    V_4
      IL_041b:  br         IL_0470

      IL_0420:  ldc.i4.0
      IL_0421:  stloc.s    V_29
      IL_0423:  ldarg.0
      IL_0424:  volatile.
      IL_0426:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_042b:  stloc.s    V_30
      IL_042d:  ldloc.s    V_30
      IL_042f:  brtrue     IL_0446

      IL_0434:  ldarg.0
      IL_0435:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_043a:  stloc.s    V_29
      IL_043c:  ldarg.0
      IL_043d:  volatile.
      IL_043f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0444:  stloc.s    V_30
      IL_0446:  ldloc.s    V_30
      IL_0448:  ldc.i4.0
      IL_0449:  ceq
      IL_044b:  brfalse    IL_045f

      IL_0450:  ldloc.s    V_29
      IL_0452:  brfalse    IL_045f

      IL_0457:  ldc.i4.m1
      IL_0458:  stloc.s    V_4
      IL_045a:  br         IL_0470

      IL_045f:  ldloc.s    V_30
      IL_0461:  stloc.s    V_4
      IL_0463:  br         IL_0470

      IL_0468:  ldc.i4.m1
      IL_0469:  stloc.s    V_4
      IL_046b:  br         IL_0470

      IL_0470:  ldloc.s    V_4
      IL_0472:  stloc.s    V_31
      IL_0474:  ldloc.s    V_4
      IL_0476:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverClear0$PST060000C4() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverClear0

    .method privatescope instance void  MarshallDeliverClear0$PST060000C5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverClear0$PST060000C4()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::ClearPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Clear::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClear0

    .method privatescope instance void  DeliverGetDisplayDimensions0$PST060000C6() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetDisplayDimensions0

    .method privatescope instance void  MarshallDeliverGetDisplayDimensions0$PST060000C7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverGetDisplayDimensions0$PST060000C6()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::GetDisplayDimensionsPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetDisplayDimensions0

    .method privatescope instance void  DeliverGetCursorPosition0$PST060000C8() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetCursorPosition0

    .method privatescope instance void  MarshallDeliverGetCursorPosition0$PST060000C9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverGetCursorPosition0$PST060000C8()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::GetCursorPositionPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetCursorPosition0

    .method privatescope instance void  DeliverSetCursorPosition0$PST060000CA(int32 column,
                                                                              int32 row) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorPositionPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition::column
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorPositionPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition::row
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   10
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   10
      IL_0023:  volatile.
      IL_0025:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverSetCursorPosition0

    .method privatescope instance void  MarshallDeliverSetCursorPosition0$PST060000CB(int32 column,
                                                                                      int32 row,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverSetCursorPosition0$PST060000CA(int32,
                                                                                                                                   int32)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorPositionPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverSetCursorPosition0

    .method privatescope instance void  DeliverSetCursorSize0$PST060000CC(valuetype Microsoft.Singularity.Io.CursorSize cursorSize) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorSizePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Io.CursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize::cursorSize
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverSetCursorSize0

    .method privatescope instance void  MarshallDeliverSetCursorSize0$PST060000CD(valuetype Microsoft.Singularity.Io.CursorSize cursorSize,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverSetCursorSize0$PST060000CC(valuetype Microsoft.Singularity.Io.CursorSize)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::SetCursorSizePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize::MarshallAll(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverSetCursorSize0

    .method privatescope instance void  DeliverWrite0$PST060000CE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                  int32 offset,
                                                                  int32 count) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/Write::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/Write::count
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   16
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   16
      IL_002f:  volatile.
      IL_0031:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0036:  ret
    } // end of method Exp::DeliverWrite0

    .method privatescope instance void  MarshallDeliverWrite0$PST060000CF(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                          int32 offset,
                                                                          int32 count,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverWrite0$PST060000CE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                       int32,
                                                                                                                       int32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::WritePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Write::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverWrite0

    .method privatescope instance void  DeliverPutChar0$PST060000D0(char c) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar::c
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   19
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverPutChar0

    .method privatescope instance void  MarshallDeliverPutChar0$PST060000D1(char c,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverPutChar0$PST060000D0(char)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPutChar0

    .method privatescope instance void  DeliverPutCharAt0$PST060000D2(char c,
                                                                      int32 column,
                                                                      int32 row) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::c
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::column
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::row
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   21
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   21
      IL_002f:  volatile.
      IL_0031:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0036:  ret
    } // end of method Exp::DeliverPutCharAt0

    .method privatescope instance void  MarshallDeliverPutCharAt0$PST060000D3(char c,
                                                                              int32 column,
                                                                              int32 row,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverPutCharAt0$PST060000D2(char,
                                                                                                                           int32,
                                                                                                                           int32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::PutCharAtPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverPutCharAt0

    .method privatescope instance void  DeliverClearCursorToEndOfLine0$PST060000D4() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   23
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   23
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverClearCursorToEndOfLine0

    .method privatescope instance void  MarshallDeliverClearCursorToEndOfLine0$PST060000D5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverClearCursorToEndOfLine0$PST060000D4()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::ClearCursorToEndOfLinePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine::MarshallAll(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClearCursorToEndOfLine0

    .method privatescope instance void  DeliverCursorFlash0$PST060000D6() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   25
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   25
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverCursorFlash0

    .method privatescope instance void  MarshallDeliverCursorFlash0$PST060000D7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverCursorFlash0$PST060000D6()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CursorFlashPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash::MarshallAll(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverCursorFlash0

    .method privatescope instance void  DeliverCursorHide0$PST060000D8() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   28
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   28
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverCursorHide0

    .method privatescope instance void  MarshallDeliverCursorHide0$PST060000D9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverCursorHide0$PST060000D8()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CursorHidePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverCursorHide0

    .method privatescope instance void  DeliverCursorShow0$PST060000DA() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   31
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   31
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverCursorShow0

    .method privatescope instance void  MarshallDeliverCursorShow0$PST060000DB(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::DeliverCursorShow0$PST060000DA()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::CursorShowPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverCursorShow0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Clear
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Clear::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Clear::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Clear
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Clear::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Clear::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Clear::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Clear::Release

  } // end of class Clear

  .class sequential ansi sealed nested public specialname AckClear
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckClear::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckClear::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method AckClear::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckClear::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClear::Release

  } // end of class AckClear

  .class sequential ansi sealed nested public specialname NakClear
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakClear::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakClear::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method NakClear::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakClear::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakClear::Release

  } // end of class NakClear

  .class sequential ansi sealed nested public specialname GetDisplayDimensions
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDisplayDimensions::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDisplayDimensions::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method GetDisplayDimensions::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetDisplayDimensions::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDisplayDimensions::Release

  } // end of class GetDisplayDimensions

  .class sequential ansi sealed nested public specialname DisplayDimensions
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int32 columns
    .field public int32 rows
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DisplayDimensions::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DisplayDimensions::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method DisplayDimensions::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DisplayDimensions::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DisplayDimensions::Release

  } // end of class DisplayDimensions

  .class sequential ansi sealed nested public specialname GetCursorPosition
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetCursorPosition::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetCursorPosition::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method GetCursorPosition::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetCursorPosition::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetCursorPosition::Release

  } // end of class GetCursorPosition

  .class sequential ansi sealed nested public specialname CursorPosition
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int32 column
    .field public int32 row
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorPosition::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorPosition::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method CursorPosition::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CursorPosition::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorPosition::Release

  } // end of class CursorPosition

  .class sequential ansi sealed nested public specialname SetCursorPosition
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 column
    .field public int32 row
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetCursorPosition::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetCursorPosition::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method SetCursorPosition::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SetCursorPosition::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorPosition::Release

  } // end of class SetCursorPosition

  .class sequential ansi sealed nested public specialname AckSetCursorPosition
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckSetCursorPosition::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckSetCursorPosition::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method AckSetCursorPosition::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckSetCursorPosition::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorPosition::Release

  } // end of class AckSetCursorPosition

  .class sequential ansi sealed nested public specialname InvalidPosition
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InvalidPosition::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InvalidPosition::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*,
                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method InvalidPosition::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InvalidPosition::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InvalidPosition::Release

  } // end of class InvalidPosition

  .class sequential ansi sealed nested public specialname SetCursorSize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Io.CursorSize cursorSize
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetCursorSize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SetCursorSize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*,
                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method SetCursorSize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SetCursorSize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SetCursorSize::Release

  } // end of class SetCursorSize

  .class sequential ansi sealed nested public specialname AckSetCursorSize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckSetCursorSize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckSetCursorSize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*,
                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method AckSetCursorSize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckSetCursorSize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckSetCursorSize::Release

  } // end of class AckSetCursorSize

  .class sequential ansi sealed nested public specialname NotSupported
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NotSupported::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NotSupported::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*,
                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NotSupported::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NotSupported::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotSupported::Release

  } // end of class NotSupported

  .class sequential ansi sealed nested public specialname Write
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .field public int32 offset
    .field public int32 count
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Write
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Write::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/Write::buffer
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname AckWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method AckWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite::buffer
      IL_001a:  ret
    } // end of method AckWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Release

  } // end of class AckWrite

  .class sequential ansi sealed nested public specialname NakWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method NakWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method NakWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method NakWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite::buffer
      IL_001a:  ret
    } // end of method NakWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Release

  } // end of class NakWrite

  .class sequential ansi sealed nested public specialname PutChar
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char c
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PutChar::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PutChar::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method PutChar::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PutChar::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutChar::Release

  } // end of class PutChar

  .class sequential ansi sealed nested public specialname AckPutChar
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPutChar::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPutChar::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method AckPutChar::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckPutChar::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutChar::Release

  } // end of class AckPutChar

  .class sequential ansi sealed nested public specialname PutCharAt
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char c
    .field public int32 column
    .field public int32 row
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PutCharAt::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PutCharAt::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method PutCharAt::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PutCharAt::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PutCharAt::Release

  } // end of class PutCharAt

  .class sequential ansi sealed nested public specialname AckPutCharAt
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPutCharAt::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPutCharAt::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*,
                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method AckPutCharAt::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckPutCharAt::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPutCharAt::Release

  } // end of class AckPutCharAt

  .class sequential ansi sealed nested public specialname ClearCursorToEndOfLine
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ClearCursorToEndOfLine::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ClearCursorToEndOfLine::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine::MarshallContent(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                uint8*,
                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method ClearCursorToEndOfLine::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ClearCursorToEndOfLine::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearCursorToEndOfLine::Release

  } // end of class ClearCursorToEndOfLine

  .class sequential ansi sealed nested public specialname AckClearCursorToEndOfLine
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckClearCursorToEndOfLine::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckClearCursorToEndOfLine::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method AckClearCursorToEndOfLine::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckClearCursorToEndOfLine::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClearCursorToEndOfLine::Release

  } // end of class AckClearCursorToEndOfLine

  .class sequential ansi sealed nested public specialname CursorFlash
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorFlash::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorFlash::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash::MarshallContent(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method CursorFlash::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CursorFlash::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorFlash::Release

  } // end of class CursorFlash

  .class sequential ansi sealed nested public specialname AckCursorFlash
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCursorFlash::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCursorFlash::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method AckCursorFlash::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCursorFlash::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorFlash::Release

  } // end of class AckCursorFlash

  .class sequential ansi sealed nested public specialname NakCursorFlash
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCursorFlash::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCursorFlash::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakCursorFlash::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCursorFlash::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorFlash::Release

  } // end of class NakCursorFlash

  .class sequential ansi sealed nested public specialname CursorHide
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorHide::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorHide::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method CursorHide::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CursorHide::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorHide::Release

  } // end of class CursorHide

  .class sequential ansi sealed nested public specialname AckCursorHide
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCursorHide::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCursorHide::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*,
                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method AckCursorHide::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCursorHide::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorHide::Release

  } // end of class AckCursorHide

  .class sequential ansi sealed nested public specialname NakCursorHide
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCursorHide::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCursorHide::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*,
                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method NakCursorHide::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCursorHide::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorHide::Release

  } // end of class NakCursorHide

  .class sequential ansi sealed nested public specialname CursorShow
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorShow::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CursorShow::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method CursorShow::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CursorShow::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CursorShow::Release

  } // end of class CursorShow

  .class sequential ansi sealed nested public specialname AckCursorShow
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCursorShow::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCursorShow::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*,
                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method AckCursorShow::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCursorShow::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCursorShow::Release

  } // end of class AckCursorShow

  .class sequential ansi sealed nested public specialname NakCursorShow
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCursorShow::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCursorShow::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*,
                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method NakCursorShow::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCursorShow::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCursorShow::Release

  } // end of class NakCursorShow

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Success::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000018)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Clear msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$2 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetDisplayDimensions msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$3 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/GetCursorPosition msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$4 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorPosition msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$6 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/SetCursorSize msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$8 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Write msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$10 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutChar msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$11 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/PutCharAt msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$13 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/ClearCursorToEndOfLine msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$14 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorFlash msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$16 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorHide msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$18 
            Recv(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorShow msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000017)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClear msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakClear msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000016)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class abstract auto ansi nested public specialname Ready$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000015)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/DisplayDimensions msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$2::.ctor

  } // end of class Ready$2

  .class abstract auto ansi nested public specialname Ready$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000014)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/CursorPosition msg) cil managed
    {
    } // end of method Ready$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$3::.ctor

  } // end of class Ready$3

  .class abstract auto ansi nested public specialname Ready$4
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000013)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorPosition msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$4::.ctor

  } // end of class Ready$4

  .class abstract auto ansi nested public specialname Ready$5
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000012)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$5::.ctor

  } // end of class Ready$5

  .class abstract auto ansi nested public specialname Ready$6
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckSetCursorSize msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NotSupported msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$6::.ctor

  } // end of class Ready$6

  .class abstract auto ansi nested public specialname Ready$7
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$7::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$7::.ctor

  } // end of class Ready$7

  .class abstract auto ansi nested public specialname Ready$8
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckWrite msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakWrite msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$8::.ctor

  } // end of class Ready$8

  .class abstract auto ansi nested public specialname Ready$9
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$9::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$9::.ctor

  } // end of class Ready$9

  .class abstract auto ansi nested public specialname Ready$10
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutChar msg) cil managed
    {
    } // end of method Ready$10::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$10::.ctor

  } // end of class Ready$10

  .class abstract auto ansi nested public specialname Ready$11
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$12 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckPutCharAt msg) cil managed
    {
    } // end of method Ready$11::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$12 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/InvalidPosition msg) cil managed
    {
    } // end of method Ready$11::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$11::.ctor

  } // end of class Ready$11

  .class abstract auto ansi nested public specialname Ready$12
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$12::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$12::.ctor

  } // end of class Ready$12

  .class abstract auto ansi nested public specialname Ready$13
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckClearCursorToEndOfLine msg) cil managed
    {
    } // end of method Ready$13::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$13::.ctor

  } // end of class Ready$13

  .class abstract auto ansi nested public specialname Ready$14
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$15 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorFlash msg) cil managed
    {
    } // end of method Ready$14::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$15 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorFlash msg) cil managed
    {
    } // end of method Ready$14::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$14::.ctor

  } // end of class Ready$14

  .class abstract auto ansi nested public specialname Ready$15
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$15::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$15::.ctor

  } // end of class Ready$15

  .class abstract auto ansi nested public specialname Ready$16
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$17 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorHide msg) cil managed
    {
    } // end of method Ready$16::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$17 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorHide msg) cil managed
    {
    } // end of method Ready$16::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$16::.ctor

  } // end of class Ready$16

  .class abstract auto ansi nested public specialname Ready$17
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$17::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$17::.ctor

  } // end of class Ready$17

  .class abstract auto ansi nested public specialname Ready$18
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$19 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/AckCursorShow msg) cil managed
    {
    } // end of method Ready$18::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready$19 
            Send(valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/NakCursorShow msg) cil managed
    {
    } // end of method Ready$18::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$18::.ctor

  } // end of class Ready$18

  .class abstract auto ansi nested public specialname Ready$19
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ConsoleDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$19::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$19::.ctor

  } // end of class Ready$19

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::'.ctor$PST06000038'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ConsoleDeviceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.ConsoleDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.ConsoleDeviceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.ConsoleDeviceContract/Imp::'.ctor$PST06000038'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ConsoleDeviceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract::.ctor()
    IL_0006:  ret
  } // end of method ConsoleDeviceContract::.ctor

  .method privatescope static int32  StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       272 (0x110)
    .maxstack  14
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.s   11
    IL_000c:  beq        IL_0052

    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.2
    IL_0013:  beq        IL_0066

    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.s   18
    IL_001b:  beq        IL_0079

    IL_0020:  ldloc.1
    IL_0021:  ldc.i4.s   22
    IL_0023:  beq        IL_008d

    IL_0028:  ldloc.1
    IL_0029:  ldc.i4.6
    IL_002a:  beq        IL_00a1

    IL_002f:  ldloc.1
    IL_0030:  ldc.i4.s   14
    IL_0032:  beq        IL_00b5

    IL_0037:  ldloc.1
    IL_0038:  ldc.i4.8
    IL_0039:  beq        IL_00c9

    IL_003e:  ldloc.1
    IL_003f:  ldc.i4.s   16
    IL_0041:  beq        IL_00dd

    IL_0046:  ldloc.1
    IL_0047:  ldc.i4.4
    IL_0048:  beq        IL_00f1

    IL_004d:  br         IL_0105

    IL_0052:  ldarg.0
    IL_0053:  ldc.i4.s   24
    IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_005a:  ldarg.0
    IL_005b:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0060:  stloc.2
    IL_0061:  br         IL_010c

    IL_0066:  ldarg.0
    IL_0067:  ldc.i4.1
    IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_006d:  ldarg.0
    IL_006e:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0073:  stloc.2
    IL_0074:  br         IL_010c

    IL_0079:  ldarg.0
    IL_007a:  ldc.i4.s   24
    IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0081:  ldarg.0
    IL_0082:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0087:  stloc.2
    IL_0088:  br         IL_010c

    IL_008d:  ldarg.0
    IL_008e:  ldc.i4.s   24
    IL_0090:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0095:  ldarg.0
    IL_0096:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_009b:  stloc.2
    IL_009c:  br         IL_010c

    IL_00a1:  ldarg.0
    IL_00a2:  ldc.i4.s   24
    IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00a9:  ldarg.0
    IL_00aa:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00af:  stloc.2
    IL_00b0:  br         IL_010c

    IL_00b5:  ldarg.0
    IL_00b6:  ldc.i4.s   24
    IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00bd:  ldarg.0
    IL_00be:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00c3:  stloc.2
    IL_00c4:  br         IL_010c

    IL_00c9:  ldarg.0
    IL_00ca:  ldc.i4.s   24
    IL_00cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00d1:  ldarg.0
    IL_00d2:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00d7:  stloc.2
    IL_00d8:  br         IL_010c

    IL_00dd:  ldarg.0
    IL_00de:  ldc.i4.s   24
    IL_00e0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00e5:  ldarg.0
    IL_00e6:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00eb:  stloc.2
    IL_00ec:  br         IL_010c

    IL_00f1:  ldarg.0
    IL_00f2:  ldc.i4.s   24
    IL_00f4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00f9:  ldarg.0
    IL_00fa:  call       int32 Microsoft.Singularity.Io.ConsoleDeviceContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00ff:  stloc.2
    IL_0100:  br         IL_010c

    IL_0105:  ldloc.0
    IL_0106:  stloc.2
    IL_0107:  br         IL_010c

    IL_010c:  ldloc.2
    IL_010d:  stloc.3
    IL_010e:  ldloc.2
    IL_010f:  ret
  } // end of method ConsoleDeviceContract::StableState

  .method privatescope static int32  CanonicalState$PST06000005(int32 state) cil managed
  {
    // Code size       157 (0x9d)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   11
    IL_0005:  beq        IL_004b

    IL_000a:  ldloc.0
    IL_000b:  ldc.i4.2
    IL_000c:  beq        IL_0053

    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.s   18
    IL_0014:  beq        IL_005a

    IL_0019:  ldloc.0
    IL_001a:  ldc.i4.s   22
    IL_001c:  beq        IL_0062

    IL_0021:  ldloc.0
    IL_0022:  ldc.i4.6
    IL_0023:  beq        IL_006a

    IL_0028:  ldloc.0
    IL_0029:  ldc.i4.s   14
    IL_002b:  beq        IL_0072

    IL_0030:  ldloc.0
    IL_0031:  ldc.i4.8
    IL_0032:  beq        IL_007a

    IL_0037:  ldloc.0
    IL_0038:  ldc.i4.s   16
    IL_003a:  beq        IL_0082

    IL_003f:  ldloc.0
    IL_0040:  ldc.i4.4
    IL_0041:  beq        IL_008a

    IL_0046:  br         IL_0092

    IL_004b:  ldc.i4.s   24
    IL_004d:  stloc.1
    IL_004e:  br         IL_0099

    IL_0053:  ldc.i4.1
    IL_0054:  stloc.1
    IL_0055:  br         IL_0099

    IL_005a:  ldc.i4.s   24
    IL_005c:  stloc.1
    IL_005d:  br         IL_0099

    IL_0062:  ldc.i4.s   24
    IL_0064:  stloc.1
    IL_0065:  br         IL_0099

    IL_006a:  ldc.i4.s   24
    IL_006c:  stloc.1
    IL_006d:  br         IL_0099

    IL_0072:  ldc.i4.s   24
    IL_0074:  stloc.1
    IL_0075:  br         IL_0099

    IL_007a:  ldc.i4.s   24
    IL_007c:  stloc.1
    IL_007d:  br         IL_0099

    IL_0082:  ldc.i4.s   24
    IL_0084:  stloc.1
    IL_0085:  br         IL_0099

    IL_008a:  ldc.i4.s   24
    IL_008c:  stloc.1
    IL_008d:  br         IL_0099

    IL_0092:  ldarg.0
    IL_0093:  stloc.1
    IL_0094:  br         IL_0099

    IL_0099:  ldloc.1
    IL_009a:  stloc.2
    IL_009b:  ldloc.1
    IL_009c:  ret
  } // end of method ConsoleDeviceContract::CanonicalState

} // end of class Microsoft.Singularity.Io.ConsoleDeviceContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.DeviceContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000003)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600027B'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.DeviceContract::CanonicalState$PST0600000A(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.DeviceContract::CanonicalState$PST0600000A(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_002a

      IL_001a:  br         IL_0035

      IL_001f:  ldstr      "Start"
      IL_0024:  stloc.1
      IL_0025:  br         IL_0040

      IL_002a:  ldstr      "DoneState"
      IL_002f:  stloc.1
      IL_0030:  br         IL_0040

      IL_0035:  ldstr      "<protocol terminated>"
      IL_003a:  stloc.1
      IL_003b:  br         IL_0040

      IL_0040:  ldloc.1
      IL_0041:  stloc.2
      IL_0042:  ldloc.1
      IL_0043:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.DeviceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.DeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.DeviceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       105 (0x69)
      .maxstack  4
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               int32 V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_001a

      IL_0015:  br         IL_005a

      IL_001a:  ldc.i4.0
      IL_001b:  stloc.2
      IL_001c:  ldarg.0
      IL_001d:  volatile.
      IL_001f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_0024:  stloc.3
      IL_0025:  ldloc.3
      IL_0026:  brtrue     IL_003b

      IL_002b:  ldarg.0
      IL_002c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0031:  stloc.2
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  ldc.i4.0
      IL_003d:  ceq
      IL_003f:  brfalse    IL_0052

      IL_0044:  ldloc.2
      IL_0045:  brfalse    IL_0052

      IL_004a:  ldc.i4.m1
      IL_004b:  stloc.s    V_4
      IL_004d:  br         IL_0062

      IL_0052:  ldloc.3
      IL_0053:  stloc.s    V_4
      IL_0055:  br         IL_0062

      IL_005a:  ldc.i4.m1
      IL_005b:  stloc.s    V_4
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.s    V_4
      IL_0064:  stloc.s    V_5
      IL_0066:  ldloc.s    V_4
      IL_0068:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.DeviceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverContractNotSupported0$PST0600028C() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST0600028D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::DeliverContractNotSupported0$PST0600028C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.DeviceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DeviceContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .pack 0
    .size 1
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.DeviceContract::CanonicalState$PST0600000A(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.DeviceContract::CanonicalState$PST0600000A(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_002a

      IL_001a:  br         IL_0035

      IL_001f:  ldstr      "Start"
      IL_0024:  stloc.1
      IL_0025:  br         IL_0040

      IL_002a:  ldstr      "DoneState"
      IL_002f:  stloc.1
      IL_0030:  br         IL_0040

      IL_0035:  ldstr      "<protocol terminated>"
      IL_003a:  stloc.1
      IL_003b:  br         IL_0040

      IL_0040:  ldloc.1
      IL_0041:  stloc.2
      IL_0042:  ldloc.1
      IL_0043:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::DeliverContractNotSupported0$PST0600028C()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::MarshallDeliverContractNotSupported0$PST0600028D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.DeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.DeviceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       105 (0x69)
      .maxstack  4
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               int32 V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_001a

      IL_0015:  br         IL_005a

      IL_001a:  ldc.i4.0
      IL_001b:  stloc.2
      IL_001c:  ldarg.0
      IL_001d:  volatile.
      IL_001f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0024:  stloc.3
      IL_0025:  ldloc.3
      IL_0026:  brtrue     IL_003b

      IL_002b:  ldarg.0
      IL_002c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0031:  stloc.2
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  ldc.i4.0
      IL_003d:  ceq
      IL_003f:  brfalse    IL_0052

      IL_0044:  ldloc.2
      IL_0045:  brfalse    IL_0052

      IL_004a:  ldc.i4.m1
      IL_004b:  stloc.s    V_4
      IL_004d:  br         IL_0062

      IL_0052:  ldloc.3
      IL_0053:  stloc.s    V_4
      IL_0055:  br         IL_0062

      IL_005a:  ldc.i4.m1
      IL_005b:  stloc.s    V_4
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.s    V_4
      IL_0064:  stloc.s    V_5
      IL_0066:  ldloc.s    V_4
      IL_0068:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.DeviceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

  } // end of class Exp

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.DeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.DeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::'.ctor$PST0600027B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DeviceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.DeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.DeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.DeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.DeviceContract/Imp::'.ctor$PST0600027B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DeviceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method DeviceContract::.ctor

  .method privatescope static int32  StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Io.DeviceContract::StableState$PST06000009(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method DeviceContract::StableState

  .method privatescope static int32  CanonicalState$PST0600000A(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method DeviceContract::CanonicalState

} // end of class Microsoft.Singularity.Io.DeviceContract

.class public auto ansi sealed Microsoft.Singularity.Io.DiskAttributes
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname uint32 value__
  .field public static literal valuetype Microsoft.Singularity.Io.DiskAttributes Removable = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Io.DiskAttributes ReadOnly = int32(0x00000001)
} // end of class Microsoft.Singularity.Io.DiskAttributes

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.DiskDeviceContract
       extends Microsoft.Singularity.Io.DeviceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000019)
    .field public static literal specialname int32 GetDeviceName = int32(0x00000003)
    .field public static literal specialname int32 AckGetDeviceName = int32(0x00000004)
    .field public static literal specialname int32 GetStartSector = int32(0x00000005)
    .field public static literal specialname int32 AckGetStartSector = int32(0x00000006)
    .field public static literal specialname int32 GetSectorCount = int32(0x00000007)
    .field public static literal specialname int32 AckGetSectorCount = int32(0x00000008)
    .field public static literal specialname int32 GetSystemId = int32(0x00000009)
    .field public static literal specialname int32 SystemId = int32(0x0000000A)
    .field public static literal specialname int32 NoSystemId = int32(0x0000000B)
    .field public static literal specialname int32 GetDiskAttributes = int32(0x0000000C)
    .field public static literal specialname int32 AckGetDiskAttributes = int32(0x0000000D)
    .field public static literal specialname int32 Read = int32(0x0000000E)
    .field public static literal specialname int32 AckRead = int32(0x0000000F)
    .field public static literal specialname int32 NakRead = int32(0x00000010)
    .field public static literal specialname int32 Write = int32(0x00000011)
    .field public static literal specialname int32 AckWrite = int32(0x00000012)
    .field public static literal specialname int32 NakWrite = int32(0x00000013)
    .field public static literal specialname int32 NoOp = int32(0x00000014)
    .field public static literal specialname int32 AckNoOp = int32(0x00000015)
    .field public static literal specialname int32 ReadPerf = int32(0x00000016)
    .field public static literal specialname int32 AckReadPerf = int32(0x00000017)
    .field public static literal specialname int32 Success = int32(0x00000018)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName AckGetDeviceNamePod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector AckGetStartSectorPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount AckGetSectorCountPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId SystemIdPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId NoSystemIdPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes AckGetDiskAttributesPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead AckReadPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead NakReadPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite AckWritePod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite NakWritePod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp AckNoOpPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf AckReadPerfPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600029F'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::CanonicalState$PST0600000F(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::CanonicalState$PST0600000F(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       253 (0xfd)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_006a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  beq        IL_0075

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   11
      IL_001f:  beq        IL_0080

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   10
      IL_0027:  beq        IL_008b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   9
      IL_002f:  beq        IL_0096

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.8
      IL_0036:  beq        IL_00a1

      IL_003b:  ldloc.0
      IL_003c:  ldc.i4.7
      IL_003d:  beq        IL_00ac

      IL_0042:  ldloc.0
      IL_0043:  ldc.i4.6
      IL_0044:  beq        IL_00b7

      IL_0049:  ldloc.0
      IL_004a:  ldc.i4.5
      IL_004b:  beq        IL_00c2

      IL_0050:  ldloc.0
      IL_0051:  ldc.i4.4
      IL_0052:  beq        IL_00cd

      IL_0057:  ldloc.0
      IL_0058:  ldc.i4.3
      IL_0059:  beq        IL_00d8

      IL_005e:  ldloc.0
      IL_005f:  ldc.i4.2
      IL_0060:  beq        IL_00e3

      IL_0065:  br         IL_00ee

      IL_006a:  ldstr      "Ready"
      IL_006f:  stloc.1
      IL_0070:  br         IL_00f9

      IL_0075:  ldstr      "DoGetDeviceName"
      IL_007a:  stloc.1
      IL_007b:  br         IL_00f9

      IL_0080:  ldstr      "DoGetDiskAttributes"
      IL_0085:  stloc.1
      IL_0086:  br         IL_00f9

      IL_008b:  ldstr      "DoGetStartSector"
      IL_0090:  stloc.1
      IL_0091:  br         IL_00f9

      IL_0096:  ldstr      "DoGetSectorCount"
      IL_009b:  stloc.1
      IL_009c:  br         IL_00f9

      IL_00a1:  ldstr      "DoGetSystemId"
      IL_00a6:  stloc.1
      IL_00a7:  br         IL_00f9

      IL_00ac:  ldstr      "DoRead"
      IL_00b1:  stloc.1
      IL_00b2:  br         IL_00f9

      IL_00b7:  ldstr      "DoReadPerf"
      IL_00bc:  stloc.1
      IL_00bd:  br         IL_00f9

      IL_00c2:  ldstr      "DoWrite"
      IL_00c7:  stloc.1
      IL_00c8:  br         IL_00f9

      IL_00cd:  ldstr      "DoNoOp"
      IL_00d2:  stloc.1
      IL_00d3:  br         IL_00f9

      IL_00d8:  ldstr      "Start"
      IL_00dd:  stloc.1
      IL_00de:  br         IL_00f9

      IL_00e3:  ldstr      "DoneState"
      IL_00e8:  stloc.1
      IL_00e9:  br         IL_00f9

      IL_00ee:  ldstr      "<protocol terminated>"
      IL_00f3:  stloc.1
      IL_00f4:  br         IL_00f9

      IL_00f9:  ldloc.1
      IL_00fa:  stloc.2
      IL_00fb:  ldloc.1
      IL_00fc:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendGetDeviceName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetDeviceName0$PST06000309()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverGetDeviceName0$PST0600030A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   12
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetDeviceName in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetDeviceName

    .method public instance void  RecvAckGetDeviceName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckGetDeviceName when next message has "
      + "tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDeviceNamePod0
      IL_008e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0093:  stind.i
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDeviceNamePod0
      IL_00a3:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   13
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv AckGetDeviceName in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvAckGetDeviceName

    .method public instance void  SendGetStartSector() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetStartSector0$PST0600030B()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverGetStartSector0$PST0600030C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   10
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetStartSector in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetStartSector

    .method public instance void  RecvAckGetStartSector([out] uint64& startSector) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckGetStartSector when next message has"
      + " tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetStartSectorPod0
      IL_008e:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector::startSector
      IL_0093:  stind.i8
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetStartSectorPod0
      IL_00a3:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   13
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv AckGetStartSector in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvAckGetStartSector

    .method public instance void  SendGetSectorCount() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetSectorCount0$PST0600030D()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverGetSectorCount0$PST0600030E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   9
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetSectorCount in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetSectorCount

    .method public instance void  RecvAckGetSectorCount([out] uint64& sectorCount) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckGetSectorCount when next message has"
      + " tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetSectorCountPod0
      IL_008e:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount::sectorCount
      IL_0093:  stind.i8
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetSectorCountPod0
      IL_00a3:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   13
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv AckGetSectorCount in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvAckGetSectorCount

    .method public instance void  SendGetSystemId() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetSystemId0$PST0600030F()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverGetSystemId0$PST06000310(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.8
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send GetSystemId in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendGetSystemId

    .method public instance void  RecvSystemId([out] uint8& systemId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   10
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv SystemId when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId Microsoft.Singularity.Io.DiskDeviceContract/Imp::SystemIdPod0
      IL_008f:  ldfld      uint8 Microsoft.Singularity.Io.DiskDeviceContract/SystemId::systemId
      IL_0094:  stind.i1
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId Microsoft.Singularity.Io.DiskDeviceContract/Imp::SystemIdPod0
      IL_00a4:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/SystemId
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   13
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv SystemId in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvSystemId

    .method public instance void  RecvNoSystemId() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   11
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NoSystemId when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId Microsoft.Singularity.Io.DiskDeviceContract/Imp::NoSystemIdPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   13
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv NoSystemId in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvNoSystemId

    .method public instance void  SendGetDiskAttributes() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetDiskAttributes0$PST06000311()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverGetDiskAttributes0$PST06000312(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   11
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetDiskAttributes in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetDiskAttributes

    .method public instance void  RecvAckGetDiskAttributes([out] valuetype Microsoft.Singularity.Io.DiskAttributes& 'flags') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckGetDiskAttributes when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDiskAttributesPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Io.DiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes::'flags'
      IL_0095:  stobj      Microsoft.Singularity.Io.DiskAttributes
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDiskAttributesPod0
      IL_00a9:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   13
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv AckGetDiskAttributes in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvAckGetDiskAttributes

    .method public instance void  SendRead(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                           uint64 offset,
                                           uint64 length,
                                           uint64 sectorId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       146 (0x92)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_007b

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0053

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  ldarg.3
      IL_0047:  ldarg.s    sectorId
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverRead0$PST06000313(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                   uint64,
                                                                                                                   uint64,
                                                                                                                   uint64)
      IL_004e:  br         IL_0064

      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0059:  ldarg.1
      IL_005a:  ldarg.2
      IL_005b:  ldarg.3
      IL_005c:  ldarg.s    sectorId
      IL_005e:  ldarg.0
      IL_005f:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverRead0$PST06000314(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                           uint64,
                                                                                                                           uint64,
                                                                                                                           uint64,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006a:  ldarg.0
      IL_006b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0070:  ldc.i4.7
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0076:  br         IL_0091

      IL_007b:  ldstr      "can't send Read in state "
      IL_0080:  ldarg.0
      IL_0081:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0086:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_008b:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ret
    } // end of method Imp::SendRead

    .method public instance void  RecvAckRead([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   15
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   15
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckRead when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPod0
      IL_008f:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0094:  stind.i
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPod0
      IL_00a4:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckRead
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   13
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv AckRead in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvAckRead

    .method public instance void  RecvNakRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   16
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   16
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakRead when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead Microsoft.Singularity.Io.DiskDeviceContract/Imp::NakReadPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/NakRead
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   13
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv NakRead in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvNakRead

    .method public instance void  SendWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                            uint64 offset,
                                            uint64 length,
                                            uint64 sectorId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       146 (0x92)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_007b

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0053

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  ldarg.3
      IL_0047:  ldarg.s    sectorId
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverWrite0$PST06000315(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                    uint64,
                                                                                                                    uint64,
                                                                                                                    uint64)
      IL_004e:  br         IL_0064

      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0059:  ldarg.1
      IL_005a:  ldarg.2
      IL_005b:  ldarg.3
      IL_005c:  ldarg.s    sectorId
      IL_005e:  ldarg.0
      IL_005f:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverWrite0$PST06000316(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                            uint64,
                                                                                                                            uint64,
                                                                                                                            uint64,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0064:  ldarg.0
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_006a:  ldarg.0
      IL_006b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0070:  ldc.i4.5
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0076:  br         IL_0091

      IL_007b:  ldstr      "can't send Write in state "
      IL_0080:  ldarg.0
      IL_0081:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0086:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_008b:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ret
    } // end of method Imp::SendWrite

    .method public instance void  RecvAckWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   18
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   18
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckWrite when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckWritePod0
      IL_008f:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0094:  stind.i
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckWritePod0
      IL_00a4:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckWrite
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   13
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv AckWrite in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvAckWrite

    .method public instance void  RecvNakWrite() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   19
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   19
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakWrite when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite Microsoft.Singularity.Io.DiskDeviceContract/Imp::NakWritePod0
      IL_0097:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/NakWrite
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   13
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv NakWrite in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvNakWrite

    .method public instance void  SendNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverNoOp0$PST06000317()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverNoOp0$PST06000318(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.4
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send NoOp in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendNoOp

    .method public instance void  RecvAckNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   21
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   21
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckNoOp when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckNoOpPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   13
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv AckNoOp in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvAckNoOp

    .method public instance void  SendReadPerf(int32 numMB,
                                               int32 chunkSize) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       128 (0x80)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0069

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0044

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverReadPerf0$PST06000319(int32,
                                                                                                                       int32)
      IL_003f:  br         IL_0052

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.0
      IL_004d:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallDeliverReadPerf0$PST0600031A(int32,
                                                                                                                               int32,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0052:  ldarg.0
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0058:  ldarg.0
      IL_0059:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005e:  ldc.i4.6
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0064:  br         IL_007f

      IL_0069:  ldstr      "can't send ReadPerf in state "
      IL_006e:  ldarg.0
      IL_006f:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_0074:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0079:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007e:  throw

      IL_007f:  ret
    } // end of method Imp::SendReadPerf

    .method public instance void  RecvAckReadPerf([out] int64& cycles,
                                                  [out] int64& ticks) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       224 (0xe0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00c9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   23
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   23
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckReadPerf when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPerfPod0
      IL_008f:  ldfld      int64 Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf::cycles
      IL_0094:  stind.i8
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPerfPod0
      IL_009c:  ldfld      int64 Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf::ticks
      IL_00a1:  stind.i8
      IL_00a2:  ldarg.0
      IL_00a3:  ldc.i4.0
      IL_00a4:  volatile.
      IL_00a6:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPerfPod0
      IL_00b1:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bd:  ldc.i4.s   13
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c4:  br         IL_00df

      IL_00c9:  ldstr      "can't recv AckReadPerf in state "
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00d4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00de:  throw

      IL_00df:  ret
    } // end of method Imp::RecvAckReadPerf

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   24
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   24
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success Microsoft.Singularity.Io.DiskDeviceContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   13
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Success in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.DiskDeviceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DiskDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DiskDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.DiskDeviceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       900 (0x384)
      .maxstack  14
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               int32 V_25)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0065

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_00a5

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00ed

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0135

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_017d

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.s   9
      IL_0034:  beq        IL_01c5

      IL_0039:  ldloc.1
      IL_003a:  ldc.i4.s   10
      IL_003c:  beq        IL_020d

      IL_0041:  ldloc.1
      IL_0042:  ldc.i4.s   11
      IL_0044:  beq        IL_0255

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.s   12
      IL_004c:  beq        IL_029d

      IL_0051:  ldloc.1
      IL_0052:  ldc.i4.s   13
      IL_0054:  beq        IL_02e5

      IL_0059:  ldloc.1
      IL_005a:  ldc.i4.3
      IL_005b:  beq        IL_032d

      IL_0060:  br         IL_0375

      IL_0065:  ldc.i4.0
      IL_0066:  stloc.2
      IL_0067:  ldarg.0
      IL_0068:  volatile.
      IL_006a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_006f:  stloc.3
      IL_0070:  ldloc.3
      IL_0071:  brtrue     IL_0086

      IL_0076:  ldarg.0
      IL_0077:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_007c:  stloc.2
      IL_007d:  ldarg.0
      IL_007e:  volatile.
      IL_0080:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0085:  stloc.3
      IL_0086:  ldloc.3
      IL_0087:  ldc.i4.0
      IL_0088:  ceq
      IL_008a:  brfalse    IL_009d

      IL_008f:  ldloc.2
      IL_0090:  brfalse    IL_009d

      IL_0095:  ldc.i4.m1
      IL_0096:  stloc.s    V_4
      IL_0098:  br         IL_037d

      IL_009d:  ldloc.3
      IL_009e:  stloc.s    V_4
      IL_00a0:  br         IL_037d

      IL_00a5:  ldc.i4.0
      IL_00a6:  stloc.s    V_5
      IL_00a8:  ldarg.0
      IL_00a9:  volatile.
      IL_00ab:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_00b0:  stloc.s    V_6
      IL_00b2:  ldloc.s    V_6
      IL_00b4:  brtrue     IL_00cb

      IL_00b9:  ldarg.0
      IL_00ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00bf:  stloc.s    V_5
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_00c9:  stloc.s    V_6
      IL_00cb:  ldloc.s    V_6
      IL_00cd:  ldc.i4.0
      IL_00ce:  ceq
      IL_00d0:  brfalse    IL_00e4

      IL_00d5:  ldloc.s    V_5
      IL_00d7:  brfalse    IL_00e4

      IL_00dc:  ldc.i4.m1
      IL_00dd:  stloc.s    V_4
      IL_00df:  br         IL_037d

      IL_00e4:  ldloc.s    V_6
      IL_00e6:  stloc.s    V_4
      IL_00e8:  br         IL_037d

      IL_00ed:  ldc.i4.0
      IL_00ee:  stloc.s    V_7
      IL_00f0:  ldarg.0
      IL_00f1:  volatile.
      IL_00f3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_00f8:  stloc.s    V_8
      IL_00fa:  ldloc.s    V_8
      IL_00fc:  brtrue     IL_0113

      IL_0101:  ldarg.0
      IL_0102:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0107:  stloc.s    V_7
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0111:  stloc.s    V_8
      IL_0113:  ldloc.s    V_8
      IL_0115:  ldc.i4.0
      IL_0116:  ceq
      IL_0118:  brfalse    IL_012c

      IL_011d:  ldloc.s    V_7
      IL_011f:  brfalse    IL_012c

      IL_0124:  ldc.i4.m1
      IL_0125:  stloc.s    V_4
      IL_0127:  br         IL_037d

      IL_012c:  ldloc.s    V_8
      IL_012e:  stloc.s    V_4
      IL_0130:  br         IL_037d

      IL_0135:  ldc.i4.0
      IL_0136:  stloc.s    V_9
      IL_0138:  ldarg.0
      IL_0139:  volatile.
      IL_013b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0140:  stloc.s    V_10
      IL_0142:  ldloc.s    V_10
      IL_0144:  brtrue     IL_015b

      IL_0149:  ldarg.0
      IL_014a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_014f:  stloc.s    V_9
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0159:  stloc.s    V_10
      IL_015b:  ldloc.s    V_10
      IL_015d:  ldc.i4.0
      IL_015e:  ceq
      IL_0160:  brfalse    IL_0174

      IL_0165:  ldloc.s    V_9
      IL_0167:  brfalse    IL_0174

      IL_016c:  ldc.i4.m1
      IL_016d:  stloc.s    V_4
      IL_016f:  br         IL_037d

      IL_0174:  ldloc.s    V_10
      IL_0176:  stloc.s    V_4
      IL_0178:  br         IL_037d

      IL_017d:  ldc.i4.0
      IL_017e:  stloc.s    V_11
      IL_0180:  ldarg.0
      IL_0181:  volatile.
      IL_0183:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0188:  stloc.s    V_12
      IL_018a:  ldloc.s    V_12
      IL_018c:  brtrue     IL_01a3

      IL_0191:  ldarg.0
      IL_0192:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0197:  stloc.s    V_11
      IL_0199:  ldarg.0
      IL_019a:  volatile.
      IL_019c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_01a1:  stloc.s    V_12
      IL_01a3:  ldloc.s    V_12
      IL_01a5:  ldc.i4.0
      IL_01a6:  ceq
      IL_01a8:  brfalse    IL_01bc

      IL_01ad:  ldloc.s    V_11
      IL_01af:  brfalse    IL_01bc

      IL_01b4:  ldc.i4.m1
      IL_01b5:  stloc.s    V_4
      IL_01b7:  br         IL_037d

      IL_01bc:  ldloc.s    V_12
      IL_01be:  stloc.s    V_4
      IL_01c0:  br         IL_037d

      IL_01c5:  ldc.i4.0
      IL_01c6:  stloc.s    V_13
      IL_01c8:  ldarg.0
      IL_01c9:  volatile.
      IL_01cb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_01d0:  stloc.s    V_14
      IL_01d2:  ldloc.s    V_14
      IL_01d4:  brtrue     IL_01eb

      IL_01d9:  ldarg.0
      IL_01da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01df:  stloc.s    V_13
      IL_01e1:  ldarg.0
      IL_01e2:  volatile.
      IL_01e4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_01e9:  stloc.s    V_14
      IL_01eb:  ldloc.s    V_14
      IL_01ed:  ldc.i4.0
      IL_01ee:  ceq
      IL_01f0:  brfalse    IL_0204

      IL_01f5:  ldloc.s    V_13
      IL_01f7:  brfalse    IL_0204

      IL_01fc:  ldc.i4.m1
      IL_01fd:  stloc.s    V_4
      IL_01ff:  br         IL_037d

      IL_0204:  ldloc.s    V_14
      IL_0206:  stloc.s    V_4
      IL_0208:  br         IL_037d

      IL_020d:  ldc.i4.0
      IL_020e:  stloc.s    V_15
      IL_0210:  ldarg.0
      IL_0211:  volatile.
      IL_0213:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0218:  stloc.s    V_16
      IL_021a:  ldloc.s    V_16
      IL_021c:  brtrue     IL_0233

      IL_0221:  ldarg.0
      IL_0222:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0227:  stloc.s    V_15
      IL_0229:  ldarg.0
      IL_022a:  volatile.
      IL_022c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0231:  stloc.s    V_16
      IL_0233:  ldloc.s    V_16
      IL_0235:  ldc.i4.0
      IL_0236:  ceq
      IL_0238:  brfalse    IL_024c

      IL_023d:  ldloc.s    V_15
      IL_023f:  brfalse    IL_024c

      IL_0244:  ldc.i4.m1
      IL_0245:  stloc.s    V_4
      IL_0247:  br         IL_037d

      IL_024c:  ldloc.s    V_16
      IL_024e:  stloc.s    V_4
      IL_0250:  br         IL_037d

      IL_0255:  ldc.i4.0
      IL_0256:  stloc.s    V_17
      IL_0258:  ldarg.0
      IL_0259:  volatile.
      IL_025b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0260:  stloc.s    V_18
      IL_0262:  ldloc.s    V_18
      IL_0264:  brtrue     IL_027b

      IL_0269:  ldarg.0
      IL_026a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_026f:  stloc.s    V_17
      IL_0271:  ldarg.0
      IL_0272:  volatile.
      IL_0274:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0279:  stloc.s    V_18
      IL_027b:  ldloc.s    V_18
      IL_027d:  ldc.i4.0
      IL_027e:  ceq
      IL_0280:  brfalse    IL_0294

      IL_0285:  ldloc.s    V_17
      IL_0287:  brfalse    IL_0294

      IL_028c:  ldc.i4.m1
      IL_028d:  stloc.s    V_4
      IL_028f:  br         IL_037d

      IL_0294:  ldloc.s    V_18
      IL_0296:  stloc.s    V_4
      IL_0298:  br         IL_037d

      IL_029d:  ldc.i4.0
      IL_029e:  stloc.s    V_19
      IL_02a0:  ldarg.0
      IL_02a1:  volatile.
      IL_02a3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_02a8:  stloc.s    V_20
      IL_02aa:  ldloc.s    V_20
      IL_02ac:  brtrue     IL_02c3

      IL_02b1:  ldarg.0
      IL_02b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b7:  stloc.s    V_19
      IL_02b9:  ldarg.0
      IL_02ba:  volatile.
      IL_02bc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_02c1:  stloc.s    V_20
      IL_02c3:  ldloc.s    V_20
      IL_02c5:  ldc.i4.0
      IL_02c6:  ceq
      IL_02c8:  brfalse    IL_02dc

      IL_02cd:  ldloc.s    V_19
      IL_02cf:  brfalse    IL_02dc

      IL_02d4:  ldc.i4.m1
      IL_02d5:  stloc.s    V_4
      IL_02d7:  br         IL_037d

      IL_02dc:  ldloc.s    V_20
      IL_02de:  stloc.s    V_4
      IL_02e0:  br         IL_037d

      IL_02e5:  ldc.i4.0
      IL_02e6:  stloc.s    V_21
      IL_02e8:  ldarg.0
      IL_02e9:  volatile.
      IL_02eb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_02f0:  stloc.s    V_22
      IL_02f2:  ldloc.s    V_22
      IL_02f4:  brtrue     IL_030b

      IL_02f9:  ldarg.0
      IL_02fa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02ff:  stloc.s    V_21
      IL_0301:  ldarg.0
      IL_0302:  volatile.
      IL_0304:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0309:  stloc.s    V_22
      IL_030b:  ldloc.s    V_22
      IL_030d:  ldc.i4.0
      IL_030e:  ceq
      IL_0310:  brfalse    IL_0324

      IL_0315:  ldloc.s    V_21
      IL_0317:  brfalse    IL_0324

      IL_031c:  ldc.i4.m1
      IL_031d:  stloc.s    V_4
      IL_031f:  br         IL_037d

      IL_0324:  ldloc.s    V_22
      IL_0326:  stloc.s    V_4
      IL_0328:  br         IL_037d

      IL_032d:  ldc.i4.0
      IL_032e:  stloc.s    V_23
      IL_0330:  ldarg.0
      IL_0331:  volatile.
      IL_0333:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0338:  stloc.s    V_24
      IL_033a:  ldloc.s    V_24
      IL_033c:  brtrue     IL_0353

      IL_0341:  ldarg.0
      IL_0342:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0347:  stloc.s    V_23
      IL_0349:  ldarg.0
      IL_034a:  volatile.
      IL_034c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0351:  stloc.s    V_24
      IL_0353:  ldloc.s    V_24
      IL_0355:  ldc.i4.0
      IL_0356:  ceq
      IL_0358:  brfalse    IL_036c

      IL_035d:  ldloc.s    V_23
      IL_035f:  brfalse    IL_036c

      IL_0364:  ldc.i4.m1
      IL_0365:  stloc.s    V_4
      IL_0367:  br         IL_037d

      IL_036c:  ldloc.s    V_24
      IL_036e:  stloc.s    V_4
      IL_0370:  br         IL_037d

      IL_0375:  ldc.i4.m1
      IL_0376:  stloc.s    V_4
      IL_0378:  br         IL_037d

      IL_037d:  ldloc.s    V_4
      IL_037f:  stloc.s    V_25
      IL_0381:  ldloc.s    V_4
      IL_0383:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.DiskDeviceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckGetDeviceName0$PST060002C6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDeviceNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckGetDeviceName0

    .method privatescope instance void  MarshallDeliverAckGetDeviceName0$PST060002C7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetDeviceName0$PST060002C6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDeviceNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::MarshallAll(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetDeviceName0

    .method privatescope instance void  DeliverAckGetStartSector0$PST060002C8(uint64 startSector) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetStartSectorPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector::startSector
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckGetStartSector0

    .method privatescope instance void  MarshallDeliverAckGetStartSector0$PST060002C9(uint64 startSector,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetStartSector0$PST060002C8(uint64)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetStartSectorPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetStartSector0

    .method privatescope instance void  DeliverAckGetSectorCount0$PST060002CA(uint64 sectorCount) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetSectorCountPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount::sectorCount
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckGetSectorCount0

    .method privatescope instance void  MarshallDeliverAckGetSectorCount0$PST060002CB(uint64 sectorCount,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetSectorCount0$PST060002CA(uint64)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetSectorCountPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetSectorCount0

    .method privatescope instance void  DeliverSystemId0$PST060002CC(uint8 systemId) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId Microsoft.Singularity.Io.DiskDeviceContract/Imp::SystemIdPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8 Microsoft.Singularity.Io.DiskDeviceContract/SystemId::systemId
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverSystemId0

    .method privatescope instance void  MarshallDeliverSystemId0$PST060002CD(uint8 systemId,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverSystemId0$PST060002CC(uint8)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId Microsoft.Singularity.Io.DiskDeviceContract/Imp::SystemIdPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/SystemId::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverSystemId0

    .method privatescope instance void  DeliverNoSystemId0$PST060002CE() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNoSystemId0

    .method privatescope instance void  MarshallDeliverNoSystemId0$PST060002CF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverNoSystemId0$PST060002CE()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId Microsoft.Singularity.Io.DiskDeviceContract/Imp::NoSystemIdPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNoSystemId0

    .method privatescope instance void  DeliverAckGetDiskAttributes0$PST060002D0(valuetype Microsoft.Singularity.Io.DiskAttributes 'flags') cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDiskAttributesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Io.DiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes::'flags'
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckGetDiskAttributes0

    .method privatescope instance void  MarshallDeliverAckGetDiskAttributes0$PST060002D1(valuetype Microsoft.Singularity.Io.DiskAttributes 'flags',
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetDiskAttributes0$PST060002D0(valuetype Microsoft.Singularity.Io.DiskAttributes)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckGetDiskAttributesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetDiskAttributes0

    .method privatescope instance void  DeliverAckRead0$PST060002D2(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckRead0

    .method privatescope instance void  MarshallDeliverAckRead0$PST060002D3(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckRead0$PST060002D2(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckRead::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckRead0

    .method privatescope instance void  DeliverNakRead0$PST060002D4() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakRead0

    .method privatescope instance void  MarshallDeliverNakRead0$PST060002D5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverNakRead0$PST060002D4()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead Microsoft.Singularity.Io.DiskDeviceContract/Imp::NakReadPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NakRead::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakRead0

    .method privatescope instance void  DeliverAckWrite0$PST060002D6(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckWrite0

    .method privatescope instance void  MarshallDeliverAckWrite0$PST060002D7(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckWrite0$PST060002D6(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckWritePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckWrite0

    .method privatescope instance void  DeliverNakWrite0$PST060002D8() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   19
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   19
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakWrite0

    .method privatescope instance void  MarshallDeliverNakWrite0$PST060002D9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverNakWrite0$PST060002D8()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite Microsoft.Singularity.Io.DiskDeviceContract/Imp::NakWritePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NakWrite::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakWrite0

    .method privatescope instance void  DeliverAckNoOp0$PST060002DA() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   21
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   21
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckNoOp0

    .method privatescope instance void  MarshallDeliverAckNoOp0$PST060002DB(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckNoOp0$PST060002DA()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckNoOpPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckNoOp0

    .method privatescope instance void  DeliverAckReadPerf0$PST060002DC(int64 cycles,
                                                                        int64 ticks) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPerfPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int64 Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf::cycles
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPerfPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf::ticks
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   23
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   23
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverAckReadPerf0

    .method privatescope instance void  MarshallDeliverAckReadPerf0$PST060002DD(int64 cycles,
                                                                                int64 ticks,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckReadPerf0$PST060002DC(int64,
                                                                                                                          int64)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Imp::AckReadPerfPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverAckReadPerf0

    .method privatescope instance void  DeliverSuccess0$PST060002DE() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST060002DF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverSuccess0$PST060002DE()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success Microsoft.Singularity.Io.DiskDeviceContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Success::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST060002E0() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060002E1(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverContractNotSupported0$PST060002E0()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.DiskDeviceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.DiskDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Io.DeviceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName GetDeviceNamePod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector GetStartSectorPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount GetSectorCountPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId GetSystemIdPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes GetDiskAttributesPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read ReadPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write WritePod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp NoOpPod0
    .field family valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf ReadPerfPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::CanonicalState$PST0600000F(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::CanonicalState$PST0600000F(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       253 (0xfd)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_006a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  beq        IL_0075

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   11
      IL_001f:  beq        IL_0080

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   10
      IL_0027:  beq        IL_008b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   9
      IL_002f:  beq        IL_0096

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.8
      IL_0036:  beq        IL_00a1

      IL_003b:  ldloc.0
      IL_003c:  ldc.i4.7
      IL_003d:  beq        IL_00ac

      IL_0042:  ldloc.0
      IL_0043:  ldc.i4.6
      IL_0044:  beq        IL_00b7

      IL_0049:  ldloc.0
      IL_004a:  ldc.i4.5
      IL_004b:  beq        IL_00c2

      IL_0050:  ldloc.0
      IL_0051:  ldc.i4.4
      IL_0052:  beq        IL_00cd

      IL_0057:  ldloc.0
      IL_0058:  ldc.i4.3
      IL_0059:  beq        IL_00d8

      IL_005e:  ldloc.0
      IL_005f:  ldc.i4.2
      IL_0060:  beq        IL_00e3

      IL_0065:  br         IL_00ee

      IL_006a:  ldstr      "Ready"
      IL_006f:  stloc.1
      IL_0070:  br         IL_00f9

      IL_0075:  ldstr      "DoGetDeviceName"
      IL_007a:  stloc.1
      IL_007b:  br         IL_00f9

      IL_0080:  ldstr      "DoGetDiskAttributes"
      IL_0085:  stloc.1
      IL_0086:  br         IL_00f9

      IL_008b:  ldstr      "DoGetStartSector"
      IL_0090:  stloc.1
      IL_0091:  br         IL_00f9

      IL_0096:  ldstr      "DoGetSectorCount"
      IL_009b:  stloc.1
      IL_009c:  br         IL_00f9

      IL_00a1:  ldstr      "DoGetSystemId"
      IL_00a6:  stloc.1
      IL_00a7:  br         IL_00f9

      IL_00ac:  ldstr      "DoRead"
      IL_00b1:  stloc.1
      IL_00b2:  br         IL_00f9

      IL_00b7:  ldstr      "DoReadPerf"
      IL_00bc:  stloc.1
      IL_00bd:  br         IL_00f9

      IL_00c2:  ldstr      "DoWrite"
      IL_00c7:  stloc.1
      IL_00c8:  br         IL_00f9

      IL_00cd:  ldstr      "DoNoOp"
      IL_00d2:  stloc.1
      IL_00d3:  br         IL_00f9

      IL_00d8:  ldstr      "Start"
      IL_00dd:  stloc.1
      IL_00de:  br         IL_00f9

      IL_00e3:  ldstr      "DoneState"
      IL_00e8:  stloc.1
      IL_00e9:  br         IL_00f9

      IL_00ee:  ldstr      "<protocol terminated>"
      IL_00f3:  stloc.1
      IL_00f4:  br         IL_00f9

      IL_00f9:  ldloc.1
      IL_00fa:  stloc.2
      IL_00fb:  ldloc.1
      IL_00fc:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvGetDeviceName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetDeviceName when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetDeviceNamePod0
      IL_0096:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   12
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetDeviceName in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetDeviceName

    .method public instance void  SendAckGetDeviceName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       146 (0x92)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_007b

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0056

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_5
      IL_0037:  brfalse    IL_0045

      IL_003c:  ldloc.s    V_4
      IL_003e:  ldloc.s    V_5
      IL_0040:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_004b:  ldarg.1
      IL_004c:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetDeviceName0$PST060002C6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0051:  br         IL_0063

      IL_0056:  ldloc.3
      IL_0057:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_005c:  ldarg.1
      IL_005d:  ldarg.0
      IL_005e:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckGetDeviceName0$PST060002C7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0063:  ldarg.0
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0069:  ldarg.0
      IL_006a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006f:  ldc.i4.s   13
      IL_0071:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0076:  br         IL_0091

      IL_007b:  ldstr      "can't send AckGetDeviceName in state "
      IL_0080:  ldarg.0
      IL_0081:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0086:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_008b:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0090:  throw

      IL_0091:  ret
    } // end of method Exp::SendAckGetDeviceName

    .method public instance void  RecvGetStartSector() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetStartSector when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetStartSectorPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   10
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetStartSector in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetStartSector

    .method public instance void  SendAckGetStartSector(uint64 startSector) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetStartSector0$PST060002C8(uint64)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckGetStartSector0$PST060002C9(uint64,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send AckGetStartSector in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendAckGetStartSector

    .method public instance void  RecvGetSectorCount() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetSectorCount when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetSectorCountPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   9
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetSectorCount in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetSectorCount

    .method public instance void  SendAckGetSectorCount(uint64 sectorCount) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetSectorCount0$PST060002CA(uint64)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckGetSectorCount0$PST060002CB(uint64,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send AckGetSectorCount in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendAckGetSectorCount

    .method public instance void  RecvGetSystemId() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetSystemId when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetSystemIdPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.8
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv GetSystemId in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvGetSystemId

    .method public instance void  SendSystemId(uint8 systemId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0067

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverSystemId0$PST060002CC(uint8)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverSystemId0$PST060002CD(uint8,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.s   13
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send SystemId in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Exp::SendSystemId

    .method public instance void  SendNoSystemId() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverNoSystemId0$PST060002CE()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverNoSystemId0$PST060002CF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   13
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send NoSystemId in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendNoSystemId

    .method public instance void  RecvGetDiskAttributes() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetDiskAttributes when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetDiskAttributesPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   11
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv GetDiskAttributes in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvGetDiskAttributes

    .method public instance void  SendAckGetDiskAttributes(valuetype Microsoft.Singularity.Io.DiskAttributes 'flags') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckGetDiskAttributes0$PST060002D0(valuetype Microsoft.Singularity.Io.DiskAttributes)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckGetDiskAttributes0$PST060002D1(valuetype Microsoft.Singularity.Io.DiskAttributes,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send AckGetDiskAttributes in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendAckGetDiskAttributes

    .method public instance void  RecvRead([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data,
                                           [out] uint64& offset,
                                           [out] uint64& length,
                                           [out] uint64& sectorId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       251 (0xfb)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00e4

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Read when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_0090:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_009d:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Read::offset
      IL_00a2:  stind.i8
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_00aa:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Read::length
      IL_00af:  stind.i8
      IL_00b0:  ldarg.s    sectorId
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_00b8:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Read::sectorId
      IL_00bd:  stind.i8
      IL_00be:  ldarg.0
      IL_00bf:  ldc.i4.0
      IL_00c0:  volatile.
      IL_00c2:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c7:  ldarg.0
      IL_00c8:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_00cd:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/Read
      IL_00d3:  ldarg.0
      IL_00d4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d9:  ldc.i4.7
      IL_00da:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00df:  br         IL_00fa

      IL_00e4:  ldstr      "can't recv Read in state "
      IL_00e9:  ldarg.0
      IL_00ea:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00ef:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f4:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f9:  throw

      IL_00fa:  ret
    } // end of method Exp::RecvRead

    .method public instance void  SendAckRead(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       138 (0x8a)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0073

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckRead0$PST060002D2(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckRead0$PST060002D3(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.s   13
      IL_0069:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006e:  br         IL_0089

      IL_0073:  ldstr      "can't send AckRead in state "
      IL_0078:  ldarg.0
      IL_0079:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_007e:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0083:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ret
    } // end of method Exp::SendAckRead

    .method public instance void  SendNakRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverNakRead0$PST060002D4()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverNakRead0$PST060002D5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   13
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send NakRead in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendNakRead

    .method public instance void  RecvWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data,
                                            [out] uint64& offset,
                                            [out] uint64& length,
                                            [out] uint64& sectorId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       251 (0xfb)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00e4

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   17
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   17
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Write when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_0090:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_009d:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Write::offset
      IL_00a2:  stind.i8
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_00aa:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Write::length
      IL_00af:  stind.i8
      IL_00b0:  ldarg.s    sectorId
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_00b8:  ldfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Write::sectorId
      IL_00bd:  stind.i8
      IL_00be:  ldarg.0
      IL_00bf:  ldc.i4.0
      IL_00c0:  volatile.
      IL_00c2:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c7:  ldarg.0
      IL_00c8:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_00cd:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/Write
      IL_00d3:  ldarg.0
      IL_00d4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d9:  ldc.i4.5
      IL_00da:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00df:  br         IL_00fa

      IL_00e4:  ldstr      "can't recv Write in state "
      IL_00e9:  ldarg.0
      IL_00ea:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00ef:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f4:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f9:  throw

      IL_00fa:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  SendAckWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       138 (0x8a)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0073

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckWrite0$PST060002D6(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckWrite0$PST060002D7(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.s   13
      IL_0069:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006e:  br         IL_0089

      IL_0073:  ldstr      "can't send AckWrite in state "
      IL_0078:  ldarg.0
      IL_0079:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_007e:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0083:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ret
    } // end of method Exp::SendAckWrite

    .method public instance void  SendNakWrite() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverNakWrite0$PST060002D8()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverNakWrite0$PST060002D9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   13
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send NakWrite in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendNakWrite

    .method public instance void  RecvNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   20
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   20
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NoOp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp Microsoft.Singularity.Io.DiskDeviceContract/Exp::NoOpPod0
      IL_0098:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/NoOp
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.4
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv NoOp in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvNoOp

    .method public instance void  SendAckNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckNoOp0$PST060002DA()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckNoOp0$PST060002DB(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   13
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send AckNoOp in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendAckNoOp

    .method public instance void  RecvReadPerf([out] int32& numMB,
                                               [out] int32& chunkSize) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       224 (0xe0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c9

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   22
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ReadPerf when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPerfPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf::numMB
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPerfPod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf::chunkSize
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPerfPod0
      IL_00b2:  initobj    Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.6
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c4:  br         IL_00df

      IL_00c9:  ldstr      "can't recv ReadPerf in state "
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_00d4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00de:  throw

      IL_00df:  ret
    } // end of method Exp::RecvReadPerf

    .method public instance void  SendAckReadPerf(int64 cycles,
                                                  int64 ticks) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       128 (0x80)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0069

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0043

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  ldarg.2
      IL_0039:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverAckReadPerf0$PST060002DC(int64,
                                                                                                                          int64)
      IL_003e:  br         IL_0051

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.2
      IL_004b:  ldarg.0
      IL_004c:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverAckReadPerf0$PST060002DD(int64,
                                                                                                                                  int64,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0051:  ldarg.0
      IL_0052:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0057:  ldarg.0
      IL_0058:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0064:  br         IL_007f

      IL_0069:  ldstr      "can't send AckReadPerf in state "
      IL_006e:  ldarg.0
      IL_006f:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0074:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0079:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007e:  throw

      IL_007f:  ret
    } // end of method Exp::SendAckReadPerf

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverSuccess0$PST060002DE()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverSuccess0$PST060002DF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   13
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Success in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::DeliverContractNotSupported0$PST060002E0()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::MarshallDeliverContractNotSupported0$PST060002E1(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DiskDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.DiskDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.DiskDeviceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       900 (0x384)
      .maxstack  14
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               int32 V_25)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0065

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_00a5

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00ed

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0135

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_017d

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.s   9
      IL_0034:  beq        IL_01c5

      IL_0039:  ldloc.1
      IL_003a:  ldc.i4.s   10
      IL_003c:  beq        IL_020d

      IL_0041:  ldloc.1
      IL_0042:  ldc.i4.s   11
      IL_0044:  beq        IL_0255

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.s   12
      IL_004c:  beq        IL_029d

      IL_0051:  ldloc.1
      IL_0052:  ldc.i4.s   13
      IL_0054:  beq        IL_02e5

      IL_0059:  ldloc.1
      IL_005a:  ldc.i4.3
      IL_005b:  beq        IL_032d

      IL_0060:  br         IL_0375

      IL_0065:  ldc.i4.0
      IL_0066:  stloc.2
      IL_0067:  ldarg.0
      IL_0068:  volatile.
      IL_006a:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_006f:  stloc.3
      IL_0070:  ldloc.3
      IL_0071:  brtrue     IL_0086

      IL_0076:  ldarg.0
      IL_0077:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_007c:  stloc.2
      IL_007d:  ldarg.0
      IL_007e:  volatile.
      IL_0080:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0085:  stloc.3
      IL_0086:  ldloc.3
      IL_0087:  ldc.i4.0
      IL_0088:  ceq
      IL_008a:  brfalse    IL_009d

      IL_008f:  ldloc.2
      IL_0090:  brfalse    IL_009d

      IL_0095:  ldc.i4.m1
      IL_0096:  stloc.s    V_4
      IL_0098:  br         IL_037d

      IL_009d:  ldloc.3
      IL_009e:  stloc.s    V_4
      IL_00a0:  br         IL_037d

      IL_00a5:  ldc.i4.0
      IL_00a6:  stloc.s    V_5
      IL_00a8:  ldarg.0
      IL_00a9:  volatile.
      IL_00ab:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b0:  stloc.s    V_6
      IL_00b2:  ldloc.s    V_6
      IL_00b4:  brtrue     IL_00cb

      IL_00b9:  ldarg.0
      IL_00ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00bf:  stloc.s    V_5
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c9:  stloc.s    V_6
      IL_00cb:  ldloc.s    V_6
      IL_00cd:  ldc.i4.0
      IL_00ce:  ceq
      IL_00d0:  brfalse    IL_00e4

      IL_00d5:  ldloc.s    V_5
      IL_00d7:  brfalse    IL_00e4

      IL_00dc:  ldc.i4.m1
      IL_00dd:  stloc.s    V_4
      IL_00df:  br         IL_037d

      IL_00e4:  ldloc.s    V_6
      IL_00e6:  stloc.s    V_4
      IL_00e8:  br         IL_037d

      IL_00ed:  ldc.i4.0
      IL_00ee:  stloc.s    V_7
      IL_00f0:  ldarg.0
      IL_00f1:  volatile.
      IL_00f3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00f8:  stloc.s    V_8
      IL_00fa:  ldloc.s    V_8
      IL_00fc:  brtrue     IL_0113

      IL_0101:  ldarg.0
      IL_0102:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0107:  stloc.s    V_7
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0111:  stloc.s    V_8
      IL_0113:  ldloc.s    V_8
      IL_0115:  ldc.i4.0
      IL_0116:  ceq
      IL_0118:  brfalse    IL_012c

      IL_011d:  ldloc.s    V_7
      IL_011f:  brfalse    IL_012c

      IL_0124:  ldc.i4.m1
      IL_0125:  stloc.s    V_4
      IL_0127:  br         IL_037d

      IL_012c:  ldloc.s    V_8
      IL_012e:  stloc.s    V_4
      IL_0130:  br         IL_037d

      IL_0135:  ldc.i4.0
      IL_0136:  stloc.s    V_9
      IL_0138:  ldarg.0
      IL_0139:  volatile.
      IL_013b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0140:  stloc.s    V_10
      IL_0142:  ldloc.s    V_10
      IL_0144:  brtrue     IL_015b

      IL_0149:  ldarg.0
      IL_014a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_014f:  stloc.s    V_9
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0159:  stloc.s    V_10
      IL_015b:  ldloc.s    V_10
      IL_015d:  ldc.i4.0
      IL_015e:  ceq
      IL_0160:  brfalse    IL_0174

      IL_0165:  ldloc.s    V_9
      IL_0167:  brfalse    IL_0174

      IL_016c:  ldc.i4.m1
      IL_016d:  stloc.s    V_4
      IL_016f:  br         IL_037d

      IL_0174:  ldloc.s    V_10
      IL_0176:  stloc.s    V_4
      IL_0178:  br         IL_037d

      IL_017d:  ldc.i4.0
      IL_017e:  stloc.s    V_11
      IL_0180:  ldarg.0
      IL_0181:  volatile.
      IL_0183:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0188:  stloc.s    V_12
      IL_018a:  ldloc.s    V_12
      IL_018c:  brtrue     IL_01a3

      IL_0191:  ldarg.0
      IL_0192:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0197:  stloc.s    V_11
      IL_0199:  ldarg.0
      IL_019a:  volatile.
      IL_019c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01a1:  stloc.s    V_12
      IL_01a3:  ldloc.s    V_12
      IL_01a5:  ldc.i4.0
      IL_01a6:  ceq
      IL_01a8:  brfalse    IL_01bc

      IL_01ad:  ldloc.s    V_11
      IL_01af:  brfalse    IL_01bc

      IL_01b4:  ldc.i4.m1
      IL_01b5:  stloc.s    V_4
      IL_01b7:  br         IL_037d

      IL_01bc:  ldloc.s    V_12
      IL_01be:  stloc.s    V_4
      IL_01c0:  br         IL_037d

      IL_01c5:  ldc.i4.0
      IL_01c6:  stloc.s    V_13
      IL_01c8:  ldarg.0
      IL_01c9:  volatile.
      IL_01cb:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01d0:  stloc.s    V_14
      IL_01d2:  ldloc.s    V_14
      IL_01d4:  brtrue     IL_01eb

      IL_01d9:  ldarg.0
      IL_01da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01df:  stloc.s    V_13
      IL_01e1:  ldarg.0
      IL_01e2:  volatile.
      IL_01e4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01e9:  stloc.s    V_14
      IL_01eb:  ldloc.s    V_14
      IL_01ed:  ldc.i4.0
      IL_01ee:  ceq
      IL_01f0:  brfalse    IL_0204

      IL_01f5:  ldloc.s    V_13
      IL_01f7:  brfalse    IL_0204

      IL_01fc:  ldc.i4.m1
      IL_01fd:  stloc.s    V_4
      IL_01ff:  br         IL_037d

      IL_0204:  ldloc.s    V_14
      IL_0206:  stloc.s    V_4
      IL_0208:  br         IL_037d

      IL_020d:  ldc.i4.0
      IL_020e:  stloc.s    V_15
      IL_0210:  ldarg.0
      IL_0211:  volatile.
      IL_0213:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0218:  stloc.s    V_16
      IL_021a:  ldloc.s    V_16
      IL_021c:  brtrue     IL_0233

      IL_0221:  ldarg.0
      IL_0222:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0227:  stloc.s    V_15
      IL_0229:  ldarg.0
      IL_022a:  volatile.
      IL_022c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0231:  stloc.s    V_16
      IL_0233:  ldloc.s    V_16
      IL_0235:  ldc.i4.0
      IL_0236:  ceq
      IL_0238:  brfalse    IL_024c

      IL_023d:  ldloc.s    V_15
      IL_023f:  brfalse    IL_024c

      IL_0244:  ldc.i4.m1
      IL_0245:  stloc.s    V_4
      IL_0247:  br         IL_037d

      IL_024c:  ldloc.s    V_16
      IL_024e:  stloc.s    V_4
      IL_0250:  br         IL_037d

      IL_0255:  ldc.i4.0
      IL_0256:  stloc.s    V_17
      IL_0258:  ldarg.0
      IL_0259:  volatile.
      IL_025b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0260:  stloc.s    V_18
      IL_0262:  ldloc.s    V_18
      IL_0264:  brtrue     IL_027b

      IL_0269:  ldarg.0
      IL_026a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_026f:  stloc.s    V_17
      IL_0271:  ldarg.0
      IL_0272:  volatile.
      IL_0274:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0279:  stloc.s    V_18
      IL_027b:  ldloc.s    V_18
      IL_027d:  ldc.i4.0
      IL_027e:  ceq
      IL_0280:  brfalse    IL_0294

      IL_0285:  ldloc.s    V_17
      IL_0287:  brfalse    IL_0294

      IL_028c:  ldc.i4.m1
      IL_028d:  stloc.s    V_4
      IL_028f:  br         IL_037d

      IL_0294:  ldloc.s    V_18
      IL_0296:  stloc.s    V_4
      IL_0298:  br         IL_037d

      IL_029d:  ldc.i4.0
      IL_029e:  stloc.s    V_19
      IL_02a0:  ldarg.0
      IL_02a1:  volatile.
      IL_02a3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02a8:  stloc.s    V_20
      IL_02aa:  ldloc.s    V_20
      IL_02ac:  brtrue     IL_02c3

      IL_02b1:  ldarg.0
      IL_02b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b7:  stloc.s    V_19
      IL_02b9:  ldarg.0
      IL_02ba:  volatile.
      IL_02bc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02c1:  stloc.s    V_20
      IL_02c3:  ldloc.s    V_20
      IL_02c5:  ldc.i4.0
      IL_02c6:  ceq
      IL_02c8:  brfalse    IL_02dc

      IL_02cd:  ldloc.s    V_19
      IL_02cf:  brfalse    IL_02dc

      IL_02d4:  ldc.i4.m1
      IL_02d5:  stloc.s    V_4
      IL_02d7:  br         IL_037d

      IL_02dc:  ldloc.s    V_20
      IL_02de:  stloc.s    V_4
      IL_02e0:  br         IL_037d

      IL_02e5:  ldc.i4.0
      IL_02e6:  stloc.s    V_21
      IL_02e8:  ldarg.0
      IL_02e9:  volatile.
      IL_02eb:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02f0:  stloc.s    V_22
      IL_02f2:  ldloc.s    V_22
      IL_02f4:  brtrue     IL_030b

      IL_02f9:  ldarg.0
      IL_02fa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02ff:  stloc.s    V_21
      IL_0301:  ldarg.0
      IL_0302:  volatile.
      IL_0304:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0309:  stloc.s    V_22
      IL_030b:  ldloc.s    V_22
      IL_030d:  ldc.i4.0
      IL_030e:  ceq
      IL_0310:  brfalse    IL_0324

      IL_0315:  ldloc.s    V_21
      IL_0317:  brfalse    IL_0324

      IL_031c:  ldc.i4.m1
      IL_031d:  stloc.s    V_4
      IL_031f:  br         IL_037d

      IL_0324:  ldloc.s    V_22
      IL_0326:  stloc.s    V_4
      IL_0328:  br         IL_037d

      IL_032d:  ldc.i4.0
      IL_032e:  stloc.s    V_23
      IL_0330:  ldarg.0
      IL_0331:  volatile.
      IL_0333:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0338:  stloc.s    V_24
      IL_033a:  ldloc.s    V_24
      IL_033c:  brtrue     IL_0353

      IL_0341:  ldarg.0
      IL_0342:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0347:  stloc.s    V_23
      IL_0349:  ldarg.0
      IL_034a:  volatile.
      IL_034c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0351:  stloc.s    V_24
      IL_0353:  ldloc.s    V_24
      IL_0355:  ldc.i4.0
      IL_0356:  ceq
      IL_0358:  brfalse    IL_036c

      IL_035d:  ldloc.s    V_23
      IL_035f:  brfalse    IL_036c

      IL_0364:  ldc.i4.m1
      IL_0365:  stloc.s    V_4
      IL_0367:  br         IL_037d

      IL_036c:  ldloc.s    V_24
      IL_036e:  stloc.s    V_4
      IL_0370:  br         IL_037d

      IL_0375:  ldc.i4.m1
      IL_0376:  stloc.s    V_4
      IL_0378:  br         IL_037d

      IL_037d:  ldloc.s    V_4
      IL_037f:  stloc.s    V_25
      IL_0381:  ldloc.s    V_4
      IL_0383:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.DiskDeviceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetDeviceName0$PST06000309() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetDeviceName0

    .method privatescope instance void  MarshallDeliverGetDeviceName0$PST0600030A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetDeviceName0$PST06000309()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetDeviceNamePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetDeviceName0

    .method privatescope instance void  DeliverGetStartSector0$PST0600030B() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetStartSector0

    .method privatescope instance void  MarshallDeliverGetStartSector0$PST0600030C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetStartSector0$PST0600030B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetStartSectorPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector::MarshallAll(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetStartSector0

    .method privatescope instance void  DeliverGetSectorCount0$PST0600030D() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetSectorCount0

    .method privatescope instance void  MarshallDeliverGetSectorCount0$PST0600030E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetSectorCount0$PST0600030D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetSectorCountPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount::MarshallAll(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetSectorCount0

    .method privatescope instance void  DeliverGetSystemId0$PST0600030F() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   9
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   9
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetSystemId0

    .method privatescope instance void  MarshallDeliverGetSystemId0$PST06000310(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetSystemId0$PST0600030F()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetSystemIdPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetSystemId0

    .method privatescope instance void  DeliverGetDiskAttributes0$PST06000311() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverGetDiskAttributes0

    .method privatescope instance void  MarshallDeliverGetDiskAttributes0$PST06000312(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverGetDiskAttributes0$PST06000311()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes Microsoft.Singularity.Io.DiskDeviceContract/Exp::GetDiskAttributesPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetDiskAttributes0

    .method privatescope instance void  DeliverRead0$PST06000313(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                 uint64 offset,
                                                                 uint64 length,
                                                                 uint64 sectorId) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       68 (0x44)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Read::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Read::length
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_002a:  ldarg.s    sectorId
      IL_002c:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Read::sectorId
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.s   14
      IL_0034:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.s   14
      IL_003c:  volatile.
      IL_003e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0043:  ret
    } // end of method Exp::DeliverRead0

    .method privatescope instance void  MarshallDeliverRead0$PST06000314(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                         uint64 offset,
                                                                         uint64 length,
                                                                         uint64 sectorId,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    sectorId
      IL_0006:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverRead0$PST06000313(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                   uint64,
                                                                                                                   uint64,
                                                                                                                   uint64)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Read::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverRead0

    .method privatescope instance void  DeliverWrite0$PST06000315(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                  uint64 offset,
                                                                  uint64 length,
                                                                  uint64 sectorId) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       68 (0x44)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Write::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Write::length
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_002a:  ldarg.s    sectorId
      IL_002c:  stfld      uint64 Microsoft.Singularity.Io.DiskDeviceContract/Write::sectorId
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.s   17
      IL_0034:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.s   17
      IL_003c:  volatile.
      IL_003e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0043:  ret
    } // end of method Exp::DeliverWrite0

    .method privatescope instance void  MarshallDeliverWrite0$PST06000316(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                          uint64 offset,
                                                                          uint64 length,
                                                                          uint64 sectorId,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    sectorId
      IL_0006:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverWrite0$PST06000315(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                    uint64,
                                                                                                                    uint64,
                                                                                                                    uint64)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write Microsoft.Singularity.Io.DiskDeviceContract/Exp::WritePod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Write::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverWrite0

    .method privatescope instance void  DeliverNoOp0$PST06000317() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   20
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   20
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverNoOp0

    .method privatescope instance void  MarshallDeliverNoOp0$PST06000318(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverNoOp0$PST06000317()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp Microsoft.Singularity.Io.DiskDeviceContract/Exp::NoOpPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NoOp::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverNoOp0

    .method privatescope instance void  DeliverReadPerf0$PST06000319(int32 numMB,
                                                                     int32 chunkSize) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPerfPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf::numMB
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPerfPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf::chunkSize
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   22
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   22
      IL_0023:  volatile.
      IL_0025:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverReadPerf0

    .method privatescope instance void  MarshallDeliverReadPerf0$PST0600031A(int32 numMB,
                                                                             int32 chunkSize,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::DeliverReadPerf0$PST06000319(int32,
                                                                                                                       int32)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf Microsoft.Singularity.Io.DiskDeviceContract/Exp::ReadPerfPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverReadPerf0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname GetDeviceName
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDeviceName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDeviceName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method GetDeviceName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetDeviceName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Release

  } // end of class GetDeviceName

  .class sequential ansi sealed nested public specialname AckGetDeviceName
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckGetDeviceName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetDeviceName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetDeviceName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*,
                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method AckGetDeviceName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetDeviceName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckGetDeviceName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName::data
      IL_001a:  ret
    } // end of method AckGetDeviceName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::Release

  } // end of class AckGetDeviceName

  .class sequential ansi sealed nested public specialname GetStartSector
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetStartSector::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetStartSector::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector::MarshallContent(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method GetStartSector::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetStartSector::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStartSector::Release

  } // end of class GetStartSector

  .class sequential ansi sealed nested public specialname AckGetStartSector
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint64 startSector
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetStartSector::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetStartSector::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method AckGetStartSector::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetStartSector::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetStartSector::Release

  } // end of class AckGetStartSector

  .class sequential ansi sealed nested public specialname GetSectorCount
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetSectorCount::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetSectorCount::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount::MarshallContent(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method GetSectorCount::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetSectorCount::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSectorCount::Release

  } // end of class GetSectorCount

  .class sequential ansi sealed nested public specialname AckGetSectorCount
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint64 sectorCount
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetSectorCount::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetSectorCount::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method AckGetSectorCount::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetSectorCount::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetSectorCount::Release

  } // end of class AckGetSectorCount

  .class sequential ansi sealed nested public specialname GetSystemId
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetSystemId::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetSystemId::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method GetSystemId::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetSystemId::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetSystemId::Release

  } // end of class GetSystemId

  .class sequential ansi sealed nested public specialname SystemId
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8 systemId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SystemId::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SystemId::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/SystemId
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/SystemId::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method SystemId::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SystemId::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SystemId::Release

  } // end of class SystemId

  .class sequential ansi sealed nested public specialname NoSystemId
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoSystemId::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoSystemId::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NoSystemId::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoSystemId::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoSystemId::Release

  } // end of class NoSystemId

  .class sequential ansi sealed nested public specialname GetDiskAttributes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDiskAttributes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDiskAttributes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method GetDiskAttributes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetDiskAttributes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDiskAttributes::Release

  } // end of class GetDiskAttributes

  .class sequential ansi sealed nested public specialname AckGetDiskAttributes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Io.DiskAttributes 'flags'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetDiskAttributes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetDiskAttributes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method AckGetDiskAttributes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetDiskAttributes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDiskAttributes::Release

  } // end of class AckGetDiskAttributes

  .class sequential ansi sealed nested public specialname Read
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .field public uint64 offset
    .field public uint64 length
    .field public uint64 sectorId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Read::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Read
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Read::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Read::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Read::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Read::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Read::data
      IL_001a:  ret
    } // end of method Read::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Release

  } // end of class Read

  .class sequential ansi sealed nested public specialname AckRead
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckRead
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckRead::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method AckRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckRead::data
      IL_001a:  ret
    } // end of method AckRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Release

  } // end of class AckRead

  .class sequential ansi sealed nested public specialname NakRead
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/NakRead
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NakRead::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method NakRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Release

  } // end of class NakRead

  .class sequential ansi sealed nested public specialname Write
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .field public uint64 offset
    .field public uint64 length
    .field public uint64 sectorId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Write
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Write::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/Write::data
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname AckWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.DiskDeviceContract/AckWrite::data
      IL_001a:  ret
    } // end of method AckWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Release

  } // end of class AckWrite

  .class sequential ansi sealed nested public specialname NakWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/NakWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NakWrite::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NakWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Release

  } // end of class NakWrite

  .class sequential ansi sealed nested public specialname NoOp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoOp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoOp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/NoOp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/NoOp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method NoOp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoOp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Release

  } // end of class NoOp

  .class sequential ansi sealed nested public specialname AckNoOp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNoOp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNoOp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method AckNoOp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckNoOp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Release

  } // end of class AckNoOp

  .class sequential ansi sealed nested public specialname ReadPerf
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 numMB
    .field public int32 chunkSize
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ReadPerf::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ReadPerf::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method ReadPerf::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ReadPerf::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadPerf::Release

  } // end of class ReadPerf

  .class sequential ansi sealed nested public specialname AckReadPerf
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int64 cycles
    .field public int64 ticks
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckReadPerf::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckReadPerf::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method AckReadPerf::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckReadPerf::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckReadPerf::Release

  } // end of class AckReadPerf

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Success::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoGetDeviceName 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDeviceName msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoGetDiskAttributes 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetDiskAttributes msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoGetStartSector 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetStartSector msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoGetSectorCount 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSectorCount msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoGetSystemId 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/GetSystemId msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoRead 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Read msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoWrite 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Write msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoNoOp 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoOp msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/DoReadPerf 
            Recv(valuetype Microsoft.Singularity.Io.DiskDeviceContract/ReadPerf msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname DoGetDeviceName
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDeviceName msg) cil managed
    {
    } // end of method DoGetDeviceName::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoGetDeviceName::.ctor

  } // end of class DoGetDeviceName

  .class abstract auto ansi nested public specialname DoGetDiskAttributes
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetDiskAttributes msg) cil managed
    {
    } // end of method DoGetDiskAttributes::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoGetDiskAttributes::.ctor

  } // end of class DoGetDiskAttributes

  .class abstract auto ansi nested public specialname DoGetStartSector
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetStartSector msg) cil managed
    {
    } // end of method DoGetStartSector::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoGetStartSector::.ctor

  } // end of class DoGetStartSector

  .class abstract auto ansi nested public specialname DoGetSectorCount
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckGetSectorCount msg) cil managed
    {
    } // end of method DoGetSectorCount::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoGetSectorCount::.ctor

  } // end of class DoGetSectorCount

  .class abstract auto ansi nested public specialname DoGetSystemId
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/SystemId msg) cil managed
    {
    } // end of method DoGetSystemId::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/NoSystemId msg) cil managed
    {
    } // end of method DoGetSystemId::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoGetSystemId::.ctor

  } // end of class DoGetSystemId

  .class abstract auto ansi nested public specialname DoRead
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckRead msg) cil managed
    {
    } // end of method DoRead::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakRead msg) cil managed
    {
    } // end of method DoRead::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoRead::.ctor

  } // end of class DoRead

  .class abstract auto ansi nested public specialname DoReadPerf
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckReadPerf msg) cil managed
    {
    } // end of method DoReadPerf::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoReadPerf::.ctor

  } // end of class DoReadPerf

  .class abstract auto ansi nested public specialname DoWrite
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckWrite msg) cil managed
    {
    } // end of method DoWrite::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/NakWrite msg) cil managed
    {
    } // end of method DoWrite::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoWrite::.ctor

  } // end of class DoWrite

  .class abstract auto ansi nested public specialname DoNoOp
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.DiskDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.DiskDeviceContract/AckNoOp msg) cil managed
    {
    } // end of method DoNoOp::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoNoOp::.ctor

  } // end of class DoNoOp

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::'.ctor$PST0600029F'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DiskDeviceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.DiskDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Imp::'.ctor$PST0600029F'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DiskDeviceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract::.ctor()
    IL_0006:  ret
  } // end of method DiskDeviceContract::.ctor

  .method privatescope static int32  StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Io.DiskDeviceContract::StableState$PST0600000E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method DiskDeviceContract::StableState

  .method privatescope static int32  CanonicalState$PST0600000F(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method DiskDeviceContract::CanonicalState

} // end of class Microsoft.Singularity.Io.DiskDeviceContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.KeyboardDeviceContract
       extends Microsoft.Singularity.Io.DeviceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000008)
    .field public static literal specialname int32 GetKey = int32(0x00000003)
    .field public static literal specialname int32 PollKey = int32(0x00000004)
    .field public static literal specialname int32 AckKey = int32(0x00000005)
    .field public static literal specialname int32 NakKey = int32(0x00000006)
    .field public static literal specialname int32 Success = int32(0x00000007)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey AckKeyPod0
    .field family valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey NakKeyPod0
    .field family valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600042E'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::CanonicalState$PST06000014(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::CanonicalState$PST06000014(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Ready"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "Ready$0"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Ready$1"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "Waiting"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "Start"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "DoneState"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendGetKey() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::DeliverGetKey0$PST06000462()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::MarshallDeliverGetKey0$PST06000463(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send GetKey in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendGetKey

    .method public instance void  SendPollKey() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::DeliverPollKey0$PST06000464()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::MarshallDeliverPollKey0$PST06000465(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send PollKey in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendPollKey

    .method public instance void  RecvAckKey([out] uint32& key) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       381 (0x17d)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_00c0

      IL_001a:  br         IL_0166

      IL_001f:  ldc.i4.0
      IL_0020:  stloc.1
      IL_0021:  ldarg.0
      IL_0022:  volatile.
      IL_0024:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  brtrue     IL_0040

      IL_0030:  ldarg.0
      IL_0031:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0036:  stloc.1
      IL_0037:  ldarg.0
      IL_0038:  volatile.
      IL_003a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  ldc.i4.0
      IL_0042:  ceq
      IL_0044:  brfalse    IL_0062

      IL_0049:  ldloc.1
      IL_004a:  brfalse    IL_005a

      IL_004f:  ldstr      "Peer is closed"
      IL_0054:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0059:  throw

      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0060:  br.s       IL_001f

      IL_0062:  ldarg.0
      IL_0063:  ldc.i4.5
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0069:  ldloc.2
      IL_006a:  ldc.i4.5
      IL_006b:  beq        IL_008d

      IL_0070:  ldstr      "can't recv AckKey when next message has tag "
      IL_0075:  ldarg.0
      IL_0076:  volatile.
      IL_0078:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_007d:  box        [Corlib]System.Int32
      IL_0082:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0087:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_008c:  throw

      IL_008d:  ldarg.1
      IL_008e:  ldarg.0
      IL_008f:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::AckKeyPod0
      IL_0094:  ldfld      uint32 Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey::key
      IL_0099:  stind.i4
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::AckKeyPod0
      IL_00a9:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.5
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_017c

      IL_00c0:  ldc.i4.0
      IL_00c1:  stloc.3
      IL_00c2:  ldarg.0
      IL_00c3:  volatile.
      IL_00c5:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00ca:  stloc.s    V_4
      IL_00cc:  ldloc.s    V_4
      IL_00ce:  brtrue     IL_00e4

      IL_00d3:  ldarg.0
      IL_00d4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d9:  stloc.3
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00e2:  stloc.s    V_4
      IL_00e4:  ldloc.s    V_4
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_0107

      IL_00ee:  ldloc.3
      IL_00ef:  brfalse    IL_00ff

      IL_00f4:  ldstr      "Peer is closed"
      IL_00f9:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00fe:  throw

      IL_00ff:  ldarg.0
      IL_0100:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0105:  br.s       IL_00c0

      IL_0107:  ldarg.0
      IL_0108:  ldc.i4.5
      IL_0109:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_010e:  ldloc.s    V_4
      IL_0110:  ldc.i4.5
      IL_0111:  beq        IL_0133

      IL_0116:  ldstr      "can't recv AckKey when next message has tag "
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0123:  box        [Corlib]System.Int32
      IL_0128:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_012d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0132:  throw

      IL_0133:  ldarg.1
      IL_0134:  ldarg.0
      IL_0135:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::AckKeyPod0
      IL_013a:  ldfld      uint32 Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey::key
      IL_013f:  stind.i4
      IL_0140:  ldarg.0
      IL_0141:  ldc.i4.0
      IL_0142:  volatile.
      IL_0144:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0149:  ldarg.0
      IL_014a:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::AckKeyPod0
      IL_014f:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey
      IL_0155:  ldarg.0
      IL_0156:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015b:  ldc.i4.7
      IL_015c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0161:  br         IL_017c

      IL_0166:  ldstr      "can't recv AckKey in state "
      IL_016b:  ldarg.0
      IL_016c:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::CurrentState()
      IL_0171:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0176:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_017b:  throw

      IL_017c:  ret
    } // end of method Imp::RecvAckKey

    .method public instance void  RecvNakKey() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       355 (0x163)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_00b3

      IL_001a:  br         IL_014c

      IL_001f:  ldc.i4.0
      IL_0020:  stloc.1
      IL_0021:  ldarg.0
      IL_0022:  volatile.
      IL_0024:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  brtrue     IL_0040

      IL_0030:  ldarg.0
      IL_0031:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0036:  stloc.1
      IL_0037:  ldarg.0
      IL_0038:  volatile.
      IL_003a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  ldc.i4.0
      IL_0042:  ceq
      IL_0044:  brfalse    IL_0062

      IL_0049:  ldloc.1
      IL_004a:  brfalse    IL_005a

      IL_004f:  ldstr      "Peer is closed"
      IL_0054:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0059:  throw

      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0060:  br.s       IL_001f

      IL_0062:  ldarg.0
      IL_0063:  ldc.i4.6
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0069:  ldloc.2
      IL_006a:  ldc.i4.6
      IL_006b:  beq        IL_008d

      IL_0070:  ldstr      "can't recv NakKey when next message has tag "
      IL_0075:  ldarg.0
      IL_0076:  volatile.
      IL_0078:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_007d:  box        [Corlib]System.Int32
      IL_0082:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0087:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_008c:  throw

      IL_008d:  ldarg.0
      IL_008e:  ldc.i4.0
      IL_008f:  volatile.
      IL_0091:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::NakKeyPod0
      IL_009c:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a8:  ldc.i4.5
      IL_00a9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ae:  br         IL_0162

      IL_00b3:  ldc.i4.0
      IL_00b4:  stloc.3
      IL_00b5:  ldarg.0
      IL_00b6:  volatile.
      IL_00b8:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00bd:  stloc.s    V_4
      IL_00bf:  ldloc.s    V_4
      IL_00c1:  brtrue     IL_00d7

      IL_00c6:  ldarg.0
      IL_00c7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00cc:  stloc.3
      IL_00cd:  ldarg.0
      IL_00ce:  volatile.
      IL_00d0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00d5:  stloc.s    V_4
      IL_00d7:  ldloc.s    V_4
      IL_00d9:  ldc.i4.0
      IL_00da:  ceq
      IL_00dc:  brfalse    IL_00fa

      IL_00e1:  ldloc.3
      IL_00e2:  brfalse    IL_00f2

      IL_00e7:  ldstr      "Peer is closed"
      IL_00ec:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00f1:  throw

      IL_00f2:  ldarg.0
      IL_00f3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00f8:  br.s       IL_00b3

      IL_00fa:  ldarg.0
      IL_00fb:  ldc.i4.6
      IL_00fc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0101:  ldloc.s    V_4
      IL_0103:  ldc.i4.6
      IL_0104:  beq        IL_0126

      IL_0109:  ldstr      "can't recv NakKey when next message has tag "
      IL_010e:  ldarg.0
      IL_010f:  volatile.
      IL_0111:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0116:  box        [Corlib]System.Int32
      IL_011b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0120:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0125:  throw

      IL_0126:  ldarg.0
      IL_0127:  ldc.i4.0
      IL_0128:  volatile.
      IL_012a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_012f:  ldarg.0
      IL_0130:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::NakKeyPod0
      IL_0135:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey
      IL_013b:  ldarg.0
      IL_013c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0141:  ldc.i4.7
      IL_0142:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0147:  br         IL_0162

      IL_014c:  ldstr      "can't recv NakKey in state "
      IL_0151:  ldarg.0
      IL_0152:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::CurrentState()
      IL_0157:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_015c:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0161:  throw

      IL_0162:  ret
    } // end of method Imp::RecvNakKey

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Success when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::SuccessPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/Success
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.7
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Success in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.KeyboardDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.KeyboardDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.KeyboardDeviceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       342 (0x156)
      .maxstack  7
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               int32 V_11)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_002f

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_006f

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00b7

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.3
      IL_0025:  beq        IL_00ff

      IL_002a:  br         IL_0147

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.2
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.2
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0067

      IL_0059:  ldloc.2
      IL_005a:  brfalse    IL_0067

      IL_005f:  ldc.i4.m1
      IL_0060:  stloc.s    V_4
      IL_0062:  br         IL_014f

      IL_0067:  ldloc.3
      IL_0068:  stloc.s    V_4
      IL_006a:  br         IL_014f

      IL_006f:  ldc.i4.0
      IL_0070:  stloc.s    V_5
      IL_0072:  ldarg.0
      IL_0073:  volatile.
      IL_0075:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  brtrue     IL_0095

      IL_0083:  ldarg.0
      IL_0084:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  ldc.i4.0
      IL_0098:  ceq
      IL_009a:  brfalse    IL_00ae

      IL_009f:  ldloc.s    V_5
      IL_00a1:  brfalse    IL_00ae

      IL_00a6:  ldc.i4.m1
      IL_00a7:  stloc.s    V_4
      IL_00a9:  br         IL_014f

      IL_00ae:  ldloc.s    V_6
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_014f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_7
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_8
      IL_00c4:  ldloc.s    V_8
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_7
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_014f

      IL_00f6:  ldloc.s    V_8
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_014f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_9
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_010a:  stloc.s    V_10
      IL_010c:  ldloc.s    V_10
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_9
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_014f

      IL_013e:  ldloc.s    V_10
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_014f

      IL_0147:  ldc.i4.m1
      IL_0148:  stloc.s    V_4
      IL_014a:  br         IL_014f

      IL_014f:  ldloc.s    V_4
      IL_0151:  stloc.s    V_11
      IL_0153:  ldloc.s    V_4
      IL_0155:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckKey0$PST06000444(uint32 key) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::AckKeyPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint32 Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey::key
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckKey0

    .method privatescope instance void  MarshallDeliverAckKey0$PST06000445(uint32 key,
                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverAckKey0$PST06000444(uint32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::AckKeyPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckKey0

    .method privatescope instance void  DeliverNakKey0$PST06000446() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakKey0

    .method privatescope instance void  MarshallDeliverNakKey0$PST06000447(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverNakKey0$PST06000446()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::NakKeyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakKey0

    .method privatescope instance void  DeliverSuccess0$PST06000448() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000449(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverSuccess0$PST06000448()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Success::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST0600044A() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST0600044B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverContractNotSupported0$PST0600044A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Io.DeviceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey GetKeyPod0
    .field family valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey PollKeyPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::CanonicalState$PST06000014(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::CanonicalState$PST06000014(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Ready"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "Ready$0"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Ready$1"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "Waiting"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "Start"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "DoneState"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvGetKey() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetKey when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::GetKeyPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv GetKey in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvGetKey

    .method public instance void  RecvPollKey() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv PollKey when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::PollKeyPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv PollKey in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvPollKey

    .method public instance void  SendAckKey(uint32 key) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       217 (0xd9)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_006d

      IL_001a:  br         IL_00c2

      IL_001f:  ldarg.0
      IL_0020:  ldloca.s   V_1
      IL_0022:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0027:  stloc.2
      IL_0028:  ldloc.2
      IL_0029:  stloc.3
      IL_002a:  ldloc.3
      IL_002b:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0030:  stloc.s    V_4
      IL_0032:  ldloc.1
      IL_0033:  brtrue     IL_0049

      IL_0038:  ldloc.3
      IL_0039:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_003e:  ldarg.1
      IL_003f:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverAckKey0$PST06000444(uint32)
      IL_0044:  br         IL_0056

      IL_0049:  ldloc.3
      IL_004a:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_004f:  ldarg.1
      IL_0050:  ldarg.0
      IL_0051:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallDeliverAckKey0$PST06000445(uint32,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0056:  ldarg.0
      IL_0057:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005c:  ldarg.0
      IL_005d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0062:  ldc.i4.5
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0068:  br         IL_00d8

      IL_006d:  ldarg.0
      IL_006e:  ldloca.s   V_5
      IL_0070:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0075:  stloc.s    V_6
      IL_0077:  ldloc.s    V_6
      IL_0079:  stloc.s    V_7
      IL_007b:  ldloc.s    V_7
      IL_007d:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0082:  stloc.s    V_8
      IL_0084:  ldloc.s    V_5
      IL_0086:  brtrue     IL_009d

      IL_008b:  ldloc.s    V_7
      IL_008d:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0092:  ldarg.1
      IL_0093:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverAckKey0$PST06000444(uint32)
      IL_0098:  br         IL_00ab

      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_00a4:  ldarg.1
      IL_00a5:  ldarg.0
      IL_00a6:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallDeliverAckKey0$PST06000445(uint32,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ab:  ldarg.0
      IL_00ac:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b1:  ldarg.0
      IL_00b2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b7:  ldc.i4.7
      IL_00b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bd:  br         IL_00d8

      IL_00c2:  ldstr      "can't send AckKey in state "
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::CurrentState()
      IL_00cd:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d2:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d7:  throw

      IL_00d8:  ret
    } // end of method Exp::SendAckKey

    .method public instance void  SendNakKey() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       213 (0xd5)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.4
      IL_0015:  beq        IL_006b

      IL_001a:  br         IL_00be

      IL_001f:  ldarg.0
      IL_0020:  ldloca.s   V_1
      IL_0022:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0027:  stloc.2
      IL_0028:  ldloc.2
      IL_0029:  stloc.3
      IL_002a:  ldloc.3
      IL_002b:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0030:  stloc.s    V_4
      IL_0032:  ldloc.1
      IL_0033:  brtrue     IL_0048

      IL_0038:  ldloc.3
      IL_0039:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_003e:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverNakKey0$PST06000446()
      IL_0043:  br         IL_0054

      IL_0048:  ldloc.3
      IL_0049:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_004e:  ldarg.0
      IL_004f:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallDeliverNakKey0$PST06000447(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005a:  ldarg.0
      IL_005b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0060:  ldc.i4.5
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0066:  br         IL_00d4

      IL_006b:  ldarg.0
      IL_006c:  ldloca.s   V_5
      IL_006e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  stloc.s    V_7
      IL_0079:  ldloc.s    V_7
      IL_007b:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0080:  stloc.s    V_8
      IL_0082:  ldloc.s    V_5
      IL_0084:  brtrue     IL_009a

      IL_0089:  ldloc.s    V_7
      IL_008b:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0090:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverNakKey0$PST06000446()
      IL_0095:  br         IL_00a7

      IL_009a:  ldloc.s    V_7
      IL_009c:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_00a1:  ldarg.0
      IL_00a2:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallDeliverNakKey0$PST06000447(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a7:  ldarg.0
      IL_00a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.7
      IL_00b4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b9:  br         IL_00d4

      IL_00be:  ldstr      "can't send NakKey in state "
      IL_00c3:  ldarg.0
      IL_00c4:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::CurrentState()
      IL_00c9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00ce:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d3:  throw

      IL_00d4:  ret
    } // end of method Exp::SendNakKey

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverSuccess0$PST06000448()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallDeliverSuccess0$PST06000449(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.7
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Success in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::DeliverContractNotSupported0$PST0600044A()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::MarshallDeliverContractNotSupported0$PST0600044B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.KeyboardDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.KeyboardDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.KeyboardDeviceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       342 (0x156)
      .maxstack  7
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               int32 V_11)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_002f

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_006f

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00b7

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.3
      IL_0025:  beq        IL_00ff

      IL_002a:  br         IL_0147

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.2
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.2
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0067

      IL_0059:  ldloc.2
      IL_005a:  brfalse    IL_0067

      IL_005f:  ldc.i4.m1
      IL_0060:  stloc.s    V_4
      IL_0062:  br         IL_014f

      IL_0067:  ldloc.3
      IL_0068:  stloc.s    V_4
      IL_006a:  br         IL_014f

      IL_006f:  ldc.i4.0
      IL_0070:  stloc.s    V_5
      IL_0072:  ldarg.0
      IL_0073:  volatile.
      IL_0075:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  brtrue     IL_0095

      IL_0083:  ldarg.0
      IL_0084:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  ldc.i4.0
      IL_0098:  ceq
      IL_009a:  brfalse    IL_00ae

      IL_009f:  ldloc.s    V_5
      IL_00a1:  brfalse    IL_00ae

      IL_00a6:  ldc.i4.m1
      IL_00a7:  stloc.s    V_4
      IL_00a9:  br         IL_014f

      IL_00ae:  ldloc.s    V_6
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_014f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_7
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c2:  stloc.s    V_8
      IL_00c4:  ldloc.s    V_8
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_7
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_014f

      IL_00f6:  ldloc.s    V_8
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_014f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_9
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_010a:  stloc.s    V_10
      IL_010c:  ldloc.s    V_10
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_9
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_014f

      IL_013e:  ldloc.s    V_10
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_014f

      IL_0147:  ldc.i4.m1
      IL_0148:  stloc.s    V_4
      IL_014a:  br         IL_014f

      IL_014f:  ldloc.s    V_4
      IL_0151:  stloc.s    V_11
      IL_0153:  ldloc.s    V_4
      IL_0155:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetKey0$PST06000462() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetKey0

    .method privatescope instance void  MarshallDeliverGetKey0$PST06000463(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::DeliverGetKey0$PST06000462()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::GetKeyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetKey0

    .method privatescope instance void  DeliverPollKey0$PST06000464() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverPollKey0

    .method privatescope instance void  MarshallDeliverPollKey0$PST06000465(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::DeliverPollKey0$PST06000464()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::PollKeyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverPollKey0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname GetKey
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetKey::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetKey::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method GetKey::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetKey::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetKey::Release

  } // end of class GetKey

  .class sequential ansi sealed nested public specialname PollKey
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollKey::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PollKey::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method PollKey::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PollKey::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PollKey::Release

  } // end of class PollKey

  .class sequential ansi sealed nested public specialname AckKey
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint32 key
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckKey::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckKey::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckKey::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckKey::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckKey::Release

  } // end of class AckKey

  .class sequential ansi sealed nested public specialname NakKey
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakKey::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakKey::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakKey::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakKey::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakKey::Release

  } // end of class NakKey

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Success::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Waiting 
            Recv(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/GetKey msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/PollKey msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class abstract auto ansi nested public specialname Waiting
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/AckKey msg) cil managed
    {
    } // end of method Waiting::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.KeyboardDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/NakKey msg) cil managed
    {
    } // end of method Waiting::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Waiting::.ctor

  } // end of class Waiting

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::'.ctor$PST0600042E'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method KeyboardDeviceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.KeyboardDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.KeyboardDeviceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.KeyboardDeviceContract/Imp::'.ctor$PST0600042E'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method KeyboardDeviceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract::.ctor()
    IL_0006:  ret
  } // end of method KeyboardDeviceContract::.ctor

  .method privatescope static int32  StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  7
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.5
    IL_000b:  beq        IL_001c

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_002f

    IL_0017:  br         IL_0042

    IL_001c:  ldarg.0
    IL_001d:  ldc.i4.7
    IL_001e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0023:  ldarg.0
    IL_0024:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0029:  stloc.2
    IL_002a:  br         IL_0049

    IL_002f:  ldarg.0
    IL_0030:  ldc.i4.1
    IL_0031:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0036:  ldarg.0
    IL_0037:  call       int32 Microsoft.Singularity.Io.KeyboardDeviceContract::StableState$PST06000013(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_003c:  stloc.2
    IL_003d:  br         IL_0049

    IL_0042:  ldloc.0
    IL_0043:  stloc.2
    IL_0044:  br         IL_0049

    IL_0049:  ldloc.2
    IL_004a:  stloc.3
    IL_004b:  ldloc.2
    IL_004c:  ret
  } // end of method KeyboardDeviceContract::StableState

  .method privatescope static int32  CanonicalState$PST06000014(int32 state) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.5
    IL_0004:  beq        IL_0015

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_001c

    IL_0010:  br         IL_0023

    IL_0015:  ldc.i4.7
    IL_0016:  stloc.1
    IL_0017:  br         IL_002a

    IL_001c:  ldc.i4.1
    IL_001d:  stloc.1
    IL_001e:  br         IL_002a

    IL_0023:  ldarg.0
    IL_0024:  stloc.1
    IL_0025:  br         IL_002a

    IL_002a:  ldloc.1
    IL_002b:  stloc.2
    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method KeyboardDeviceContract::CanonicalState

} // end of class Microsoft.Singularity.Io.KeyboardDeviceContract

.class public auto ansi sealed Microsoft.Singularity.Io.Keyboard.Qualifiers
       extends [Corlib]System.Enum
{
  .custom instance void [Corlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .custom instance void [Corlib]System.CLSCompliantAttribute::.ctor(bool) = ( 01 00 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_UP = int32(0x20000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_DOWN = int32(0x10000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_MODIFIERS = int32(0x0F000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_SHIFT = int32(0x08000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_CTRL = int32(0x04000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_ALT = int32(0x02000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_WINDOWS = int32(0x01000000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_EXTENDED = int32(0x00800000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_SHIFTED = int32(0x00020000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_NUMPAD = int32(0x00010000)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_ALT_CODE = int32(0x0000FF00)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_BASE_CODE = int32(0x000000FF)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers MOUSE_ALIVE = int32(0x00000008)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers MOUSE_BUTTON_0 = int32(0x00000001)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers MOUSE_BUTTON_1 = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers MOUSE_BUTTON_2 = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers MOUSE_BUTTON_ALL = int32(0x00000007)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Qualifiers KEY_MOUSE = int32(0x40000000)
} // end of class Microsoft.Singularity.Io.Keyboard.Qualifiers

.class public auto ansi sealed Microsoft.Singularity.Io.Keyboard.Keys
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys PAGE_UP = int32(0x00000080)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys PAGE_DOWN = int32(0x00000081)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys UP_ARROW = int32(0x00000082)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys DOWN_ARROW = int32(0x00000083)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys LEFT_ARROW = int32(0x00000084)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys RIGHT_ARROW = int32(0x00000085)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys HOME = int32(0x00000086)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys END = int32(0x00000087)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys INSERT = int32(0x00000088)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys DELETE = int32(0x00000089)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys CAPS_LOCK = int32(0x00000090)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys LEFT_SHIFT = int32(0x00000091)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys RIGHT_SHIFT = int32(0x00000092)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys LEFT_CTRL = int32(0x00000093)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys RIGHT_CTRL = int32(0x00000094)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys LEFT_ALT = int32(0x00000095)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys RIGHT_ALT = int32(0x00000096)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys LEFT_WINDOWS = int32(0x00000097)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys RIGHT_WINDOWS = int32(0x00000098)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys MENU = int32(0x00000099)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys PRINT_SCRN = int32(0x0000009A)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys SCROLL_LOCK = int32(0x0000009B)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys NUM_LOCK = int32(0x0000009C)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys BREAK = int32(0x0000009D)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys SYS_REQ = int32(0x0000009E)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F1 = int32(0x000000A1)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F2 = int32(0x000000A2)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F3 = int32(0x000000A3)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F4 = int32(0x000000A4)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F5 = int32(0x000000A5)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F6 = int32(0x000000A6)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F7 = int32(0x000000A7)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F8 = int32(0x000000A8)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F9 = int32(0x000000A9)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F10 = int32(0x000000AA)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F11 = int32(0x000000AB)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys F12 = int32(0x000000AC)
  .field public static literal valuetype Microsoft.Singularity.Io.Keyboard.Keys ESCAPE = int32(0x0000001B)
} // end of class Microsoft.Singularity.Io.Keyboard.Keys

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.PnpContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x0000000B)
    .field public static literal specialname int32 Initialize = int32(0x00000002)
    .field public static literal specialname int32 AckInitialize = int32(0x00000003)
    .field public static literal specialname int32 NakInitialize = int32(0x00000004)
    .field public static literal specialname int32 Connect = int32(0x00000005)
    .field public static literal specialname int32 AckConnect = int32(0x00000006)
    .field public static literal specialname int32 NakConnect = int32(0x00000007)
    .field public static literal specialname int32 Finalize = int32(0x00000008)
    .field public static literal specialname int32 AckFinalize = int32(0x00000009)
    .field public static literal specialname int32 NakFinalize = int32(0x0000000A)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize AckInitializePod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize NakInitializePod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/AckConnect AckConnectPod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/NakConnect NakConnectPod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize AckFinalizePod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize NakFinalizePod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060004AA'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.PnpContract::CanonicalState$PST06000019(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.PnpContract::CanonicalState$PST06000019(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Start"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "DoInitialize"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Initialized"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "DoConnect"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "DoFinalize"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "End"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendInitialize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::DeliverInitialize0$PST060004E8()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::MarshallDeliverInitialize0$PST060004E9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Initialize in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendInitialize

    .method public instance void  RecvAckInitialize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckInitialize when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize Microsoft.Singularity.Io.PnpContract/Imp::AckInitializePod0
      IL_0095:  initobj    Microsoft.Singularity.Io.PnpContract/AckInitialize
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckInitialize in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckInitialize

    .method public instance void  RecvNakInitialize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakInitialize when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize Microsoft.Singularity.Io.PnpContract/Imp::NakInitializePod0
      IL_0095:  initobj    Microsoft.Singularity.Io.PnpContract/NakInitialize
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.7
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv NakInitialize in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvNakInitialize

    .method public instance void  SendConnect(valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) eDevice) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Io.DeviceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint eDevice in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Io.DeviceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.5
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ac

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0088

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Io.DeviceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_007d:  ldarg.1
      IL_007e:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::DeliverConnect0$PST060004EA(valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0083:  br         IL_0095

      IL_0088:  ldloc.3
      IL_0089:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_008e:  ldarg.1
      IL_008f:  ldarg.0
      IL_0090:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::MarshallDeliverConnect0$PST060004EB(valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0095:  ldarg.0
      IL_0096:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't send Connect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::SendConnect

    .method public instance void  RecvAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckConnect when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/AckConnect Microsoft.Singularity.Io.PnpContract/Imp::AckConnectPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.PnpContract/AckConnect
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckConnect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckConnect

    .method public instance void  RecvNakConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakConnect when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/NakConnect Microsoft.Singularity.Io.PnpContract/Imp::NakConnectPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.PnpContract/NakConnect
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv NakConnect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvNakConnect

    .method public instance void  SendFinalize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::DeliverFinalize0$PST060004EC()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::MarshallDeliverFinalize0$PST060004ED(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.3
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Finalize in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendFinalize

    .method public instance void  RecvAckFinalize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckFinalize when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize Microsoft.Singularity.Io.PnpContract/Imp::AckFinalizePod0
      IL_0097:  initobj    Microsoft.Singularity.Io.PnpContract/AckFinalize
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.2
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckFinalize in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckFinalize

    .method public instance void  RecvNakFinalize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   10
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakFinalize when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize Microsoft.Singularity.Io.PnpContract/Imp::NakFinalizePod0
      IL_0097:  initobj    Microsoft.Singularity.Io.PnpContract/NakFinalize
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.5
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakFinalize in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.PnpContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakFinalize

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.PnpContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.PnpContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.PnpContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.PnpContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckInitialize0$PST060004C3() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckInitialize0

    .method privatescope instance void  MarshallDeliverAckInitialize0$PST060004C4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverAckInitialize0$PST060004C3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize Microsoft.Singularity.Io.PnpContract/Imp::AckInitializePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/AckInitialize::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckInitialize0

    .method privatescope instance void  DeliverNakInitialize0$PST060004C5() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakInitialize0

    .method privatescope instance void  MarshallDeliverNakInitialize0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverNakInitialize0$PST060004C5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize Microsoft.Singularity.Io.PnpContract/Imp::NakInitializePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/NakInitialize::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakInitialize0

    .method privatescope instance void  DeliverAckConnect0$PST060004C7() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckConnect0

    .method privatescope instance void  MarshallDeliverAckConnect0$PST060004C8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverAckConnect0$PST060004C7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/AckConnect Microsoft.Singularity.Io.PnpContract/Imp::AckConnectPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/AckConnect::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckConnect0

    .method privatescope instance void  DeliverNakConnect0$PST060004C9() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakConnect0

    .method privatescope instance void  MarshallDeliverNakConnect0$PST060004CA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverNakConnect0$PST060004C9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/NakConnect Microsoft.Singularity.Io.PnpContract/Imp::NakConnectPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/NakConnect::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakConnect0

    .method privatescope instance void  DeliverAckFinalize0$PST060004CB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   9
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   9
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckFinalize0

    .method privatescope instance void  MarshallDeliverAckFinalize0$PST060004CC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverAckFinalize0$PST060004CB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize Microsoft.Singularity.Io.PnpContract/Imp::AckFinalizePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/AckFinalize::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckFinalize0

    .method privatescope instance void  DeliverNakFinalize0$PST060004CD() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakFinalize0

    .method privatescope instance void  MarshallDeliverNakFinalize0$PST060004CE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverNakFinalize0$PST060004CD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize Microsoft.Singularity.Io.PnpContract/Imp::NakFinalizePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/NakFinalize::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakFinalize0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/Initialize InitializePod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/Connect ConnectPod0
    .field family valuetype Microsoft.Singularity.Io.PnpContract/Finalize FinalizePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.PnpContract::CanonicalState$PST06000019(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.PnpContract::CanonicalState$PST06000019(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Start"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "DoInitialize"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Initialized"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "DoConnect"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "DoFinalize"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "End"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvInitialize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Initialize when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Initialize Microsoft.Singularity.Io.PnpContract/Exp::InitializePod0
      IL_0095:  initobj    Microsoft.Singularity.Io.PnpContract/Initialize
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Initialize in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvInitialize

    .method public instance void  SendAckInitialize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverAckInitialize0$PST060004C3()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallDeliverAckInitialize0$PST060004C4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckInitialize in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckInitialize

    .method public instance void  SendNakInitialize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverNakInitialize0$PST060004C5()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallDeliverNakInitialize0$PST060004C6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.7
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakInitialize in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakInitialize

    .method public instance void  RecvConnect([out] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& eDevice) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Connect when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Connect Microsoft.Singularity.Io.PnpContract/Exp::ConnectPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Connect Microsoft.Singularity.Io.PnpContract/Exp::ConnectPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.PnpContract/Connect
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv Connect in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Exp::RecvConnect

    .method public instance void  SendAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverAckConnect0$PST060004C7()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallDeliverAckConnect0$PST060004C8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckConnect in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckConnect

    .method public instance void  SendNakConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverNakConnect0$PST060004C9()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallDeliverNakConnect0$PST060004CA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakConnect in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakConnect

    .method public instance void  RecvFinalize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.8
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Finalize when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Finalize Microsoft.Singularity.Io.PnpContract/Exp::FinalizePod0
      IL_0095:  initobj    Microsoft.Singularity.Io.PnpContract/Finalize
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.3
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Finalize in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvFinalize

    .method public instance void  SendAckFinalize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverAckFinalize0$PST060004CB()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallDeliverAckFinalize0$PST060004CC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckFinalize in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckFinalize

    .method public instance void  SendNakFinalize() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::DeliverNakFinalize0$PST060004CD()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::MarshallDeliverNakFinalize0$PST060004CE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakFinalize in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.PnpContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakFinalize

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.PnpContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.PnpContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.PnpContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::MarshallContent(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.PnpContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverInitialize0$PST060004E8() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverInitialize0

    .method privatescope instance void  MarshallDeliverInitialize0$PST060004E9(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::DeliverInitialize0$PST060004E8()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Initialize Microsoft.Singularity.Io.PnpContract/Exp::InitializePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/Initialize::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverInitialize0

    .method privatescope instance void  DeliverConnect0$PST060004EA(valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) eDevice) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Connect Microsoft.Singularity.Io.PnpContract/Exp::ConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverConnect0

    .method privatescope instance void  MarshallDeliverConnect0$PST060004EB(valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) eDevice,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::DeliverConnect0$PST060004EA(valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Connect Microsoft.Singularity.Io.PnpContract/Exp::ConnectPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.PnpContract/Connect::MarshallAll(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverConnect0

    .method privatescope instance void  DeliverFinalize0$PST060004EC() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverFinalize0

    .method privatescope instance void  MarshallDeliverFinalize0$PST060004ED(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::DeliverFinalize0$PST060004EC()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.PnpContract/Finalize Microsoft.Singularity.Io.PnpContract/Exp::FinalizePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.PnpContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.PnpContract/Finalize::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverFinalize0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Initialize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/Initialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Initialize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/Initialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Initialize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/Initialize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/Initialize::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method Initialize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/Initialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Initialize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Initialize::Release

  } // end of class Initialize

  .class sequential ansi sealed nested public specialname AckInitialize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckInitialize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckInitialize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/AckInitialize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/AckInitialize::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method AckInitialize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckInitialize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckInitialize::Release

  } // end of class AckInitialize

  .class sequential ansi sealed nested public specialname NakInitialize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakInitialize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakInitialize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/NakInitialize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/NakInitialize::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method NakInitialize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakInitialize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakInitialize::Release

  } // end of class NakInitialize

  .class sequential ansi sealed nested public specialname Connect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) eDevice
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0007:  call       void Microsoft.Singularity.Io.DeviceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                               valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method Connect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/Connect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/Connect::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method Connect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Connect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_003a:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0047:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0051:  ret
    } // end of method Connect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Io.DeviceContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Io.DeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Io.PnpContract/Connect::eDevice
      IL_0025:  ret
    } // end of method Connect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Release

  } // end of class Connect

  .class sequential ansi sealed nested public specialname AckConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/AckConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/AckConnect::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method AckConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Release

  } // end of class AckConnect

  .class sequential ansi sealed nested public specialname NakConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/NakConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/NakConnect::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method NakConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Release

  } // end of class NakConnect

  .class sequential ansi sealed nested public specialname Finalize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/Finalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Finalize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/Finalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Finalize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/Finalize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/Finalize::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Finalize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/Finalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Finalize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Finalize::Release

  } // end of class Finalize

  .class sequential ansi sealed nested public specialname AckFinalize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckFinalize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckFinalize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/AckFinalize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/AckFinalize::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method AckFinalize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckFinalize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFinalize::Release

  } // end of class AckFinalize

  .class sequential ansi sealed nested public specialname NakFinalize
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakFinalize::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakFinalize::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.PnpContract/NakFinalize
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/NakFinalize::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method NakFinalize::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakFinalize::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFinalize::Release

  } // end of class NakFinalize

  .class abstract auto ansi nested public specialname Start
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/DoInitialize 
            Recv(valuetype Microsoft.Singularity.Io.PnpContract/Initialize msg) cil managed
    {
    } // end of method Start::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname DoInitialize
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/Initialized 
            Send(valuetype Microsoft.Singularity.Io.PnpContract/AckInitialize msg) cil managed
    {
    } // end of method DoInitialize::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/Start 
            Send(valuetype Microsoft.Singularity.Io.PnpContract/NakInitialize msg) cil managed
    {
    } // end of method DoInitialize::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoInitialize::.ctor

  } // end of class DoInitialize

  .class abstract auto ansi nested public specialname Initialized
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/DoConnect 
            Recv(valuetype Microsoft.Singularity.Io.PnpContract/Connect msg) cil managed
    {
    } // end of method Initialized::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/DoFinalize 
            Recv(valuetype Microsoft.Singularity.Io.PnpContract/Finalize msg) cil managed
    {
    } // end of method Initialized::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Initialized::.ctor

  } // end of class Initialized

  .class abstract auto ansi nested public specialname DoConnect
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/Initialized 
            Send(valuetype Microsoft.Singularity.Io.PnpContract/AckConnect msg) cil managed
    {
    } // end of method DoConnect::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/Initialized 
            Send(valuetype Microsoft.Singularity.Io.PnpContract/NakConnect msg) cil managed
    {
    } // end of method DoConnect::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoConnect::.ctor

  } // end of class DoConnect

  .class abstract auto ansi nested public specialname DoFinalize
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/End 
            Send(valuetype Microsoft.Singularity.Io.PnpContract/AckFinalize msg) cil managed
    {
    } // end of method DoFinalize::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.PnpContract/Initialized 
            Send(valuetype Microsoft.Singularity.Io.PnpContract/NakFinalize msg) cil managed
    {
    } // end of method DoFinalize::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoFinalize::.ctor

  } // end of class DoFinalize

  .class abstract auto ansi nested public specialname End
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method End::.ctor

  } // end of class End

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.PnpContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
    IL_0017:  ldc.i4.7
    IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.PnpContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
    IL_0036:  ldc.i4.7
    IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::'.ctor$PST060004AA'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method PnpContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.PnpContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.PnpContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.PnpContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.PnpContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.PnpContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.PnpContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.PnpContract/Imp::'.ctor$PST060004AA'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method PnpContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method PnpContract::.ctor

  .method privatescope static int32  StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Io.PnpContract::StableState$PST06000018(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method PnpContract::StableState

  .method privatescope static int32  CanonicalState$PST06000019(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method PnpContract::CanonicalState

} // end of class Microsoft.Singularity.Io.PnpContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.SoundDeviceContract
       extends Microsoft.Singularity.Io.DeviceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x0000000A)
    .field public static literal specialname int32 PlayPcm = int32(0x00000003)
    .field public static literal specialname int32 AckPlayPcm = int32(0x00000004)
    .field public static literal specialname int32 NakPlayPcm = int32(0x00000005)
    .field public static literal specialname int32 PlayWav = int32(0x00000006)
    .field public static literal specialname int32 AckPlayWav = int32(0x00000007)
    .field public static literal specialname int32 NakPlayWav = int32(0x00000008)
    .field public static literal specialname int32 Success = int32(0x00000009)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm AckPlayPcmPod0
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm NakPlayPcmPod0
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav AckPlayWavPod0
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav NakPlayWavPod0
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000560'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::CanonicalState$PST0600001E(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::CanonicalState$PST0600001E(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "Ready"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "Ready$0"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "Ready$1"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "Ready$2"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "Ready$3"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendPlayPcm(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer,
                                              int32 offset,
                                              int32 length,
                                              uint16 sampleRate,
                                              bool stereo,
                                              bool signed,
                                              bool eightBit) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       164 (0xa4)
      .maxstack  16
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_008d

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_005f

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_5
      IL_0036:  brfalse    IL_0044

      IL_003b:  ldloc.s    V_4
      IL_003d:  ldloc.s    V_5
      IL_003f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.3
      IL_004d:  ldarg.s    sampleRate
      IL_004f:  ldarg.s    stereo
      IL_0051:  ldarg.s    signed
      IL_0053:  ldarg.s    eightBit
      IL_0055:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::DeliverPlayPcm0$PST0600059C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                       int32,
                                                                                                                       int32,
                                                                                                                       uint16,
                                                                                                                       bool,
                                                                                                                       bool,
                                                                                                                       bool)
      IL_005a:  br         IL_0076

      IL_005f:  ldloc.3
      IL_0060:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_0065:  ldarg.1
      IL_0066:  ldarg.2
      IL_0067:  ldarg.3
      IL_0068:  ldarg.s    sampleRate
      IL_006a:  ldarg.s    stereo
      IL_006c:  ldarg.s    signed
      IL_006e:  ldarg.s    eightBit
      IL_0070:  ldarg.0
      IL_0071:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::MarshallDeliverPlayPcm0$PST0600059D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                               int32,
                                                                                                                               int32,
                                                                                                                               uint16,
                                                                                                                               bool,
                                                                                                                               bool,
                                                                                                                               bool,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0076:  ldarg.0
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007c:  ldarg.0
      IL_007d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0082:  ldc.i4.7
      IL_0083:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0088:  br         IL_00a3

      IL_008d:  ldstr      "can't send PlayPcm in state "
      IL_0092:  ldarg.0
      IL_0093:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_0098:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_009d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00a2:  throw

      IL_00a3:  ret
    } // end of method Imp::SendPlayPcm

    .method public instance void  RecvAckPlayPcm([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckPlayPcm when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayPcmPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayPcmPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.6
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv AckPlayPcm in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvAckPlayPcm

    .method public instance void  RecvNakPlayPcm([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakPlayPcm when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayPcmPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayPcmPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.6
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv NakPlayPcm in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvNakPlayPcm

    .method public instance void  SendPlayWav(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::DeliverPlayWav0$PST0600059E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::MarshallDeliverPlayWav0$PST0600059F(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.5
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send PlayWav in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Imp::SendPlayWav

    .method public instance void  RecvAckPlayWav([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckPlayWav when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayWavPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayWavPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv AckPlayWav in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvAckPlayWav

    .method public instance void  RecvNakPlayWav([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.8
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakPlayWav when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayWavPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayWavPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv NakPlayWav in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvNakPlayWav

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success Microsoft.Singularity.Io.SoundDeviceContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.8
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv Success in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.SoundDeviceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.SoundDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.SoundDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.SoundDeviceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       342 (0x156)
      .maxstack  7
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               int32 V_11)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_002f

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_006f

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.8
      IL_001e:  beq        IL_00b7

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.3
      IL_0025:  beq        IL_00ff

      IL_002a:  br         IL_0147

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.2
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.2
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0067

      IL_0059:  ldloc.2
      IL_005a:  brfalse    IL_0067

      IL_005f:  ldc.i4.m1
      IL_0060:  stloc.s    V_4
      IL_0062:  br         IL_014f

      IL_0067:  ldloc.3
      IL_0068:  stloc.s    V_4
      IL_006a:  br         IL_014f

      IL_006f:  ldc.i4.0
      IL_0070:  stloc.s    V_5
      IL_0072:  ldarg.0
      IL_0073:  volatile.
      IL_0075:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  brtrue     IL_0095

      IL_0083:  ldarg.0
      IL_0084:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  ldc.i4.0
      IL_0098:  ceq
      IL_009a:  brfalse    IL_00ae

      IL_009f:  ldloc.s    V_5
      IL_00a1:  brfalse    IL_00ae

      IL_00a6:  ldc.i4.m1
      IL_00a7:  stloc.s    V_4
      IL_00a9:  br         IL_014f

      IL_00ae:  ldloc.s    V_6
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_014f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_7
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_8
      IL_00c4:  ldloc.s    V_8
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_7
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_014f

      IL_00f6:  ldloc.s    V_8
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_014f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_9
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_010a:  stloc.s    V_10
      IL_010c:  ldloc.s    V_10
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_9
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_014f

      IL_013e:  ldloc.s    V_10
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_014f

      IL_0147:  ldc.i4.m1
      IL_0148:  stloc.s    V_4
      IL_014a:  br         IL_014f

      IL_014f:  ldloc.s    V_4
      IL_0151:  stloc.s    V_11
      IL_0153:  ldloc.s    V_4
      IL_0155:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.SoundDeviceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckPlayPcm0$PST06000578(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayPcmPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckPlayPcm0

    .method privatescope instance void  MarshallDeliverAckPlayPcm0$PST06000579(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverAckPlayPcm0$PST06000578(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayPcmPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckPlayPcm0

    .method privatescope instance void  DeliverNakPlayPcm0$PST0600057A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayPcmPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverNakPlayPcm0

    .method privatescope instance void  MarshallDeliverNakPlayPcm0$PST0600057B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverNakPlayPcm0$PST0600057A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayPcmPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakPlayPcm0

    .method privatescope instance void  DeliverAckPlayWav0$PST0600057C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayWavPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckPlayWav0

    .method privatescope instance void  MarshallDeliverAckPlayWav0$PST0600057D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverAckPlayWav0$PST0600057C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::AckPlayWavPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckPlayWav0

    .method privatescope instance void  DeliverNakPlayWav0$PST0600057E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayWavPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverNakPlayWav0

    .method privatescope instance void  MarshallDeliverNakPlayWav0$PST0600057F(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverNakPlayWav0$PST0600057E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav Microsoft.Singularity.Io.SoundDeviceContract/Imp::NakPlayWavPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::MarshallAll(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakPlayWav0

    .method privatescope instance void  DeliverSuccess0$PST06000580() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   9
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   9
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000581(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverSuccess0$PST06000580()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success Microsoft.Singularity.Io.SoundDeviceContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Success::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000582() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000583(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverContractNotSupported0$PST06000582()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.SoundDeviceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.SoundDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Io.DeviceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm PlayPcmPod0
    .field family valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav PlayWavPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::CanonicalState$PST0600001E(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::CanonicalState$PST0600001E(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "Ready"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "Ready$0"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "Ready$1"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "Ready$2"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "Ready$3"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvPlayPcm([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& buffer,
                                              [out] int32& offset,
                                              [out] int32& length,
                                              [out] uint16& sampleRate,
                                              [out] bool& stereo,
                                              [out] bool& signed,
                                              [out] bool& eightBit) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       302 (0x12e)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0117

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv PlayPcm when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_009a:  ldfld      int32 Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::offset
      IL_009f:  stind.i4
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_00a7:  ldfld      int32 Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::length
      IL_00ac:  stind.i4
      IL_00ad:  ldarg.s    sampleRate
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_00b5:  ldfld      uint16 Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::sampleRate
      IL_00ba:  stind.i2
      IL_00bb:  ldarg.s    stereo
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_00c3:  ldfld      bool Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::stereo
      IL_00c8:  stobj      [Corlib]System.Boolean
      IL_00cd:  ldarg.s    signed
      IL_00cf:  ldarg.0
      IL_00d0:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_00d5:  ldfld      bool Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::signed
      IL_00da:  stobj      [Corlib]System.Boolean
      IL_00df:  ldarg.s    eightBit
      IL_00e1:  ldarg.0
      IL_00e2:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_00e7:  ldfld      bool Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::eightBit
      IL_00ec:  stobj      [Corlib]System.Boolean
      IL_00f1:  ldarg.0
      IL_00f2:  ldc.i4.0
      IL_00f3:  volatile.
      IL_00f5:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00fa:  ldarg.0
      IL_00fb:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0100:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm
      IL_0106:  ldarg.0
      IL_0107:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_010c:  ldc.i4.7
      IL_010d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0112:  br         IL_012d

      IL_0117:  ldstr      "can't recv PlayPcm in state "
      IL_011c:  ldarg.0
      IL_011d:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_0122:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0127:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ret
    } // end of method Exp::RecvPlayPcm

    .method public instance void  SendAckPlayPcm(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverAckPlayPcm0$PST06000578(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallDeliverAckPlayPcm0$PST06000579(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.6
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send AckPlayPcm in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendAckPlayPcm

    .method public instance void  SendNakPlayPcm(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverNakPlayPcm0$PST0600057A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallDeliverNakPlayPcm0$PST0600057B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.6
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send NakPlayPcm in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendNakPlayPcm

    .method public instance void  RecvPlayWav([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv PlayWav when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayWavPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayWavPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.SoundDeviceContract/PlayWav
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.5
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv PlayWav in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Exp::RecvPlayWav

    .method public instance void  SendAckPlayWav(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverAckPlayWav0$PST0600057C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallDeliverAckPlayWav0$PST0600057D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.4
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send AckPlayWav in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendAckPlayWav

    .method public instance void  SendNakPlayWav(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverNakPlayWav0$PST0600057E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallDeliverNakPlayWav0$PST0600057F(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.4
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send NakPlayWav in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendNakPlayWav

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverSuccess0$PST06000580()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallDeliverSuccess0$PST06000581(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Success in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::DeliverContractNotSupported0$PST06000582()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::MarshallDeliverContractNotSupported0$PST06000583(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.SoundDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.SoundDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.SoundDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.SoundDeviceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       342 (0x156)
      .maxstack  7
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               int32 V_11)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_002f

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_006f

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.8
      IL_001e:  beq        IL_00b7

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.3
      IL_0025:  beq        IL_00ff

      IL_002a:  br         IL_0147

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.2
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.2
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0067

      IL_0059:  ldloc.2
      IL_005a:  brfalse    IL_0067

      IL_005f:  ldc.i4.m1
      IL_0060:  stloc.s    V_4
      IL_0062:  br         IL_014f

      IL_0067:  ldloc.3
      IL_0068:  stloc.s    V_4
      IL_006a:  br         IL_014f

      IL_006f:  ldc.i4.0
      IL_0070:  stloc.s    V_5
      IL_0072:  ldarg.0
      IL_0073:  volatile.
      IL_0075:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  brtrue     IL_0095

      IL_0083:  ldarg.0
      IL_0084:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  ldc.i4.0
      IL_0098:  ceq
      IL_009a:  brfalse    IL_00ae

      IL_009f:  ldloc.s    V_5
      IL_00a1:  brfalse    IL_00ae

      IL_00a6:  ldc.i4.m1
      IL_00a7:  stloc.s    V_4
      IL_00a9:  br         IL_014f

      IL_00ae:  ldloc.s    V_6
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_014f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_7
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c2:  stloc.s    V_8
      IL_00c4:  ldloc.s    V_8
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_7
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_014f

      IL_00f6:  ldloc.s    V_8
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_014f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_9
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_010a:  stloc.s    V_10
      IL_010c:  ldloc.s    V_10
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_9
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_014f

      IL_013e:  ldloc.s    V_10
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_014f

      IL_0147:  ldc.i4.m1
      IL_0148:  stloc.s    V_4
      IL_014a:  br         IL_014f

      IL_014f:  ldloc.s    V_4
      IL_0151:  stloc.s    V_11
      IL_0153:  ldloc.s    V_4
      IL_0155:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.SoundDeviceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverPlayPcm0$PST0600059C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer,
                                                                    int32 offset,
                                                                    int32 length,
                                                                    uint16 sampleRate,
                                                                    bool stereo,
                                                                    bool signed,
                                                                    bool eightBit) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       105 (0x69)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::length
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_002a:  ldarg.s    sampleRate
      IL_002c:  stfld      uint16 Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::sampleRate
      IL_0031:  ldarg.0
      IL_0032:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0037:  ldarg.s    stereo
      IL_0039:  stfld      bool Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::stereo
      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0044:  ldarg.s    signed
      IL_0046:  stfld      bool Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::signed
      IL_004b:  ldarg.0
      IL_004c:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0051:  ldarg.s    eightBit
      IL_0053:  stfld      bool Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::eightBit
      IL_0058:  ldarg.0
      IL_0059:  ldc.i4.3
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_005f:  ldarg.0
      IL_0060:  ldc.i4.3
      IL_0061:  volatile.
      IL_0063:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0068:  ret
    } // end of method Exp::DeliverPlayPcm0

    .method privatescope instance void  MarshallDeliverPlayPcm0$PST0600059D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer,
                                                                            int32 offset,
                                                                            int32 length,
                                                                            uint16 sampleRate,
                                                                            bool stereo,
                                                                            bool signed,
                                                                            bool eightBit,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       38 (0x26)
      .maxstack  10
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    sampleRate
      IL_0006:  ldarg.s    stereo
      IL_0008:  ldarg.s    signed
      IL_000a:  ldarg.s    eightBit
      IL_000c:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::DeliverPlayPcm0$PST0600059C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                       int32,
                                                                                                                       int32,
                                                                                                                       uint16,
                                                                                                                       bool,
                                                                                                                       bool,
                                                                                                                       bool)
      IL_0011:  ldarg.0
      IL_0012:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayPcmPod0
      IL_0017:  ldarg.0
      IL_0018:  ldarg.s    endpoint
      IL_001a:  ldarg.0
      IL_001b:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0020:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0025:  ret
    } // end of method Exp::MarshallDeliverPlayPcm0

    .method privatescope instance void  DeliverPlayWav0$PST0600059E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayWavPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverPlayWav0

    .method privatescope instance void  MarshallDeliverPlayWav0$PST0600059F(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::DeliverPlayWav0$PST0600059E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav Microsoft.Singularity.Io.SoundDeviceContract/Exp::PlayWavPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverPlayWav0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname PlayPcm
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .field public int32 offset
    .field public int32 length
    .field public uint16 sampleRate
    .field public bool stereo
    .field public bool signed
    .field public bool eightBit
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method PlayPcm::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PlayPcm::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PlayPcm::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method PlayPcm::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PlayPcm::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method PlayPcm::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm::buffer
      IL_001a:  ret
    } // end of method PlayPcm::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayPcm::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayPcm::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayPcm::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayPcm::Release

  } // end of class PlayPcm

  .class sequential ansi sealed nested public specialname AckPlayPcm
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckPlayPcm::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPlayPcm::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPlayPcm::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method AckPlayPcm::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckPlayPcm::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckPlayPcm::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm::buffer
      IL_001a:  ret
    } // end of method AckPlayPcm::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayPcm::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayPcm::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayPcm::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayPcm::Release

  } // end of class AckPlayPcm

  .class sequential ansi sealed nested public specialname NakPlayPcm
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method NakPlayPcm::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakPlayPcm::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakPlayPcm::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method NakPlayPcm::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakPlayPcm::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method NakPlayPcm::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm::buffer
      IL_001a:  ret
    } // end of method NakPlayPcm::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayPcm::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayPcm::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayPcm::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayPcm::Release

  } // end of class NakPlayPcm

  .class sequential ansi sealed nested public specialname PlayWav
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method PlayWav::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PlayWav::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method PlayWav::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/PlayWav
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method PlayWav::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method PlayWav::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method PlayWav::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/PlayWav::buffer
      IL_001a:  ret
    } // end of method PlayWav::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayWav::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayWav::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayWav::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method PlayWav::Release

  } // end of class PlayWav

  .class sequential ansi sealed nested public specialname AckPlayWav
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckPlayWav::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPlayWav::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPlayWav::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method AckPlayWav::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckPlayWav::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckPlayWav::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav::buffer
      IL_001a:  ret
    } // end of method AckPlayWav::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayWav::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayWav::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayWav::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlayWav::Release

  } // end of class AckPlayWav

  .class sequential ansi sealed nested public specialname NakPlayWav
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method NakPlayWav::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakPlayWav::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakPlayWav::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*,
                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method NakPlayWav::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakPlayWav::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method NakPlayWav::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav::buffer
      IL_001a:  ret
    } // end of method NakPlayWav::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayWav::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayWav::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayWav::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlayWav::Release

  } // end of class NakPlayWav

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Success::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.SoundDeviceContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayPcm msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready$2 
            Recv(valuetype Microsoft.Singularity.Io.SoundDeviceContract/PlayWav msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayPcm msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayPcm msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class abstract auto ansi nested public specialname Ready$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready$3 
            Send(valuetype Microsoft.Singularity.Io.SoundDeviceContract/AckPlayWav msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready$3 
            Send(valuetype Microsoft.Singularity.Io.SoundDeviceContract/NakPlayWav msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$2::.ctor

  } // end of class Ready$2

  .class abstract auto ansi nested public specialname Ready$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.SoundDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$3::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$3::.ctor

  } // end of class Ready$3

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::'.ctor$PST06000560'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method SoundDeviceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.SoundDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.SoundDeviceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.SoundDeviceContract/Imp::'.ctor$PST06000560'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method SoundDeviceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract::.ctor()
    IL_0006:  ret
  } // end of method SoundDeviceContract::.ctor

  .method privatescope static int32  StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       103 (0x67)
    .maxstack  8
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.4
    IL_000b:  beq        IL_0023

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.6
    IL_0012:  beq        IL_0036

    IL_0017:  ldloc.1
    IL_0018:  ldc.i4.2
    IL_0019:  beq        IL_0049

    IL_001e:  br         IL_005c

    IL_0023:  ldarg.0
    IL_0024:  ldc.i4.8
    IL_0025:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_002a:  ldarg.0
    IL_002b:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0030:  stloc.2
    IL_0031:  br         IL_0063

    IL_0036:  ldarg.0
    IL_0037:  ldc.i4.8
    IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_003d:  ldarg.0
    IL_003e:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0043:  stloc.2
    IL_0044:  br         IL_0063

    IL_0049:  ldarg.0
    IL_004a:  ldc.i4.1
    IL_004b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0050:  ldarg.0
    IL_0051:  call       int32 Microsoft.Singularity.Io.SoundDeviceContract::StableState$PST0600001D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0056:  stloc.2
    IL_0057:  br         IL_0063

    IL_005c:  ldloc.0
    IL_005d:  stloc.2
    IL_005e:  br         IL_0063

    IL_0063:  ldloc.2
    IL_0064:  stloc.3
    IL_0065:  ldloc.2
    IL_0066:  ret
  } // end of method SoundDeviceContract::StableState

  .method privatescope static int32  CanonicalState$PST0600001E(int32 state) cil managed
  {
    // Code size       60 (0x3c)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.4
    IL_0004:  beq        IL_001c

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.6
    IL_000b:  beq        IL_0023

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_002a

    IL_0017:  br         IL_0031

    IL_001c:  ldc.i4.8
    IL_001d:  stloc.1
    IL_001e:  br         IL_0038

    IL_0023:  ldc.i4.8
    IL_0024:  stloc.1
    IL_0025:  br         IL_0038

    IL_002a:  ldc.i4.1
    IL_002b:  stloc.1
    IL_002c:  br         IL_0038

    IL_0031:  ldarg.0
    IL_0032:  stloc.1
    IL_0033:  br         IL_0038

    IL_0038:  ldloc.1
    IL_0039:  stloc.2
    IL_003a:  ldloc.1
    IL_003b:  ret
  } // end of method SoundDeviceContract::CanonicalState

} // end of class Microsoft.Singularity.Io.SoundDeviceContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.UnicodePipeContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000005)
    .field public static literal specialname int32 Write = int32(0x00000002)
    .field public static literal specialname int32 AckWrite = int32(0x00000003)
    .field public static literal specialname int32 Moved = int32(0x00000004)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite AckWritePod0
    .field family valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved MovedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060005FC'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::CanonicalState$PST06000023(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::CanonicalState$PST06000023(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "READY"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "ACK"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "EXPMOVABLE"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendWrite(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                            int32 offset,
                                            int32 count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       141 (0x8d)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0076

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0050

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::DeliverWrite0$PST06000626(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                     int32,
                                                                                                                     int32)
      IL_004b:  br         IL_005f

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp&
      IL_0056:  ldarg.1
      IL_0057:  ldarg.2
      IL_0058:  ldarg.3
      IL_0059:  ldarg.0
      IL_005a:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::MarshallDeliverWrite0$PST06000627(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             int32,
                                                                                                                             int32,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005f:  ldarg.0
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0065:  ldarg.0
      IL_0066:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006b:  ldc.i4.3
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_008c

      IL_0076:  ldstr      "can't send Write in state "
      IL_007b:  ldarg.0
      IL_007c:  call       instance string Microsoft.Singularity.Io.UnicodePipeContract/Imp::CurrentState()
      IL_0081:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0086:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ret
    } // end of method Imp::SendWrite

    .method public instance void  RecvAckWrite([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckWrite when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite Microsoft.Singularity.Io.UnicodePipeContract/Imp::AckWritePod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite Microsoft.Singularity.Io.UnicodePipeContract/Imp::AckWritePod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.UnicodePipeContract/AckWrite
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv AckWrite in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.UnicodePipeContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvAckWrite

    .method public instance void  RecvMoved() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Moved when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved Microsoft.Singularity.Io.UnicodePipeContract/Imp::MovedPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.UnicodePipeContract/Moved
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Moved in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.UnicodePipeContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvMoved

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.UnicodePipeContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.UnicodePipeContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.UnicodePipeContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.UnicodePipeContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckWrite0$PST0600060F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite Microsoft.Singularity.Io.UnicodePipeContract/Imp::AckWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.3
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.3
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckWrite0

    .method privatescope instance void  MarshallDeliverAckWrite0$PST06000610(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::DeliverAckWrite0$PST0600060F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite Microsoft.Singularity.Io.UnicodePipeContract/Imp::AckWritePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckWrite0

    .method privatescope instance void  DeliverMoved0$PST06000611() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverMoved0

    .method privatescope instance void  MarshallDeliverMoved0$PST06000612(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::DeliverMoved0$PST06000611()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved Microsoft.Singularity.Io.UnicodePipeContract/Imp::MovedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Moved::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverMoved0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write WritePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::CanonicalState$PST06000023(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::CanonicalState$PST06000023(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "READY"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "ACK"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "EXPMOVABLE"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvWrite([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer,
                                            [out] int32& offset,
                                            [out] int32& count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       234 (0xea)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Write when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_009a:  ldfld      int32 Microsoft.Singularity.Io.UnicodePipeContract/Write::offset
      IL_009f:  stind.i4
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_00a7:  ldfld      int32 Microsoft.Singularity.Io.UnicodePipeContract/Write::count
      IL_00ac:  stind.i4
      IL_00ad:  ldarg.0
      IL_00ae:  ldc.i4.0
      IL_00af:  volatile.
      IL_00b1:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_00bc:  initobj    Microsoft.Singularity.Io.UnicodePipeContract/Write
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.3
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_00e9

      IL_00d3:  ldstr      "can't recv Write in state "
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance string Microsoft.Singularity.Io.UnicodePipeContract/Exp::CurrentState()
      IL_00de:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e8:  throw

      IL_00e9:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  SendAckWrite(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::DeliverAckWrite0$PST0600060F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::MarshallDeliverAckWrite0$PST06000610(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.4
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send AckWrite in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.UnicodePipeContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendAckWrite

    .method public instance void  SendMoved() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::DeliverMoved0$PST06000611()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::MarshallDeliverMoved0$PST06000612(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Moved in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.UnicodePipeContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendMoved

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.UnicodePipeContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.UnicodePipeContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.UnicodePipeContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.UnicodePipeContract::StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.UnicodePipeContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverWrite0$PST06000626(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                  int32 offset,
                                                                  int32 count) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.UnicodePipeContract/Write::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Io.UnicodePipeContract/Write::count
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.2
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.2
      IL_002d:  volatile.
      IL_002f:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0034:  ret
    } // end of method Exp::DeliverWrite0

    .method privatescope instance void  MarshallDeliverWrite0$PST06000627(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                          int32 offset,
                                                                          int32 count,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::DeliverWrite0$PST06000626(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                     int32,
                                                                                                                     int32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write Microsoft.Singularity.Io.UnicodePipeContract/Exp::WritePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.UnicodePipeContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Write::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverWrite0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Write
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .field public int32 offset
    .field public int32 count
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/Write
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Write::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/Write::buffer
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname AckWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/AckWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method AckWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.UnicodePipeContract/AckWrite::buffer
      IL_001a:  ret
    } // end of method AckWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Release

  } // end of class AckWrite

  .class abstract auto ansi nested public specialname READY
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.UnicodePipeContract/ACK 
            Recv(valuetype Microsoft.Singularity.Io.UnicodePipeContract/Write msg) cil managed
    {
    } // end of method READY::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method READY::.ctor

  } // end of class READY

  .class abstract auto ansi nested public specialname ACK
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.UnicodePipeContract/READY 
            Send(valuetype Microsoft.Singularity.Io.UnicodePipeContract/AckWrite msg) cil managed
    {
    } // end of method ACK::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ACK::.ctor

  } // end of class ACK

  .class abstract auto ansi nested public specialname EXPMOVABLE
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family abstract virtual instance class Microsoft.Singularity.Io.UnicodePipeContract/READY 
            Send(valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved msg) cil managed
    {
    } // end of method EXPMOVABLE::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method EXPMOVABLE::.ctor

  } // end of class EXPMOVABLE

  .class sequential ansi sealed nested public specialname Moved
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Moved::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Moved::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/Moved
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Moved::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Moved::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.UnicodePipeContract/Moved* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Moved::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Moved::Release

  } // end of class Moved

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp&
    IL_0017:  ldc.i4.4
    IL_0018:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
    IL_0036:  ldc.i4.4
    IL_0037:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::'.ctor$PST060005FC'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method UnicodePipeContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.UnicodePipeContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.UnicodePipeContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.UnicodePipeContract/Imp::'.ctor$PST060005FC'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method UnicodePipeContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method UnicodePipeContract::.ctor

  .method privatescope static int32  StableState$PST06000022(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       25 (0x19)
    .maxstack  4
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.0
    IL_000f:  stloc.2
    IL_0010:  br         IL_0015

    IL_0015:  ldloc.2
    IL_0016:  stloc.3
    IL_0017:  ldloc.2
    IL_0018:  ret
  } // end of method UnicodePipeContract::StableState

  .method privatescope static int32  CanonicalState$PST06000023(int32 state) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  1
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  br         IL_0007

    IL_0007:  ldarg.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.1
    IL_000f:  stloc.2
    IL_0010:  ldloc.1
    IL_0011:  ret
  } // end of method UnicodePipeContract::CanonicalState

} // end of class Microsoft.Singularity.Io.UnicodePipeContract

.class public auto ansi sealed Microsoft.Singularity.Io.Tty.Modifiers
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.Modifiers CTRL = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.Modifiers ALT = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.Modifiers SHIFT = int32(0x00000001)
} // end of class Microsoft.Singularity.Io.Tty.Modifiers

.class public auto ansi sealed Microsoft.Singularity.Io.Tty.ControlCodes
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.ControlCodes CTRL_Z = int32(0x0000001A)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.ControlCodes CTRL_C = int32(0x00000003)
} // end of class Microsoft.Singularity.Io.Tty.ControlCodes

.class public auto ansi sealed Microsoft.Singularity.Io.Tty.EscapeCodes
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes INSERT = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes DELETE = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes END = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes PAGE_UP = int32(0x00000005)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes PAGE_DOWN = int32(0x00000006)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes CENTER = int32(0x00000007)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes BACKSPACE = int32(0x00000008)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes TAB = int32(0x00000009)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes ENTER = int32(0x0000000A)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes ESCAPE = int32(0x0000000B)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F1 = int32(0x0000000C)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F2 = int32(0x0000000D)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F3 = int32(0x0000000E)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F4 = int32(0x0000000F)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F5 = int32(0x00000010)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F6 = int32(0x00000011)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F7 = int32(0x00000012)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F8 = int32(0x00000013)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F9 = int32(0x00000014)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F10 = int32(0x00000015)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F11 = int32(0x00000016)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F12 = int32(0x00000017)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F13 = int32(0x00000018)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F14 = int32(0x00000019)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F15 = int32(0x0000001A)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F16 = int32(0x0000001B)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F17 = int32(0x0000001C)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F18 = int32(0x0000001D)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F19 = int32(0x0000001E)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes F20 = int32(0x0000001F)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes SPACE = int32(0x00000020)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes UP = int32(0x00000021)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes DOWN = int32(0x00000022)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes RIGHT = int32(0x00000023)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes LEFT = int32(0x00000024)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes ERASE_FROM_CURSOR = int32(0x00000064)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes SET_CURSOR_SIZE = int32(0x00000065)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes CLEAR_SCREEN = int32(0x00000066)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes NOCODE = int32(0x000003E7)
  .field public static literal valuetype Microsoft.Singularity.Io.Tty.EscapeCodes HOME = int32(0x00000001)
} // end of class Microsoft.Singularity.Io.Tty.EscapeCodes

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.VideoDeviceContract
       extends Microsoft.Singularity.Io.DeviceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000013)
    .field public static literal specialname int32 Plot = int32(0x00000003)
    .field public static literal specialname int32 AckPlot = int32(0x00000004)
    .field public static literal specialname int32 NakPlot = int32(0x00000005)
    .field public static literal specialname int32 Fill = int32(0x00000006)
    .field public static literal specialname int32 AckFill = int32(0x00000007)
    .field public static literal specialname int32 NakFill = int32(0x00000008)
    .field public static literal specialname int32 BitBltBmp = int32(0x00000009)
    .field public static literal specialname int32 AckBitBltBmp = int32(0x0000000A)
    .field public static literal specialname int32 NakBitBltBmp = int32(0x0000000B)
    .field public static literal specialname int32 BitBltPng = int32(0x0000000C)
    .field public static literal specialname int32 AckBitBltPng = int32(0x0000000D)
    .field public static literal specialname int32 NakBitBltPng = int32(0x0000000E)
    .field public static literal specialname int32 Scroll = int32(0x0000000F)
    .field public static literal specialname int32 AckScroll = int32(0x00000010)
    .field public static literal specialname int32 NakScroll = int32(0x00000011)
    .field public static literal specialname int32 Success = int32(0x00000012)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot AckPlotPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot NakPlotPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill AckFillPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill NakFillPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp AckBitBltBmpPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp NakBitBltBmpPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng AckBitBltPngPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng NakBitBltPngPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll AckScrollPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll NakScrollPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600064F'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::CanonicalState$PST06000028(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::CanonicalState$PST06000028(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       272 (0x110)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0072

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   12
      IL_001f:  beq        IL_0088

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0093

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   10
      IL_002f:  beq        IL_009e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   9
      IL_0037:  beq        IL_00a9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.8
      IL_003e:  beq        IL_00b4

      IL_0043:  ldloc.0
      IL_0044:  ldc.i4.7
      IL_0045:  beq        IL_00bf

      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.6
      IL_004c:  beq        IL_00ca

      IL_0051:  ldloc.0
      IL_0052:  ldc.i4.5
      IL_0053:  beq        IL_00d5

      IL_0058:  ldloc.0
      IL_0059:  ldc.i4.4
      IL_005a:  beq        IL_00e0

      IL_005f:  ldloc.0
      IL_0060:  ldc.i4.3
      IL_0061:  beq        IL_00eb

      IL_0066:  ldloc.0
      IL_0067:  ldc.i4.2
      IL_0068:  beq        IL_00f6

      IL_006d:  br         IL_0101

      IL_0072:  ldstr      "Ready"
      IL_0077:  stloc.1
      IL_0078:  br         IL_010c

      IL_007d:  ldstr      "Ready$0"
      IL_0082:  stloc.1
      IL_0083:  br         IL_010c

      IL_0088:  ldstr      "Ready$1"
      IL_008d:  stloc.1
      IL_008e:  br         IL_010c

      IL_0093:  ldstr      "Ready$2"
      IL_0098:  stloc.1
      IL_0099:  br         IL_010c

      IL_009e:  ldstr      "Ready$3"
      IL_00a3:  stloc.1
      IL_00a4:  br         IL_010c

      IL_00a9:  ldstr      "Ready$4"
      IL_00ae:  stloc.1
      IL_00af:  br         IL_010c

      IL_00b4:  ldstr      "Ready$5"
      IL_00b9:  stloc.1
      IL_00ba:  br         IL_010c

      IL_00bf:  ldstr      "Ready$6"
      IL_00c4:  stloc.1
      IL_00c5:  br         IL_010c

      IL_00ca:  ldstr      "Ready$7"
      IL_00cf:  stloc.1
      IL_00d0:  br         IL_010c

      IL_00d5:  ldstr      "Ready$8"
      IL_00da:  stloc.1
      IL_00db:  br         IL_010c

      IL_00e0:  ldstr      "Ready$9"
      IL_00e5:  stloc.1
      IL_00e6:  br         IL_010c

      IL_00eb:  ldstr      "Start"
      IL_00f0:  stloc.1
      IL_00f1:  br         IL_010c

      IL_00f6:  ldstr      "DoneState"
      IL_00fb:  stloc.1
      IL_00fc:  br         IL_010c

      IL_0101:  ldstr      "<protocol terminated>"
      IL_0106:  stloc.1
      IL_0107:  br         IL_010c

      IL_010c:  ldloc.1
      IL_010d:  stloc.2
      IL_010e:  ldloc.1
      IL_010f:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendPlot(int32 x,
                                           int32 y,
                                           uint32 color32) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       131 (0x83)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006c

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0045

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  ldarg.3
      IL_003b:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverPlot0$PST060006A9(int32,
                                                                                                                    int32,
                                                                                                                    uint32)
      IL_0040:  br         IL_0054

      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_004b:  ldarg.1
      IL_004c:  ldarg.2
      IL_004d:  ldarg.3
      IL_004e:  ldarg.0
      IL_004f:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallDeliverPlot0$PST060006AA(int32,
                                                                                                                            int32,
                                                                                                                            uint32,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005a:  ldarg.0
      IL_005b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0060:  ldc.i4.s   13
      IL_0062:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0067:  br         IL_0082

      IL_006c:  ldstr      "can't send Plot in state "
      IL_0071:  ldarg.0
      IL_0072:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_0077:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007c:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0081:  throw

      IL_0082:  ret
    } // end of method Imp::SendPlot

    .method public instance void  RecvAckPlot() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckPlot when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckPlotPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/AckPlot
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   12
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckPlot in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckPlot

    .method public instance void  RecvNakPlot() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv NakPlot when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakPlotPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/NakPlot
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   12
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakPlot in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakPlot

    .method public instance void  SendFill(int32 x1,
                                           int32 y1,
                                           int32 x2,
                                           int32 y2,
                                           uint32 color32) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0049

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  ldarg.3
      IL_003b:  ldarg.s    y2
      IL_003d:  ldarg.s    color32
      IL_003f:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverFill0$PST060006AB(int32,
                                                                                                                    int32,
                                                                                                                    int32,
                                                                                                                    int32,
                                                                                                                    uint32)
      IL_0044:  br         IL_005c

      IL_0049:  ldloc.3
      IL_004a:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_004f:  ldarg.1
      IL_0050:  ldarg.2
      IL_0051:  ldarg.3
      IL_0052:  ldarg.s    y2
      IL_0054:  ldarg.s    color32
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallDeliverFill0$PST060006AC(int32,
                                                                                                                            int32,
                                                                                                                            int32,
                                                                                                                            int32,
                                                                                                                            uint32,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   11
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send Fill in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendFill

    .method public instance void  RecvAckFill() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckFill when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckFillPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/AckFill
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   10
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckFill in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckFill

    .method public instance void  RecvNakFill() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv NakFill when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakFillPod0
      IL_0096:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/NakFill
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   10
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakFill in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakFill

    .method public instance void  SendBitBltBmp(int32 x,
                                                int32 y,
                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       143 (0x8f)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0078

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0051

      IL_0032:  ldarg.3
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  ldarg.3
      IL_0047:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverBitBltBmp0$PST060006AD(int32,
                                                                                                                         int32,
                                                                                                                         uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004c:  br         IL_0060

      IL_0051:  ldloc.3
      IL_0052:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0057:  ldarg.1
      IL_0058:  ldarg.2
      IL_0059:  ldarg.3
      IL_005a:  ldarg.0
      IL_005b:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallDeliverBitBltBmp0$PST060006AE(int32,
                                                                                                                                 int32,
                                                                                                                                 uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.s   9
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0073:  br         IL_008e

      IL_0078:  ldstr      "can't send BitBltBmp in state "
      IL_007d:  ldarg.0
      IL_007e:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_0083:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0088:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008d:  throw

      IL_008e:  ret
    } // end of method Imp::SendBitBltBmp

    .method public instance void  RecvAckBitBltBmp([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckBitBltBmp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltBmpPod0
      IL_0090:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltBmpPod0
      IL_00a5:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.8
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv AckBitBltBmp in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvAckBitBltBmp

    .method public instance void  RecvNakBitBltBmp([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakBitBltBmp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltBmpPod0
      IL_0090:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltBmpPod0
      IL_00a5:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.8
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv NakBitBltBmp in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvNakBitBltBmp

    .method public instance void  SendBitBltPng(int32 x,
                                                int32 y,
                                                uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       142 (0x8e)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0077

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0051

      IL_0032:  ldarg.3
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  ldarg.3
      IL_0047:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverBitBltPng0$PST060006AF(int32,
                                                                                                                         int32,
                                                                                                                         uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004c:  br         IL_0060

      IL_0051:  ldloc.3
      IL_0052:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0057:  ldarg.1
      IL_0058:  ldarg.2
      IL_0059:  ldarg.3
      IL_005a:  ldarg.0
      IL_005b:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallDeliverBitBltPng0$PST060006B0(int32,
                                                                                                                                 int32,
                                                                                                                                 uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.7
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0072:  br         IL_008d

      IL_0077:  ldstr      "can't send BitBltPng in state "
      IL_007c:  ldarg.0
      IL_007d:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_0082:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0087:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008c:  throw

      IL_008d:  ret
    } // end of method Imp::SendBitBltPng

    .method public instance void  RecvAckBitBltPng([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bb

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   13
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckBitBltPng when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltPngPod0
      IL_008f:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0094:  stind.i
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltPngPod0
      IL_00a4:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.6
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv AckBitBltPng in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvAckBitBltPng

    .method public instance void  RecvNakBitBltPng([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bb

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   14
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   14
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakBitBltPng when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltPngPod0
      IL_008f:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0094:  stind.i
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltPngPod0
      IL_00a4:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.6
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv NakBitBltPng in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvNakBitBltPng

    .method public instance void  SendScroll(int32 left,
                                             int32 top,
                                             int32 right,
                                             int32 bottom,
                                             int32 dy) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       138 (0x8a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0073

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0049

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  ldarg.3
      IL_003b:  ldarg.s    bottom
      IL_003d:  ldarg.s    dy
      IL_003f:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverScroll0$PST060006B1(int32,
                                                                                                                      int32,
                                                                                                                      int32,
                                                                                                                      int32,
                                                                                                                      int32)
      IL_0044:  br         IL_005c

      IL_0049:  ldloc.3
      IL_004a:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_004f:  ldarg.1
      IL_0050:  ldarg.2
      IL_0051:  ldarg.3
      IL_0052:  ldarg.s    bottom
      IL_0054:  ldarg.s    dy
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallDeliverScroll0$PST060006B2(int32,
                                                                                                                              int32,
                                                                                                                              int32,
                                                                                                                              int32,
                                                                                                                              int32,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.5
      IL_0069:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006e:  br         IL_0089

      IL_0073:  ldstr      "can't send Scroll in state "
      IL_0078:  ldarg.0
      IL_0079:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_007e:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0083:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ret
    } // end of method Imp::SendScroll

    .method public instance void  RecvAckScroll() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   16
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   16
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckScroll when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckScrollPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/AckScroll
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckScroll in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckScroll

    .method public instance void  RecvNakScroll() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   17
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   17
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakScroll when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakScrollPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/NakScroll
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakScroll in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakScroll

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   18
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   18
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success Microsoft.Singularity.Io.VideoDeviceContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   14
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Success in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.VideoDeviceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VideoDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VideoDeviceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.VideoDeviceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       583 (0x247)
      .maxstack  10
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               int32 V_17)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0048

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_0088

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00d0

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0118

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_0160

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   14
      IL_0037:  beq        IL_01a8

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.3
      IL_003e:  beq        IL_01f0

      IL_0043:  br         IL_0238

      IL_0048:  ldc.i4.0
      IL_0049:  stloc.2
      IL_004a:  ldarg.0
      IL_004b:  volatile.
      IL_004d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0052:  stloc.3
      IL_0053:  ldloc.3
      IL_0054:  brtrue     IL_0069

      IL_0059:  ldarg.0
      IL_005a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_005f:  stloc.2
      IL_0060:  ldarg.0
      IL_0061:  volatile.
      IL_0063:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0068:  stloc.3
      IL_0069:  ldloc.3
      IL_006a:  ldc.i4.0
      IL_006b:  ceq
      IL_006d:  brfalse    IL_0080

      IL_0072:  ldloc.2
      IL_0073:  brfalse    IL_0080

      IL_0078:  ldc.i4.m1
      IL_0079:  stloc.s    V_4
      IL_007b:  br         IL_0240

      IL_0080:  ldloc.3
      IL_0081:  stloc.s    V_4
      IL_0083:  br         IL_0240

      IL_0088:  ldc.i4.0
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  brtrue     IL_00ae

      IL_009c:  ldarg.0
      IL_009d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00a2:  stloc.s    V_5
      IL_00a4:  ldarg.0
      IL_00a5:  volatile.
      IL_00a7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_00ac:  stloc.s    V_6
      IL_00ae:  ldloc.s    V_6
      IL_00b0:  ldc.i4.0
      IL_00b1:  ceq
      IL_00b3:  brfalse    IL_00c7

      IL_00b8:  ldloc.s    V_5
      IL_00ba:  brfalse    IL_00c7

      IL_00bf:  ldc.i4.m1
      IL_00c0:  stloc.s    V_4
      IL_00c2:  br         IL_0240

      IL_00c7:  ldloc.s    V_6
      IL_00c9:  stloc.s    V_4
      IL_00cb:  br         IL_0240

      IL_00d0:  ldc.i4.0
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  brtrue     IL_00f6

      IL_00e4:  ldarg.0
      IL_00e5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ea:  stloc.s    V_7
      IL_00ec:  ldarg.0
      IL_00ed:  volatile.
      IL_00ef:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_00f4:  stloc.s    V_8
      IL_00f6:  ldloc.s    V_8
      IL_00f8:  ldc.i4.0
      IL_00f9:  ceq
      IL_00fb:  brfalse    IL_010f

      IL_0100:  ldloc.s    V_7
      IL_0102:  brfalse    IL_010f

      IL_0107:  ldc.i4.m1
      IL_0108:  stloc.s    V_4
      IL_010a:  br         IL_0240

      IL_010f:  ldloc.s    V_8
      IL_0111:  stloc.s    V_4
      IL_0113:  br         IL_0240

      IL_0118:  ldc.i4.0
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  brtrue     IL_013e

      IL_012c:  ldarg.0
      IL_012d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0132:  stloc.s    V_9
      IL_0134:  ldarg.0
      IL_0135:  volatile.
      IL_0137:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_013c:  stloc.s    V_10
      IL_013e:  ldloc.s    V_10
      IL_0140:  ldc.i4.0
      IL_0141:  ceq
      IL_0143:  brfalse    IL_0157

      IL_0148:  ldloc.s    V_9
      IL_014a:  brfalse    IL_0157

      IL_014f:  ldc.i4.m1
      IL_0150:  stloc.s    V_4
      IL_0152:  br         IL_0240

      IL_0157:  ldloc.s    V_10
      IL_0159:  stloc.s    V_4
      IL_015b:  br         IL_0240

      IL_0160:  ldc.i4.0
      IL_0161:  stloc.s    V_11
      IL_0163:  ldarg.0
      IL_0164:  volatile.
      IL_0166:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_016b:  stloc.s    V_12
      IL_016d:  ldloc.s    V_12
      IL_016f:  brtrue     IL_0186

      IL_0174:  ldarg.0
      IL_0175:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017a:  stloc.s    V_11
      IL_017c:  ldarg.0
      IL_017d:  volatile.
      IL_017f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0184:  stloc.s    V_12
      IL_0186:  ldloc.s    V_12
      IL_0188:  ldc.i4.0
      IL_0189:  ceq
      IL_018b:  brfalse    IL_019f

      IL_0190:  ldloc.s    V_11
      IL_0192:  brfalse    IL_019f

      IL_0197:  ldc.i4.m1
      IL_0198:  stloc.s    V_4
      IL_019a:  br         IL_0240

      IL_019f:  ldloc.s    V_12
      IL_01a1:  stloc.s    V_4
      IL_01a3:  br         IL_0240

      IL_01a8:  ldc.i4.0
      IL_01a9:  stloc.s    V_13
      IL_01ab:  ldarg.0
      IL_01ac:  volatile.
      IL_01ae:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_01b3:  stloc.s    V_14
      IL_01b5:  ldloc.s    V_14
      IL_01b7:  brtrue     IL_01ce

      IL_01bc:  ldarg.0
      IL_01bd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01c2:  stloc.s    V_13
      IL_01c4:  ldarg.0
      IL_01c5:  volatile.
      IL_01c7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_01cc:  stloc.s    V_14
      IL_01ce:  ldloc.s    V_14
      IL_01d0:  ldc.i4.0
      IL_01d1:  ceq
      IL_01d3:  brfalse    IL_01e7

      IL_01d8:  ldloc.s    V_13
      IL_01da:  brfalse    IL_01e7

      IL_01df:  ldc.i4.m1
      IL_01e0:  stloc.s    V_4
      IL_01e2:  br         IL_0240

      IL_01e7:  ldloc.s    V_14
      IL_01e9:  stloc.s    V_4
      IL_01eb:  br         IL_0240

      IL_01f0:  ldc.i4.0
      IL_01f1:  stloc.s    V_15
      IL_01f3:  ldarg.0
      IL_01f4:  volatile.
      IL_01f6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_01fb:  stloc.s    V_16
      IL_01fd:  ldloc.s    V_16
      IL_01ff:  brtrue     IL_0216

      IL_0204:  ldarg.0
      IL_0205:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_020a:  stloc.s    V_15
      IL_020c:  ldarg.0
      IL_020d:  volatile.
      IL_020f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0214:  stloc.s    V_16
      IL_0216:  ldloc.s    V_16
      IL_0218:  ldc.i4.0
      IL_0219:  ceq
      IL_021b:  brfalse    IL_022f

      IL_0220:  ldloc.s    V_15
      IL_0222:  brfalse    IL_022f

      IL_0227:  ldc.i4.m1
      IL_0228:  stloc.s    V_4
      IL_022a:  br         IL_0240

      IL_022f:  ldloc.s    V_16
      IL_0231:  stloc.s    V_4
      IL_0233:  br         IL_0240

      IL_0238:  ldc.i4.m1
      IL_0239:  stloc.s    V_4
      IL_023b:  br         IL_0240

      IL_0240:  ldloc.s    V_4
      IL_0242:  stloc.s    V_17
      IL_0244:  ldloc.s    V_4
      IL_0246:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.VideoDeviceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckPlot0$PST06000670() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckPlot0

    .method privatescope instance void  MarshallDeliverAckPlot0$PST06000671(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckPlot0$PST06000670()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckPlotPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckPlot::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckPlot0

    .method privatescope instance void  DeliverNakPlot0$PST06000672() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakPlot0

    .method privatescope instance void  MarshallDeliverNakPlot0$PST06000673(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakPlot0$PST06000672()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakPlotPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakPlot::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakPlot0

    .method privatescope instance void  DeliverAckFill0$PST06000674() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckFill0

    .method privatescope instance void  MarshallDeliverAckFill0$PST06000675(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckFill0$PST06000674()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckFillPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckFill::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckFill0

    .method privatescope instance void  DeliverNakFill0$PST06000676() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakFill0

    .method privatescope instance void  MarshallDeliverNakFill0$PST06000677(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakFill0$PST06000676()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakFillPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakFill::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakFill0

    .method privatescope instance void  DeliverAckBitBltBmp0$PST06000678(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltBmpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckBitBltBmp0

    .method privatescope instance void  MarshallDeliverAckBitBltBmp0$PST06000679(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckBitBltBmp0$PST06000678(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltBmpPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckBitBltBmp0

    .method privatescope instance void  DeliverNakBitBltBmp0$PST0600067A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltBmpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakBitBltBmp0

    .method privatescope instance void  MarshallDeliverNakBitBltBmp0$PST0600067B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakBitBltBmp0$PST0600067A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltBmpPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakBitBltBmp0

    .method privatescope instance void  DeliverAckBitBltPng0$PST0600067C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltPngPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckBitBltPng0

    .method privatescope instance void  MarshallDeliverAckBitBltPng0$PST0600067D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckBitBltPng0$PST0600067C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckBitBltPngPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckBitBltPng0

    .method privatescope instance void  DeliverNakBitBltPng0$PST0600067E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltPngPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakBitBltPng0

    .method privatescope instance void  MarshallDeliverNakBitBltPng0$PST0600067F(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakBitBltPng0$PST0600067E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakBitBltPngPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakBitBltPng0

    .method privatescope instance void  DeliverAckScroll0$PST06000680() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckScroll0

    .method privatescope instance void  MarshallDeliverAckScroll0$PST06000681(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckScroll0$PST06000680()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll Microsoft.Singularity.Io.VideoDeviceContract/Imp::AckScrollPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckScroll::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckScroll0

    .method privatescope instance void  DeliverNakScroll0$PST06000682() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   17
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   17
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakScroll0

    .method privatescope instance void  MarshallDeliverNakScroll0$PST06000683(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakScroll0$PST06000682()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll Microsoft.Singularity.Io.VideoDeviceContract/Imp::NakScrollPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakScroll::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakScroll0

    .method privatescope instance void  DeliverSuccess0$PST06000684() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   18
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   18
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000685(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverSuccess0$PST06000684()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success Microsoft.Singularity.Io.VideoDeviceContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Success::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000686() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000687(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverContractNotSupported0$PST06000686()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.VideoDeviceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VideoDeviceContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Io.DeviceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot PlotPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill FillPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp BitBltBmpPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng BitBltPngPod0
    .field family valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll ScrollPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::CanonicalState$PST06000028(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::CanonicalState$PST06000028(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       272 (0x110)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0072

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   12
      IL_001f:  beq        IL_0088

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0093

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   10
      IL_002f:  beq        IL_009e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   9
      IL_0037:  beq        IL_00a9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.8
      IL_003e:  beq        IL_00b4

      IL_0043:  ldloc.0
      IL_0044:  ldc.i4.7
      IL_0045:  beq        IL_00bf

      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.6
      IL_004c:  beq        IL_00ca

      IL_0051:  ldloc.0
      IL_0052:  ldc.i4.5
      IL_0053:  beq        IL_00d5

      IL_0058:  ldloc.0
      IL_0059:  ldc.i4.4
      IL_005a:  beq        IL_00e0

      IL_005f:  ldloc.0
      IL_0060:  ldc.i4.3
      IL_0061:  beq        IL_00eb

      IL_0066:  ldloc.0
      IL_0067:  ldc.i4.2
      IL_0068:  beq        IL_00f6

      IL_006d:  br         IL_0101

      IL_0072:  ldstr      "Ready"
      IL_0077:  stloc.1
      IL_0078:  br         IL_010c

      IL_007d:  ldstr      "Ready$0"
      IL_0082:  stloc.1
      IL_0083:  br         IL_010c

      IL_0088:  ldstr      "Ready$1"
      IL_008d:  stloc.1
      IL_008e:  br         IL_010c

      IL_0093:  ldstr      "Ready$2"
      IL_0098:  stloc.1
      IL_0099:  br         IL_010c

      IL_009e:  ldstr      "Ready$3"
      IL_00a3:  stloc.1
      IL_00a4:  br         IL_010c

      IL_00a9:  ldstr      "Ready$4"
      IL_00ae:  stloc.1
      IL_00af:  br         IL_010c

      IL_00b4:  ldstr      "Ready$5"
      IL_00b9:  stloc.1
      IL_00ba:  br         IL_010c

      IL_00bf:  ldstr      "Ready$6"
      IL_00c4:  stloc.1
      IL_00c5:  br         IL_010c

      IL_00ca:  ldstr      "Ready$7"
      IL_00cf:  stloc.1
      IL_00d0:  br         IL_010c

      IL_00d5:  ldstr      "Ready$8"
      IL_00da:  stloc.1
      IL_00db:  br         IL_010c

      IL_00e0:  ldstr      "Ready$9"
      IL_00e5:  stloc.1
      IL_00e6:  br         IL_010c

      IL_00eb:  ldstr      "Start"
      IL_00f0:  stloc.1
      IL_00f1:  br         IL_010c

      IL_00f6:  ldstr      "DoneState"
      IL_00fb:  stloc.1
      IL_00fc:  br         IL_010c

      IL_0101:  ldstr      "<protocol terminated>"
      IL_0106:  stloc.1
      IL_0107:  br         IL_010c

      IL_010c:  ldloc.1
      IL_010d:  stloc.2
      IL_010e:  ldloc.1
      IL_010f:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvPlot([out] int32& x,
                                           [out] int32& y,
                                           [out] uint32& color32) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       236 (0xec)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d5

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Plot when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_008e:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Plot::x
      IL_0093:  stind.i4
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_009b:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Plot::y
      IL_00a0:  stind.i4
      IL_00a1:  ldarg.3
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_00a8:  ldfld      uint32 Microsoft.Singularity.Io.VideoDeviceContract/Plot::color32
      IL_00ad:  stind.i4
      IL_00ae:  ldarg.0
      IL_00af:  ldc.i4.0
      IL_00b0:  volatile.
      IL_00b2:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_00bd:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/Plot
      IL_00c3:  ldarg.0
      IL_00c4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c9:  ldc.i4.s   13
      IL_00cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d0:  br         IL_00eb

      IL_00d5:  ldstr      "can't recv Plot in state "
      IL_00da:  ldarg.0
      IL_00db:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_00e0:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e5:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ea:  throw

      IL_00eb:  ret
    } // end of method Exp::RecvPlot

    .method public instance void  SendAckPlot() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckPlot0$PST06000670()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverAckPlot0$PST06000671(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   12
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckPlot in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckPlot

    .method public instance void  SendNakPlot() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakPlot0$PST06000672()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverNakPlot0$PST06000673(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   12
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send NakPlot in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendNakPlot

    .method public instance void  RecvFill([out] int32& x1,
                                           [out] int32& y1,
                                           [out] int32& x2,
                                           [out] int32& y2,
                                           [out] uint32& color32) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       264 (0x108)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00f1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Fill when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_008e:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::x1
      IL_0093:  stind.i4
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_009b:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::y1
      IL_00a0:  stind.i4
      IL_00a1:  ldarg.3
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_00a8:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::x2
      IL_00ad:  stind.i4
      IL_00ae:  ldarg.s    y2
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_00b6:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::y2
      IL_00bb:  stind.i4
      IL_00bc:  ldarg.s    color32
      IL_00be:  ldarg.0
      IL_00bf:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_00c4:  ldfld      uint32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::color32
      IL_00c9:  stind.i4
      IL_00ca:  ldarg.0
      IL_00cb:  ldc.i4.0
      IL_00cc:  volatile.
      IL_00ce:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d3:  ldarg.0
      IL_00d4:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_00d9:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/Fill
      IL_00df:  ldarg.0
      IL_00e0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e5:  ldc.i4.s   11
      IL_00e7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ec:  br         IL_0107

      IL_00f1:  ldstr      "can't recv Fill in state "
      IL_00f6:  ldarg.0
      IL_00f7:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_00fc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0101:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0106:  throw

      IL_0107:  ret
    } // end of method Exp::RecvFill

    .method public instance void  SendAckFill() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckFill0$PST06000674()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverAckFill0$PST06000675(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   10
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckFill in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckFill

    .method public instance void  SendNakFill() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakFill0$PST06000676()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverNakFill0$PST06000677(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   10
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send NakFill in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendNakFill

    .method public instance void  RecvBitBltBmp([out] int32& x,
                                                [out] int32& y,
                                                [out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       238 (0xee)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d7

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv BitBltBmp when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::x
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::y
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_00aa:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_00af:  stind.i
      IL_00b0:  ldarg.0
      IL_00b1:  ldc.i4.0
      IL_00b2:  volatile.
      IL_00b4:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_00bf:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp
      IL_00c5:  ldarg.0
      IL_00c6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cb:  ldc.i4.s   9
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d2:  br         IL_00ed

      IL_00d7:  ldstr      "can't recv BitBltBmp in state "
      IL_00dc:  ldarg.0
      IL_00dd:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_00e2:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e7:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ec:  throw

      IL_00ed:  ret
    } // end of method Exp::RecvBitBltBmp

    .method public instance void  SendAckBitBltBmp(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       138 (0x8a)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0073

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckBitBltBmp0$PST06000678(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverAckBitBltBmp0$PST06000679(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.8
      IL_0069:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006e:  br         IL_0089

      IL_0073:  ldstr      "can't send AckBitBltBmp in state "
      IL_0078:  ldarg.0
      IL_0079:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_007e:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0083:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ret
    } // end of method Exp::SendAckBitBltBmp

    .method public instance void  SendNakBitBltBmp(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       138 (0x8a)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0073

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakBitBltBmp0$PST0600067A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverNakBitBltBmp0$PST0600067B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.8
      IL_0069:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006e:  br         IL_0089

      IL_0073:  ldstr      "can't send NakBitBltBmp in state "
      IL_0078:  ldarg.0
      IL_0079:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_007e:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0083:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ret
    } // end of method Exp::SendNakBitBltBmp

    .method public instance void  RecvBitBltPng([out] int32& x,
                                                [out] int32& y,
                                                [out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       237 (0xed)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d6

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv BitBltPng when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::x
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::y
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_00aa:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_00af:  stind.i
      IL_00b0:  ldarg.0
      IL_00b1:  ldc.i4.0
      IL_00b2:  volatile.
      IL_00b4:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_00bf:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng
      IL_00c5:  ldarg.0
      IL_00c6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cb:  ldc.i4.7
      IL_00cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d1:  br         IL_00ec

      IL_00d6:  ldstr      "can't recv BitBltPng in state "
      IL_00db:  ldarg.0
      IL_00dc:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_00e1:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e6:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00eb:  throw

      IL_00ec:  ret
    } // end of method Exp::RecvBitBltPng

    .method public instance void  SendAckBitBltPng(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckBitBltPng0$PST0600067C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverAckBitBltPng0$PST0600067D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.6
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send AckBitBltPng in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendAckBitBltPng

    .method public instance void  SendNakBitBltPng(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakBitBltPng0$PST0600067E(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverNakBitBltPng0$PST0600067F(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.6
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send NakBitBltPng in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendNakBitBltPng

    .method public instance void  RecvScroll([out] int32& left,
                                             [out] int32& top,
                                             [out] int32& right,
                                             [out] int32& bottom,
                                             [out] int32& dy) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       265 (0x109)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00f2

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Scroll when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::left
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_009d:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::top
      IL_00a2:  stind.i4
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_00aa:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::right
      IL_00af:  stind.i4
      IL_00b0:  ldarg.s    bottom
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_00b8:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::bottom
      IL_00bd:  stind.i4
      IL_00be:  ldarg.s    dy
      IL_00c0:  ldarg.0
      IL_00c1:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_00c6:  ldfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::dy
      IL_00cb:  stind.i4
      IL_00cc:  ldarg.0
      IL_00cd:  ldc.i4.0
      IL_00ce:  volatile.
      IL_00d0:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d5:  ldarg.0
      IL_00d6:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_00db:  initobj    Microsoft.Singularity.Io.VideoDeviceContract/Scroll
      IL_00e1:  ldarg.0
      IL_00e2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e7:  ldc.i4.5
      IL_00e8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ed:  br         IL_0108

      IL_00f2:  ldstr      "can't recv Scroll in state "
      IL_00f7:  ldarg.0
      IL_00f8:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_00fd:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0102:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0107:  throw

      IL_0108:  ret
    } // end of method Exp::RecvScroll

    .method public instance void  SendAckScroll() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverAckScroll0$PST06000680()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverAckScroll0$PST06000681(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckScroll in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckScroll

    .method public instance void  SendNakScroll() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverNakScroll0$PST06000682()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverNakScroll0$PST06000683(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakScroll in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakScroll

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverSuccess0$PST06000684()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverSuccess0$PST06000685(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   14
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Success in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::DeliverContractNotSupported0$PST06000686()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::MarshallDeliverContractNotSupported0$PST06000687(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VideoDeviceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VideoDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VideoDeviceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.VideoDeviceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       583 (0x247)
      .maxstack  10
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               int32 V_17)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0048

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_0088

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00d0

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0118

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_0160

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   14
      IL_0037:  beq        IL_01a8

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.3
      IL_003e:  beq        IL_01f0

      IL_0043:  br         IL_0238

      IL_0048:  ldc.i4.0
      IL_0049:  stloc.2
      IL_004a:  ldarg.0
      IL_004b:  volatile.
      IL_004d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0052:  stloc.3
      IL_0053:  ldloc.3
      IL_0054:  brtrue     IL_0069

      IL_0059:  ldarg.0
      IL_005a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_005f:  stloc.2
      IL_0060:  ldarg.0
      IL_0061:  volatile.
      IL_0063:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0068:  stloc.3
      IL_0069:  ldloc.3
      IL_006a:  ldc.i4.0
      IL_006b:  ceq
      IL_006d:  brfalse    IL_0080

      IL_0072:  ldloc.2
      IL_0073:  brfalse    IL_0080

      IL_0078:  ldc.i4.m1
      IL_0079:  stloc.s    V_4
      IL_007b:  br         IL_0240

      IL_0080:  ldloc.3
      IL_0081:  stloc.s    V_4
      IL_0083:  br         IL_0240

      IL_0088:  ldc.i4.0
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  brtrue     IL_00ae

      IL_009c:  ldarg.0
      IL_009d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00a2:  stloc.s    V_5
      IL_00a4:  ldarg.0
      IL_00a5:  volatile.
      IL_00a7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ac:  stloc.s    V_6
      IL_00ae:  ldloc.s    V_6
      IL_00b0:  ldc.i4.0
      IL_00b1:  ceq
      IL_00b3:  brfalse    IL_00c7

      IL_00b8:  ldloc.s    V_5
      IL_00ba:  brfalse    IL_00c7

      IL_00bf:  ldc.i4.m1
      IL_00c0:  stloc.s    V_4
      IL_00c2:  br         IL_0240

      IL_00c7:  ldloc.s    V_6
      IL_00c9:  stloc.s    V_4
      IL_00cb:  br         IL_0240

      IL_00d0:  ldc.i4.0
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  brtrue     IL_00f6

      IL_00e4:  ldarg.0
      IL_00e5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ea:  stloc.s    V_7
      IL_00ec:  ldarg.0
      IL_00ed:  volatile.
      IL_00ef:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00f4:  stloc.s    V_8
      IL_00f6:  ldloc.s    V_8
      IL_00f8:  ldc.i4.0
      IL_00f9:  ceq
      IL_00fb:  brfalse    IL_010f

      IL_0100:  ldloc.s    V_7
      IL_0102:  brfalse    IL_010f

      IL_0107:  ldc.i4.m1
      IL_0108:  stloc.s    V_4
      IL_010a:  br         IL_0240

      IL_010f:  ldloc.s    V_8
      IL_0111:  stloc.s    V_4
      IL_0113:  br         IL_0240

      IL_0118:  ldc.i4.0
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  brtrue     IL_013e

      IL_012c:  ldarg.0
      IL_012d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0132:  stloc.s    V_9
      IL_0134:  ldarg.0
      IL_0135:  volatile.
      IL_0137:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_013c:  stloc.s    V_10
      IL_013e:  ldloc.s    V_10
      IL_0140:  ldc.i4.0
      IL_0141:  ceq
      IL_0143:  brfalse    IL_0157

      IL_0148:  ldloc.s    V_9
      IL_014a:  brfalse    IL_0157

      IL_014f:  ldc.i4.m1
      IL_0150:  stloc.s    V_4
      IL_0152:  br         IL_0240

      IL_0157:  ldloc.s    V_10
      IL_0159:  stloc.s    V_4
      IL_015b:  br         IL_0240

      IL_0160:  ldc.i4.0
      IL_0161:  stloc.s    V_11
      IL_0163:  ldarg.0
      IL_0164:  volatile.
      IL_0166:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_016b:  stloc.s    V_12
      IL_016d:  ldloc.s    V_12
      IL_016f:  brtrue     IL_0186

      IL_0174:  ldarg.0
      IL_0175:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_017a:  stloc.s    V_11
      IL_017c:  ldarg.0
      IL_017d:  volatile.
      IL_017f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0184:  stloc.s    V_12
      IL_0186:  ldloc.s    V_12
      IL_0188:  ldc.i4.0
      IL_0189:  ceq
      IL_018b:  brfalse    IL_019f

      IL_0190:  ldloc.s    V_11
      IL_0192:  brfalse    IL_019f

      IL_0197:  ldc.i4.m1
      IL_0198:  stloc.s    V_4
      IL_019a:  br         IL_0240

      IL_019f:  ldloc.s    V_12
      IL_01a1:  stloc.s    V_4
      IL_01a3:  br         IL_0240

      IL_01a8:  ldc.i4.0
      IL_01a9:  stloc.s    V_13
      IL_01ab:  ldarg.0
      IL_01ac:  volatile.
      IL_01ae:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01b3:  stloc.s    V_14
      IL_01b5:  ldloc.s    V_14
      IL_01b7:  brtrue     IL_01ce

      IL_01bc:  ldarg.0
      IL_01bd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01c2:  stloc.s    V_13
      IL_01c4:  ldarg.0
      IL_01c5:  volatile.
      IL_01c7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01cc:  stloc.s    V_14
      IL_01ce:  ldloc.s    V_14
      IL_01d0:  ldc.i4.0
      IL_01d1:  ceq
      IL_01d3:  brfalse    IL_01e7

      IL_01d8:  ldloc.s    V_13
      IL_01da:  brfalse    IL_01e7

      IL_01df:  ldc.i4.m1
      IL_01e0:  stloc.s    V_4
      IL_01e2:  br         IL_0240

      IL_01e7:  ldloc.s    V_14
      IL_01e9:  stloc.s    V_4
      IL_01eb:  br         IL_0240

      IL_01f0:  ldc.i4.0
      IL_01f1:  stloc.s    V_15
      IL_01f3:  ldarg.0
      IL_01f4:  volatile.
      IL_01f6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01fb:  stloc.s    V_16
      IL_01fd:  ldloc.s    V_16
      IL_01ff:  brtrue     IL_0216

      IL_0204:  ldarg.0
      IL_0205:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_020a:  stloc.s    V_15
      IL_020c:  ldarg.0
      IL_020d:  volatile.
      IL_020f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0214:  stloc.s    V_16
      IL_0216:  ldloc.s    V_16
      IL_0218:  ldc.i4.0
      IL_0219:  ceq
      IL_021b:  brfalse    IL_022f

      IL_0220:  ldloc.s    V_15
      IL_0222:  brfalse    IL_022f

      IL_0227:  ldc.i4.m1
      IL_0228:  stloc.s    V_4
      IL_022a:  br         IL_0240

      IL_022f:  ldloc.s    V_16
      IL_0231:  stloc.s    V_4
      IL_0233:  br         IL_0240

      IL_0238:  ldc.i4.m1
      IL_0239:  stloc.s    V_4
      IL_023b:  br         IL_0240

      IL_0240:  ldloc.s    V_4
      IL_0242:  stloc.s    V_17
      IL_0244:  ldloc.s    V_4
      IL_0246:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.VideoDeviceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverPlot0$PST060006A9(int32 x,
                                                                 int32 y,
                                                                 uint32 color32) cil managed
    {
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Plot::x
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Plot::y
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint32 Microsoft.Singularity.Io.VideoDeviceContract/Plot::color32
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.3
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.3
      IL_002d:  volatile.
      IL_002f:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0034:  ret
    } // end of method Exp::DeliverPlot0

    .method privatescope instance void  MarshallDeliverPlot0$PST060006AA(int32 x,
                                                                         int32 y,
                                                                         uint32 color32,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverPlot0$PST060006A9(int32,
                                                                                                                    int32,
                                                                                                                    uint32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot Microsoft.Singularity.Io.VideoDeviceContract/Exp::PlotPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Plot::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverPlot0

    .method privatescope instance void  DeliverFill0$PST060006AB(int32 x1,
                                                                 int32 y1,
                                                                 int32 x2,
                                                                 int32 y2,
                                                                 uint32 color32) cil managed
    {
      // Code size       79 (0x4f)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::x1
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::y1
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::x2
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_002a:  ldarg.s    y2
      IL_002c:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::y2
      IL_0031:  ldarg.0
      IL_0032:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_0037:  ldarg.s    color32
      IL_0039:  stfld      uint32 Microsoft.Singularity.Io.VideoDeviceContract/Fill::color32
      IL_003e:  ldarg.0
      IL_003f:  ldc.i4.6
      IL_0040:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0045:  ldarg.0
      IL_0046:  ldc.i4.6
      IL_0047:  volatile.
      IL_0049:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_004e:  ret
    } // end of method Exp::DeliverFill0

    .method privatescope instance void  MarshallDeliverFill0$PST060006AC(int32 x1,
                                                                         int32 y1,
                                                                         int32 x2,
                                                                         int32 y2,
                                                                         uint32 color32,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       34 (0x22)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    y2
      IL_0006:  ldarg.s    color32
      IL_0008:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverFill0$PST060006AB(int32,
                                                                                                                    int32,
                                                                                                                    int32,
                                                                                                                    int32,
                                                                                                                    uint32)
      IL_000d:  ldarg.0
      IL_000e:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill Microsoft.Singularity.Io.VideoDeviceContract/Exp::FillPod0
      IL_0013:  ldarg.0
      IL_0014:  ldarg.s    endpoint
      IL_0016:  ldarg.0
      IL_0017:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Fill::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_0021:  ret
    } // end of method Exp::MarshallDeliverFill0

    .method privatescope instance void  DeliverBitBltBmp0$PST060006AD(int32 x,
                                                                      int32 y,
                                                                      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::x
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::y
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   9
      IL_002f:  volatile.
      IL_0031:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0036:  ret
    } // end of method Exp::DeliverBitBltBmp0

    .method privatescope instance void  MarshallDeliverBitBltBmp0$PST060006AE(int32 x,
                                                                              int32 y,
                                                                              uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverBitBltBmp0$PST060006AD(int32,
                                                                                                                         int32,
                                                                                                                         uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltBmpPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverBitBltBmp0

    .method privatescope instance void  DeliverBitBltPng0$PST060006AF(int32 x,
                                                                      int32 y,
                                                                      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer) cil managed
    {
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::x
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::y
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   12
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   12
      IL_002f:  volatile.
      IL_0031:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0036:  ret
    } // end of method Exp::DeliverBitBltPng0

    .method privatescope instance void  MarshallDeliverBitBltPng0$PST060006B0(int32 x,
                                                                              int32 y,
                                                                              uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buffer,
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverBitBltPng0$PST060006AF(int32,
                                                                                                                         int32,
                                                                                                                         uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng Microsoft.Singularity.Io.VideoDeviceContract/Exp::BitBltPngPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverBitBltPng0

    .method privatescope instance void  DeliverScroll0$PST060006B1(int32 left,
                                                                   int32 top,
                                                                   int32 right,
                                                                   int32 bottom,
                                                                   int32 dy) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::left
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::top
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::right
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_002a:  ldarg.s    bottom
      IL_002c:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::bottom
      IL_0031:  ldarg.0
      IL_0032:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_0037:  ldarg.s    dy
      IL_0039:  stfld      int32 Microsoft.Singularity.Io.VideoDeviceContract/Scroll::dy
      IL_003e:  ldarg.0
      IL_003f:  ldc.i4.s   15
      IL_0041:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0046:  ldarg.0
      IL_0047:  ldc.i4.s   15
      IL_0049:  volatile.
      IL_004b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0050:  ret
    } // end of method Exp::DeliverScroll0

    .method privatescope instance void  MarshallDeliverScroll0$PST060006B2(int32 left,
                                                                           int32 top,
                                                                           int32 right,
                                                                           int32 bottom,
                                                                           int32 dy,
                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       34 (0x22)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    bottom
      IL_0006:  ldarg.s    dy
      IL_0008:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::DeliverScroll0$PST060006B1(int32,
                                                                                                                      int32,
                                                                                                                      int32,
                                                                                                                      int32,
                                                                                                                      int32)
      IL_000d:  ldarg.0
      IL_000e:  ldflda     valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll Microsoft.Singularity.Io.VideoDeviceContract/Exp::ScrollPod0
      IL_0013:  ldarg.0
      IL_0014:  ldarg.s    endpoint
      IL_0016:  ldarg.0
      IL_0017:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Scroll::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          int32&)
      IL_0021:  ret
    } // end of method Exp::MarshallDeliverScroll0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Plot
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 x
    .field public int32 y
    .field public uint32 color32
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Plot::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Plot::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Plot
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Plot::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Plot::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Plot::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Plot::Release

  } // end of class Plot

  .class sequential ansi sealed nested public specialname AckPlot
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPlot::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckPlot::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/AckPlot
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckPlot::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckPlot::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckPlot::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckPlot::Release

  } // end of class AckPlot

  .class sequential ansi sealed nested public specialname NakPlot
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakPlot::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakPlot::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/NakPlot
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakPlot::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NakPlot::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakPlot::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakPlot::Release

  } // end of class NakPlot

  .class sequential ansi sealed nested public specialname Fill
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 x1
    .field public int32 y1
    .field public int32 x2
    .field public int32 y2
    .field public uint32 color32
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Fill::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Fill::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Fill
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Fill::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Fill::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Fill::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Fill::Release

  } // end of class Fill

  .class sequential ansi sealed nested public specialname AckFill
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckFill::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckFill::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/AckFill
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckFill::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckFill::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckFill::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckFill::Release

  } // end of class AckFill

  .class sequential ansi sealed nested public specialname NakFill
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakFill::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakFill::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/NakFill
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakFill::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NakFill::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakFill::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakFill::Release

  } // end of class NakFill

  .class sequential ansi sealed nested public specialname BitBltBmp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 x
    .field public int32 y
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method BitBltBmp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BitBltBmp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BitBltBmp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method BitBltBmp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method BitBltBmp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method BitBltBmp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp::buffer
      IL_001a:  ret
    } // end of method BitBltBmp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltBmp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltBmp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltBmp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltBmp::Release

  } // end of class BitBltBmp

  .class sequential ansi sealed nested public specialname AckBitBltBmp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckBitBltBmp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckBitBltBmp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckBitBltBmp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method AckBitBltBmp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckBitBltBmp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckBitBltBmp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp::buffer
      IL_001a:  ret
    } // end of method AckBitBltBmp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltBmp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltBmp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltBmp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltBmp::Release

  } // end of class AckBitBltBmp

  .class sequential ansi sealed nested public specialname NakBitBltBmp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method NakBitBltBmp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBitBltBmp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBitBltBmp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method NakBitBltBmp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakBitBltBmp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method NakBitBltBmp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp::buffer
      IL_001a:  ret
    } // end of method NakBitBltBmp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltBmp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltBmp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltBmp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltBmp::Release

  } // end of class NakBitBltBmp

  .class sequential ansi sealed nested public specialname BitBltPng
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 x
    .field public int32 y
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method BitBltPng::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BitBltPng::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BitBltPng::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method BitBltPng::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method BitBltPng::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method BitBltPng::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng::buffer
      IL_001a:  ret
    } // end of method BitBltPng::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltPng::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltPng::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltPng::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BitBltPng::Release

  } // end of class BitBltPng

  .class sequential ansi sealed nested public specialname AckBitBltPng
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckBitBltPng::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckBitBltPng::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckBitBltPng::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method AckBitBltPng::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckBitBltPng::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckBitBltPng::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng::buffer
      IL_001a:  ret
    } // end of method AckBitBltPng::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltPng::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltPng::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltPng::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBitBltPng::Release

  } // end of class AckBitBltPng

  .class sequential ansi sealed nested public specialname NakBitBltPng
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buffer
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method NakBitBltPng::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBitBltPng::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBitBltPng::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method NakBitBltPng::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakBitBltPng::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method NakBitBltPng::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng::buffer
      IL_001a:  ret
    } // end of method NakBitBltPng::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltPng::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltPng::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltPng::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBitBltPng::Release

  } // end of class NakBitBltPng

  .class sequential ansi sealed nested public specialname Scroll
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 left
    .field public int32 top
    .field public int32 right
    .field public int32 bottom
    .field public int32 dy
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Scroll::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Scroll::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Scroll
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Scroll::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*,
                                                                                                              int32&)
      IL_001d:  ret
    } // end of method Scroll::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Scroll::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Scroll::Release

  } // end of class Scroll

  .class sequential ansi sealed nested public specialname AckScroll
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckScroll::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckScroll::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/AckScroll
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/AckScroll::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckScroll::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckScroll::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckScroll::Release

  } // end of class AckScroll

  .class sequential ansi sealed nested public specialname NakScroll
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakScroll::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakScroll::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/NakScroll
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/NakScroll::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakScroll::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakScroll::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakScroll::Release

  } // end of class NakScroll

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Success::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Io.VideoDeviceContract/Plot msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$2 
            Recv(valuetype Microsoft.Singularity.Io.VideoDeviceContract/Fill msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$4 
            Recv(valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltBmp msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$6 
            Recv(valuetype Microsoft.Singularity.Io.VideoDeviceContract/BitBltPng msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$8 
            Recv(valuetype Microsoft.Singularity.Io.VideoDeviceContract/Scroll msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckPlot msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakPlot msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class abstract auto ansi nested public specialname Ready$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$3 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckFill msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$3 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakFill msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$2::.ctor

  } // end of class Ready$2

  .class abstract auto ansi nested public specialname Ready$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$3::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$3::.ctor

  } // end of class Ready$3

  .class abstract auto ansi nested public specialname Ready$4
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltBmp msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltBmp msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$4::.ctor

  } // end of class Ready$4

  .class abstract auto ansi nested public specialname Ready$5
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$5::.ctor

  } // end of class Ready$5

  .class abstract auto ansi nested public specialname Ready$6
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckBitBltPng msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakBitBltPng msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$6::.ctor

  } // end of class Ready$6

  .class abstract auto ansi nested public specialname Ready$7
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$7::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$7::.ctor

  } // end of class Ready$7

  .class abstract auto ansi nested public specialname Ready$8
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/AckScroll msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Io.VideoDeviceContract/NakScroll msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$8::.ctor

  } // end of class Ready$8

  .class abstract auto ansi nested public specialname Ready$9
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VideoDeviceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$9::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$9::.ctor

  } // end of class Ready$9

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::'.ctor$PST0600064F'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method VideoDeviceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.VideoDeviceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.VideoDeviceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.VideoDeviceContract/Imp::'.ctor$PST0600064F'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method VideoDeviceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract::.ctor()
    IL_0006:  ret
  } // end of method VideoDeviceContract::.ctor

  .method privatescope static int32  StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       188 (0xbc)
    .maxstack  11
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.6
    IL_000b:  beq        IL_003a

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.s   10
    IL_0013:  beq        IL_004e

    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.4
    IL_001a:  beq        IL_0062

    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.s   12
    IL_0022:  beq        IL_0076

    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.2
    IL_0029:  beq        IL_008a

    IL_002e:  ldloc.1
    IL_002f:  ldc.i4.8
    IL_0030:  beq        IL_009d

    IL_0035:  br         IL_00b1

    IL_003a:  ldarg.0
    IL_003b:  ldc.i4.s   14
    IL_003d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0042:  ldarg.0
    IL_0043:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0048:  stloc.2
    IL_0049:  br         IL_00b8

    IL_004e:  ldarg.0
    IL_004f:  ldc.i4.s   14
    IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0056:  ldarg.0
    IL_0057:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_005c:  stloc.2
    IL_005d:  br         IL_00b8

    IL_0062:  ldarg.0
    IL_0063:  ldc.i4.s   14
    IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_006a:  ldarg.0
    IL_006b:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0070:  stloc.2
    IL_0071:  br         IL_00b8

    IL_0076:  ldarg.0
    IL_0077:  ldc.i4.s   14
    IL_0079:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_007e:  ldarg.0
    IL_007f:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0084:  stloc.2
    IL_0085:  br         IL_00b8

    IL_008a:  ldarg.0
    IL_008b:  ldc.i4.1
    IL_008c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0091:  ldarg.0
    IL_0092:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0097:  stloc.2
    IL_0098:  br         IL_00b8

    IL_009d:  ldarg.0
    IL_009e:  ldc.i4.s   14
    IL_00a0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00a5:  ldarg.0
    IL_00a6:  call       int32 Microsoft.Singularity.Io.VideoDeviceContract::StableState$PST06000027(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00ab:  stloc.2
    IL_00ac:  br         IL_00b8

    IL_00b1:  ldloc.0
    IL_00b2:  stloc.2
    IL_00b3:  br         IL_00b8

    IL_00b8:  ldloc.2
    IL_00b9:  stloc.3
    IL_00ba:  ldloc.2
    IL_00bb:  ret
  } // end of method VideoDeviceContract::StableState

  .method privatescope static int32  CanonicalState$PST06000028(int32 state) cil managed
  {
    // Code size       109 (0x6d)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.6
    IL_0004:  beq        IL_0033

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.s   10
    IL_000c:  beq        IL_003b

    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.4
    IL_0013:  beq        IL_0043

    IL_0018:  ldloc.0
    IL_0019:  ldc.i4.s   12
    IL_001b:  beq        IL_004b

    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.2
    IL_0022:  beq        IL_0053

    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.8
    IL_0029:  beq        IL_005a

    IL_002e:  br         IL_0062

    IL_0033:  ldc.i4.s   14
    IL_0035:  stloc.1
    IL_0036:  br         IL_0069

    IL_003b:  ldc.i4.s   14
    IL_003d:  stloc.1
    IL_003e:  br         IL_0069

    IL_0043:  ldc.i4.s   14
    IL_0045:  stloc.1
    IL_0046:  br         IL_0069

    IL_004b:  ldc.i4.s   14
    IL_004d:  stloc.1
    IL_004e:  br         IL_0069

    IL_0053:  ldc.i4.1
    IL_0054:  stloc.1
    IL_0055:  br         IL_0069

    IL_005a:  ldc.i4.s   14
    IL_005c:  stloc.1
    IL_005d:  br         IL_0069

    IL_0062:  ldarg.0
    IL_0063:  stloc.1
    IL_0064:  br         IL_0069

    IL_0069:  ldloc.1
    IL_006a:  stloc.2
    IL_006b:  ldloc.1
    IL_006c:  ret
  } // end of method VideoDeviceContract::CanonicalState

} // end of class Microsoft.Singularity.Io.VideoDeviceContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.VolumeManagerContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x0000000D)
    .field public static literal specialname int32 RegisterDisk = int32(0x00000003)
    .field public static literal specialname int32 AckRegisterDisk = int32(0x00000004)
    .field public static literal specialname int32 NakRegisterDisk = int32(0x00000005)
    .field public static literal specialname int32 DeregisterDisk = int32(0x00000006)
    .field public static literal specialname int32 AckDeregisterDisk = int32(0x00000007)
    .field public static literal specialname int32 NakDeregisterDisk = int32(0x00000008)
    .field public static literal specialname int32 Connect = int32(0x00000009)
    .field public static literal specialname int32 AckConnect = int32(0x0000000A)
    .field public static literal specialname int32 NakConnect = int32(0x0000000B)
    .field public static literal specialname int32 Success = int32(0x0000000C)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod1
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk AckRegisterDiskPod1
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk NakRegisterDiskPod1
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect ConnectPod0
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000784'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::CanonicalState$PST0600002D(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::CanonicalState$PST0600002D(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "Ready"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "RegisterAck"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "Accept"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "Accept$0"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "Accept$1"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendRegisterDisk(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::DeliverRegisterDisk0$PST060007C4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::MarshallDeliverRegisterDisk0$PST060007C5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.7
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send RegisterDisk in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Imp::SendRegisterDisk

    .method public instance void  RecvAckRegisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckRegisterDisk when next message has t"
      + "ag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Imp::AckRegisterDiskPod1
      IL_0095:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckRegisterDisk in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckRegisterDisk

    .method public instance void  RecvNakRegisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakRegisterDisk when next message has t"
      + "ag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Imp::NakRegisterDiskPod1
      IL_0095:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.1
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv NakRegisterDisk in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvNakRegisterDisk

    .method public instance void  SendDeregisterDisk(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't send DeregisterDisk in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_001c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Imp::SendDeregisterDisk

    .method public instance void  RecvAckDeregisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't recv AckDeregisterDisk in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_001c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Imp::RecvAckDeregisterDisk

    .method public instance void  RecvNakDeregisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't recv NakDeregisterDisk in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_001c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Imp::RecvNakDeregisterDisk

    .method public instance void  RecvConnect([out] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                              [out] uint8& systemId,
                                              [out] uint64& startSector,
                                              [out] uint64& sectorCount) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       250 (0xfa)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00e3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Connect when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_008f:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0094:  stind.i
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_009c:  ldfld      uint8 Microsoft.Singularity.Io.VolumeManagerContract/Connect::systemId
      IL_00a1:  stind.i1
      IL_00a2:  ldarg.3
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_00a9:  ldfld      uint64 Microsoft.Singularity.Io.VolumeManagerContract/Connect::startSector
      IL_00ae:  stind.i8
      IL_00af:  ldarg.s    sectorCount
      IL_00b1:  ldarg.0
      IL_00b2:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_00b7:  ldfld      uint64 Microsoft.Singularity.Io.VolumeManagerContract/Connect::sectorCount
      IL_00bc:  stind.i8
      IL_00bd:  ldarg.0
      IL_00be:  ldc.i4.0
      IL_00bf:  volatile.
      IL_00c1:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_00c6:  ldarg.0
      IL_00c7:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_00cc:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/Connect
      IL_00d2:  ldarg.0
      IL_00d3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d8:  ldc.i4.5
      IL_00d9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00de:  br         IL_00f9

      IL_00e3:  ldstr      "can't recv Connect in state "
      IL_00e8:  ldarg.0
      IL_00e9:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_00ee:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f8:  throw

      IL_00f9:  ret
    } // end of method Imp::RecvConnect

    .method public instance void  SendAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::DeliverAckConnect0$PST060007C6()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::MarshallDeliverAckConnect0$PST060007C7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckConnect in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendAckConnect

    .method public instance void  SendNakConnect(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Io.DiskDeviceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.5
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ac

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0088

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Io.DiskDeviceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_007d:  ldarg.1
      IL_007e:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::DeliverNakConnect0$PST060007C8(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start))
      IL_0083:  br         IL_0095

      IL_0088:  ldloc.3
      IL_0089:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_008e:  ldarg.1
      IL_008f:  ldarg.0
      IL_0090:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::MarshallDeliverNakConnect0$PST060007C9(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start),
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0095:  ldarg.0
      IL_0096:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't send NakConnect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::SendNakConnect

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   12
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   12
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success Microsoft.Singularity.Io.VolumeManagerContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.8
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv Success in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.VolumeManagerContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VolumeManagerContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VolumeManagerContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.VolumeManagerContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.8
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.3
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.VolumeManagerContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckRegisterDisk1$PST0600079F() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0010:  ret
    } // end of method Imp::DeliverAckRegisterDisk1

    .method privatescope instance void  MarshallDeliverAckRegisterDisk1$PST060007A0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverAckRegisterDisk1$PST0600079F()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Imp::AckRegisterDiskPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk::MarshallAll(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckRegisterDisk1

    .method privatescope instance void  DeliverNakRegisterDisk1$PST060007A1() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0010:  ret
    } // end of method Imp::DeliverNakRegisterDisk1

    .method privatescope instance void  MarshallDeliverNakRegisterDisk1$PST060007A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverNakRegisterDisk1$PST060007A1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Imp::NakRegisterDiskPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk::MarshallAll(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakRegisterDisk1

    .method privatescope instance void  DeliverConnect0$PST060007A3(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                    uint8 systemId,
                                                                    uint64 startSector,
                                                                    uint64 sectorCount) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       68 (0x44)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint8 Microsoft.Singularity.Io.VolumeManagerContract/Connect::systemId
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint64 Microsoft.Singularity.Io.VolumeManagerContract/Connect::startSector
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_002a:  ldarg.s    sectorCount
      IL_002c:  stfld      uint64 Microsoft.Singularity.Io.VolumeManagerContract/Connect::sectorCount
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.s   9
      IL_0034:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.s   9
      IL_003c:  volatile.
      IL_003e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0043:  ret
    } // end of method Imp::DeliverConnect0

    .method privatescope instance void  MarshallDeliverConnect0$PST060007A4(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                            uint8 systemId,
                                                                            uint64 startSector,
                                                                            uint64 sectorCount,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    sectorCount
      IL_0006:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverConnect0$PST060007A3(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                         uint8,
                                                                                                                         uint64,
                                                                                                                         uint64)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect Microsoft.Singularity.Io.VolumeManagerContract/Imp::ConnectPod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Connect::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_001f:  ret
    } // end of method Imp::MarshallDeliverConnect0

    .method privatescope instance void  DeliverSuccess0$PST060007A5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST060007A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverSuccess0$PST060007A5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success Microsoft.Singularity.Io.VolumeManagerContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Success::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST060007A7() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060007A8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverContractNotSupported0$PST060007A7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.VolumeManagerContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.VolumeManagerContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk RegisterDiskPod0
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect AckConnectPod0
    .field family valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect NakConnectPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::CanonicalState$PST0600002D(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::CanonicalState$PST0600002D(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "Ready"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "RegisterAck"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "Accept"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "Accept$0"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "Accept$1"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvRegisterDisk([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv RegisterDisk when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Exp::RegisterDiskPod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Exp::RegisterDiskPod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.7
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv RegisterDisk in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Exp::RecvRegisterDisk

    .method public instance void  SendAckRegisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverAckRegisterDisk1$PST0600079F()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallDeliverAckRegisterDisk1$PST060007A0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckRegisterDisk in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckRegisterDisk

    .method public instance void  SendNakRegisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverNakRegisterDisk1$PST060007A1()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallDeliverNakRegisterDisk1$PST060007A2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.1
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakRegisterDisk in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakRegisterDisk

    .method public instance void  RecvDeregisterDisk([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& name) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't recv DeregisterDisk in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_001c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Exp::RecvDeregisterDisk

    .method public instance void  SendAckDeregisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't send AckDeregisterDisk in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_001c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Exp::SendAckDeregisterDisk

    .method public instance void  SendNakDeregisterDisk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       40 (0x28)
      .maxstack  4
      .locals init (int32 V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  br         IL_0011

      IL_0011:  ldstr      "can't send NakDeregisterDisk in state "
      IL_0016:  ldarg.0
      IL_0017:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_001c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0021:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0026:  throw

      IL_0027:  ret
    } // end of method Exp::SendNakDeregisterDisk

    .method public instance void  SendConnect(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                              uint8 systemId,
                                              uint64 startSector,
                                              uint64 sectorCount) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       203 (0xcb)
      .maxstack  14
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Io.DiskDeviceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Io.DiskDeviceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.6
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00b4

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_008c

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Io.DiskDeviceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_007d:  ldarg.1
      IL_007e:  ldarg.2
      IL_007f:  ldarg.3
      IL_0080:  ldarg.s    sectorCount
      IL_0082:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverConnect0$PST060007A3(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                         uint8,
                                                                                                                         uint64,
                                                                                                                         uint64)
      IL_0087:  br         IL_009d

      IL_008c:  ldloc.3
      IL_008d:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0092:  ldarg.1
      IL_0093:  ldarg.2
      IL_0094:  ldarg.3
      IL_0095:  ldarg.s    sectorCount
      IL_0097:  ldarg.0
      IL_0098:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallDeliverConnect0$PST060007A4(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                 uint8,
                                                                                                                                 uint64,
                                                                                                                                 uint64,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_009d:  ldarg.0
      IL_009e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a9:  ldc.i4.5
      IL_00aa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00af:  br         IL_00ca

      IL_00b4:  ldstr      "can't send Connect in state "
      IL_00b9:  ldarg.0
      IL_00ba:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_00bf:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c4:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c9:  throw

      IL_00ca:  ret
    } // end of method Exp::SendConnect

    .method public instance void  RecvAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   10
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckConnect when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect Microsoft.Singularity.Io.VolumeManagerContract/Exp::AckConnectPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/AckConnect
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckConnect in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvAckConnect

    .method public instance void  RecvNakConnect([out] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bb

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   11
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakConnect when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect Microsoft.Singularity.Io.VolumeManagerContract/Exp::NakConnectPod0
      IL_008f:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0094:  stind.i
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect Microsoft.Singularity.Io.VolumeManagerContract/Exp::NakConnectPod0
      IL_00a4:  initobj    Microsoft.Singularity.Io.VolumeManagerContract/NakConnect
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.4
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv NakConnect in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Exp::RecvNakConnect

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverSuccess0$PST060007A5()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallDeliverSuccess0$PST060007A6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Success in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::DeliverContractNotSupported0$PST060007A7()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::MarshallDeliverContractNotSupported0$PST060007A8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.VolumeManagerContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VolumeManagerContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.VolumeManagerContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.VolumeManagerContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.7
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.8
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.3
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.VolumeManagerContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverRegisterDisk0$PST060007C4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Exp::RegisterDiskPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.3
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.3
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverRegisterDisk0

    .method privatescope instance void  MarshallDeliverRegisterDisk0$PST060007C5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) name,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::DeliverRegisterDisk0$PST060007C4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk Microsoft.Singularity.Io.VolumeManagerContract/Exp::RegisterDiskPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::MarshallAll(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverRegisterDisk0

    .method privatescope instance void  DeliverAckConnect0$PST060007C6() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverAckConnect0

    .method privatescope instance void  MarshallDeliverAckConnect0$PST060007C7(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::DeliverAckConnect0$PST060007C6()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect Microsoft.Singularity.Io.VolumeManagerContract/Exp::AckConnectPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/AckConnect::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverAckConnect0

    .method privatescope instance void  DeliverNakConnect0$PST060007C8(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect Microsoft.Singularity.Io.VolumeManagerContract/Exp::NakConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverNakConnect0

    .method privatescope instance void  MarshallDeliverNakConnect0$PST060007C9(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) exp,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::DeliverNakConnect0$PST060007C8(valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect Microsoft.Singularity.Io.VolumeManagerContract/Exp::NakConnectPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverNakConnect0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname RegisterDisk
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method RegisterDisk::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RegisterDisk::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RegisterDisk::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*,
                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method RegisterDisk::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method RegisterDisk::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method RegisterDisk::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk::name
      IL_001a:  ret
    } // end of method RegisterDisk::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RegisterDisk::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RegisterDisk::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RegisterDisk::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RegisterDisk::Release

  } // end of class RegisterDisk

  .class sequential ansi sealed nested public specialname AckRegisterDisk
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRegisterDisk::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRegisterDisk::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*,
                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method AckRegisterDisk::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckRegisterDisk::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegisterDisk::Release

  } // end of class AckRegisterDisk

  .class sequential ansi sealed nested public specialname NakRegisterDisk
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRegisterDisk::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRegisterDisk::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*,
                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method NakRegisterDisk::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakRegisterDisk::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterDisk::Release

  } // end of class NakRegisterDisk

  .class sequential ansi sealed nested public specialname DeregisterDisk
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) name
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method DeregisterDisk::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeregisterDisk::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeregisterDisk::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method DeregisterDisk::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DeregisterDisk::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method DeregisterDisk::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.VolumeManagerContract/DeregisterDisk::name
      IL_001a:  ret
    } // end of method DeregisterDisk::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeregisterDisk::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeregisterDisk::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeregisterDisk::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeregisterDisk::Release

  } // end of class DeregisterDisk

  .class sequential ansi sealed nested public specialname AckDeregisterDisk
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckDeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeregisterDisk::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckDeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeregisterDisk::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/AckDeregisterDisk
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/AckDeregisterDisk::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method AckDeregisterDisk::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckDeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckDeregisterDisk::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregisterDisk::Release

  } // end of class AckDeregisterDisk

  .class sequential ansi sealed nested public specialname NakDeregisterDisk
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakDeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeregisterDisk::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakDeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeregisterDisk::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/NakDeregisterDisk
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/NakDeregisterDisk::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method NakDeregisterDisk::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakDeregisterDisk* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeregisterDisk::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterDisk::Release

  } // end of class NakDeregisterDisk

  .class sequential ansi sealed nested public specialname Connect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) exp
    .field public uint8 systemId
    .field public uint64 startSector
    .field public uint64 sectorCount
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0007:  call       void Microsoft.Singularity.Io.DiskDeviceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method Connect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/Connect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Connect::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Connect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Connect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*)
      IL_0051:  ret
    } // end of method Connect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/Connect::exp
      IL_0025:  ret
    } // end of method Connect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Release

  } // end of class Connect

  .class sequential ansi sealed nested public specialname AckConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/AckConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/AckConnect::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method AckConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Release

  } // end of class AckConnect

  .class sequential ansi sealed nested public specialname NakConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0007:  call       void Microsoft.Singularity.Io.DiskDeviceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NakConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/NakConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method NakConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*)
      IL_0051:  ret
    } // end of method NakConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Io.DiskDeviceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Io.DiskDeviceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Io.DiskDeviceContract/Start) Microsoft.Singularity.Io.VolumeManagerContract/NakConnect::exp
      IL_0025:  ret
    } // end of method NakConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Release

  } // end of class NakConnect

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Success::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.VolumeManagerContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/RegisterAck 
            Recv(valuetype Microsoft.Singularity.Io.VolumeManagerContract/RegisterDisk msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname RegisterAck
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/Accept 
            Send(valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckRegisterDisk msg) cil managed
    {
    } // end of method RegisterAck::Send

    .method family abstract virtual instance void 
            Send(valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakRegisterDisk msg) cil managed
    {
    } // end of method RegisterAck::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method RegisterAck::.ctor

  } // end of class RegisterAck

  .class abstract auto ansi nested public specialname Accept
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/Accept$0 
            Send(valuetype Microsoft.Singularity.Io.VolumeManagerContract/Connect msg) cil managed
    {
    } // end of method Accept::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Accept::.ctor

  } // end of class Accept

  .class abstract auto ansi nested public specialname Accept$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/Accept$1 
            Recv(valuetype Microsoft.Singularity.Io.VolumeManagerContract/AckConnect msg) cil managed
    {
    } // end of method Accept$0::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/Accept$1 
            Recv(valuetype Microsoft.Singularity.Io.VolumeManagerContract/NakConnect msg) cil managed
    {
    } // end of method Accept$0::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Accept$0::.ctor

  } // end of class Accept$0

  .class abstract auto ansi nested public specialname Accept$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.VolumeManagerContract/Accept 
            Epsilon() cil managed
    {
    } // end of method Accept$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Accept$1::.ctor

  } // end of class Accept$1

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::'.ctor$PST06000784'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method VolumeManagerContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.VolumeManagerContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.VolumeManagerContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.VolumeManagerContract/Imp::'.ctor$PST06000784'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method VolumeManagerContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method VolumeManagerContract::.ctor

  .method privatescope static int32  StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  7
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.4
    IL_000b:  beq        IL_001c

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_002f

    IL_0017:  br         IL_0042

    IL_001c:  ldarg.0
    IL_001d:  ldc.i4.6
    IL_001e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0023:  ldarg.0
    IL_0024:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0029:  stloc.2
    IL_002a:  br         IL_0049

    IL_002f:  ldarg.0
    IL_0030:  ldc.i4.1
    IL_0031:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0036:  ldarg.0
    IL_0037:  call       int32 Microsoft.Singularity.Io.VolumeManagerContract::StableState$PST0600002C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_003c:  stloc.2
    IL_003d:  br         IL_0049

    IL_0042:  ldloc.0
    IL_0043:  stloc.2
    IL_0044:  br         IL_0049

    IL_0049:  ldloc.2
    IL_004a:  stloc.3
    IL_004b:  ldloc.2
    IL_004c:  ret
  } // end of method VolumeManagerContract::StableState

  .method privatescope static int32  CanonicalState$PST0600002D(int32 state) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.4
    IL_0004:  beq        IL_0015

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_001c

    IL_0010:  br         IL_0023

    IL_0015:  ldc.i4.6
    IL_0016:  stloc.1
    IL_0017:  br         IL_002a

    IL_001c:  ldc.i4.1
    IL_001d:  stloc.1
    IL_001e:  br         IL_002a

    IL_0023:  ldarg.0
    IL_0024:  stloc.1
    IL_0025:  br         IL_002a

    IL_002a:  ldloc.1
    IL_002b:  stloc.2
    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method VolumeManagerContract::CanonicalState

} // end of class Microsoft.Singularity.Io.VolumeManagerContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.IoTestContract
       extends Microsoft.Singularity.Io.DeviceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x0000000E)
    .field public static literal specialname int32 GetDeviceName = int32(0x00000003)
    .field public static literal specialname int32 AckGetDeviceName = int32(0x00000004)
    .field public static literal specialname int32 Read = int32(0x00000005)
    .field public static literal specialname int32 AckRead = int32(0x00000006)
    .field public static literal specialname int32 NakRead = int32(0x00000007)
    .field public static literal specialname int32 Write = int32(0x00000008)
    .field public static literal specialname int32 AckWrite = int32(0x00000009)
    .field public static literal specialname int32 NakWrite = int32(0x0000000A)
    .field public static literal specialname int32 NoOp = int32(0x0000000B)
    .field public static literal specialname int32 AckNoOp = int32(0x0000000C)
    .field public static literal specialname int32 Success = int32(0x0000000D)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName AckGetDeviceNamePod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/AckRead AckReadPod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/NakRead NakReadPod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite AckWritePod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite NakWritePod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp AckNoOpPod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/Success SuccessPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000846'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.IoTestContract::CanonicalState$PST06000032(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.IoTestContract::CanonicalState$PST06000032(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "Ready"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "DoGetDeviceName"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "DoRead"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "DoWrite"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "DoNoOp"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendGetDeviceName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverGetDeviceName0$PST0600088E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::MarshallDeliverGetDeviceName0$PST0600088F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.7
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send GetDeviceName in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendGetDeviceName

    .method public instance void  RecvAckGetDeviceName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckGetDeviceName when next message has "
      + "tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName Microsoft.Singularity.Io.IoTestContract/Imp::AckGetDeviceNamePod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName Microsoft.Singularity.Io.IoTestContract/Imp::AckGetDeviceNamePod0
      IL_00a2:  initobj    Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.8
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv AckGetDeviceName in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvAckGetDeviceName

    .method public instance void  SendRead(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                           uint64 offset,
                                           uint64 length) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       141 (0x8d)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0076

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0050

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverRead0$PST06000890(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                               uint64,
                                                                                                               uint64)
      IL_004b:  br         IL_005f

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0056:  ldarg.1
      IL_0057:  ldarg.2
      IL_0058:  ldarg.3
      IL_0059:  ldarg.0
      IL_005a:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::MarshallDeliverRead0$PST06000891(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                       uint64,
                                                                                                                       uint64,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005f:  ldarg.0
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0065:  ldarg.0
      IL_0066:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006b:  ldc.i4.6
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_008c

      IL_0076:  ldstr      "can't send Read in state "
      IL_007b:  ldarg.0
      IL_007c:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_0081:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0086:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ret
    } // end of method Imp::SendRead

    .method public instance void  RecvAckRead([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data,
                                              [out] uint64& lengthRead) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       221 (0xdd)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00c6

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckRead when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckRead Microsoft.Singularity.Io.IoTestContract/Imp::AckReadPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckRead Microsoft.Singularity.Io.IoTestContract/Imp::AckReadPod0
      IL_009a:  ldfld      uint64 Microsoft.Singularity.Io.IoTestContract/AckRead::lengthRead
      IL_009f:  stind.i8
      IL_00a0:  ldarg.0
      IL_00a1:  ldc.i4.0
      IL_00a2:  volatile.
      IL_00a4:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckRead Microsoft.Singularity.Io.IoTestContract/Imp::AckReadPod0
      IL_00af:  initobj    Microsoft.Singularity.Io.IoTestContract/AckRead
      IL_00b5:  ldarg.0
      IL_00b6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bb:  ldc.i4.8
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c1:  br         IL_00dc

      IL_00c6:  ldstr      "can't recv AckRead in state "
      IL_00cb:  ldarg.0
      IL_00cc:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00d1:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d6:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00db:  throw

      IL_00dc:  ret
    } // end of method Imp::RecvAckRead

    .method public instance void  RecvNakRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakRead when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/NakRead Microsoft.Singularity.Io.IoTestContract/Imp::NakReadPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.IoTestContract/NakRead
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.8
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv NakRead in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvNakRead

    .method public instance void  SendWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                            uint64 offset,
                                            uint64 length) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       141 (0x8d)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0076

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0050

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverWrite0$PST06000892(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                uint64,
                                                                                                                uint64)
      IL_004b:  br         IL_005f

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0056:  ldarg.1
      IL_0057:  ldarg.2
      IL_0058:  ldarg.3
      IL_0059:  ldarg.0
      IL_005a:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::MarshallDeliverWrite0$PST06000893(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        uint64,
                                                                                                                        uint64,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005f:  ldarg.0
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0065:  ldarg.0
      IL_0066:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006b:  ldc.i4.5
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_008c

      IL_0076:  ldstr      "can't send Write in state "
      IL_007b:  ldarg.0
      IL_007c:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_0081:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0086:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ret
    } // end of method Imp::SendWrite

    .method public instance void  RecvAckWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data,
                                               [out] uint64& lengthWritten) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00c8

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckWrite when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite Microsoft.Singularity.Io.IoTestContract/Imp::AckWritePod0
      IL_008f:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0094:  stind.i
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite Microsoft.Singularity.Io.IoTestContract/Imp::AckWritePod0
      IL_009c:  ldfld      uint64 Microsoft.Singularity.Io.IoTestContract/AckWrite::lengthWritten
      IL_00a1:  stind.i8
      IL_00a2:  ldarg.0
      IL_00a3:  ldc.i4.0
      IL_00a4:  volatile.
      IL_00a6:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite Microsoft.Singularity.Io.IoTestContract/Imp::AckWritePod0
      IL_00b1:  initobj    Microsoft.Singularity.Io.IoTestContract/AckWrite
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bd:  ldc.i4.8
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv AckWrite in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Imp::RecvAckWrite

    .method public instance void  RecvNakWrite() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   10
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakWrite when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite Microsoft.Singularity.Io.IoTestContract/Imp::NakWritePod0
      IL_0097:  initobj    Microsoft.Singularity.Io.IoTestContract/NakWrite
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.8
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NakWrite in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvNakWrite

    .method public instance void  SendNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverNoOp0$PST06000894()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::MarshallDeliverNoOp0$PST06000895(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NoOp in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendNoOp

    .method public instance void  RecvAckNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   12
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   12
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckNoOp when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp Microsoft.Singularity.Io.IoTestContract/Imp::AckNoOpPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.IoTestContract/AckNoOp
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.8
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckNoOp in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckNoOp

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   13
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Success Microsoft.Singularity.Io.IoTestContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.IoTestContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.8
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv Success in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.IoTestContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.IoTestContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.IoTestContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.IoTestContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.IoTestContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       500 (0x1f4)
      .maxstack  9
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               int32 V_15)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_003d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00c5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_010d

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_0155

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.3
      IL_0033:  beq        IL_019d

      IL_0038:  br         IL_01e5

      IL_003d:  ldc.i4.0
      IL_003e:  stloc.2
      IL_003f:  ldarg.0
      IL_0040:  volatile.
      IL_0042:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0047:  stloc.3
      IL_0048:  ldloc.3
      IL_0049:  brtrue     IL_005e

      IL_004e:  ldarg.0
      IL_004f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0054:  stloc.2
      IL_0055:  ldarg.0
      IL_0056:  volatile.
      IL_0058:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_005d:  stloc.3
      IL_005e:  ldloc.3
      IL_005f:  ldc.i4.0
      IL_0060:  ceq
      IL_0062:  brfalse    IL_0075

      IL_0067:  ldloc.2
      IL_0068:  brfalse    IL_0075

      IL_006d:  ldc.i4.m1
      IL_006e:  stloc.s    V_4
      IL_0070:  br         IL_01ed

      IL_0075:  ldloc.3
      IL_0076:  stloc.s    V_4
      IL_0078:  br         IL_01ed

      IL_007d:  ldc.i4.0
      IL_007e:  stloc.s    V_5
      IL_0080:  ldarg.0
      IL_0081:  volatile.
      IL_0083:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0088:  stloc.s    V_6
      IL_008a:  ldloc.s    V_6
      IL_008c:  brtrue     IL_00a3

      IL_0091:  ldarg.0
      IL_0092:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0097:  stloc.s    V_5
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_00a1:  stloc.s    V_6
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  ldc.i4.0
      IL_00a6:  ceq
      IL_00a8:  brfalse    IL_00bc

      IL_00ad:  ldloc.s    V_5
      IL_00af:  brfalse    IL_00bc

      IL_00b4:  ldc.i4.m1
      IL_00b5:  stloc.s    V_4
      IL_00b7:  br         IL_01ed

      IL_00bc:  ldloc.s    V_6
      IL_00be:  stloc.s    V_4
      IL_00c0:  br         IL_01ed

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.s    V_7
      IL_00c8:  ldarg.0
      IL_00c9:  volatile.
      IL_00cb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_00d0:  stloc.s    V_8
      IL_00d2:  ldloc.s    V_8
      IL_00d4:  brtrue     IL_00eb

      IL_00d9:  ldarg.0
      IL_00da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00df:  stloc.s    V_7
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_8
      IL_00ed:  ldc.i4.0
      IL_00ee:  ceq
      IL_00f0:  brfalse    IL_0104

      IL_00f5:  ldloc.s    V_7
      IL_00f7:  brfalse    IL_0104

      IL_00fc:  ldc.i4.m1
      IL_00fd:  stloc.s    V_4
      IL_00ff:  br         IL_01ed

      IL_0104:  ldloc.s    V_8
      IL_0106:  stloc.s    V_4
      IL_0108:  br         IL_01ed

      IL_010d:  ldc.i4.0
      IL_010e:  stloc.s    V_9
      IL_0110:  ldarg.0
      IL_0111:  volatile.
      IL_0113:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0118:  stloc.s    V_10
      IL_011a:  ldloc.s    V_10
      IL_011c:  brtrue     IL_0133

      IL_0121:  ldarg.0
      IL_0122:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0127:  stloc.s    V_9
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0131:  stloc.s    V_10
      IL_0133:  ldloc.s    V_10
      IL_0135:  ldc.i4.0
      IL_0136:  ceq
      IL_0138:  brfalse    IL_014c

      IL_013d:  ldloc.s    V_9
      IL_013f:  brfalse    IL_014c

      IL_0144:  ldc.i4.m1
      IL_0145:  stloc.s    V_4
      IL_0147:  br         IL_01ed

      IL_014c:  ldloc.s    V_10
      IL_014e:  stloc.s    V_4
      IL_0150:  br         IL_01ed

      IL_0155:  ldc.i4.0
      IL_0156:  stloc.s    V_11
      IL_0158:  ldarg.0
      IL_0159:  volatile.
      IL_015b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0160:  stloc.s    V_12
      IL_0162:  ldloc.s    V_12
      IL_0164:  brtrue     IL_017b

      IL_0169:  ldarg.0
      IL_016a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016f:  stloc.s    V_11
      IL_0171:  ldarg.0
      IL_0172:  volatile.
      IL_0174:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0179:  stloc.s    V_12
      IL_017b:  ldloc.s    V_12
      IL_017d:  ldc.i4.0
      IL_017e:  ceq
      IL_0180:  brfalse    IL_0194

      IL_0185:  ldloc.s    V_11
      IL_0187:  brfalse    IL_0194

      IL_018c:  ldc.i4.m1
      IL_018d:  stloc.s    V_4
      IL_018f:  br         IL_01ed

      IL_0194:  ldloc.s    V_12
      IL_0196:  stloc.s    V_4
      IL_0198:  br         IL_01ed

      IL_019d:  ldc.i4.0
      IL_019e:  stloc.s    V_13
      IL_01a0:  ldarg.0
      IL_01a1:  volatile.
      IL_01a3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_01a8:  stloc.s    V_14
      IL_01aa:  ldloc.s    V_14
      IL_01ac:  brtrue     IL_01c3

      IL_01b1:  ldarg.0
      IL_01b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01b7:  stloc.s    V_13
      IL_01b9:  ldarg.0
      IL_01ba:  volatile.
      IL_01bc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_01c1:  stloc.s    V_14
      IL_01c3:  ldloc.s    V_14
      IL_01c5:  ldc.i4.0
      IL_01c6:  ceq
      IL_01c8:  brfalse    IL_01dc

      IL_01cd:  ldloc.s    V_13
      IL_01cf:  brfalse    IL_01dc

      IL_01d4:  ldc.i4.m1
      IL_01d5:  stloc.s    V_4
      IL_01d7:  br         IL_01ed

      IL_01dc:  ldloc.s    V_14
      IL_01de:  stloc.s    V_4
      IL_01e0:  br         IL_01ed

      IL_01e5:  ldc.i4.m1
      IL_01e6:  stloc.s    V_4
      IL_01e8:  br         IL_01ed

      IL_01ed:  ldloc.s    V_4
      IL_01ef:  stloc.s    V_15
      IL_01f1:  ldloc.s    V_4
      IL_01f3:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.IoTestContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckGetDeviceName0$PST06000862(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName Microsoft.Singularity.Io.IoTestContract/Imp::AckGetDeviceNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckGetDeviceName0

    .method privatescope instance void  MarshallDeliverAckGetDeviceName0$PST06000863(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckGetDeviceName0$PST06000862(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName Microsoft.Singularity.Io.IoTestContract/Imp::AckGetDeviceNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::MarshallAll(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetDeviceName0

    .method privatescope instance void  DeliverAckRead0$PST06000864(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                    uint64 lengthRead) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckRead Microsoft.Singularity.Io.IoTestContract/Imp::AckReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckRead Microsoft.Singularity.Io.IoTestContract/Imp::AckReadPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint64 Microsoft.Singularity.Io.IoTestContract/AckRead::lengthRead
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.6
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.6
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0028:  ret
    } // end of method Imp::DeliverAckRead0

    .method privatescope instance void  MarshallDeliverAckRead0$PST06000865(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                            uint64 lengthRead,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckRead0$PST06000864(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                  uint64)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckRead Microsoft.Singularity.Io.IoTestContract/Imp::AckReadPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckRead::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverAckRead0

    .method privatescope instance void  DeliverNakRead0$PST06000866() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakRead0

    .method privatescope instance void  MarshallDeliverNakRead0$PST06000867(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverNakRead0$PST06000866()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/NakRead Microsoft.Singularity.Io.IoTestContract/Imp::NakReadPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.IoTestContract/NakRead::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakRead0

    .method privatescope instance void  DeliverAckWrite0$PST06000868(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                     uint64 lengthWritten) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite Microsoft.Singularity.Io.IoTestContract/Imp::AckWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite Microsoft.Singularity.Io.IoTestContract/Imp::AckWritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint64 Microsoft.Singularity.Io.IoTestContract/AckWrite::lengthWritten
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   9
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   9
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverAckWrite0

    .method privatescope instance void  MarshallDeliverAckWrite0$PST06000869(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                             uint64 lengthWritten,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckWrite0$PST06000868(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                   uint64)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite Microsoft.Singularity.Io.IoTestContract/Imp::AckWritePod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckWrite::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverAckWrite0

    .method privatescope instance void  DeliverNakWrite0$PST0600086A() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNakWrite0

    .method privatescope instance void  MarshallDeliverNakWrite0$PST0600086B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverNakWrite0$PST0600086A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite Microsoft.Singularity.Io.IoTestContract/Imp::NakWritePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.IoTestContract/NakWrite::MarshallAll(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakWrite0

    .method privatescope instance void  DeliverAckNoOp0$PST0600086C() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckNoOp0

    .method privatescope instance void  MarshallDeliverAckNoOp0$PST0600086D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckNoOp0$PST0600086C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp Microsoft.Singularity.Io.IoTestContract/Imp::AckNoOpPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckNoOp::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckNoOp0

    .method privatescope instance void  DeliverSuccess0$PST0600086E() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   13
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   13
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST0600086F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverSuccess0$PST0600086E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Success Microsoft.Singularity.Io.IoTestContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.IoTestContract/Success::MarshallAll(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000870() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000871(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverContractNotSupported0$PST06000870()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.IoTestContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.IoTestContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Io.DeviceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName GetDeviceNamePod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/Read ReadPod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/Write WritePod0
    .field family valuetype Microsoft.Singularity.Io.IoTestContract/NoOp NoOpPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.IoTestContract::CanonicalState$PST06000032(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.IoTestContract::CanonicalState$PST06000032(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "Ready"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "DoGetDeviceName"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "DoRead"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "DoWrite"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "DoNoOp"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvGetDeviceName() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetDeviceName when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName Microsoft.Singularity.Io.IoTestContract/Exp::GetDeviceNamePod0
      IL_0095:  initobj    Microsoft.Singularity.Io.IoTestContract/GetDeviceName
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.7
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv GetDeviceName in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvGetDeviceName

    .method public instance void  SendAckGetDeviceName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       144 (0x90)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0079

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0055

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_5
      IL_0036:  brfalse    IL_0044

      IL_003b:  ldloc.s    V_4
      IL_003d:  ldloc.s    V_5
      IL_003f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_004a:  ldarg.1
      IL_004b:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckGetDeviceName0$PST06000862(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0050:  br         IL_0062

      IL_0055:  ldloc.3
      IL_0056:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_005b:  ldarg.1
      IL_005c:  ldarg.0
      IL_005d:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverAckGetDeviceName0$PST06000863(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0062:  ldarg.0
      IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0068:  ldarg.0
      IL_0069:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006e:  ldc.i4.8
      IL_006f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0074:  br         IL_008f

      IL_0079:  ldstr      "can't send AckGetDeviceName in state "
      IL_007e:  ldarg.0
      IL_007f:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_0084:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0089:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ret
    } // end of method Exp::SendAckGetDeviceName

    .method public instance void  RecvRead([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data,
                                           [out] uint64& offset,
                                           [out] uint64& length) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       234 (0xea)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Read when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_009a:  ldfld      uint64 Microsoft.Singularity.Io.IoTestContract/Read::offset
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_00a7:  ldfld      uint64 Microsoft.Singularity.Io.IoTestContract/Read::length
      IL_00ac:  stind.i8
      IL_00ad:  ldarg.0
      IL_00ae:  ldc.i4.0
      IL_00af:  volatile.
      IL_00b1:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_00bc:  initobj    Microsoft.Singularity.Io.IoTestContract/Read
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.6
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_00e9

      IL_00d3:  ldstr      "can't recv Read in state "
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_00de:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e8:  throw

      IL_00e9:  ret
    } // end of method Exp::RecvRead

    .method public instance void  SendAckRead(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                              uint64 lengthRead) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0074

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004f

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckRead0$PST06000864(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                  uint64)
      IL_004a:  br         IL_005d

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.2
      IL_0057:  ldarg.0
      IL_0058:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverAckRead0$PST06000865(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                          uint64,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005d:  ldarg.0
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0063:  ldarg.0
      IL_0064:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0069:  ldc.i4.8
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send AckRead in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendAckRead

    .method public instance void  SendNakRead() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverNakRead0$PST06000866()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverNakRead0$PST06000867(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakRead in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakRead

    .method public instance void  RecvWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& data,
                                            [out] uint64& offset,
                                            [out] uint64& length) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       234 (0xea)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.8
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Write when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_009a:  ldfld      uint64 Microsoft.Singularity.Io.IoTestContract/Write::offset
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_00a7:  ldfld      uint64 Microsoft.Singularity.Io.IoTestContract/Write::length
      IL_00ac:  stind.i8
      IL_00ad:  ldarg.0
      IL_00ae:  ldc.i4.0
      IL_00af:  volatile.
      IL_00b1:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_00bc:  initobj    Microsoft.Singularity.Io.IoTestContract/Write
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.5
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_00e9

      IL_00d3:  ldstr      "can't recv Write in state "
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_00de:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e8:  throw

      IL_00e9:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  SendAckWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                               uint64 lengthWritten) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0074

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004f

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckWrite0$PST06000868(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                   uint64)
      IL_004a:  br         IL_005d

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.2
      IL_0057:  ldarg.0
      IL_0058:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverAckWrite0$PST06000869(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                           uint64,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005d:  ldarg.0
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0063:  ldarg.0
      IL_0064:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0069:  ldc.i4.8
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send AckWrite in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendAckWrite

    .method public instance void  SendNakWrite() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverNakWrite0$PST0600086A()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverNakWrite0$PST0600086B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakWrite in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakWrite

    .method public instance void  RecvNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   11
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NoOp when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/NoOp Microsoft.Singularity.Io.IoTestContract/Exp::NoOpPod0
      IL_0097:  initobj    Microsoft.Singularity.Io.IoTestContract/NoOp
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv NoOp in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvNoOp

    .method public instance void  SendAckNoOp() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverAckNoOp0$PST0600086C()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverAckNoOp0$PST0600086D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckNoOp in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckNoOp

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverSuccess0$PST0600086E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverSuccess0$PST0600086F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Success in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::DeliverContractNotSupported0$PST06000870()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::MarshallDeliverContractNotSupported0$PST06000871(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.IoTestContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.IoTestContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::MarshallAll(uint8*,
                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.IoTestContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.IoTestContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::MarshallContent(uint8*,
                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       500 (0x1f4)
      .maxstack  9
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               int32 V_15)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_003d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00c5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_010d

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_0155

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.3
      IL_0033:  beq        IL_019d

      IL_0038:  br         IL_01e5

      IL_003d:  ldc.i4.0
      IL_003e:  stloc.2
      IL_003f:  ldarg.0
      IL_0040:  volatile.
      IL_0042:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0047:  stloc.3
      IL_0048:  ldloc.3
      IL_0049:  brtrue     IL_005e

      IL_004e:  ldarg.0
      IL_004f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0054:  stloc.2
      IL_0055:  ldarg.0
      IL_0056:  volatile.
      IL_0058:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_005d:  stloc.3
      IL_005e:  ldloc.3
      IL_005f:  ldc.i4.0
      IL_0060:  ceq
      IL_0062:  brfalse    IL_0075

      IL_0067:  ldloc.2
      IL_0068:  brfalse    IL_0075

      IL_006d:  ldc.i4.m1
      IL_006e:  stloc.s    V_4
      IL_0070:  br         IL_01ed

      IL_0075:  ldloc.3
      IL_0076:  stloc.s    V_4
      IL_0078:  br         IL_01ed

      IL_007d:  ldc.i4.0
      IL_007e:  stloc.s    V_5
      IL_0080:  ldarg.0
      IL_0081:  volatile.
      IL_0083:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0088:  stloc.s    V_6
      IL_008a:  ldloc.s    V_6
      IL_008c:  brtrue     IL_00a3

      IL_0091:  ldarg.0
      IL_0092:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0097:  stloc.s    V_5
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a1:  stloc.s    V_6
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  ldc.i4.0
      IL_00a6:  ceq
      IL_00a8:  brfalse    IL_00bc

      IL_00ad:  ldloc.s    V_5
      IL_00af:  brfalse    IL_00bc

      IL_00b4:  ldc.i4.m1
      IL_00b5:  stloc.s    V_4
      IL_00b7:  br         IL_01ed

      IL_00bc:  ldloc.s    V_6
      IL_00be:  stloc.s    V_4
      IL_00c0:  br         IL_01ed

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.s    V_7
      IL_00c8:  ldarg.0
      IL_00c9:  volatile.
      IL_00cb:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d0:  stloc.s    V_8
      IL_00d2:  ldloc.s    V_8
      IL_00d4:  brtrue     IL_00eb

      IL_00d9:  ldarg.0
      IL_00da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00df:  stloc.s    V_7
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_8
      IL_00ed:  ldc.i4.0
      IL_00ee:  ceq
      IL_00f0:  brfalse    IL_0104

      IL_00f5:  ldloc.s    V_7
      IL_00f7:  brfalse    IL_0104

      IL_00fc:  ldc.i4.m1
      IL_00fd:  stloc.s    V_4
      IL_00ff:  br         IL_01ed

      IL_0104:  ldloc.s    V_8
      IL_0106:  stloc.s    V_4
      IL_0108:  br         IL_01ed

      IL_010d:  ldc.i4.0
      IL_010e:  stloc.s    V_9
      IL_0110:  ldarg.0
      IL_0111:  volatile.
      IL_0113:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0118:  stloc.s    V_10
      IL_011a:  ldloc.s    V_10
      IL_011c:  brtrue     IL_0133

      IL_0121:  ldarg.0
      IL_0122:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0127:  stloc.s    V_9
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0131:  stloc.s    V_10
      IL_0133:  ldloc.s    V_10
      IL_0135:  ldc.i4.0
      IL_0136:  ceq
      IL_0138:  brfalse    IL_014c

      IL_013d:  ldloc.s    V_9
      IL_013f:  brfalse    IL_014c

      IL_0144:  ldc.i4.m1
      IL_0145:  stloc.s    V_4
      IL_0147:  br         IL_01ed

      IL_014c:  ldloc.s    V_10
      IL_014e:  stloc.s    V_4
      IL_0150:  br         IL_01ed

      IL_0155:  ldc.i4.0
      IL_0156:  stloc.s    V_11
      IL_0158:  ldarg.0
      IL_0159:  volatile.
      IL_015b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0160:  stloc.s    V_12
      IL_0162:  ldloc.s    V_12
      IL_0164:  brtrue     IL_017b

      IL_0169:  ldarg.0
      IL_016a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016f:  stloc.s    V_11
      IL_0171:  ldarg.0
      IL_0172:  volatile.
      IL_0174:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0179:  stloc.s    V_12
      IL_017b:  ldloc.s    V_12
      IL_017d:  ldc.i4.0
      IL_017e:  ceq
      IL_0180:  brfalse    IL_0194

      IL_0185:  ldloc.s    V_11
      IL_0187:  brfalse    IL_0194

      IL_018c:  ldc.i4.m1
      IL_018d:  stloc.s    V_4
      IL_018f:  br         IL_01ed

      IL_0194:  ldloc.s    V_12
      IL_0196:  stloc.s    V_4
      IL_0198:  br         IL_01ed

      IL_019d:  ldc.i4.0
      IL_019e:  stloc.s    V_13
      IL_01a0:  ldarg.0
      IL_01a1:  volatile.
      IL_01a3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01a8:  stloc.s    V_14
      IL_01aa:  ldloc.s    V_14
      IL_01ac:  brtrue     IL_01c3

      IL_01b1:  ldarg.0
      IL_01b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01b7:  stloc.s    V_13
      IL_01b9:  ldarg.0
      IL_01ba:  volatile.
      IL_01bc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01c1:  stloc.s    V_14
      IL_01c3:  ldloc.s    V_14
      IL_01c5:  ldc.i4.0
      IL_01c6:  ceq
      IL_01c8:  brfalse    IL_01dc

      IL_01cd:  ldloc.s    V_13
      IL_01cf:  brfalse    IL_01dc

      IL_01d4:  ldc.i4.m1
      IL_01d5:  stloc.s    V_4
      IL_01d7:  br         IL_01ed

      IL_01dc:  ldloc.s    V_14
      IL_01de:  stloc.s    V_4
      IL_01e0:  br         IL_01ed

      IL_01e5:  ldc.i4.m1
      IL_01e6:  stloc.s    V_4
      IL_01e8:  br         IL_01ed

      IL_01ed:  ldloc.s    V_4
      IL_01ef:  stloc.s    V_15
      IL_01f1:  ldloc.s    V_4
      IL_01f3:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.IoTestContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetDeviceName0$PST0600088E() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetDeviceName0

    .method privatescope instance void  MarshallDeliverGetDeviceName0$PST0600088F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverGetDeviceName0$PST0600088E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName Microsoft.Singularity.Io.IoTestContract/Exp::GetDeviceNamePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.IoTestContract/GetDeviceName::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetDeviceName0

    .method privatescope instance void  DeliverRead0$PST06000890(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                 uint64 offset,
                                                                 uint64 length) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint64 Microsoft.Singularity.Io.IoTestContract/Read::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint64 Microsoft.Singularity.Io.IoTestContract/Read::length
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.5
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.5
      IL_002d:  volatile.
      IL_002f:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0034:  ret
    } // end of method Exp::DeliverRead0

    .method privatescope instance void  MarshallDeliverRead0$PST06000891(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                         uint64 offset,
                                                                         uint64 length,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverRead0$PST06000890(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                               uint64,
                                                                                                               uint64)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Read Microsoft.Singularity.Io.IoTestContract/Exp::ReadPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Read::MarshallAll(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverRead0

    .method privatescope instance void  DeliverWrite0$PST06000892(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                  uint64 offset,
                                                                  uint64 length) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      uint64 Microsoft.Singularity.Io.IoTestContract/Write::offset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      uint64 Microsoft.Singularity.Io.IoTestContract/Write::length
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.8
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.8
      IL_002d:  volatile.
      IL_002f:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0034:  ret
    } // end of method Exp::DeliverWrite0

    .method privatescope instance void  MarshallDeliverWrite0$PST06000893(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) data,
                                                                          uint64 offset,
                                                                          uint64 length,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverWrite0$PST06000892(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                uint64,
                                                                                                                uint64)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/Write Microsoft.Singularity.Io.IoTestContract/Exp::WritePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Write::MarshallAll(uint8*,
                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverWrite0

    .method privatescope instance void  DeliverNoOp0$PST06000894() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverNoOp0

    .method privatescope instance void  MarshallDeliverNoOp0$PST06000895(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::DeliverNoOp0$PST06000894()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.IoTestContract/NoOp Microsoft.Singularity.Io.IoTestContract/Exp::NoOpPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.IoTestContract/NoOp::MarshallAll(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverNoOp0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname GetDeviceName
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDeviceName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetDeviceName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/GetDeviceName
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/GetDeviceName::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method GetDeviceName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetDeviceName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetDeviceName::Release

  } // end of class GetDeviceName

  .class sequential ansi sealed nested public specialname AckGetDeviceName
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckGetDeviceName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetDeviceName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetDeviceName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::MarshallContent(uint8*,
                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                   uint8*,
                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method AckGetDeviceName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetDeviceName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckGetDeviceName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName::data
      IL_001a:  ret
    } // end of method AckGetDeviceName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetDeviceName::Release

  } // end of class AckGetDeviceName

  .class sequential ansi sealed nested public specialname Read
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .field public uint64 offset
    .field public uint64 length
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Read::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Read
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Read::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method Read::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Read::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Read::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Read::data
      IL_001a:  ret
    } // end of method Read::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Release

  } // end of class Read

  .class sequential ansi sealed nested public specialname AckRead
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .field public uint64 lengthRead
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/AckRead
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckRead::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method AckRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckRead::data
      IL_001a:  ret
    } // end of method AckRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Release

  } // end of class AckRead

  .class sequential ansi sealed nested public specialname NakRead
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/NakRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/NakRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/NakRead
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/NakRead::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method NakRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/NakRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRead::Release

  } // end of class NakRead

  .class sequential ansi sealed nested public specialname Write
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .field public uint64 offset
    .field public uint64 length
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Write
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Write::MarshallContent(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/Write::data
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname AckWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) data
    .field public uint64 lengthWritten
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/AckWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckWrite::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method AckWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Io.IoTestContract/AckWrite::data
      IL_001a:  ret
    } // end of method AckWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Release

  } // end of class AckWrite

  .class sequential ansi sealed nested public specialname NakWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/NakWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/NakWrite::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method NakWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakWrite::Release

  } // end of class NakWrite

  .class sequential ansi sealed nested public specialname NoOp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/NoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoOp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/NoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NoOp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/NoOp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/NoOp::MarshallContent(uint8*,
                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       uint8*,
                                                                                                       int32&)
      IL_001d:  ret
    } // end of method NoOp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/NoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NoOp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NoOp::Release

  } // end of class NoOp

  .class sequential ansi sealed nested public specialname AckNoOp
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNoOp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNoOp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/AckNoOp
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/AckNoOp::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method AckNoOp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckNoOp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNoOp::Release

  } // end of class AckNoOp

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.IoTestContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.IoTestContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Success::MarshallContent(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          uint8*,
                                                                                                          int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.IoTestContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/DoGetDeviceName 
            Recv(valuetype Microsoft.Singularity.Io.IoTestContract/GetDeviceName msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/DoRead 
            Recv(valuetype Microsoft.Singularity.Io.IoTestContract/Read msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/DoWrite 
            Recv(valuetype Microsoft.Singularity.Io.IoTestContract/Write msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/DoNoOp 
            Recv(valuetype Microsoft.Singularity.Io.IoTestContract/NoOp msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname DoGetDeviceName
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/AckGetDeviceName msg) cil managed
    {
    } // end of method DoGetDeviceName::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoGetDeviceName::.ctor

  } // end of class DoGetDeviceName

  .class abstract auto ansi nested public specialname DoRead
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/AckRead msg) cil managed
    {
    } // end of method DoRead::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/NakRead msg) cil managed
    {
    } // end of method DoRead::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoRead::.ctor

  } // end of class DoRead

  .class abstract auto ansi nested public specialname DoWrite
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/AckWrite msg) cil managed
    {
    } // end of method DoWrite::Send

    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/NakWrite msg) cil managed
    {
    } // end of method DoWrite::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoWrite::.ctor

  } // end of class DoWrite

  .class abstract auto ansi nested public specialname DoNoOp
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Io.IoTestContract/Ready 
            Send(valuetype Microsoft.Singularity.Io.IoTestContract/AckNoOp msg) cil managed
    {
    } // end of method DoNoOp::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoNoOp::.ctor

  } // end of class DoNoOp

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::'.ctor$PST06000846'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method IoTestContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.IoTestContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.IoTestContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.IoTestContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.IoTestContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.IoTestContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.IoTestContract/Imp::'.ctor$PST06000846'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method IoTestContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Io.DeviceContract::.ctor()
    IL_0006:  ret
  } // end of method IoTestContract::.ctor

  .method privatescope static int32  StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Io.IoTestContract::StableState$PST06000031(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method IoTestContract::StableState

  .method privatescope static int32  CanonicalState$PST06000032(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method IoTestContract::CanonicalState

} // end of class Microsoft.Singularity.Io.IoTestContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Io.ChannelDeliveryContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000004)
    .field public static literal specialname int32 Ready = int32(0x00000003)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready ReadyPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000920'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::CanonicalState$PST06000037(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::CanonicalState$PST06000037(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "ReadyState"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "Start"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "DoneState"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::ReadyPod0
      IL_0095:  initobj    Microsoft.Singularity.Io.ChannelDeliveryContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ready in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvReady

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       105 (0x69)
      .maxstack  4
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               int32 V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_001a

      IL_0015:  br         IL_005a

      IL_001a:  ldc.i4.0
      IL_001b:  stloc.2
      IL_001c:  ldarg.0
      IL_001d:  volatile.
      IL_001f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0024:  stloc.3
      IL_0025:  ldloc.3
      IL_0026:  brtrue     IL_003b

      IL_002b:  ldarg.0
      IL_002c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0031:  stloc.2
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  ldc.i4.0
      IL_003d:  ceq
      IL_003f:  brfalse    IL_0052

      IL_0044:  ldloc.2
      IL_0045:  brfalse    IL_0052

      IL_004a:  ldc.i4.m1
      IL_004b:  stloc.s    V_4
      IL_004d:  br         IL_0062

      IL_0052:  ldloc.3
      IL_0053:  stloc.s    V_4
      IL_0055:  br         IL_0062

      IL_005a:  ldc.i4.m1
      IL_005b:  stloc.s    V_4
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.s    V_4
      IL_0064:  stloc.s    V_5
      IL_0066:  ldloc.s    V_4
      IL_0068:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST06000932() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST06000933(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::DeliverReady0$PST06000932()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Ready::MarshallAll(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000934() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000935(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::DeliverContractNotSupported0$PST06000934()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .pack 0
    .size 1
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::CanonicalState$PST06000037(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::CanonicalState$PST06000037(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "ReadyState"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "Start"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "DoneState"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::DeliverReady0$PST06000932()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::MarshallDeliverReady0$PST06000933(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ready in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendReady

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::DeliverContractNotSupported0$PST06000934()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::MarshallDeliverContractNotSupported0$PST06000935(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       105 (0x69)
      .maxstack  4
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               int32 V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_001a

      IL_0015:  br         IL_005a

      IL_001a:  ldc.i4.0
      IL_001b:  stloc.2
      IL_001c:  ldarg.0
      IL_001d:  volatile.
      IL_001f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0024:  stloc.3
      IL_0025:  ldloc.3
      IL_0026:  brtrue     IL_003b

      IL_002b:  ldarg.0
      IL_002c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0031:  stloc.2
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  ldc.i4.0
      IL_003d:  ceq
      IL_003f:  brfalse    IL_0052

      IL_0044:  ldloc.2
      IL_0045:  brfalse    IL_0052

      IL_004a:  ldc.i4.m1
      IL_004b:  stloc.s    V_4
      IL_004d:  br         IL_0062

      IL_0052:  ldloc.3
      IL_0053:  stloc.s    V_4
      IL_0055:  br         IL_0062

      IL_005a:  ldc.i4.m1
      IL_005b:  stloc.s    V_4
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.s    V_4
      IL_0064:  stloc.s    V_5
      IL_0066:  ldloc.s    V_4
      IL_0068:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

  } // end of class Exp

  .class sequential ansi nested public beforefieldinit MemoryRegion
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field public native uint Base
    .field public native uint Length
    .method public hidebysig instance void 
            Initialize(native uint baseAddress,
                       native uint length) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  stfld      native uint Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion::Base
      IL_0007:  ldarg.0
      IL_0008:  ldarg.2
      IL_0009:  stfld      native uint Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion::Length
      IL_000e:  ret
    } // end of method MemoryRegion::Initialize

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method MemoryRegion::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method MemoryRegion::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       10 (0xa)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.0
      IL_0004:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*)
      IL_0009:  ret
    } // end of method MemoryRegion::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion
      IL_0022:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/MemoryRegion::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method MemoryRegion::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method MemoryRegion::Release

  } // end of class MemoryRegion

  .class sequential ansi sealed nested public specialname Ready
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Io.ChannelDeliveryContract/Ready
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Ready::MarshallContent(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 uint8*,
                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Io.ChannelDeliveryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .field public static literal string ModuleName = "/service/channel-delivery"
  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.ChannelDeliveryContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.ChannelDeliveryContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::'.ctor$PST06000920'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ChannelDeliveryContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Io.ChannelDeliveryContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Io.ChannelDeliveryContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Io.ChannelDeliveryContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Io.ChannelDeliveryContract/Imp::'.ctor$PST06000920'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ChannelDeliveryContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method ChannelDeliveryContract::.ctor

  .method privatescope static int32  StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  7
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_001c

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.4
    IL_0012:  beq        IL_002f

    IL_0017:  br         IL_0042

    IL_001c:  ldarg.0
    IL_001d:  ldc.i4.1
    IL_001e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0023:  ldarg.0
    IL_0024:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0029:  stloc.2
    IL_002a:  br         IL_0049

    IL_002f:  ldarg.0
    IL_0030:  ldc.i4.1
    IL_0031:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0036:  ldarg.0
    IL_0037:  call       int32 Microsoft.Singularity.Io.ChannelDeliveryContract::StableState$PST06000036(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_003c:  stloc.2
    IL_003d:  br         IL_0049

    IL_0042:  ldloc.0
    IL_0043:  stloc.2
    IL_0044:  br         IL_0049

    IL_0049:  ldloc.2
    IL_004a:  stloc.3
    IL_004b:  ldloc.2
    IL_004c:  ret
  } // end of method ChannelDeliveryContract::StableState

  .method privatescope static int32  CanonicalState$PST06000037(int32 state) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_0015

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.4
    IL_000b:  beq        IL_001c

    IL_0010:  br         IL_0023

    IL_0015:  ldc.i4.1
    IL_0016:  stloc.1
    IL_0017:  br         IL_002a

    IL_001c:  ldc.i4.1
    IL_001d:  stloc.1
    IL_001e:  br         IL_002a

    IL_0023:  ldarg.0
    IL_0024:  stloc.1
    IL_0025:  br         IL_002a

    IL_002a:  ldloc.1
    IL_002b:  stloc.2
    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method ChannelDeliveryContract::CanonicalState

} // end of class Microsoft.Singularity.Io.ChannelDeliveryContract


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
