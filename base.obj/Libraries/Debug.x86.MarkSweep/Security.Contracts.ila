
//  Microsoft (R) .NET Framework IL Disassembler.  Version 2.0.50727.42
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v1.1.9999
.assembly extern Directory.Contracts
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly extern Microsoft.SingSharp.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:3555:0
}
.assembly extern System.Compiler.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:5031:5
}
.assembly extern Corlib
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly Security.Contracts
{
  .custom instance void [Corlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 2F 4D 69 63 72 6F 73 6F 66 74 20 52 65 73   // ../Microsoft Res
                                                                                              65 61 72 63 68 20 53 69 6E 67 75 6C 61 72 69 74   // earch Singularit
                                                                                              79 20 4F 70 65 72 61 74 69 6E 67 20 53 79 73 74   // y Operating Syst
                                                                                              65 6D 00 00 )                                     // em..
  .custom instance void [Corlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                              70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom instance void [Corlib]System.Reflection.AssemblyKeyFileAttribute::.ctor(string) = ( 01 00 0A 70 75 62 6C 69 63 2E 73 6E 6B 00 00 )    // ...public.snk..
  .custom instance void [Corlib]System.Reflection.AssemblyDelaySignAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [Corlib]System.Diagnostics.DebuggableAttribute::.ctor(bool,
  //                                                                              bool) = ( 01 00 01 01 00 00 ) 

  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                2B 96 12 82 73 B1 F0 B2 89 A1 53 81 A7 A1 1A BF   // +...s.....S.....
                07 40 A0 08 21 51 DE DF 0D 8C 66 0D 61 9A 97 19   // .@..!Q....f.a...
                07 08 76 E4 94 44 5A AB 22 BC B3 97 D7 B4 FF 97   // ..v..DZ.".......
                CA 80 ED 49 B3 FC 2B 87 BB 76 7B 60 CA FB F9 49   // ...I..+..v{`...I
                AA 43 5F CF 17 DE B3 19 01 BE 16 49 3C 87 DF E6   // .C_........I<...
                1D 71 F5 18 5F 06 97 A7 0A B5 E0 F1 E0 5C 70 46   // .q.._........\pF
                DB 0D 28 C1 BE 6D 83 DA 3F AC 58 16 1C 56 3C A5   // ..(..m..?.X..V<.
                9D C2 EF 9C E3 02 30 D9 37 7A A6 3D D2 76 CD BF ) // ......0.7z.=.v..
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module Security.Contracts.dll
// MVID: {A406F9AA-0DB1-40E1-8A53-5DA837CC6FB9}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00010001    //  ILONLY TRACKDEBUGDATA
// Image base: 0x00E20000


// =============== CLASS MEMBERS DECLARATION ===================

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Security.SecurityDiagnosticsContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x0000000A)
    .field public static literal specialname int32 Ready = int32(0x00000003)
    .field public static literal specialname int32 GetStatistics = int32(0x00000004)
    .field public static literal specialname int32 GetStatisticsAck = int32(0x00000005)
    .field public static literal specialname int32 ClearStatistics = int32(0x00000006)
    .field public static literal specialname int32 Ack = int32(0x00000007)
    .field public static literal specialname int32 FlushCaches = int32(0x00000008)
    .field public static literal specialname int32 Disable = int32(0x00000009)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready ReadyPod0
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck GetStatisticsAckPod0
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack AckPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000006'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::CanonicalState$PST06000005(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::CanonicalState$PST06000005(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "ReadyState"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "ReadyState$0"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "ReadyState$1"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "ReadyState$2"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "ReadyState$3"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::ReadyPod0
      IL_0095:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.8
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ready in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendGetStatistics() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverGetStatistics0$PST0600003E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::MarshallDeliverGetStatistics0$PST0600003F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send GetStatistics in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendGetStatistics

    .method public instance void  RecvGetStatisticsAck([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& stats) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetStatisticsAck when next message has "
      + "tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::GetStatisticsAckPod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::GetStatisticsAckPod0
      IL_00a2:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.8
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv GetStatisticsAck in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvGetStatisticsAck

    .method public instance void  SendClearStatistics() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverClearStatistics0$PST06000040()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::MarshallDeliverClearStatistics0$PST06000041(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.7
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ClearStatistics in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendClearStatistics

    .method public instance void  RecvAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       518 (0x206)
      .maxstack  17
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_00ba

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_0153

      IL_0021:  br         IL_01ef

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  ldarg.0
      IL_0029:  volatile.
      IL_002b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0030:  stloc.2
      IL_0031:  ldloc.2
      IL_0032:  brtrue     IL_0047

      IL_0037:  ldarg.0
      IL_0038:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003d:  stloc.1
      IL_003e:  ldarg.0
      IL_003f:  volatile.
      IL_0041:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0046:  stloc.2
      IL_0047:  ldloc.2
      IL_0048:  ldc.i4.0
      IL_0049:  ceq
      IL_004b:  brfalse    IL_0069

      IL_0050:  ldloc.1
      IL_0051:  brfalse    IL_0061

      IL_0056:  ldstr      "Peer is closed"
      IL_005b:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0060:  throw

      IL_0061:  ldarg.0
      IL_0062:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0067:  br.s       IL_0026

      IL_0069:  ldarg.0
      IL_006a:  ldc.i4.7
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0070:  ldloc.2
      IL_0071:  ldc.i4.7
      IL_0072:  beq        IL_0094

      IL_0077:  ldstr      "can't recv Ack when next message has tag "
      IL_007c:  ldarg.0
      IL_007d:  volatile.
      IL_007f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0084:  box        [Corlib]System.Int32
      IL_0089:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_008e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0093:  throw

      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::AckPod0
      IL_00a3:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.8
      IL_00b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b5:  br         IL_0205

      IL_00ba:  ldc.i4.0
      IL_00bb:  stloc.3
      IL_00bc:  ldarg.0
      IL_00bd:  volatile.
      IL_00bf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_00c4:  stloc.s    V_4
      IL_00c6:  ldloc.s    V_4
      IL_00c8:  brtrue     IL_00de

      IL_00cd:  ldarg.0
      IL_00ce:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d3:  stloc.3
      IL_00d4:  ldarg.0
      IL_00d5:  volatile.
      IL_00d7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_00dc:  stloc.s    V_4
      IL_00de:  ldloc.s    V_4
      IL_00e0:  ldc.i4.0
      IL_00e1:  ceq
      IL_00e3:  brfalse    IL_0101

      IL_00e8:  ldloc.3
      IL_00e9:  brfalse    IL_00f9

      IL_00ee:  ldstr      "Peer is closed"
      IL_00f3:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00f8:  throw

      IL_00f9:  ldarg.0
      IL_00fa:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00ff:  br.s       IL_00ba

      IL_0101:  ldarg.0
      IL_0102:  ldc.i4.7
      IL_0103:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0108:  ldloc.s    V_4
      IL_010a:  ldc.i4.7
      IL_010b:  beq        IL_012d

      IL_0110:  ldstr      "can't recv Ack when next message has tag "
      IL_0115:  ldarg.0
      IL_0116:  volatile.
      IL_0118:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_011d:  box        [Corlib]System.Int32
      IL_0122:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0127:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_012c:  throw

      IL_012d:  ldarg.0
      IL_012e:  ldc.i4.0
      IL_012f:  volatile.
      IL_0131:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0136:  ldarg.0
      IL_0137:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::AckPod0
      IL_013c:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack
      IL_0142:  ldarg.0
      IL_0143:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0148:  ldc.i4.8
      IL_0149:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_014e:  br         IL_0205

      IL_0153:  ldc.i4.0
      IL_0154:  stloc.s    V_5
      IL_0156:  ldarg.0
      IL_0157:  volatile.
      IL_0159:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_015e:  stloc.s    V_6
      IL_0160:  ldloc.s    V_6
      IL_0162:  brtrue     IL_0179

      IL_0167:  ldarg.0
      IL_0168:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016d:  stloc.s    V_5
      IL_016f:  ldarg.0
      IL_0170:  volatile.
      IL_0172:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0177:  stloc.s    V_6
      IL_0179:  ldloc.s    V_6
      IL_017b:  ldc.i4.0
      IL_017c:  ceq
      IL_017e:  brfalse    IL_019d

      IL_0183:  ldloc.s    V_5
      IL_0185:  brfalse    IL_0195

      IL_018a:  ldstr      "Peer is closed"
      IL_018f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0194:  throw

      IL_0195:  ldarg.0
      IL_0196:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_019b:  br.s       IL_0153

      IL_019d:  ldarg.0
      IL_019e:  ldc.i4.7
      IL_019f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01a4:  ldloc.s    V_6
      IL_01a6:  ldc.i4.7
      IL_01a7:  beq        IL_01c9

      IL_01ac:  ldstr      "can't recv Ack when next message has tag "
      IL_01b1:  ldarg.0
      IL_01b2:  volatile.
      IL_01b4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_01b9:  box        [Corlib]System.Int32
      IL_01be:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_01c3:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01c8:  throw

      IL_01c9:  ldarg.0
      IL_01ca:  ldc.i4.0
      IL_01cb:  volatile.
      IL_01cd:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_01d2:  ldarg.0
      IL_01d3:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::AckPod0
      IL_01d8:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack
      IL_01de:  ldarg.0
      IL_01df:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01e4:  ldc.i4.8
      IL_01e5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01ea:  br         IL_0205

      IL_01ef:  ldstr      "can't recv Ack in state "
      IL_01f4:  ldarg.0
      IL_01f5:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_01fa:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_01ff:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0204:  throw

      IL_0205:  ret
    } // end of method Imp::RecvAck

    .method public instance void  SendFlushCaches() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverFlushCaches0$PST06000042()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::MarshallDeliverFlushCaches0$PST06000043(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send FlushCaches in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendFlushCaches

    .method public instance void  SendDisable(bool yes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverDisable0$PST06000044(bool)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::MarshallDeliverDisable0$PST06000045(bool,
                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.4
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send Disable in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendDisable

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       500 (0x1f4)
      .maxstack  9
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               int32 V_15)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_003d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00c5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_010d

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_0155

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.3
      IL_0033:  beq        IL_019d

      IL_0038:  br         IL_01e5

      IL_003d:  ldc.i4.0
      IL_003e:  stloc.2
      IL_003f:  ldarg.0
      IL_0040:  volatile.
      IL_0042:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0047:  stloc.3
      IL_0048:  ldloc.3
      IL_0049:  brtrue     IL_005e

      IL_004e:  ldarg.0
      IL_004f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0054:  stloc.2
      IL_0055:  ldarg.0
      IL_0056:  volatile.
      IL_0058:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_005d:  stloc.3
      IL_005e:  ldloc.3
      IL_005f:  ldc.i4.0
      IL_0060:  ceq
      IL_0062:  brfalse    IL_0075

      IL_0067:  ldloc.2
      IL_0068:  brfalse    IL_0075

      IL_006d:  ldc.i4.m1
      IL_006e:  stloc.s    V_4
      IL_0070:  br         IL_01ed

      IL_0075:  ldloc.3
      IL_0076:  stloc.s    V_4
      IL_0078:  br         IL_01ed

      IL_007d:  ldc.i4.0
      IL_007e:  stloc.s    V_5
      IL_0080:  ldarg.0
      IL_0081:  volatile.
      IL_0083:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0088:  stloc.s    V_6
      IL_008a:  ldloc.s    V_6
      IL_008c:  brtrue     IL_00a3

      IL_0091:  ldarg.0
      IL_0092:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0097:  stloc.s    V_5
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_00a1:  stloc.s    V_6
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  ldc.i4.0
      IL_00a6:  ceq
      IL_00a8:  brfalse    IL_00bc

      IL_00ad:  ldloc.s    V_5
      IL_00af:  brfalse    IL_00bc

      IL_00b4:  ldc.i4.m1
      IL_00b5:  stloc.s    V_4
      IL_00b7:  br         IL_01ed

      IL_00bc:  ldloc.s    V_6
      IL_00be:  stloc.s    V_4
      IL_00c0:  br         IL_01ed

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.s    V_7
      IL_00c8:  ldarg.0
      IL_00c9:  volatile.
      IL_00cb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_00d0:  stloc.s    V_8
      IL_00d2:  ldloc.s    V_8
      IL_00d4:  brtrue     IL_00eb

      IL_00d9:  ldarg.0
      IL_00da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00df:  stloc.s    V_7
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_8
      IL_00ed:  ldc.i4.0
      IL_00ee:  ceq
      IL_00f0:  brfalse    IL_0104

      IL_00f5:  ldloc.s    V_7
      IL_00f7:  brfalse    IL_0104

      IL_00fc:  ldc.i4.m1
      IL_00fd:  stloc.s    V_4
      IL_00ff:  br         IL_01ed

      IL_0104:  ldloc.s    V_8
      IL_0106:  stloc.s    V_4
      IL_0108:  br         IL_01ed

      IL_010d:  ldc.i4.0
      IL_010e:  stloc.s    V_9
      IL_0110:  ldarg.0
      IL_0111:  volatile.
      IL_0113:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0118:  stloc.s    V_10
      IL_011a:  ldloc.s    V_10
      IL_011c:  brtrue     IL_0133

      IL_0121:  ldarg.0
      IL_0122:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0127:  stloc.s    V_9
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0131:  stloc.s    V_10
      IL_0133:  ldloc.s    V_10
      IL_0135:  ldc.i4.0
      IL_0136:  ceq
      IL_0138:  brfalse    IL_014c

      IL_013d:  ldloc.s    V_9
      IL_013f:  brfalse    IL_014c

      IL_0144:  ldc.i4.m1
      IL_0145:  stloc.s    V_4
      IL_0147:  br         IL_01ed

      IL_014c:  ldloc.s    V_10
      IL_014e:  stloc.s    V_4
      IL_0150:  br         IL_01ed

      IL_0155:  ldc.i4.0
      IL_0156:  stloc.s    V_11
      IL_0158:  ldarg.0
      IL_0159:  volatile.
      IL_015b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0160:  stloc.s    V_12
      IL_0162:  ldloc.s    V_12
      IL_0164:  brtrue     IL_017b

      IL_0169:  ldarg.0
      IL_016a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016f:  stloc.s    V_11
      IL_0171:  ldarg.0
      IL_0172:  volatile.
      IL_0174:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0179:  stloc.s    V_12
      IL_017b:  ldloc.s    V_12
      IL_017d:  ldc.i4.0
      IL_017e:  ceq
      IL_0180:  brfalse    IL_0194

      IL_0185:  ldloc.s    V_11
      IL_0187:  brfalse    IL_0194

      IL_018c:  ldc.i4.m1
      IL_018d:  stloc.s    V_4
      IL_018f:  br         IL_01ed

      IL_0194:  ldloc.s    V_12
      IL_0196:  stloc.s    V_4
      IL_0198:  br         IL_01ed

      IL_019d:  ldc.i4.0
      IL_019e:  stloc.s    V_13
      IL_01a0:  ldarg.0
      IL_01a1:  volatile.
      IL_01a3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_01a8:  stloc.s    V_14
      IL_01aa:  ldloc.s    V_14
      IL_01ac:  brtrue     IL_01c3

      IL_01b1:  ldarg.0
      IL_01b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01b7:  stloc.s    V_13
      IL_01b9:  ldarg.0
      IL_01ba:  volatile.
      IL_01bc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_01c1:  stloc.s    V_14
      IL_01c3:  ldloc.s    V_14
      IL_01c5:  ldc.i4.0
      IL_01c6:  ceq
      IL_01c8:  brfalse    IL_01dc

      IL_01cd:  ldloc.s    V_13
      IL_01cf:  brfalse    IL_01dc

      IL_01d4:  ldc.i4.m1
      IL_01d5:  stloc.s    V_4
      IL_01d7:  br         IL_01ed

      IL_01dc:  ldloc.s    V_14
      IL_01de:  stloc.s    V_4
      IL_01e0:  br         IL_01ed

      IL_01e5:  ldc.i4.m1
      IL_01e6:  stloc.s    V_4
      IL_01e8:  br         IL_01ed

      IL_01ed:  ldloc.s    V_4
      IL_01ef:  stloc.s    V_15
      IL_01f1:  ldloc.s    V_4
      IL_01f3:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST0600001E() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST0600001F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverReady0$PST0600001E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverGetStatisticsAck0$PST06000020(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) stats) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::GetStatisticsAckPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverGetStatisticsAck0

    .method privatescope instance void  MarshallDeliverGetStatisticsAck0$PST06000021(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) stats,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverGetStatisticsAck0$PST06000020(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::GetStatisticsAckPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverGetStatisticsAck0

    .method privatescope instance void  DeliverAck0$PST06000022() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAck0

    .method privatescope instance void  MarshallDeliverAck0$PST06000023(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverAck0$PST06000022()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::AckPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack::MarshallAll(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAck0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000024() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverContractNotSupported0$PST06000024()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics GetStatisticsPod0
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics ClearStatisticsPod0
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches FlushCachesPod0
    .field family valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable DisablePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::CanonicalState$PST06000005(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::CanonicalState$PST06000005(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       158 (0x9e)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0042

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.7
      IL_0015:  beq        IL_004d

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.6
      IL_001c:  beq        IL_0058

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.5
      IL_0023:  beq        IL_0063

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.4
      IL_002a:  beq        IL_006e

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.3
      IL_0031:  beq        IL_0079

      IL_0036:  ldloc.0
      IL_0037:  ldc.i4.2
      IL_0038:  beq        IL_0084

      IL_003d:  br         IL_008f

      IL_0042:  ldstr      "ReadyState"
      IL_0047:  stloc.1
      IL_0048:  br         IL_009a

      IL_004d:  ldstr      "ReadyState$0"
      IL_0052:  stloc.1
      IL_0053:  br         IL_009a

      IL_0058:  ldstr      "ReadyState$1"
      IL_005d:  stloc.1
      IL_005e:  br         IL_009a

      IL_0063:  ldstr      "ReadyState$2"
      IL_0068:  stloc.1
      IL_0069:  br         IL_009a

      IL_006e:  ldstr      "ReadyState$3"
      IL_0073:  stloc.1
      IL_0074:  br         IL_009a

      IL_0079:  ldstr      "Start"
      IL_007e:  stloc.1
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "DoneState"
      IL_0089:  stloc.1
      IL_008a:  br         IL_009a

      IL_008f:  ldstr      "<protocol terminated>"
      IL_0094:  stloc.1
      IL_0095:  br         IL_009a

      IL_009a:  ldloc.1
      IL_009b:  stloc.2
      IL_009c:  ldloc.1
      IL_009d:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverReady0$PST0600001E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallDeliverReady0$PST0600001F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.8
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ready in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvGetStatistics() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetStatistics when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::GetStatisticsPod0
      IL_0095:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv GetStatistics in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvGetStatistics

    .method public instance void  SendGetStatisticsAck(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) stats) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverGetStatisticsAck0$PST06000020(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallDeliverGetStatisticsAck0$PST06000021(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.8
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send GetStatisticsAck in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendGetStatisticsAck

    .method public instance void  RecvClearStatistics() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ClearStatistics when next message has t"
      + "ag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::ClearStatisticsPod0
      IL_0095:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.7
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ClearStatistics in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvClearStatistics

    .method public instance void  SendAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       303 (0x12f)
      .maxstack  20
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_0072

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_00c5

      IL_0021:  br         IL_0118

      IL_0026:  ldarg.0
      IL_0027:  ldloca.s   V_1
      IL_0029:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_002e:  stloc.2
      IL_002f:  ldloc.2
      IL_0030:  stloc.3
      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0037:  stloc.s    V_4
      IL_0039:  ldloc.1
      IL_003a:  brtrue     IL_004f

      IL_003f:  ldloc.3
      IL_0040:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0045:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverAck0$PST06000022()
      IL_004a:  br         IL_005b

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallDeliverAck0$PST06000023(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.8
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_012e

      IL_0072:  ldarg.0
      IL_0073:  ldloca.s   V_5
      IL_0075:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  stloc.s    V_7
      IL_0080:  ldloc.s    V_7
      IL_0082:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0087:  stloc.s    V_8
      IL_0089:  ldloc.s    V_5
      IL_008b:  brtrue     IL_00a1

      IL_0090:  ldloc.s    V_7
      IL_0092:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0097:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverAck0$PST06000022()
      IL_009c:  br         IL_00ae

      IL_00a1:  ldloc.s    V_7
      IL_00a3:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_00a8:  ldarg.0
      IL_00a9:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallDeliverAck0$PST06000023(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00ae:  ldarg.0
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b4:  ldarg.0
      IL_00b5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ba:  ldc.i4.8
      IL_00bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c0:  br         IL_012e

      IL_00c5:  ldarg.0
      IL_00c6:  ldloca.s   V_9
      IL_00c8:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00cd:  stloc.s    V_10
      IL_00cf:  ldloc.s    V_10
      IL_00d1:  stloc.s    V_11
      IL_00d3:  ldloc.s    V_11
      IL_00d5:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_00da:  stloc.s    V_12
      IL_00dc:  ldloc.s    V_9
      IL_00de:  brtrue     IL_00f4

      IL_00e3:  ldloc.s    V_11
      IL_00e5:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_00ea:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverAck0$PST06000022()
      IL_00ef:  br         IL_0101

      IL_00f4:  ldloc.s    V_11
      IL_00f6:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_00fb:  ldarg.0
      IL_00fc:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallDeliverAck0$PST06000023(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0101:  ldarg.0
      IL_0102:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0107:  ldarg.0
      IL_0108:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_010d:  ldc.i4.8
      IL_010e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0113:  br         IL_012e

      IL_0118:  ldstr      "can't send Ack in state "
      IL_011d:  ldarg.0
      IL_011e:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_0123:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0128:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_012d:  throw

      IL_012e:  ret
    } // end of method Exp::SendAck

    .method public instance void  RecvFlushCaches() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.8
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv FlushCaches when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::FlushCachesPod0
      IL_0095:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv FlushCaches in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvFlushCaches

    .method public instance void  RecvDisable([out] bool& yes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       214 (0xd6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bf

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Disable when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DisablePod0
      IL_008f:  ldfld      bool Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable::yes
      IL_0094:  stobj      [Corlib]System.Boolean
      IL_0099:  ldarg.0
      IL_009a:  ldc.i4.0
      IL_009b:  volatile.
      IL_009d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DisablePod0
      IL_00a8:  initobj    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b4:  ldc.i4.4
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_00d5

      IL_00bf:  ldstr      "can't recv Disable in state "
      IL_00c4:  ldarg.0
      IL_00c5:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_00ca:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d4:  throw

      IL_00d5:  ret
    } // end of method Exp::RecvDisable

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::DeliverContractNotSupported0$PST06000024()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::MarshallDeliverContractNotSupported0$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       500 (0x1f4)
      .maxstack  9
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               int32 V_15)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_003d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00c5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_010d

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_0155

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.3
      IL_0033:  beq        IL_019d

      IL_0038:  br         IL_01e5

      IL_003d:  ldc.i4.0
      IL_003e:  stloc.2
      IL_003f:  ldarg.0
      IL_0040:  volatile.
      IL_0042:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0047:  stloc.3
      IL_0048:  ldloc.3
      IL_0049:  brtrue     IL_005e

      IL_004e:  ldarg.0
      IL_004f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0054:  stloc.2
      IL_0055:  ldarg.0
      IL_0056:  volatile.
      IL_0058:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_005d:  stloc.3
      IL_005e:  ldloc.3
      IL_005f:  ldc.i4.0
      IL_0060:  ceq
      IL_0062:  brfalse    IL_0075

      IL_0067:  ldloc.2
      IL_0068:  brfalse    IL_0075

      IL_006d:  ldc.i4.m1
      IL_006e:  stloc.s    V_4
      IL_0070:  br         IL_01ed

      IL_0075:  ldloc.3
      IL_0076:  stloc.s    V_4
      IL_0078:  br         IL_01ed

      IL_007d:  ldc.i4.0
      IL_007e:  stloc.s    V_5
      IL_0080:  ldarg.0
      IL_0081:  volatile.
      IL_0083:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0088:  stloc.s    V_6
      IL_008a:  ldloc.s    V_6
      IL_008c:  brtrue     IL_00a3

      IL_0091:  ldarg.0
      IL_0092:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0097:  stloc.s    V_5
      IL_0099:  ldarg.0
      IL_009a:  volatile.
      IL_009c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a1:  stloc.s    V_6
      IL_00a3:  ldloc.s    V_6
      IL_00a5:  ldc.i4.0
      IL_00a6:  ceq
      IL_00a8:  brfalse    IL_00bc

      IL_00ad:  ldloc.s    V_5
      IL_00af:  brfalse    IL_00bc

      IL_00b4:  ldc.i4.m1
      IL_00b5:  stloc.s    V_4
      IL_00b7:  br         IL_01ed

      IL_00bc:  ldloc.s    V_6
      IL_00be:  stloc.s    V_4
      IL_00c0:  br         IL_01ed

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.s    V_7
      IL_00c8:  ldarg.0
      IL_00c9:  volatile.
      IL_00cb:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d0:  stloc.s    V_8
      IL_00d2:  ldloc.s    V_8
      IL_00d4:  brtrue     IL_00eb

      IL_00d9:  ldarg.0
      IL_00da:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00df:  stloc.s    V_7
      IL_00e1:  ldarg.0
      IL_00e2:  volatile.
      IL_00e4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_8
      IL_00ed:  ldc.i4.0
      IL_00ee:  ceq
      IL_00f0:  brfalse    IL_0104

      IL_00f5:  ldloc.s    V_7
      IL_00f7:  brfalse    IL_0104

      IL_00fc:  ldc.i4.m1
      IL_00fd:  stloc.s    V_4
      IL_00ff:  br         IL_01ed

      IL_0104:  ldloc.s    V_8
      IL_0106:  stloc.s    V_4
      IL_0108:  br         IL_01ed

      IL_010d:  ldc.i4.0
      IL_010e:  stloc.s    V_9
      IL_0110:  ldarg.0
      IL_0111:  volatile.
      IL_0113:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0118:  stloc.s    V_10
      IL_011a:  ldloc.s    V_10
      IL_011c:  brtrue     IL_0133

      IL_0121:  ldarg.0
      IL_0122:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0127:  stloc.s    V_9
      IL_0129:  ldarg.0
      IL_012a:  volatile.
      IL_012c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0131:  stloc.s    V_10
      IL_0133:  ldloc.s    V_10
      IL_0135:  ldc.i4.0
      IL_0136:  ceq
      IL_0138:  brfalse    IL_014c

      IL_013d:  ldloc.s    V_9
      IL_013f:  brfalse    IL_014c

      IL_0144:  ldc.i4.m1
      IL_0145:  stloc.s    V_4
      IL_0147:  br         IL_01ed

      IL_014c:  ldloc.s    V_10
      IL_014e:  stloc.s    V_4
      IL_0150:  br         IL_01ed

      IL_0155:  ldc.i4.0
      IL_0156:  stloc.s    V_11
      IL_0158:  ldarg.0
      IL_0159:  volatile.
      IL_015b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0160:  stloc.s    V_12
      IL_0162:  ldloc.s    V_12
      IL_0164:  brtrue     IL_017b

      IL_0169:  ldarg.0
      IL_016a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_016f:  stloc.s    V_11
      IL_0171:  ldarg.0
      IL_0172:  volatile.
      IL_0174:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0179:  stloc.s    V_12
      IL_017b:  ldloc.s    V_12
      IL_017d:  ldc.i4.0
      IL_017e:  ceq
      IL_0180:  brfalse    IL_0194

      IL_0185:  ldloc.s    V_11
      IL_0187:  brfalse    IL_0194

      IL_018c:  ldc.i4.m1
      IL_018d:  stloc.s    V_4
      IL_018f:  br         IL_01ed

      IL_0194:  ldloc.s    V_12
      IL_0196:  stloc.s    V_4
      IL_0198:  br         IL_01ed

      IL_019d:  ldc.i4.0
      IL_019e:  stloc.s    V_13
      IL_01a0:  ldarg.0
      IL_01a1:  volatile.
      IL_01a3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01a8:  stloc.s    V_14
      IL_01aa:  ldloc.s    V_14
      IL_01ac:  brtrue     IL_01c3

      IL_01b1:  ldarg.0
      IL_01b2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01b7:  stloc.s    V_13
      IL_01b9:  ldarg.0
      IL_01ba:  volatile.
      IL_01bc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01c1:  stloc.s    V_14
      IL_01c3:  ldloc.s    V_14
      IL_01c5:  ldc.i4.0
      IL_01c6:  ceq
      IL_01c8:  brfalse    IL_01dc

      IL_01cd:  ldloc.s    V_13
      IL_01cf:  brfalse    IL_01dc

      IL_01d4:  ldc.i4.m1
      IL_01d5:  stloc.s    V_4
      IL_01d7:  br         IL_01ed

      IL_01dc:  ldloc.s    V_14
      IL_01de:  stloc.s    V_4
      IL_01e0:  br         IL_01ed

      IL_01e5:  ldc.i4.m1
      IL_01e6:  stloc.s    V_4
      IL_01e8:  br         IL_01ed

      IL_01ed:  ldloc.s    V_4
      IL_01ef:  stloc.s    V_15
      IL_01f1:  ldloc.s    V_4
      IL_01f3:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetStatistics0$PST0600003E() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetStatistics0

    .method privatescope instance void  MarshallDeliverGetStatistics0$PST0600003F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverGetStatistics0$PST0600003E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::GetStatisticsPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetStatistics0

    .method privatescope instance void  DeliverClearStatistics0$PST06000040() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverClearStatistics0

    .method privatescope instance void  MarshallDeliverClearStatistics0$PST06000041(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverClearStatistics0$PST06000040()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::ClearStatisticsPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClearStatistics0

    .method privatescope instance void  DeliverFlushCaches0$PST06000042() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverFlushCaches0

    .method privatescope instance void  MarshallDeliverFlushCaches0$PST06000043(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverFlushCaches0$PST06000042()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::FlushCachesPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverFlushCaches0

    .method privatescope instance void  DeliverDisable0$PST06000044(bool yes) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DisablePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable::yes
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverDisable0

    .method privatescope instance void  MarshallDeliverDisable0$PST06000045(bool yes,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DeliverDisable0$PST06000044(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::DisablePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable::MarshallAll(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverDisable0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Ready
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class sequential ansi sealed nested public specialname GetStatistics
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetStatistics::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetStatistics::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method GetStatistics::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetStatistics::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatistics::Release

  } // end of class GetStatistics

  .class sequential ansi sealed nested public specialname GetStatisticsAck
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) stats
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method GetStatisticsAck::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetStatisticsAck::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetStatisticsAck::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method GetStatisticsAck::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetStatisticsAck::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method GetStatisticsAck::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck::stats
      IL_001a:  ret
    } // end of method GetStatisticsAck::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatisticsAck::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatisticsAck::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatisticsAck::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetStatisticsAck::Release

  } // end of class GetStatisticsAck

  .class sequential ansi sealed nested public specialname ClearStatistics
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ClearStatistics::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ClearStatistics::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method ClearStatistics::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ClearStatistics::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ClearStatistics::Release

  } // end of class ClearStatistics

  .class sequential ansi sealed nested public specialname Ack
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*,
                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Ack::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ack::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Release

  } // end of class Ack

  .class sequential ansi sealed nested public specialname FlushCaches
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FlushCaches::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method FlushCaches::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method FlushCaches::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method FlushCaches::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method FlushCaches::Release

  } // end of class FlushCaches

  .class sequential ansi sealed nested public specialname Disable
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public bool yes
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Disable::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Disable::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*,
                                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Disable::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Disable::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Disable::Release

  } // end of class Disable

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState$0 
            Recv(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/ClearStatistics msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState$1 
            Recv(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatistics msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState$2 
            Recv(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/FlushCaches msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState$3 
            Recv(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Disable msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/GetStatisticsAck msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack msg) cil managed
    {
    } // end of method ReadyState$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Security.SecurityDiagnosticsContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Ack msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .field public static literal string ModuleName = "/status/security"
  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::'.ctor$PST06000006'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method SecurityDiagnosticsContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Security.SecurityDiagnosticsContract/Imp::'.ctor$PST06000006'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method SecurityDiagnosticsContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method SecurityDiagnosticsContract::.ctor

  .method privatescope static int32  StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Security.SecurityDiagnosticsContract::StableState$PST06000004(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method SecurityDiagnosticsContract::StableState

  .method privatescope static int32  CanonicalState$PST06000005(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method SecurityDiagnosticsContract::CanonicalState

} // end of class Microsoft.Singularity.Security.SecurityDiagnosticsContract


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
