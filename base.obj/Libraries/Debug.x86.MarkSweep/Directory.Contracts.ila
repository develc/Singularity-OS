
//  Microsoft (R) .NET Framework IL Disassembler.  Version 2.0.50727.42
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v1.1.9999
.assembly extern Corlib
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly extern Microsoft.SingSharp.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:3555:0
}
.assembly extern System.Compiler.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:5031:5
}
.assembly Directory.Contracts
{
  .custom instance void [Corlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 1F 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E   // ...Microsoft.Sin
                                                                                            67 75 6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F   // gularity.Directo
                                                                                            72 79 00 00 )                                     // ry..
  .custom instance void [Corlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 2F 4D 69 63 72 6F 73 6F 66 74 20 52 65 73   // ../Microsoft Res
                                                                                              65 61 72 63 68 20 53 69 6E 67 75 6C 61 72 69 74   // earch Singularit
                                                                                              79 20 4F 70 65 72 61 74 69 6E 67 20 53 79 73 74   // y Operating Syst
                                                                                              65 6D 00 00 )                                     // em..
  .custom instance void [Corlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                              70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom instance void [Corlib]System.Reflection.AssemblyKeyFileAttribute::.ctor(string) = ( 01 00 0A 70 75 62 6C 69 63 2E 73 6E 6B 00 00 )    // ...public.snk..
  .custom instance void [Corlib]System.Reflection.AssemblyDelaySignAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [Corlib]System.Diagnostics.DebuggableAttribute::.ctor(bool,
  //                                                                              bool) = ( 01 00 01 01 00 00 ) 

  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                2B 96 12 82 73 B1 F0 B2 89 A1 53 81 A7 A1 1A BF   // +...s.....S.....
                07 40 A0 08 21 51 DE DF 0D 8C 66 0D 61 9A 97 19   // .@..!Q....f.a...
                07 08 76 E4 94 44 5A AB 22 BC B3 97 D7 B4 FF 97   // ..v..DZ.".......
                CA 80 ED 49 B3 FC 2B 87 BB 76 7B 60 CA FB F9 49   // ...I..+..v{`...I
                AA 43 5F CF 17 DE B3 19 01 BE 16 49 3C 87 DF E6   // .C_........I<...
                1D 71 F5 18 5F 06 97 A7 0A B5 E0 F1 E0 5C 70 46   // .q.._........\pF
                DB 0D 28 C1 BE 6D 83 DA 3F AC 58 16 1C 56 3C A5   // ..(..m..?.X..V<.
                9D C2 EF 9C E3 02 30 D9 37 7A A6 3D D2 76 CD BF ) // ......0.7z.=.v..
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module Directory.Contracts.dll
// MVID: {57AA3297-64BD-4CD8-BF57-FED5DCEB322F}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00010001    //  ILONLY TRACKDEBUGDATA
// Image base: 0x027A0000


// =============== CLASS MEMBERS DECLARATION ===================

.class private auto ansi beforefieldinit Dummy.DummyInstances
       extends [Corlib]System.Object
{
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>' dummy1
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>' dummy2
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>' dummy3
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>' dummy4
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>' dummy5
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>' dummy6
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>' dummy7
  .field public class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>' dummy8
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method DummyInstances::.ctor

} // end of class Dummy.DummyInstances

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Extending.ExtensionContract
       extends Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000007)
    .field public static literal specialname int32 Shutdown = int32(0x00000003)
    .field public static literal specialname int32 AckShutdown = int32(0x00000004)
    .field public static literal specialname int32 NakShutdown = int32(0x00000005)
    .field public static literal specialname int32 Success = int32(0x00000006)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown AckShutdownPod0
    .field family valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown NakShutdownPod0
    .field family valuetype Microsoft.Singularity.Extending.ExtensionContract/Success SuccessPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600005B'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::CanonicalState$PST06000006(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::CanonicalState$PST06000006(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       122 (0x7a)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0034

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_003f

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_004a

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.3
      IL_0023:  beq        IL_0055

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.2
      IL_002a:  beq        IL_0060

      IL_002f:  br         IL_006b

      IL_0034:  ldstr      "Ready"
      IL_0039:  stloc.1
      IL_003a:  br         IL_0076

      IL_003f:  ldstr      "Ready$0"
      IL_0044:  stloc.1
      IL_0045:  br         IL_0076

      IL_004a:  ldstr      "Ready$1"
      IL_004f:  stloc.1
      IL_0050:  br         IL_0076

      IL_0055:  ldstr      "Start"
      IL_005a:  stloc.1
      IL_005b:  br         IL_0076

      IL_0060:  ldstr      "DoneState"
      IL_0065:  stloc.1
      IL_0066:  br         IL_0076

      IL_006b:  ldstr      "<protocol terminated>"
      IL_0070:  stloc.1
      IL_0071:  br         IL_0076

      IL_0076:  ldloc.1
      IL_0077:  stloc.2
      IL_0078:  ldloc.1
      IL_0079:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendShutdown() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::DeliverShutdown0$PST0600008D()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::MarshallDeliverShutdown0$PST0600008E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Shutdown in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendShutdown

    .method public instance void  RecvAckShutdown() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckShutdown when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown Microsoft.Singularity.Extending.ExtensionContract/Imp::AckShutdownPod0
      IL_0095:  initobj    Microsoft.Singularity.Extending.ExtensionContract/AckShutdown
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckShutdown in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckShutdown

    .method public instance void  RecvNakShutdown() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakShutdown when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown Microsoft.Singularity.Extending.ExtensionContract/Imp::NakShutdownPod0
      IL_0095:  initobj    Microsoft.Singularity.Extending.ExtensionContract/NakShutdown
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv NakShutdown in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvNakShutdown

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Success when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/Success Microsoft.Singularity.Extending.ExtensionContract/Imp::SuccessPod0
      IL_0095:  initobj    Microsoft.Singularity.Extending.ExtensionContract/Success
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Success in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Extending.ExtensionContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Extending.ExtensionContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Extending.ExtensionContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Extending.ExtensionContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Extending.ExtensionContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckShutdown0$PST06000070() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckShutdown0

    .method privatescope instance void  MarshallDeliverAckShutdown0$PST06000071(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverAckShutdown0$PST06000070()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown Microsoft.Singularity.Extending.ExtensionContract/Imp::AckShutdownPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/AckShutdown::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckShutdown0

    .method privatescope instance void  DeliverNakShutdown0$PST06000072() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverNakShutdown0

    .method privatescope instance void  MarshallDeliverNakShutdown0$PST06000073(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverNakShutdown0$PST06000072()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown Microsoft.Singularity.Extending.ExtensionContract/Imp::NakShutdownPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/NakShutdown::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNakShutdown0

    .method privatescope instance void  DeliverSuccess0$PST06000074() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000075(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverSuccess0$PST06000074()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/Success Microsoft.Singularity.Extending.ExtensionContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Success::MarshallAll(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000076() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000077(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverContractNotSupported0$PST06000076()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Extending.ExtensionContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Extending.ExtensionContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown ShutdownPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::CanonicalState$PST06000006(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::CanonicalState$PST06000006(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       122 (0x7a)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0034

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_003f

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_004a

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.3
      IL_0023:  beq        IL_0055

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.2
      IL_002a:  beq        IL_0060

      IL_002f:  br         IL_006b

      IL_0034:  ldstr      "Ready"
      IL_0039:  stloc.1
      IL_003a:  br         IL_0076

      IL_003f:  ldstr      "Ready$0"
      IL_0044:  stloc.1
      IL_0045:  br         IL_0076

      IL_004a:  ldstr      "Ready$1"
      IL_004f:  stloc.1
      IL_0050:  br         IL_0076

      IL_0055:  ldstr      "Start"
      IL_005a:  stloc.1
      IL_005b:  br         IL_0076

      IL_0060:  ldstr      "DoneState"
      IL_0065:  stloc.1
      IL_0066:  br         IL_0076

      IL_006b:  ldstr      "<protocol terminated>"
      IL_0070:  stloc.1
      IL_0071:  br         IL_0076

      IL_0076:  ldloc.1
      IL_0077:  stloc.2
      IL_0078:  ldloc.1
      IL_0079:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvShutdown() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Shutdown when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown Microsoft.Singularity.Extending.ExtensionContract/Exp::ShutdownPod0
      IL_0095:  initobj    Microsoft.Singularity.Extending.ExtensionContract/Shutdown
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Shutdown in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvShutdown

    .method public instance void  SendAckShutdown() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverAckShutdown0$PST06000070()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::MarshallDeliverAckShutdown0$PST06000071(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckShutdown in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckShutdown

    .method public instance void  SendNakShutdown() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverNakShutdown0$PST06000072()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::MarshallDeliverNakShutdown0$PST06000073(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send NakShutdown in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendNakShutdown

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverSuccess0$PST06000074()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::MarshallDeliverSuccess0$PST06000075(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Success in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::DeliverContractNotSupported0$PST06000076()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::MarshallDeliverContractNotSupported0$PST06000077(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Extending.ExtensionContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Extending.ExtensionContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Extending.ExtensionContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Extending.ExtensionContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Extending.ExtensionContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverShutdown0$PST0600008D() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverShutdown0

    .method privatescope instance void  MarshallDeliverShutdown0$PST0600008E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::DeliverShutdown0$PST0600008D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown Microsoft.Singularity.Extending.ExtensionContract/Exp::ShutdownPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Shutdown::MarshallAll(uint8*,
                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverShutdown0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Shutdown
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Shutdown::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Shutdown::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/Shutdown
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Shutdown::MarshallContent(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method Shutdown::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Shutdown::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Shutdown::Release

  } // end of class Shutdown

  .class sequential ansi sealed nested public specialname AckShutdown
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckShutdown::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckShutdown::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/AckShutdown
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/AckShutdown::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method AckShutdown::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckShutdown::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckShutdown::Release

  } // end of class AckShutdown

  .class sequential ansi sealed nested public specialname NakShutdown
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakShutdown::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakShutdown::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/NakShutdown
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/NakShutdown::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakShutdown::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakShutdown::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakShutdown::Release

  } // end of class NakShutdown

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Extending.ExtensionContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Extending.ExtensionContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Success::MarshallContent(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    uint8*,
                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Extending.ExtensionContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Extending.ExtensionContract/Ready 
            Send(valuetype Microsoft.Singularity.Extending.ExtensionContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Extending.ExtensionContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Extending.ExtensionContract/Shutdown msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Extending.ExtensionContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Extending.ExtensionContract/AckShutdown msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Extending.ExtensionContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Extending.ExtensionContract/NakShutdown msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Extending.ExtensionContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::'.ctor$PST0600005B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ExtensionContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Extending.ExtensionContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::'.ctor$PST0600005B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ExtensionContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method ExtensionContract::.ctor

  .method privatescope static int32  StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  7
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.4
    IL_000b:  beq        IL_001c

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_002f

    IL_0017:  br         IL_0042

    IL_001c:  ldarg.0
    IL_001d:  ldc.i4.6
    IL_001e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0023:  ldarg.0
    IL_0024:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0029:  stloc.2
    IL_002a:  br         IL_0049

    IL_002f:  ldarg.0
    IL_0030:  ldc.i4.1
    IL_0031:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0036:  ldarg.0
    IL_0037:  call       int32 Microsoft.Singularity.Extending.ExtensionContract::StableState$PST06000005(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_003c:  stloc.2
    IL_003d:  br         IL_0049

    IL_0042:  ldloc.0
    IL_0043:  stloc.2
    IL_0044:  br         IL_0049

    IL_0049:  ldloc.2
    IL_004a:  stloc.3
    IL_004b:  ldloc.2
    IL_004c:  ret
  } // end of method ExtensionContract::StableState

  .method privatescope static int32  CanonicalState$PST06000006(int32 state) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.4
    IL_0004:  beq        IL_0015

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_001c

    IL_0010:  br         IL_0023

    IL_0015:  ldc.i4.6
    IL_0016:  stloc.1
    IL_0017:  br         IL_002a

    IL_001c:  ldc.i4.1
    IL_001d:  stloc.1
    IL_001e:  br         IL_002a

    IL_0023:  ldarg.0
    IL_0024:  stloc.1
    IL_0025:  br         IL_002a

    IL_002a:  ldloc.1
    IL_002b:  stloc.2
    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method ExtensionContract::CanonicalState

} // end of class Microsoft.Singularity.Extending.ExtensionContract

.class public auto ansi sealed Microsoft.Singularity.Directory.ErrorCode
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname uint32 value__
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode AccessDenied = int32(0x00000001)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode AlreadyExists = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode BadArguments = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode ContractNotSupported = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode DirectoryNotEmpty = int32(0x00000005)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotFound = int32(0x00000006)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode ChannelClosed = int32(0x00000007)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode Unsatisfiable = int32(0x00000008)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotImplemented = int32(0x00000009)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotSupported = int32(0x0000000A)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode CapacityReached = int32(0x0000000B)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode InsufficientResources = int32(0x0000000C)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode DirectoryFull = int32(0x0000000D)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotDirectory = int32(0x0000000E)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotLink = int32(0x0000000F)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotProvider = int32(0x00000010)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NotFile = int32(0x00000011)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode IsOpen = int32(0x00000012)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode Unknown = int32(0x00000063)
  .field public static literal valuetype Microsoft.Singularity.Directory.ErrorCode NoError = int32(0x00000000)
} // end of class Microsoft.Singularity.Directory.ErrorCode

.class public auto ansi sealed Microsoft.Singularity.Directory.NodeType
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Directory.NodeType File = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Directory.NodeType IoMemory = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.Directory.NodeType ServiceProvider = int32(0x00000008)
  .field public static literal valuetype Microsoft.Singularity.Directory.NodeType SymLink = int32(0x00000010)
  .field public static literal valuetype Microsoft.Singularity.Directory.NodeType BadNode = int32(0x00000020)
  .field public static literal valuetype Microsoft.Singularity.Directory.NodeType Directory = int32(0x00000001)
} // end of class Microsoft.Singularity.Directory.NodeType

.class public sequential ansi beforefieldinit Microsoft.Singularity.Directory.EnumerationRecords
       extends [Corlib]System.ValueType
       implements [Corlib]Microsoft.SingSharp.ITracked,
                  [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Path
  .field public valuetype Microsoft.Singularity.Directory.NodeType Type
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  3
    .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  ldloc.0
    IL_0009:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000e:  ret
  } // end of method EnumerationRecords::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_0019

    IL_0006:  ldarg.1
    IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.EnumerationRecords&
    IL_000c:  ldarg.0
    IL_000d:  call       instance void Microsoft.Singularity.Directory.EnumerationRecords::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0019:  ret
  } // end of method EnumerationRecords::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_002c

    IL_0006:  ldarg.1
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_0025

    IL_0012:  ldarg.1
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.Directory.EnumerationRecords
    IL_0019:  ldarg.0
    IL_001a:  call       instance void Microsoft.Singularity.Directory.EnumerationRecords::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.1
    IL_0021:  add
    IL_0022:  stloc.1
    IL_0023:  br.s       IL_000b

    IL_0025:  ldarg.0
    IL_0026:  ldarg.1
    IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002c:  ret
  } // end of method EnumerationRecords::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.Directory.EnumerationRecords::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_0009:  ret
  } // end of method EnumerationRecords::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.Directory.EnumerationRecords
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.Directory.EnumerationRecords
    IL_0022:  call       instance void Microsoft.Singularity.Directory.EnumerationRecords::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method EnumerationRecords::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       70 (0x46)
    .maxstack  8
    .locals init ([0] char& V_0,
             [1] int32 V_1,
             [2] int32 V_2)
    IL_0000:  ldarg.2
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_0008:  ldtoken    [Corlib]System.Char
    IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_0012:  ldarg.3
    IL_0013:  ldarg.0
    IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_0019:  conv.i
    IL_001a:  ldarg.3
    IL_001b:  conv.i
    IL_001c:  sub
    IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_0022:  ldarg.0
    IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_0028:  castclass  char&
    IL_002d:  stloc.0
    IL_002e:  ldarg.0
    IL_002f:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_0034:  ldlen
    IL_0035:  stloc.1
    IL_0036:  ldc.i4.0
    IL_0037:  stloc.2
    IL_0038:  ldloc.2
    IL_0039:  ldloc.1
    IL_003a:  bge        IL_0045

    IL_003f:  ldloc.2
    IL_0040:  ldc.i4.1
    IL_0041:  add
    IL_0042:  stloc.2
    IL_0043:  br.s       IL_0038

    IL_0045:  ret
  } // end of method EnumerationRecords::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       27 (0x1b)
    .maxstack  2
    .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_0)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  brfalse    IL_001a

    IL_000d:  ldloc.0
    IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0013:  ldarg.0
    IL_0014:  ldnull
    IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Directory.EnumerationRecords::Path
    IL_001a:  ret
  } // end of method EnumerationRecords::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method EnumerationRecords::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method EnumerationRecords::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method EnumerationRecords::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method EnumerationRecords::Release

} // end of class Microsoft.Singularity.Directory.EnumerationRecords

.class public sequential ansi beforefieldinit Microsoft.Singularity.Directory.FileAttributesRecord
       extends [Corlib]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public int64 CreationTime
  .field public int64 LastAccessTime
  .field public int64 LastWriteTime
  .field public int64 FileSize
  .field public valuetype Microsoft.Singularity.Directory.NodeType Type
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.Directory.FileAttributesRecord* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method FileAttributesRecord::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.Directory.FileAttributesRecord* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method FileAttributesRecord::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.Directory.FileAttributesRecord::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
    IL_0009:  ret
  } // end of method FileAttributesRecord::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.Directory.FileAttributesRecord* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.Directory.FileAttributesRecord
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.Directory.FileAttributesRecord
    IL_0022:  call       instance void Microsoft.Singularity.Directory.FileAttributesRecord::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method FileAttributesRecord::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method FileAttributesRecord::Release

} // end of class Microsoft.Singularity.Directory.FileAttributesRecord

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Directory.DirectoryServiceContract
       extends Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000044)
    .field public static literal specialname int32 Bind = int32(0x00000003)
    .field public static literal specialname int32 AckBind = int32(0x00000004)
    .field public static literal specialname int32 NakBind = int32(0x00000005)
    .field public static literal specialname int32 NakBindReparse = int32(0x00000006)
    .field public static literal specialname int32 Notify = int32(0x00000007)
    .field public static literal specialname int32 AckNotify = int32(0x00000008)
    .field public static literal specialname int32 NakNotify = int32(0x00000009)
    .field public static literal specialname int32 NakNotifyReparse = int32(0x0000000A)
    .field public static literal specialname int32 BeginEnumeration = int32(0x0000000B)
    .field public static literal specialname int32 ReadEnumeration = int32(0x0000000C)
    .field public static literal specialname int32 EndEnumeration = int32(0x0000000D)
    .field public static literal specialname int32 EnumerationEntries = int32(0x0000000E)
    .field public static literal specialname int32 EnumerationTerminated = int32(0x0000000F)
    .field public static literal specialname int32 GetAttributes = int32(0x00000010)
    .field public static literal specialname int32 AckGetAttributes = int32(0x00000011)
    .field public static literal specialname int32 NakGetAttributes = int32(0x00000012)
    .field public static literal specialname int32 NakGetAttributesReparse = int32(0x00000013)
    .field public static literal specialname int32 QueryACL = int32(0x00000014)
    .field public static literal specialname int32 AckQueryACL = int32(0x00000015)
    .field public static literal specialname int32 NakQueryACL = int32(0x00000016)
    .field public static literal specialname int32 NakQueryACLReparse = int32(0x00000017)
    .field public static literal specialname int32 Register = int32(0x00000018)
    .field public static literal specialname int32 AckRegister = int32(0x00000019)
    .field public static literal specialname int32 NakRegister = int32(0x0000001A)
    .field public static literal specialname int32 NakRegisterReparse = int32(0x0000001B)
    .field public static literal specialname int32 Deregister = int32(0x0000001C)
    .field public static literal specialname int32 AckDeregister = int32(0x0000001D)
    .field public static literal specialname int32 NakDeregister = int32(0x0000001E)
    .field public static literal specialname int32 NakDeregisterReparse = int32(0x0000001F)
    .field public static literal specialname int32 CreateDirectory = int32(0x00000020)
    .field public static literal specialname int32 AckCreateDirectory = int32(0x00000021)
    .field public static literal specialname int32 NakCreateDirectory = int32(0x00000022)
    .field public static literal specialname int32 NakCreateDirectoryReparse = int32(0x00000023)
    .field public static literal specialname int32 DeleteDirectory = int32(0x00000024)
    .field public static literal specialname int32 AckDeleteDirectory = int32(0x00000025)
    .field public static literal specialname int32 NakDeleteDirectory = int32(0x00000026)
    .field public static literal specialname int32 NakDeleteDirectoryReparse = int32(0x00000027)
    .field public static literal specialname int32 CreateFile = int32(0x00000028)
    .field public static literal specialname int32 AckCreateFile = int32(0x00000029)
    .field public static literal specialname int32 NakCreateFile = int32(0x0000002A)
    .field public static literal specialname int32 NakCreateFileReparse = int32(0x0000002B)
    .field public static literal specialname int32 CreateAndBindFile = int32(0x0000002C)
    .field public static literal specialname int32 AckCreateAndBindFile = int32(0x0000002D)
    .field public static literal specialname int32 NakCreateAndBindFile = int32(0x0000002E)
    .field public static literal specialname int32 DeleteFile = int32(0x0000002F)
    .field public static literal specialname int32 AckDeleteFile = int32(0x00000030)
    .field public static literal specialname int32 NakDeleteFile = int32(0x00000031)
    .field public static literal specialname int32 NakDeleteFileReparse = int32(0x00000032)
    .field public static literal specialname int32 StoreACL = int32(0x00000033)
    .field public static literal specialname int32 AckStoreACL = int32(0x00000034)
    .field public static literal specialname int32 NakStoreACL = int32(0x00000035)
    .field public static literal specialname int32 NakStoreACLReparse = int32(0x00000036)
    .field public static literal specialname int32 CreateLink = int32(0x00000037)
    .field public static literal specialname int32 AckCreateLink = int32(0x00000038)
    .field public static literal specialname int32 NakCreateLink = int32(0x00000039)
    .field public static literal specialname int32 NakCreateLinkReparse = int32(0x0000003A)
    .field public static literal specialname int32 DeleteLink = int32(0x0000003B)
    .field public static literal specialname int32 AckDeleteLink = int32(0x0000003C)
    .field public static literal specialname int32 NakDeleteLink = int32(0x0000003D)
    .field public static literal specialname int32 NakDeleteLinkReparse = int32(0x0000003E)
    .field public static literal specialname int32 GetLinkValue = int32(0x0000003F)
    .field public static literal specialname int32 AckGetLinkValue = int32(0x00000040)
    .field public static literal specialname int32 NakGetLinkValue = int32(0x00000041)
    .field public static literal specialname int32 NakGetLinkValueReparse = int32(0x00000042)
    .field public static literal specialname int32 Success = int32(0x00000043)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind AckBindPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind NakBindPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse NakBindReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify AckNotifyPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify NakNotifyPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse NakNotifyReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries EnumerationEntriesPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated EnumerationTerminatedPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes AckGetAttributesPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes NakGetAttributesPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse NakGetAttributesReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL AckQueryACLPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL NakQueryACLPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse NakQueryACLReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister AckRegisterPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister NakRegisterPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse NakRegisterReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister AckDeregisterPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister NakDeregisterPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse NakDeregisterReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory AckCreateDirectoryPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory NakCreateDirectoryPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse NakCreateDirectoryReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory AckDeleteDirectoryPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory NakDeleteDirectoryPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse NakDeleteDirectoryReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile AckCreateFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile NakCreateFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse NakCreateFileReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile AckCreateAndBindFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile NakCreateAndBindFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile AckDeleteFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile NakDeleteFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse NakDeleteFileReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL AckStoreACLPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL NakStoreACLPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse NakStoreACLReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink AckCreateLinkPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink NakCreateLinkPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse NakCreateLinkReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink AckDeleteLinkPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink NakDeleteLinkPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse NakDeleteLinkReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue AckGetLinkValuePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue NakGetLinkValuePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse NakGetLinkValueReparsePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success SuccessPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060000C4'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::CanonicalState$PST06000021(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::CanonicalState$PST06000021(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       690 (0x2b2)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0122

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   35
      IL_0017:  beq        IL_012d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   34
      IL_001f:  beq        IL_0138

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   33
      IL_0027:  beq        IL_0143

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   32
      IL_002f:  beq        IL_014e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   31
      IL_0037:  beq        IL_0159

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   30
      IL_003f:  beq        IL_0164

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   29
      IL_0047:  beq        IL_016f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   28
      IL_004f:  beq        IL_017a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   27
      IL_0057:  beq        IL_0185

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   26
      IL_005f:  beq        IL_0190

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   25
      IL_0067:  beq        IL_019b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   24
      IL_006f:  beq        IL_01a6

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   23
      IL_0077:  beq        IL_01b1

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   22
      IL_007f:  beq        IL_01bc

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   21
      IL_0087:  beq        IL_01c7

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   20
      IL_008f:  beq        IL_01d2

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   19
      IL_0097:  beq        IL_01dd

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   18
      IL_009f:  beq        IL_01e8

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   17
      IL_00a7:  beq        IL_01f3

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   16
      IL_00af:  beq        IL_01fe

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   15
      IL_00b7:  beq        IL_0209

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   14
      IL_00bf:  beq        IL_0214

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   13
      IL_00c7:  beq        IL_021f

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.s   12
      IL_00cf:  beq        IL_022a

      IL_00d4:  ldloc.0
      IL_00d5:  ldc.i4.s   11
      IL_00d7:  beq        IL_0235

      IL_00dc:  ldloc.0
      IL_00dd:  ldc.i4.s   10
      IL_00df:  beq        IL_0240

      IL_00e4:  ldloc.0
      IL_00e5:  ldc.i4.s   9
      IL_00e7:  beq        IL_024b

      IL_00ec:  ldloc.0
      IL_00ed:  ldc.i4.8
      IL_00ee:  beq        IL_0256

      IL_00f3:  ldloc.0
      IL_00f4:  ldc.i4.7
      IL_00f5:  beq        IL_0261

      IL_00fa:  ldloc.0
      IL_00fb:  ldc.i4.6
      IL_00fc:  beq        IL_026c

      IL_0101:  ldloc.0
      IL_0102:  ldc.i4.5
      IL_0103:  beq        IL_0277

      IL_0108:  ldloc.0
      IL_0109:  ldc.i4.4
      IL_010a:  beq        IL_0282

      IL_010f:  ldloc.0
      IL_0110:  ldc.i4.3
      IL_0111:  beq        IL_028d

      IL_0116:  ldloc.0
      IL_0117:  ldc.i4.2
      IL_0118:  beq        IL_0298

      IL_011d:  br         IL_02a3

      IL_0122:  ldstr      "Enumerate"
      IL_0127:  stloc.1
      IL_0128:  br         IL_02ae

      IL_012d:  ldstr      "EnumerateAck"
      IL_0132:  stloc.1
      IL_0133:  br         IL_02ae

      IL_0138:  ldstr      "Ready"
      IL_013d:  stloc.1
      IL_013e:  br         IL_02ae

      IL_0143:  ldstr      "Ready$0"
      IL_0148:  stloc.1
      IL_0149:  br         IL_02ae

      IL_014e:  ldstr      "Ready$1"
      IL_0153:  stloc.1
      IL_0154:  br         IL_02ae

      IL_0159:  ldstr      "Ready$2"
      IL_015e:  stloc.1
      IL_015f:  br         IL_02ae

      IL_0164:  ldstr      "Ready$3"
      IL_0169:  stloc.1
      IL_016a:  br         IL_02ae

      IL_016f:  ldstr      "Ready$4"
      IL_0174:  stloc.1
      IL_0175:  br         IL_02ae

      IL_017a:  ldstr      "Ready$5"
      IL_017f:  stloc.1
      IL_0180:  br         IL_02ae

      IL_0185:  ldstr      "Ready$6"
      IL_018a:  stloc.1
      IL_018b:  br         IL_02ae

      IL_0190:  ldstr      "Ready$7"
      IL_0195:  stloc.1
      IL_0196:  br         IL_02ae

      IL_019b:  ldstr      "Ready$8"
      IL_01a0:  stloc.1
      IL_01a1:  br         IL_02ae

      IL_01a6:  ldstr      "Ready$9"
      IL_01ab:  stloc.1
      IL_01ac:  br         IL_02ae

      IL_01b1:  ldstr      "Ready$10"
      IL_01b6:  stloc.1
      IL_01b7:  br         IL_02ae

      IL_01bc:  ldstr      "Ready$11"
      IL_01c1:  stloc.1
      IL_01c2:  br         IL_02ae

      IL_01c7:  ldstr      "Ready$12"
      IL_01cc:  stloc.1
      IL_01cd:  br         IL_02ae

      IL_01d2:  ldstr      "Ready$13"
      IL_01d7:  stloc.1
      IL_01d8:  br         IL_02ae

      IL_01dd:  ldstr      "Ready$14"
      IL_01e2:  stloc.1
      IL_01e3:  br         IL_02ae

      IL_01e8:  ldstr      "Ready$15"
      IL_01ed:  stloc.1
      IL_01ee:  br         IL_02ae

      IL_01f3:  ldstr      "Ready$16"
      IL_01f8:  stloc.1
      IL_01f9:  br         IL_02ae

      IL_01fe:  ldstr      "Ready$17"
      IL_0203:  stloc.1
      IL_0204:  br         IL_02ae

      IL_0209:  ldstr      "Ready$18"
      IL_020e:  stloc.1
      IL_020f:  br         IL_02ae

      IL_0214:  ldstr      "Ready$19"
      IL_0219:  stloc.1
      IL_021a:  br         IL_02ae

      IL_021f:  ldstr      "Ready$20"
      IL_0224:  stloc.1
      IL_0225:  br         IL_02ae

      IL_022a:  ldstr      "Ready$21"
      IL_022f:  stloc.1
      IL_0230:  br         IL_02ae

      IL_0235:  ldstr      "Ready$22"
      IL_023a:  stloc.1
      IL_023b:  br         IL_02ae

      IL_0240:  ldstr      "Ready$23"
      IL_0245:  stloc.1
      IL_0246:  br         IL_02ae

      IL_024b:  ldstr      "Ready$24"
      IL_0250:  stloc.1
      IL_0251:  br         IL_02ae

      IL_0256:  ldstr      "Ready$25"
      IL_025b:  stloc.1
      IL_025c:  br         IL_02ae

      IL_0261:  ldstr      "Ready$26"
      IL_0266:  stloc.1
      IL_0267:  br         IL_02ae

      IL_026c:  ldstr      "Ready$27"
      IL_0271:  stloc.1
      IL_0272:  br         IL_02ae

      IL_0277:  ldstr      "Ready$28"
      IL_027c:  stloc.1
      IL_027d:  br         IL_02ae

      IL_0282:  ldstr      "Ready$29"
      IL_0287:  stloc.1
      IL_0288:  br         IL_02ae

      IL_028d:  ldstr      "Start"
      IL_0292:  stloc.1
      IL_0293:  br         IL_02ae

      IL_0298:  ldstr      "DoneState"
      IL_029d:  stloc.1
      IL_029e:  br         IL_02ae

      IL_02a3:  ldstr      "<protocol terminated>"
      IL_02a8:  stloc.1
      IL_02a9:  br         IL_02ae

      IL_02ae:  ldloc.1
      IL_02af:  stloc.2
      IL_02b0:  ldloc.1
      IL_02b1:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendBind(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                           valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.2
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.2
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.2
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.2
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.2
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   34
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00bc

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_0096

      IL_0070:  ldarg.1
      IL_0071:  stloc.s    V_5
      IL_0073:  ldloc.s    V_4
      IL_0075:  ldloc.s    V_5
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_007c:  ldloc.s    V_4
      IL_007e:  ldarg.2
      IL_007f:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0084:  ldloc.3
      IL_0085:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_008a:  ldarg.1
      IL_008b:  ldarg.2
      IL_008c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverBind0$PST060001C8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0091:  br         IL_00a4

      IL_0096:  ldloc.3
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_009c:  ldarg.1
      IL_009d:  ldarg.2
      IL_009e:  ldarg.0
      IL_009f:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverBind0$PST060001C9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                        valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   33
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't send Bind in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::SendBind

    .method public instance void  RecvAckBind() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   33
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckBind when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckBindPod0
      IL_0096:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   32
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckBind in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckBind

    .method public instance void  RecvNakBind([out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)& exp,
                                              [out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       227 (0xe3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   33
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00cc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv NakBind when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindPod0
      IL_008e:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0093:  stind.i
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindPod0
      IL_009b:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::code
      IL_00a0:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_00a5:  ldarg.0
      IL_00a6:  ldc.i4.0
      IL_00a7:  volatile.
      IL_00a9:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindPod0
      IL_00b4:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind
      IL_00ba:  ldarg.0
      IL_00bb:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c0:  ldc.i4.s   32
      IL_00c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c7:  br         IL_00e2

      IL_00cc:  ldstr      "can't recv NakBind in state "
      IL_00d1:  ldarg.0
      IL_00d2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00d7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00dc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e1:  throw

      IL_00e2:  ret
    } // end of method Imp::RecvNakBind

    .method public instance void  RecvNakBindReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                     [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& rest,
                                                     [out] bool& linkFound,
                                                     [out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       254 (0xfe)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   33
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00e7

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv NakBindReparse when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_008e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0093:  stind.i
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_009b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_00a0:  stind.i
      IL_00a1:  ldarg.3
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_00a8:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::linkFound
      IL_00ad:  stobj      [Corlib]System.Boolean
      IL_00b2:  ldarg.s    exp
      IL_00b4:  ldarg.0
      IL_00b5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_00ba:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00bf:  stind.i
      IL_00c0:  ldarg.0
      IL_00c1:  ldc.i4.0
      IL_00c2:  volatile.
      IL_00c4:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_00cf:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse
      IL_00d5:  ldarg.0
      IL_00d6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00db:  ldc.i4.s   32
      IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e2:  br         IL_00fd

      IL_00e7:  ldstr      "can't recv NakBindReparse in state "
      IL_00ec:  ldarg.0
      IL_00ed:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00f2:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f7:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00fc:  throw

      IL_00fd:  ret
    } // end of method Imp::RecvNakBindReparse

    .method public instance void  SendNotify(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) pattern,
                                             bool sendExisting,
                                             valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       235 (0xeb)
      .maxstack  16
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.s    imp
      IL_0002:  brfalse    IL_0043

      IL_0007:  ldarg.s    imp
      IL_0009:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000e:  ldarg.s    imp
      IL_0010:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0015:  ldc.i4.4
      IL_0016:  call       instance bool Microsoft.Singularity.Directory.NotifyContract/Imp::InState(int32)
      IL_001b:  brtrue     IL_0043

      IL_0020:  ldstr      "can't move endpoint imp in state "
      IL_0025:  ldarg.s    imp
      IL_0027:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_002c:  ldarg.s    imp
      IL_002e:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0033:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Imp::CurrentState()
      IL_0038:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_003d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0042:  throw

      IL_0043:  ldarg.0
      IL_0044:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0049:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004e:  stloc.0
      IL_004f:  ldloc.0
      IL_0050:  ldc.i4.s   34
      IL_0052:  beq        IL_005c

      IL_0057:  br         IL_00d4

      IL_005c:  ldarg.0
      IL_005d:  ldloca.s   V_1
      IL_005f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0064:  stloc.2
      IL_0065:  ldloc.2
      IL_0066:  stloc.3
      IL_0067:  ldloc.3
      IL_0068:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_006d:  stloc.s    V_4
      IL_006f:  ldloc.1
      IL_0070:  brtrue     IL_00ab

      IL_0075:  ldarg.1
      IL_0076:  stloc.s    V_5
      IL_0078:  ldloc.s    V_4
      IL_007a:  ldloc.s    V_5
      IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0081:  ldarg.2
      IL_0082:  stloc.s    V_6
      IL_0084:  ldloc.s    V_4
      IL_0086:  ldloc.s    V_6
      IL_0088:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_008d:  ldloc.s    V_4
      IL_008f:  ldarg.s    imp
      IL_0091:  call       void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0096:  ldloc.3
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_009c:  ldarg.1
      IL_009d:  ldarg.2
      IL_009e:  ldarg.3
      IL_009f:  ldarg.s    imp
      IL_00a1:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverNotify0$PST060001CA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  bool,
                                                                                                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00a6:  br         IL_00bc

      IL_00ab:  ldloc.3
      IL_00ac:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_00b1:  ldarg.1
      IL_00b2:  ldarg.2
      IL_00b3:  ldarg.3
      IL_00b4:  ldarg.s    imp
      IL_00b6:  ldarg.0
      IL_00b7:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverNotify0$PST060001CB(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                          char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                          bool,
                                                                                                                                          valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00bc:  ldarg.0
      IL_00bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.s   11
      IL_00ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cf:  br         IL_00ea

      IL_00d4:  ldstr      "can't send Notify in state "
      IL_00d9:  ldarg.0
      IL_00da:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00df:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e4:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e9:  throw

      IL_00ea:  ret
    } // end of method Imp::SendNotify

    .method public instance void  RecvAckNotify() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv AckNotify when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckNotifyPod0
      IL_0096:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   10
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckNotify in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckNotify

    .method public instance void  RecvNakNotify([out] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                                [out] valuetype Microsoft.Singularity.Directory.ErrorCode& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       229 (0xe5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ce

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakNotify when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyPod0
      IL_009d:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::'error'
      IL_00a2:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_00a7:  ldarg.0
      IL_00a8:  ldc.i4.0
      IL_00a9:  volatile.
      IL_00ab:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyPod0
      IL_00b6:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.s   10
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c9:  br         IL_00e4

      IL_00ce:  ldstr      "can't recv NakNotify in state "
      IL_00d3:  ldarg.0
      IL_00d4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00d9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00de:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e3:  throw

      IL_00e4:  ret
    } // end of method Imp::RecvNakNotify

    .method public instance void  RecvNakNotifyReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                       [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                       [out] bool& linkFound,
                                                       [out] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start)& imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       256 (0x100)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00e9

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakNotifyReparse when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.s    imp
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_00bc:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00c1:  stind.i
      IL_00c2:  ldarg.0
      IL_00c3:  ldc.i4.0
      IL_00c4:  volatile.
      IL_00c6:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00cb:  ldarg.0
      IL_00cc:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_00d1:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse
      IL_00d7:  ldarg.0
      IL_00d8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00dd:  ldc.i4.s   10
      IL_00df:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e4:  br         IL_00ff

      IL_00e9:  ldstr      "can't recv NakNotifyReparse in state "
      IL_00ee:  ldarg.0
      IL_00ef:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00f4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00fe:  throw

      IL_00ff:  ret
    } // end of method Imp::RecvNakNotifyReparse

    .method public instance void  SendBeginEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverBeginEnumeration0$PST060001CC()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverBeginEnumeration0$PST060001CD(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   36
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send BeginEnumeration in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendBeginEnumeration

    .method public instance void  SendReadEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   35
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverReadEnumeration1$PST060001CE()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverReadEnumeration1$PST060001CF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   36
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send ReadEnumeration in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendReadEnumeration

    .method public instance void  SendEndEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   35
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverEndEnumeration1$PST060001D0()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverEndEnumeration1$PST060001D1(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   34
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send EndEnumeration in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendEndEnumeration

    .method public instance void  RecvEnumerationEntries([out] valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& results,
                                                         [out] bool& moreEntries) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       229 (0xe5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ce

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv EnumerationEntries when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationEntriesPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationEntriesPod0
      IL_009d:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::moreEntries
      IL_00a2:  stobj      [Corlib]System.Boolean
      IL_00a7:  ldarg.0
      IL_00a8:  ldc.i4.0
      IL_00a9:  volatile.
      IL_00ab:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationEntriesPod0
      IL_00b6:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.s   35
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c9:  br         IL_00e4

      IL_00ce:  ldstr      "can't recv EnumerationEntries in state "
      IL_00d3:  ldarg.0
      IL_00d4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00d9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00de:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e3:  throw

      IL_00e4:  ret
    } // end of method Imp::RecvEnumerationEntries

    .method public instance void  RecvEnumerationTerminated([out] valuetype Microsoft.Singularity.Directory.ErrorCode& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv EnumerationTerminated when next message"
      + " has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationTerminatedPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated::'error'
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationTerminatedPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   34
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv EnumerationTerminated in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvEnumerationTerminated

    .method public instance void  SendGetAttributes(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverGetAttributes0$PST060001D2(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverGetAttributes0$PST060001D3(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   15
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send GetAttributes in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendGetAttributes

    .method public instance void  RecvAckGetAttributes([out] valuetype Microsoft.Singularity.Directory.FileAttributesRecord& fileAttributes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   17
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   17
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckGetAttributes when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetAttributesPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.FileAttributesRecord Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes::fileAttributes
      IL_0095:  stobj      Microsoft.Singularity.Directory.FileAttributesRecord
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetAttributesPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   14
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv AckGetAttributes in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvAckGetAttributes

    .method public instance void  RecvNakGetAttributes([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   18
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   18
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakGetAttributes when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   14
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakGetAttributes in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakGetAttributes

    .method public instance void  RecvNakGetAttributesReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                              [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                              [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   19
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   19
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakGetAttributesReparse when next messa"
      + "ge has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   14
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakGetAttributesReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakGetAttributesReparse

    .method public instance void  SendQueryACL(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                               bool effective) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       141 (0x8d)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0076

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0050

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  ldarg.2
      IL_0046:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverQueryACL0$PST060001D4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    bool)
      IL_004b:  br         IL_005e

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0056:  ldarg.1
      IL_0057:  ldarg.2
      IL_0058:  ldarg.0
      IL_0059:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverQueryACL0$PST060001D5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            bool,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005e:  ldarg.0
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006a:  ldc.i4.s   9
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_008c

      IL_0076:  ldstr      "can't send QueryACL in state "
      IL_007b:  ldarg.0
      IL_007c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_0081:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0086:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ret
    } // end of method Imp::SendQueryACL

    .method public instance void  RecvAckQueryACL([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& nodePattern,
                                                  [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& descendantPattern) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       224 (0xe0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c9

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   21
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   21
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckQueryACL when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckQueryACLPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckQueryACLPod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_00a2:  stind.i
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckQueryACLPod0
      IL_00b2:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.8
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c4:  br         IL_00df

      IL_00c9:  ldstr      "can't recv AckQueryACL in state "
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00d4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00de:  throw

      IL_00df:  ret
    } // end of method Imp::RecvAckQueryACL

    .method public instance void  RecvNakQueryACL([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       215 (0xd7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   22
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakQueryACL when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.8
      IL_00b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bb:  br         IL_00d6

      IL_00c0:  ldstr      "can't recv NakQueryACL in state "
      IL_00c5:  ldarg.0
      IL_00c6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d5:  throw

      IL_00d6:  ret
    } // end of method Imp::RecvNakQueryACL

    .method public instance void  RecvNakQueryACLReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                         [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                         [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       241 (0xf1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00da

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   23
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   23
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakQueryACLReparse when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.8
      IL_00d0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d5:  br         IL_00f0

      IL_00da:  ldstr      "can't recv NakQueryACLReparse in state "
      IL_00df:  ldarg.0
      IL_00e0:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00ea:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ef:  throw

      IL_00f0:  ret
    } // end of method Imp::RecvNakQueryACLReparse

    .method public instance void  SendRegister(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.2
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.2
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.2
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceProviderContract/Imp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint imp in state "
      IL_0022:  ldarg.2
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.2
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   34
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00bb

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_0096

      IL_0070:  ldarg.1
      IL_0071:  stloc.s    V_5
      IL_0073:  ldloc.s    V_4
      IL_0075:  ldloc.s    V_5
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_007c:  ldloc.s    V_4
      IL_007e:  ldarg.2
      IL_007f:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0084:  ldloc.3
      IL_0085:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_008a:  ldarg.1
      IL_008b:  ldarg.2
      IL_008c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverRegister0$PST060001D6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0091:  br         IL_00a4

      IL_0096:  ldloc.3
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_009c:  ldarg.1
      IL_009d:  ldarg.2
      IL_009e:  ldarg.0
      IL_009f:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverRegister0$PST060001D7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.7
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't send Register in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::SendRegister

    .method public instance void  RecvAckRegister() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   25
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   25
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckRegister when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckRegisterPod0
      IL_0097:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.6
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckRegister in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckRegister

    .method public instance void  RecvNakRegister([out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start)& imp,
                                                  [out] valuetype Microsoft.Singularity.Directory.ErrorCode& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      // Code size       227 (0xe3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00cc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   26
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   26
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakRegister when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterPod0
      IL_008f:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0094:  stind.i
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterPod0
      IL_009c:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::'error'
      IL_00a1:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_00a6:  ldarg.0
      IL_00a7:  ldc.i4.0
      IL_00a8:  volatile.
      IL_00aa:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterPod0
      IL_00b5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c1:  ldc.i4.6
      IL_00c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c7:  br         IL_00e2

      IL_00cc:  ldstr      "can't recv NakRegister in state "
      IL_00d1:  ldarg.0
      IL_00d2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00d7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00dc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e1:  throw

      IL_00e2:  ret
    } // end of method Imp::RecvNakRegister

    .method public instance void  RecvNakRegisterReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                         [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                         [out] bool& linkFound,
                                                         [out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       254 (0xfe)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00e7

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   27
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   27
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakRegisterReparse when next message ha"
      + "s tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_008f:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0094:  stind.i
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_009c:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_00a1:  stind.i
      IL_00a2:  ldarg.3
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_00a9:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::linkFound
      IL_00ae:  stobj      [Corlib]System.Boolean
      IL_00b3:  ldarg.s    imp
      IL_00b5:  ldarg.0
      IL_00b6:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_00bb:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00c0:  stind.i
      IL_00c1:  ldarg.0
      IL_00c2:  ldc.i4.0
      IL_00c3:  volatile.
      IL_00c5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00ca:  ldarg.0
      IL_00cb:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_00d0:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse
      IL_00d6:  ldarg.0
      IL_00d7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00dc:  ldc.i4.6
      IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e2:  br         IL_00fd

      IL_00e7:  ldstr      "can't recv NakRegisterReparse in state "
      IL_00ec:  ldarg.0
      IL_00ed:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00f2:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f7:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00fc:  throw

      IL_00fd:  ret
    } // end of method Imp::RecvNakRegisterReparse

    .method public instance void  SendDeregister(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeregister0$PST060001D8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverDeregister0$PST060001D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   17
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send Deregister in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendDeregister

    .method public instance void  RecvAckDeregister([out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   29
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   29
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckDeregister when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeregisterPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeregisterPod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   16
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv AckDeregister in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvAckDeregister

    .method public instance void  RecvNakDeregister([out] valuetype Microsoft.Singularity.Directory.ErrorCode& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   30
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   30
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeregister when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister::'error'
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   16
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakDeregister in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakDeregister

    .method public instance void  RecvNakDeregisterReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                           [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                           [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   31
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   31
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeregisterReparse when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   16
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakDeregisterReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakDeregisterReparse

    .method public instance void  SendCreateDirectory(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dirName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateDirectory0$PST060001DA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverCreateDirectory0$PST060001DB(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   29
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send CreateDirectory in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendCreateDirectory

    .method public instance void  RecvAckCreateDirectory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 21 00 00 00 00 00 )                         // ..!.....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   33
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   33
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckCreateDirectory when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateDirectoryPod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   28
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckCreateDirectory in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckCreateDirectory

    .method public instance void  RecvNakCreateDirectory([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 22 00 00 00 00 00 )                         // ..".....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   34
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   34
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateDirectory when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   28
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakCreateDirectory in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakCreateDirectory

    .method public instance void  RecvNakCreateDirectoryReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                                [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                                [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 23 00 00 00 00 00 )                         // ..#.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   35
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   35
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateDirectoryReparse when next mes"
      + "sage has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   28
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakCreateDirectoryReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakCreateDirectoryReparse

    .method public instance void  SendDeleteDirectory(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dirName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 24 00 00 00 00 00 )                         // ..$.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeleteDirectory0$PST060001DC(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverDeleteDirectory0$PST060001DD(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   23
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send DeleteDirectory in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendDeleteDirectory

    .method public instance void  RecvAckDeleteDirectory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 25 00 00 00 00 00 )                         // ..%.....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   37
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   37
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckDeleteDirectory when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeleteDirectoryPod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   22
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckDeleteDirectory in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckDeleteDirectory

    .method public instance void  RecvNakDeleteDirectory([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 26 00 00 00 00 00 )                         // ..&.....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   38
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   38
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeleteDirectory when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   22
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakDeleteDirectory in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakDeleteDirectory

    .method public instance void  RecvNakDeleteDirectoryReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                                [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                                [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 27 00 00 00 00 00 )                         // ..'.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   39
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   39
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeleteDirectoryReparse when next mes"
      + "sage has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   22
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakDeleteDirectoryReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakDeleteDirectoryReparse

    .method public instance void  SendCreateFile(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 28 00 00 00 00 00 )                         // ..(.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateFile0$PST060001DE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverCreateFile0$PST060001DF(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   27
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send CreateFile in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendCreateFile

    .method public instance void  RecvAckCreateFile() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 29 00 00 00 00 00 )                         // ..).....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   41
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   41
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckCreateFile when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateFilePod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   26
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckCreateFile in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckCreateFile

    .method public instance void  RecvNakCreateFile([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 2A 00 00 00 00 00 )                         // ..*.....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   42
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   42
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateFile when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFilePod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFilePod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   26
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakCreateFile in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakCreateFile

    .method public instance void  RecvNakCreateFileReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                           [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                           [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 2B 00 00 00 00 00 )                         // ..+.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   43
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   43
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateFileReparse when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   26
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakCreateFileReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakCreateFileReparse

    .method public instance void  SendCreateAndBindFile(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 2C 00 00 00 00 00 )                         // ..,.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.2
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.2
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.2
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.FileContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.2
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.2
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   34
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00bc

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_0096

      IL_0070:  ldarg.1
      IL_0071:  stloc.s    V_5
      IL_0073:  ldloc.s    V_4
      IL_0075:  ldloc.s    V_5
      IL_0077:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_007c:  ldloc.s    V_4
      IL_007e:  ldarg.2
      IL_007f:  call       void Microsoft.Singularity.Directory.FileContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0084:  ldloc.3
      IL_0085:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_008a:  ldarg.1
      IL_008b:  ldarg.2
      IL_008c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateAndBindFile0$PST060001E0(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                             valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0091:  br         IL_00a4

      IL_0096:  ldloc.3
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_009c:  ldarg.1
      IL_009d:  ldarg.2
      IL_009e:  ldarg.0
      IL_009f:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverCreateAndBindFile0$PST060001E1(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   31
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't send CreateAndBindFile in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::SendCreateAndBindFile

    .method public instance void  RecvAckCreateAndBindFile() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 2D 00 00 00 00 00 )                         // ..-.....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   45
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   45
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckCreateAndBindFile when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateAndBindFilePod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   30
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckCreateAndBindFile in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckCreateAndBindFile

    .method public instance void  RecvNakCreateAndBindFile([out] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                                           [out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 2E 00 00 00 00 00 )                         // ........
      // Code size       229 (0xe5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ce

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   46
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   46
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateAndBindFile when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateAndBindFilePod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateAndBindFilePod0
      IL_009d:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::code
      IL_00a2:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_00a7:  ldarg.0
      IL_00a8:  ldc.i4.0
      IL_00a9:  volatile.
      IL_00ab:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateAndBindFilePod0
      IL_00b6:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.s   30
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c9:  br         IL_00e4

      IL_00ce:  ldstr      "can't recv NakCreateAndBindFile in state "
      IL_00d3:  ldarg.0
      IL_00d4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00d9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00de:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e3:  throw

      IL_00e4:  ret
    } // end of method Imp::RecvNakCreateAndBindFile

    .method public instance void  SendDeleteFile(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 2F 00 00 00 00 00 )                         // ../.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeleteFile0$PST060001E2(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverDeleteFile0$PST060001E3(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   21
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send DeleteFile in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendDeleteFile

    .method public instance void  RecvAckDeleteFile() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 30 00 00 00 00 00 )                         // ..0.....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   48
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   48
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckDeleteFile when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeleteFilePod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   20
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckDeleteFile in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckDeleteFile

    .method public instance void  RecvNakDeleteFile([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 31 00 00 00 00 00 )                         // ..1.....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   49
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   49
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeleteFile when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFilePod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFilePod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   20
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakDeleteFile in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakDeleteFile

    .method public instance void  RecvNakDeleteFileReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                           [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                           [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 32 00 00 00 00 00 )                         // ..2.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   50
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   50
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeleteFileReparse when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   20
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakDeleteFileReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakDeleteFileReparse

    .method public instance void  SendStoreACL(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern,
                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 33 00 00 00 00 00 )                         // ..3.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       180 (0xb4)
      .maxstack  14
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_6,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_7)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_009d

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0077

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_6
      IL_0043:  brfalse    IL_0051

      IL_0048:  ldloc.s    V_4
      IL_004a:  ldloc.s    V_6
      IL_004c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0051:  ldarg.3
      IL_0052:  stloc.s    V_7
      IL_0054:  ldloc.s    V_7
      IL_0056:  brfalse    IL_0064

      IL_005b:  ldloc.s    V_4
      IL_005d:  ldloc.s    V_7
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0064:  ldloc.3
      IL_0065:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_006a:  ldarg.1
      IL_006b:  ldarg.2
      IL_006c:  ldarg.3
      IL_006d:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverStoreACL0$PST060001E4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0072:  br         IL_0086

      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_007d:  ldarg.1
      IL_007e:  ldarg.2
      IL_007f:  ldarg.3
      IL_0080:  ldarg.0
      IL_0081:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverStoreACL0$PST060001E5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0086:  ldarg.0
      IL_0087:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_008c:  ldarg.0
      IL_008d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0092:  ldc.i4.5
      IL_0093:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0098:  br         IL_00b3

      IL_009d:  ldstr      "can't send StoreACL in state "
      IL_00a2:  ldarg.0
      IL_00a3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00a8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00ad:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00b2:  throw

      IL_00b3:  ret
    } // end of method Imp::SendStoreACL

    .method public instance void  RecvAckStoreACL() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 34 00 00 00 00 00 )                         // ..4.....
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   52
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   52
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckStoreACL when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckStoreACLPod0
      IL_0097:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckStoreACL in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckStoreACL

    .method public instance void  RecvNakStoreACL([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 35 00 00 00 00 00 )                         // ..5.....
      // Code size       214 (0xd6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bf

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   53
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   53
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakStoreACL when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLPod0
      IL_008f:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL::code
      IL_0094:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_0099:  ldarg.0
      IL_009a:  ldc.i4.0
      IL_009b:  volatile.
      IL_009d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLPod0
      IL_00a8:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL
      IL_00ae:  ldarg.0
      IL_00af:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b4:  ldc.i4.4
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_00d5

      IL_00bf:  ldstr      "can't recv NakStoreACL in state "
      IL_00c4:  ldarg.0
      IL_00c5:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00ca:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d4:  throw

      IL_00d5:  ret
    } // end of method Imp::RecvNakStoreACL

    .method public instance void  RecvNakStoreACLReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                         [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                         [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 36 00 00 00 00 00 )                         // ..6.....
      // Code size       240 (0xf0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   54
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   54
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakStoreACLReparse when next message ha"
      + "s tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_008f:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0094:  stind.i
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_009c:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_00a1:  stind.i
      IL_00a2:  ldarg.3
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_00a9:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::linkFound
      IL_00ae:  stobj      [Corlib]System.Boolean
      IL_00b3:  ldarg.0
      IL_00b4:  ldc.i4.0
      IL_00b5:  volatile.
      IL_00b7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_00c2:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse
      IL_00c8:  ldarg.0
      IL_00c9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ce:  ldc.i4.4
      IL_00cf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d4:  br         IL_00ef

      IL_00d9:  ldstr      "can't recv NakStoreACLReparse in state "
      IL_00de:  ldarg.0
      IL_00df:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ee:  throw

      IL_00ef:  ret
    } // end of method Imp::RecvNakStoreACLReparse

    .method public instance void  SendCreateLink(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath,
                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkValue) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 37 00 00 00 00 00 )                         // ..7.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       153 (0x99)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0082

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005c

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateLink0$PST060001E6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0057:  br         IL_006a

      IL_005c:  ldloc.3
      IL_005d:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0062:  ldarg.1
      IL_0063:  ldarg.2
      IL_0064:  ldarg.0
      IL_0065:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverCreateLink0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006a:  ldarg.0
      IL_006b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0070:  ldarg.0
      IL_0071:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0076:  ldc.i4.s   25
      IL_0078:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007d:  br         IL_0098

      IL_0082:  ldstr      "can't send CreateLink in state "
      IL_0087:  ldarg.0
      IL_0088:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_008d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0092:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0097:  throw

      IL_0098:  ret
    } // end of method Imp::SendCreateLink

    .method public instance void  RecvAckCreateLink() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 38 00 00 00 00 00 )                         // ..8.....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   56
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   56
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckCreateLink when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateLinkPod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   24
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckCreateLink in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckCreateLink

    .method public instance void  RecvNakCreateLink([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 39 00 00 00 00 00 )                         // ..9.....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   57
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   57
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateLink when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   24
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakCreateLink in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakCreateLink

    .method public instance void  RecvNakCreateLinkReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                           [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                           [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 3A 00 00 00 00 00 )                         // ..:.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   58
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   58
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakCreateLinkReparse when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   24
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakCreateLinkReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakCreateLinkReparse

    .method public instance void  SendDeleteLink(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 3B 00 00 00 00 00 )                         // ..;.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeleteLink0$PST060001E8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverDeleteLink0$PST060001E9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   19
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send DeleteLink in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendDeleteLink

    .method public instance void  RecvAckDeleteLink() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 3C 00 00 00 00 00 )                         // ..<.....
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   60
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   60
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckDeleteLink when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeleteLinkPod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   18
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv AckDeleteLink in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvAckDeleteLink

    .method public instance void  RecvNakDeleteLink([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 3D 00 00 00 00 00 )                         // ..=.....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   61
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   61
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeleteLink when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkPod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   18
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakDeleteLink in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakDeleteLink

    .method public instance void  RecvNakDeleteLinkReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                           [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                           [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 3E 00 00 00 00 00 )                         // ..>.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   62
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   62
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakDeleteLinkReparse when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   18
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakDeleteLinkReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakDeleteLinkReparse

    .method public instance void  SendGetLinkValue(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 3F 00 00 00 00 00 )                         // ..?.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverGetLinkValue0$PST060001EA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallDeliverGetLinkValue0$PST060001EB(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   13
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send GetLinkValue in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendGetLinkValue

    .method public instance void  RecvAckGetLinkValue([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& linkPath) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 40 00 00 00 00 00 )                         // ..@.....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   64
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   64
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv AckGetLinkValue when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetLinkValuePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetLinkValuePod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   12
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv AckGetLinkValue in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvAckGetLinkValue

    .method public instance void  RecvNakGetLinkValue([out] valuetype Microsoft.Singularity.Directory.ErrorCode& code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 41 00 00 00 00 00 )                         // ..A.....
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   65
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   65
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakGetLinkValue when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValuePod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue::code
      IL_0095:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValuePod0
      IL_00a9:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   12
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv NakGetLinkValue in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvNakGetLinkValue

    .method public instance void  RecvNakGetLinkValueReparse([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                             [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& rest,
                                                             [out] bool& linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 42 00 00 00 00 00 )                         // ..B.....
      // Code size       242 (0xf2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00db

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   66
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   66
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv NakGetLinkValueReparse when next messag"
      + "e has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_00aa:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::linkFound
      IL_00af:  stobj      [Corlib]System.Boolean
      IL_00b4:  ldarg.0
      IL_00b5:  ldc.i4.0
      IL_00b6:  volatile.
      IL_00b8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00bd:  ldarg.0
      IL_00be:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_00c3:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   12
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't recv NakGetLinkValueReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Imp::RecvNakGetLinkValueReparse

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 43 00 00 00 00 00 )                         // ..C.....
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   67
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   67
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Success when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::SuccessPod0
      IL_0097:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/Success
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   34
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv Success in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1543 (0x607)
      .maxstack  22
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               int32 V_41)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_00a8

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_00e8

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_0130

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0178

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_01c0

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   15
      IL_0037:  beq        IL_0208

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   17
      IL_003f:  beq        IL_0250

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.s   19
      IL_0047:  beq        IL_0298

      IL_004c:  ldloc.1
      IL_004d:  ldc.i4.s   21
      IL_004f:  beq        IL_02e0

      IL_0054:  ldloc.1
      IL_0055:  ldc.i4.s   23
      IL_0057:  beq        IL_0328

      IL_005c:  ldloc.1
      IL_005d:  ldc.i4.s   25
      IL_005f:  beq        IL_0370

      IL_0064:  ldloc.1
      IL_0065:  ldc.i4.s   27
      IL_0067:  beq        IL_03b8

      IL_006c:  ldloc.1
      IL_006d:  ldc.i4.s   29
      IL_006f:  beq        IL_0400

      IL_0074:  ldloc.1
      IL_0075:  ldc.i4.s   31
      IL_0077:  beq        IL_0448

      IL_007c:  ldloc.1
      IL_007d:  ldc.i4.s   33
      IL_007f:  beq        IL_0490

      IL_0084:  ldloc.1
      IL_0085:  ldc.i4.s   34
      IL_0087:  beq        IL_04d8

      IL_008c:  ldloc.1
      IL_008d:  ldc.i4.s   35
      IL_008f:  beq        IL_0520

      IL_0094:  ldloc.1
      IL_0095:  ldc.i4.s   36
      IL_0097:  beq        IL_0568

      IL_009c:  ldloc.1
      IL_009d:  ldc.i4.3
      IL_009e:  beq        IL_05b0

      IL_00a3:  br         IL_05f8

      IL_00a8:  ldc.i4.0
      IL_00a9:  stloc.2
      IL_00aa:  ldarg.0
      IL_00ab:  volatile.
      IL_00ad:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00b2:  stloc.3
      IL_00b3:  ldloc.3
      IL_00b4:  brtrue     IL_00c9

      IL_00b9:  ldarg.0
      IL_00ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00bf:  stloc.2
      IL_00c0:  ldarg.0
      IL_00c1:  volatile.
      IL_00c3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00c8:  stloc.3
      IL_00c9:  ldloc.3
      IL_00ca:  ldc.i4.0
      IL_00cb:  ceq
      IL_00cd:  brfalse    IL_00e0

      IL_00d2:  ldloc.2
      IL_00d3:  brfalse    IL_00e0

      IL_00d8:  ldc.i4.m1
      IL_00d9:  stloc.s    V_4
      IL_00db:  br         IL_0600

      IL_00e0:  ldloc.3
      IL_00e1:  stloc.s    V_4
      IL_00e3:  br         IL_0600

      IL_00e8:  ldc.i4.0
      IL_00e9:  stloc.s    V_5
      IL_00eb:  ldarg.0
      IL_00ec:  volatile.
      IL_00ee:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_00f3:  stloc.s    V_6
      IL_00f5:  ldloc.s    V_6
      IL_00f7:  brtrue     IL_010e

      IL_00fc:  ldarg.0
      IL_00fd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0102:  stloc.s    V_5
      IL_0104:  ldarg.0
      IL_0105:  volatile.
      IL_0107:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_010c:  stloc.s    V_6
      IL_010e:  ldloc.s    V_6
      IL_0110:  ldc.i4.0
      IL_0111:  ceq
      IL_0113:  brfalse    IL_0127

      IL_0118:  ldloc.s    V_5
      IL_011a:  brfalse    IL_0127

      IL_011f:  ldc.i4.m1
      IL_0120:  stloc.s    V_4
      IL_0122:  br         IL_0600

      IL_0127:  ldloc.s    V_6
      IL_0129:  stloc.s    V_4
      IL_012b:  br         IL_0600

      IL_0130:  ldc.i4.0
      IL_0131:  stloc.s    V_7
      IL_0133:  ldarg.0
      IL_0134:  volatile.
      IL_0136:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_013b:  stloc.s    V_8
      IL_013d:  ldloc.s    V_8
      IL_013f:  brtrue     IL_0156

      IL_0144:  ldarg.0
      IL_0145:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_014a:  stloc.s    V_7
      IL_014c:  ldarg.0
      IL_014d:  volatile.
      IL_014f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0154:  stloc.s    V_8
      IL_0156:  ldloc.s    V_8
      IL_0158:  ldc.i4.0
      IL_0159:  ceq
      IL_015b:  brfalse    IL_016f

      IL_0160:  ldloc.s    V_7
      IL_0162:  brfalse    IL_016f

      IL_0167:  ldc.i4.m1
      IL_0168:  stloc.s    V_4
      IL_016a:  br         IL_0600

      IL_016f:  ldloc.s    V_8
      IL_0171:  stloc.s    V_4
      IL_0173:  br         IL_0600

      IL_0178:  ldc.i4.0
      IL_0179:  stloc.s    V_9
      IL_017b:  ldarg.0
      IL_017c:  volatile.
      IL_017e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0183:  stloc.s    V_10
      IL_0185:  ldloc.s    V_10
      IL_0187:  brtrue     IL_019e

      IL_018c:  ldarg.0
      IL_018d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0192:  stloc.s    V_9
      IL_0194:  ldarg.0
      IL_0195:  volatile.
      IL_0197:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_019c:  stloc.s    V_10
      IL_019e:  ldloc.s    V_10
      IL_01a0:  ldc.i4.0
      IL_01a1:  ceq
      IL_01a3:  brfalse    IL_01b7

      IL_01a8:  ldloc.s    V_9
      IL_01aa:  brfalse    IL_01b7

      IL_01af:  ldc.i4.m1
      IL_01b0:  stloc.s    V_4
      IL_01b2:  br         IL_0600

      IL_01b7:  ldloc.s    V_10
      IL_01b9:  stloc.s    V_4
      IL_01bb:  br         IL_0600

      IL_01c0:  ldc.i4.0
      IL_01c1:  stloc.s    V_11
      IL_01c3:  ldarg.0
      IL_01c4:  volatile.
      IL_01c6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_01cb:  stloc.s    V_12
      IL_01cd:  ldloc.s    V_12
      IL_01cf:  brtrue     IL_01e6

      IL_01d4:  ldarg.0
      IL_01d5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01da:  stloc.s    V_11
      IL_01dc:  ldarg.0
      IL_01dd:  volatile.
      IL_01df:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_01e4:  stloc.s    V_12
      IL_01e6:  ldloc.s    V_12
      IL_01e8:  ldc.i4.0
      IL_01e9:  ceq
      IL_01eb:  brfalse    IL_01ff

      IL_01f0:  ldloc.s    V_11
      IL_01f2:  brfalse    IL_01ff

      IL_01f7:  ldc.i4.m1
      IL_01f8:  stloc.s    V_4
      IL_01fa:  br         IL_0600

      IL_01ff:  ldloc.s    V_12
      IL_0201:  stloc.s    V_4
      IL_0203:  br         IL_0600

      IL_0208:  ldc.i4.0
      IL_0209:  stloc.s    V_13
      IL_020b:  ldarg.0
      IL_020c:  volatile.
      IL_020e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0213:  stloc.s    V_14
      IL_0215:  ldloc.s    V_14
      IL_0217:  brtrue     IL_022e

      IL_021c:  ldarg.0
      IL_021d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0222:  stloc.s    V_13
      IL_0224:  ldarg.0
      IL_0225:  volatile.
      IL_0227:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_022c:  stloc.s    V_14
      IL_022e:  ldloc.s    V_14
      IL_0230:  ldc.i4.0
      IL_0231:  ceq
      IL_0233:  brfalse    IL_0247

      IL_0238:  ldloc.s    V_13
      IL_023a:  brfalse    IL_0247

      IL_023f:  ldc.i4.m1
      IL_0240:  stloc.s    V_4
      IL_0242:  br         IL_0600

      IL_0247:  ldloc.s    V_14
      IL_0249:  stloc.s    V_4
      IL_024b:  br         IL_0600

      IL_0250:  ldc.i4.0
      IL_0251:  stloc.s    V_15
      IL_0253:  ldarg.0
      IL_0254:  volatile.
      IL_0256:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_025b:  stloc.s    V_16
      IL_025d:  ldloc.s    V_16
      IL_025f:  brtrue     IL_0276

      IL_0264:  ldarg.0
      IL_0265:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_026a:  stloc.s    V_15
      IL_026c:  ldarg.0
      IL_026d:  volatile.
      IL_026f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0274:  stloc.s    V_16
      IL_0276:  ldloc.s    V_16
      IL_0278:  ldc.i4.0
      IL_0279:  ceq
      IL_027b:  brfalse    IL_028f

      IL_0280:  ldloc.s    V_15
      IL_0282:  brfalse    IL_028f

      IL_0287:  ldc.i4.m1
      IL_0288:  stloc.s    V_4
      IL_028a:  br         IL_0600

      IL_028f:  ldloc.s    V_16
      IL_0291:  stloc.s    V_4
      IL_0293:  br         IL_0600

      IL_0298:  ldc.i4.0
      IL_0299:  stloc.s    V_17
      IL_029b:  ldarg.0
      IL_029c:  volatile.
      IL_029e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_02a3:  stloc.s    V_18
      IL_02a5:  ldloc.s    V_18
      IL_02a7:  brtrue     IL_02be

      IL_02ac:  ldarg.0
      IL_02ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b2:  stloc.s    V_17
      IL_02b4:  ldarg.0
      IL_02b5:  volatile.
      IL_02b7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_02bc:  stloc.s    V_18
      IL_02be:  ldloc.s    V_18
      IL_02c0:  ldc.i4.0
      IL_02c1:  ceq
      IL_02c3:  brfalse    IL_02d7

      IL_02c8:  ldloc.s    V_17
      IL_02ca:  brfalse    IL_02d7

      IL_02cf:  ldc.i4.m1
      IL_02d0:  stloc.s    V_4
      IL_02d2:  br         IL_0600

      IL_02d7:  ldloc.s    V_18
      IL_02d9:  stloc.s    V_4
      IL_02db:  br         IL_0600

      IL_02e0:  ldc.i4.0
      IL_02e1:  stloc.s    V_19
      IL_02e3:  ldarg.0
      IL_02e4:  volatile.
      IL_02e6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_02eb:  stloc.s    V_20
      IL_02ed:  ldloc.s    V_20
      IL_02ef:  brtrue     IL_0306

      IL_02f4:  ldarg.0
      IL_02f5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02fa:  stloc.s    V_19
      IL_02fc:  ldarg.0
      IL_02fd:  volatile.
      IL_02ff:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0304:  stloc.s    V_20
      IL_0306:  ldloc.s    V_20
      IL_0308:  ldc.i4.0
      IL_0309:  ceq
      IL_030b:  brfalse    IL_031f

      IL_0310:  ldloc.s    V_19
      IL_0312:  brfalse    IL_031f

      IL_0317:  ldc.i4.m1
      IL_0318:  stloc.s    V_4
      IL_031a:  br         IL_0600

      IL_031f:  ldloc.s    V_20
      IL_0321:  stloc.s    V_4
      IL_0323:  br         IL_0600

      IL_0328:  ldc.i4.0
      IL_0329:  stloc.s    V_21
      IL_032b:  ldarg.0
      IL_032c:  volatile.
      IL_032e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0333:  stloc.s    V_22
      IL_0335:  ldloc.s    V_22
      IL_0337:  brtrue     IL_034e

      IL_033c:  ldarg.0
      IL_033d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0342:  stloc.s    V_21
      IL_0344:  ldarg.0
      IL_0345:  volatile.
      IL_0347:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_034c:  stloc.s    V_22
      IL_034e:  ldloc.s    V_22
      IL_0350:  ldc.i4.0
      IL_0351:  ceq
      IL_0353:  brfalse    IL_0367

      IL_0358:  ldloc.s    V_21
      IL_035a:  brfalse    IL_0367

      IL_035f:  ldc.i4.m1
      IL_0360:  stloc.s    V_4
      IL_0362:  br         IL_0600

      IL_0367:  ldloc.s    V_22
      IL_0369:  stloc.s    V_4
      IL_036b:  br         IL_0600

      IL_0370:  ldc.i4.0
      IL_0371:  stloc.s    V_23
      IL_0373:  ldarg.0
      IL_0374:  volatile.
      IL_0376:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_037b:  stloc.s    V_24
      IL_037d:  ldloc.s    V_24
      IL_037f:  brtrue     IL_0396

      IL_0384:  ldarg.0
      IL_0385:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_038a:  stloc.s    V_23
      IL_038c:  ldarg.0
      IL_038d:  volatile.
      IL_038f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0394:  stloc.s    V_24
      IL_0396:  ldloc.s    V_24
      IL_0398:  ldc.i4.0
      IL_0399:  ceq
      IL_039b:  brfalse    IL_03af

      IL_03a0:  ldloc.s    V_23
      IL_03a2:  brfalse    IL_03af

      IL_03a7:  ldc.i4.m1
      IL_03a8:  stloc.s    V_4
      IL_03aa:  br         IL_0600

      IL_03af:  ldloc.s    V_24
      IL_03b1:  stloc.s    V_4
      IL_03b3:  br         IL_0600

      IL_03b8:  ldc.i4.0
      IL_03b9:  stloc.s    V_25
      IL_03bb:  ldarg.0
      IL_03bc:  volatile.
      IL_03be:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_03c3:  stloc.s    V_26
      IL_03c5:  ldloc.s    V_26
      IL_03c7:  brtrue     IL_03de

      IL_03cc:  ldarg.0
      IL_03cd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03d2:  stloc.s    V_25
      IL_03d4:  ldarg.0
      IL_03d5:  volatile.
      IL_03d7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_03dc:  stloc.s    V_26
      IL_03de:  ldloc.s    V_26
      IL_03e0:  ldc.i4.0
      IL_03e1:  ceq
      IL_03e3:  brfalse    IL_03f7

      IL_03e8:  ldloc.s    V_25
      IL_03ea:  brfalse    IL_03f7

      IL_03ef:  ldc.i4.m1
      IL_03f0:  stloc.s    V_4
      IL_03f2:  br         IL_0600

      IL_03f7:  ldloc.s    V_26
      IL_03f9:  stloc.s    V_4
      IL_03fb:  br         IL_0600

      IL_0400:  ldc.i4.0
      IL_0401:  stloc.s    V_27
      IL_0403:  ldarg.0
      IL_0404:  volatile.
      IL_0406:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_040b:  stloc.s    V_28
      IL_040d:  ldloc.s    V_28
      IL_040f:  brtrue     IL_0426

      IL_0414:  ldarg.0
      IL_0415:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_041a:  stloc.s    V_27
      IL_041c:  ldarg.0
      IL_041d:  volatile.
      IL_041f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0424:  stloc.s    V_28
      IL_0426:  ldloc.s    V_28
      IL_0428:  ldc.i4.0
      IL_0429:  ceq
      IL_042b:  brfalse    IL_043f

      IL_0430:  ldloc.s    V_27
      IL_0432:  brfalse    IL_043f

      IL_0437:  ldc.i4.m1
      IL_0438:  stloc.s    V_4
      IL_043a:  br         IL_0600

      IL_043f:  ldloc.s    V_28
      IL_0441:  stloc.s    V_4
      IL_0443:  br         IL_0600

      IL_0448:  ldc.i4.0
      IL_0449:  stloc.s    V_29
      IL_044b:  ldarg.0
      IL_044c:  volatile.
      IL_044e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0453:  stloc.s    V_30
      IL_0455:  ldloc.s    V_30
      IL_0457:  brtrue     IL_046e

      IL_045c:  ldarg.0
      IL_045d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0462:  stloc.s    V_29
      IL_0464:  ldarg.0
      IL_0465:  volatile.
      IL_0467:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_046c:  stloc.s    V_30
      IL_046e:  ldloc.s    V_30
      IL_0470:  ldc.i4.0
      IL_0471:  ceq
      IL_0473:  brfalse    IL_0487

      IL_0478:  ldloc.s    V_29
      IL_047a:  brfalse    IL_0487

      IL_047f:  ldc.i4.m1
      IL_0480:  stloc.s    V_4
      IL_0482:  br         IL_0600

      IL_0487:  ldloc.s    V_30
      IL_0489:  stloc.s    V_4
      IL_048b:  br         IL_0600

      IL_0490:  ldc.i4.0
      IL_0491:  stloc.s    V_31
      IL_0493:  ldarg.0
      IL_0494:  volatile.
      IL_0496:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_049b:  stloc.s    V_32
      IL_049d:  ldloc.s    V_32
      IL_049f:  brtrue     IL_04b6

      IL_04a4:  ldarg.0
      IL_04a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04aa:  stloc.s    V_31
      IL_04ac:  ldarg.0
      IL_04ad:  volatile.
      IL_04af:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_04b4:  stloc.s    V_32
      IL_04b6:  ldloc.s    V_32
      IL_04b8:  ldc.i4.0
      IL_04b9:  ceq
      IL_04bb:  brfalse    IL_04cf

      IL_04c0:  ldloc.s    V_31
      IL_04c2:  brfalse    IL_04cf

      IL_04c7:  ldc.i4.m1
      IL_04c8:  stloc.s    V_4
      IL_04ca:  br         IL_0600

      IL_04cf:  ldloc.s    V_32
      IL_04d1:  stloc.s    V_4
      IL_04d3:  br         IL_0600

      IL_04d8:  ldc.i4.0
      IL_04d9:  stloc.s    V_33
      IL_04db:  ldarg.0
      IL_04dc:  volatile.
      IL_04de:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_04e3:  stloc.s    V_34
      IL_04e5:  ldloc.s    V_34
      IL_04e7:  brtrue     IL_04fe

      IL_04ec:  ldarg.0
      IL_04ed:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04f2:  stloc.s    V_33
      IL_04f4:  ldarg.0
      IL_04f5:  volatile.
      IL_04f7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_04fc:  stloc.s    V_34
      IL_04fe:  ldloc.s    V_34
      IL_0500:  ldc.i4.0
      IL_0501:  ceq
      IL_0503:  brfalse    IL_0517

      IL_0508:  ldloc.s    V_33
      IL_050a:  brfalse    IL_0517

      IL_050f:  ldc.i4.m1
      IL_0510:  stloc.s    V_4
      IL_0512:  br         IL_0600

      IL_0517:  ldloc.s    V_34
      IL_0519:  stloc.s    V_4
      IL_051b:  br         IL_0600

      IL_0520:  ldc.i4.0
      IL_0521:  stloc.s    V_35
      IL_0523:  ldarg.0
      IL_0524:  volatile.
      IL_0526:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_052b:  stloc.s    V_36
      IL_052d:  ldloc.s    V_36
      IL_052f:  brtrue     IL_0546

      IL_0534:  ldarg.0
      IL_0535:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_053a:  stloc.s    V_35
      IL_053c:  ldarg.0
      IL_053d:  volatile.
      IL_053f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0544:  stloc.s    V_36
      IL_0546:  ldloc.s    V_36
      IL_0548:  ldc.i4.0
      IL_0549:  ceq
      IL_054b:  brfalse    IL_055f

      IL_0550:  ldloc.s    V_35
      IL_0552:  brfalse    IL_055f

      IL_0557:  ldc.i4.m1
      IL_0558:  stloc.s    V_4
      IL_055a:  br         IL_0600

      IL_055f:  ldloc.s    V_36
      IL_0561:  stloc.s    V_4
      IL_0563:  br         IL_0600

      IL_0568:  ldc.i4.0
      IL_0569:  stloc.s    V_37
      IL_056b:  ldarg.0
      IL_056c:  volatile.
      IL_056e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0573:  stloc.s    V_38
      IL_0575:  ldloc.s    V_38
      IL_0577:  brtrue     IL_058e

      IL_057c:  ldarg.0
      IL_057d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0582:  stloc.s    V_37
      IL_0584:  ldarg.0
      IL_0585:  volatile.
      IL_0587:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_058c:  stloc.s    V_38
      IL_058e:  ldloc.s    V_38
      IL_0590:  ldc.i4.0
      IL_0591:  ceq
      IL_0593:  brfalse    IL_05a7

      IL_0598:  ldloc.s    V_37
      IL_059a:  brfalse    IL_05a7

      IL_059f:  ldc.i4.m1
      IL_05a0:  stloc.s    V_4
      IL_05a2:  br         IL_0600

      IL_05a7:  ldloc.s    V_38
      IL_05a9:  stloc.s    V_4
      IL_05ab:  br         IL_0600

      IL_05b0:  ldc.i4.0
      IL_05b1:  stloc.s    V_39
      IL_05b3:  ldarg.0
      IL_05b4:  volatile.
      IL_05b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_05bb:  stloc.s    V_40
      IL_05bd:  ldloc.s    V_40
      IL_05bf:  brtrue     IL_05d6

      IL_05c4:  ldarg.0
      IL_05c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05ca:  stloc.s    V_39
      IL_05cc:  ldarg.0
      IL_05cd:  volatile.
      IL_05cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_05d4:  stloc.s    V_40
      IL_05d6:  ldloc.s    V_40
      IL_05d8:  ldc.i4.0
      IL_05d9:  ceq
      IL_05db:  brfalse    IL_05ef

      IL_05e0:  ldloc.s    V_39
      IL_05e2:  brfalse    IL_05ef

      IL_05e7:  ldc.i4.m1
      IL_05e8:  stloc.s    V_4
      IL_05ea:  br         IL_0600

      IL_05ef:  ldloc.s    V_40
      IL_05f1:  stloc.s    V_4
      IL_05f3:  br         IL_0600

      IL_05f8:  ldc.i4.m1
      IL_05f9:  stloc.s    V_4
      IL_05fb:  br         IL_0600

      IL_0600:  ldloc.s    V_4
      IL_0602:  stloc.s    V_41
      IL_0604:  ldloc.s    V_4
      IL_0606:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckBind0$PST06000116() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckBind0

    .method privatescope instance void  MarshallDeliverAckBind0$PST06000117(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckBind0$PST06000116()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckBindPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckBind0

    .method privatescope instance void  DeliverNakBind0$PST06000118(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp,
                                                                    valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::code
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.5
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.5
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0028:  ret
    } // end of method Imp::DeliverNakBind0

    .method privatescope instance void  MarshallDeliverNakBind0$PST06000119(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp,
                                                                            valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakBind0$PST06000118(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start),
                                                                                                                                   valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverNakBind0

    .method privatescope instance void  DeliverNakBindReparse0$PST0600011A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest,
                                                                           bool linkFound,
                                                                           valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       66 (0x42)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_002a:  ldarg.s    exp
      IL_002c:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.6
      IL_0033:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0038:  ldarg.0
      IL_0039:  ldc.i4.6
      IL_003a:  volatile.
      IL_003c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0041:  ret
    } // end of method Imp::DeliverNakBindReparse0

    .method privatescope instance void  MarshallDeliverNakBindReparse0$PST0600011B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                   char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest,
                                                                                   bool linkFound,
                                                                                   valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    exp
      IL_0006:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakBindReparse0$PST0600011A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                          char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                          bool,
                                                                                                                                          valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakBindReparsePod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_001f:  ret
    } // end of method Imp::MarshallDeliverNakBindReparse0

    .method privatescope instance void  DeliverAckNotify0$PST0600011C() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckNotify0

    .method privatescope instance void  MarshallDeliverAckNotify0$PST0600011D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckNotify0$PST0600011C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckNotifyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify::MarshallAll(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckNotify0

    .method privatescope instance void  DeliverNakNotify0$PST0600011E(valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                      valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::'error'
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   9
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   9
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverNakNotify0

    .method privatescope instance void  MarshallDeliverNakNotify0$PST0600011F(valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                              valuetype Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakNotify0$PST0600011E(valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                     valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::MarshallAll(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverNakNotify0

    .method privatescope instance void  DeliverNakNotifyReparse0$PST06000120(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                             bool linkFound,
                                                                             valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) imp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       68 (0x44)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_002a:  ldarg.s    imp
      IL_002c:  stfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.s   10
      IL_0034:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.s   10
      IL_003c:  volatile.
      IL_003e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0043:  ret
    } // end of method Imp::DeliverNakNotifyReparse0

    .method privatescope instance void  MarshallDeliverNakNotifyReparse0$PST06000121(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                     bool linkFound,
                                                                                     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) imp,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    imp
      IL_0006:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakNotifyReparse0$PST06000120(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            bool,
                                                                                                                                            valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start))
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakNotifyReparsePod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001f:  ret
    } // end of method Imp::MarshallDeliverNakNotifyReparse0

    .method privatescope instance void  DeliverEnumerationEntries0$PST06000122(valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) results,
                                                                               bool moreEntries) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationEntriesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationEntriesPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::moreEntries
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   14
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   14
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverEnumerationEntries0

    .method privatescope instance void  MarshallDeliverEnumerationEntries0$PST06000123(valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) results,
                                                                                       bool moreEntries,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverEnumerationEntries0$PST06000122(valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationEntriesPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverEnumerationEntries0

    .method privatescope instance void  DeliverEnumerationTerminated0$PST06000124(valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationTerminatedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated::'error'
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverEnumerationTerminated0

    .method privatescope instance void  MarshallDeliverEnumerationTerminated0$PST06000125(valuetype Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverEnumerationTerminated0$PST06000124(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::EnumerationTerminatedPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated::MarshallAll(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverEnumerationTerminated0

    .method privatescope instance void  DeliverAckGetAttributes0$PST06000126(valuetype Microsoft.Singularity.Directory.FileAttributesRecord fileAttributes) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetAttributesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.FileAttributesRecord Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes::fileAttributes
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   17
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckGetAttributes0

    .method privatescope instance void  MarshallDeliverAckGetAttributes0$PST06000127(valuetype Microsoft.Singularity.Directory.FileAttributesRecord fileAttributes,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckGetAttributes0$PST06000126(valuetype Microsoft.Singularity.Directory.FileAttributesRecord)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetAttributesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetAttributes0

    .method privatescope instance void  DeliverNakGetAttributes0$PST06000128(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   18
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   18
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakGetAttributes0

    .method privatescope instance void  MarshallDeliverNakGetAttributes0$PST06000129(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetAttributes0$PST06000128(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakGetAttributes0

    .method privatescope instance void  DeliverNakGetAttributesReparse0$PST0600012A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                    bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   19
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   19
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakGetAttributesReparse0

    .method privatescope instance void  MarshallDeliverNakGetAttributesReparse0$PST0600012B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                            bool linkFound,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetAttributesReparse0$PST0600012A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetAttributesReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::MarshallAll(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakGetAttributesReparse0

    .method privatescope instance void  DeliverAckQueryACL0$PST0600012C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern,
                                                                        char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckQueryACLPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckQueryACLPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   21
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   21
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverAckQueryACL0

    .method privatescope instance void  MarshallDeliverAckQueryACL0$PST0600012D(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern,
                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckQueryACL0$PST0600012C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckQueryACLPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverAckQueryACL0

    .method privatescope instance void  DeliverNakQueryACL0$PST0600012E(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   22
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakQueryACL0

    .method privatescope instance void  MarshallDeliverNakQueryACL0$PST0600012F(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakQueryACL0$PST0600012E(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakQueryACL0

    .method privatescope instance void  DeliverNakQueryACLReparse0$PST06000130(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                               bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   23
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   23
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakQueryACLReparse0

    .method privatescope instance void  MarshallDeliverNakQueryACLReparse0$PST06000131(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                       bool linkFound,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakQueryACLReparse0$PST06000130(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakQueryACLReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakQueryACLReparse0

    .method privatescope instance void  DeliverAckRegister0$PST06000132() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   25
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   25
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckRegister0

    .method privatescope instance void  MarshallDeliverAckRegister0$PST06000133(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckRegister0$PST06000132()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckRegisterPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckRegister0

    .method privatescope instance void  DeliverNakRegister0$PST06000134(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp,
                                                                        valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::'error'
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   26
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   26
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverNakRegister0

    .method privatescope instance void  MarshallDeliverNakRegister0$PST06000135(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp,
                                                                                valuetype Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakRegister0$PST06000134(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start),
                                                                                                                                       valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverNakRegister0

    .method privatescope instance void  DeliverNakRegisterReparse0$PST06000136(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                               bool linkFound,
                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       68 (0x44)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_002a:  ldarg.s    imp
      IL_002c:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.s   27
      IL_0034:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0039:  ldarg.0
      IL_003a:  ldc.i4.s   27
      IL_003c:  volatile.
      IL_003e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0043:  ret
    } // end of method Imp::DeliverNakRegisterReparse0

    .method privatescope instance void  MarshallDeliverNakRegisterReparse0$PST06000137(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                       bool linkFound,
                                                                                       valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    imp
      IL_0006:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakRegisterReparse0$PST06000136(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool,
                                                                                                                                              valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakRegisterReparsePod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001f:  ret
    } // end of method Imp::MarshallDeliverNakRegisterReparse0

    .method privatescope instance void  DeliverAckDeregister0$PST06000138(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeregisterPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   29
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckDeregister0

    .method privatescope instance void  MarshallDeliverAckDeregister0$PST06000139(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeregister0$PST06000138(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeregisterPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckDeregister0

    .method privatescope instance void  DeliverNakDeregister0$PST0600013A(valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister::'error'
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakDeregister0

    .method privatescope instance void  MarshallDeliverNakDeregister0$PST0600013B(valuetype Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeregister0$PST0600013A(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakDeregister0

    .method privatescope instance void  DeliverNakDeregisterReparse0$PST0600013C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                 bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   31
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   31
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakDeregisterReparse0

    .method privatescope instance void  MarshallDeliverNakDeregisterReparse0$PST0600013D(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                         bool linkFound,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeregisterReparse0$PST0600013C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeregisterReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakDeregisterReparse0

    .method privatescope instance void  DeliverAckCreateDirectory0$PST0600013E() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   33
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   33
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCreateDirectory0

    .method privatescope instance void  MarshallDeliverAckCreateDirectory0$PST0600013F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateDirectory0$PST0600013E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateDirectoryPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCreateDirectory0

    .method privatescope instance void  DeliverNakCreateDirectory0$PST06000140(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   34
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakCreateDirectory0

    .method privatescope instance void  MarshallDeliverNakCreateDirectory0$PST06000141(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateDirectory0$PST06000140(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakCreateDirectory0

    .method privatescope instance void  DeliverNakCreateDirectoryReparse0$PST06000142(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                      bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   35
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   35
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakCreateDirectoryReparse0

    .method privatescope instance void  MarshallDeliverNakCreateDirectoryReparse0$PST06000143(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                              bool linkFound,
                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateDirectoryReparse0$PST06000142(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateDirectoryReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::MarshallAll(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakCreateDirectoryReparse0

    .method privatescope instance void  DeliverAckDeleteDirectory0$PST06000144() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   37
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   37
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckDeleteDirectory0

    .method privatescope instance void  MarshallDeliverAckDeleteDirectory0$PST06000145(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeleteDirectory0$PST06000144()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeleteDirectoryPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckDeleteDirectory0

    .method privatescope instance void  DeliverNakDeleteDirectory0$PST06000146(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   38
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   38
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakDeleteDirectory0

    .method privatescope instance void  MarshallDeliverNakDeleteDirectory0$PST06000147(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteDirectory0$PST06000146(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakDeleteDirectory0

    .method privatescope instance void  DeliverNakDeleteDirectoryReparse0$PST06000148(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                      bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   39
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   39
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakDeleteDirectoryReparse0

    .method privatescope instance void  MarshallDeliverNakDeleteDirectoryReparse0$PST06000149(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                              bool linkFound,
                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteDirectoryReparse0$PST06000148(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteDirectoryReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::MarshallAll(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakDeleteDirectoryReparse0

    .method privatescope instance void  DeliverAckCreateFile0$PST0600014A() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   41
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   41
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCreateFile0

    .method privatescope instance void  MarshallDeliverAckCreateFile0$PST0600014B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateFile0$PST0600014A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateFilePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCreateFile0

    .method privatescope instance void  DeliverNakCreateFile0$PST0600014C(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFilePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   42
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   42
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakCreateFile0

    .method privatescope instance void  MarshallDeliverNakCreateFile0$PST0600014D(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateFile0$PST0600014C(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFilePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakCreateFile0

    .method privatescope instance void  DeliverNakCreateFileReparse0$PST0600014E(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                 bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   43
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   43
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakCreateFileReparse0

    .method privatescope instance void  MarshallDeliverNakCreateFileReparse0$PST0600014F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                         bool linkFound,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateFileReparse0$PST0600014E(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateFileReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakCreateFileReparse0

    .method privatescope instance void  DeliverAckCreateAndBindFile0$PST06000150() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   45
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   45
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCreateAndBindFile0

    .method privatescope instance void  MarshallDeliverAckCreateAndBindFile0$PST06000151(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateAndBindFile0$PST06000150()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateAndBindFilePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCreateAndBindFile0

    .method privatescope instance void  DeliverNakCreateAndBindFile0$PST06000152(valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                                 valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateAndBindFilePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateAndBindFilePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::code
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   46
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   46
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverNakCreateAndBindFile0

    .method privatescope instance void  MarshallDeliverNakCreateAndBindFile0$PST06000153(valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                                         valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateAndBindFile0$PST06000152(valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateAndBindFilePod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverNakCreateAndBindFile0

    .method privatescope instance void  DeliverAckDeleteFile0$PST06000154() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   48
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   48
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckDeleteFile0

    .method privatescope instance void  MarshallDeliverAckDeleteFile0$PST06000155(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeleteFile0$PST06000154()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeleteFilePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckDeleteFile0

    .method privatescope instance void  DeliverNakDeleteFile0$PST06000156(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFilePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   49
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   49
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakDeleteFile0

    .method privatescope instance void  MarshallDeliverNakDeleteFile0$PST06000157(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteFile0$PST06000156(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFilePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakDeleteFile0

    .method privatescope instance void  DeliverNakDeleteFileReparse0$PST06000158(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                 bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   50
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   50
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakDeleteFileReparse0

    .method privatescope instance void  MarshallDeliverNakDeleteFileReparse0$PST06000159(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                         bool linkFound,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteFileReparse0$PST06000158(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteFileReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakDeleteFileReparse0

    .method privatescope instance void  DeliverAckStoreACL0$PST0600015A() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   52
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   52
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckStoreACL0

    .method privatescope instance void  MarshallDeliverAckStoreACL0$PST0600015B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckStoreACL0$PST0600015A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckStoreACLPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckStoreACL0

    .method privatescope instance void  DeliverNakStoreACL0$PST0600015C(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   53
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   53
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakStoreACL0

    .method privatescope instance void  MarshallDeliverNakStoreACL0$PST0600015D(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakStoreACL0$PST0600015C(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakStoreACL0

    .method privatescope instance void  DeliverNakStoreACLReparse0$PST0600015E(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                               bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   54
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   54
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakStoreACLReparse0

    .method privatescope instance void  MarshallDeliverNakStoreACLReparse0$PST0600015F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                       bool linkFound,
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakStoreACLReparse0$PST0600015E(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakStoreACLReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakStoreACLReparse0

    .method privatescope instance void  DeliverAckCreateLink0$PST06000160() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   56
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   56
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckCreateLink0

    .method privatescope instance void  MarshallDeliverAckCreateLink0$PST06000161(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateLink0$PST06000160()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckCreateLinkPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckCreateLink0

    .method privatescope instance void  DeliverNakCreateLink0$PST06000162(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   57
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   57
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakCreateLink0

    .method privatescope instance void  MarshallDeliverNakCreateLink0$PST06000163(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateLink0$PST06000162(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakCreateLink0

    .method privatescope instance void  DeliverNakCreateLinkReparse0$PST06000164(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                 bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   58
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   58
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakCreateLinkReparse0

    .method privatescope instance void  MarshallDeliverNakCreateLinkReparse0$PST06000165(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                         bool linkFound,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateLinkReparse0$PST06000164(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakCreateLinkReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakCreateLinkReparse0

    .method privatescope instance void  DeliverAckDeleteLink0$PST06000166() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   60
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   60
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckDeleteLink0

    .method privatescope instance void  MarshallDeliverAckDeleteLink0$PST06000167(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeleteLink0$PST06000166()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckDeleteLinkPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckDeleteLink0

    .method privatescope instance void  DeliverNakDeleteLink0$PST06000168(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   61
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   61
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakDeleteLink0

    .method privatescope instance void  MarshallDeliverNakDeleteLink0$PST06000169(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteLink0$PST06000168(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakDeleteLink0

    .method privatescope instance void  DeliverNakDeleteLinkReparse0$PST0600016A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                 char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                 bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   62
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   62
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakDeleteLinkReparse0

    .method privatescope instance void  MarshallDeliverNakDeleteLinkReparse0$PST0600016B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                         bool linkFound,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteLinkReparse0$PST0600016A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakDeleteLinkReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakDeleteLinkReparse0

    .method privatescope instance void  DeliverAckGetLinkValue0$PST0600016C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetLinkValuePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   64
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   64
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverAckGetLinkValue0

    .method privatescope instance void  MarshallDeliverAckGetLinkValue0$PST0600016D(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckGetLinkValue0$PST0600016C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::AckGetLinkValuePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckGetLinkValue0

    .method privatescope instance void  DeliverNakGetLinkValue0$PST0600016E(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValuePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue::code
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   65
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   65
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverNakGetLinkValue0

    .method privatescope instance void  MarshallDeliverNakGetLinkValue0$PST0600016F(valuetype Microsoft.Singularity.Directory.ErrorCode code,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetLinkValue0$PST0600016E(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValuePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakGetLinkValue0

    .method privatescope instance void  DeliverNakGetLinkValueReparse0$PST06000170(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                   char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                   bool linkFound) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::linkFound
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   66
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   66
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverNakGetLinkValueReparse0

    .method privatescope instance void  MarshallDeliverNakGetLinkValueReparse0$PST06000171(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                                           bool linkFound,
                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetLinkValueReparse0$PST06000170(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  bool)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::NakGetLinkValueReparsePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::MarshallAll(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverNakGetLinkValueReparse0

    .method privatescope instance void  DeliverSuccess0$PST06000172() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   67
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   67
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000173(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverSuccess0$PST06000172()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Success::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000174() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000175(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverContractNotSupported0$PST06000174()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod1
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind BindPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify NotifyPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration BeginEnumerationPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration ReadEnumerationPod1
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration EndEnumerationPod1
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes GetAttributesPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL QueryACLPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register RegisterPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister DeregisterPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory CreateDirectoryPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory DeleteDirectoryPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile CreateFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile CreateAndBindFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile DeleteFilePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL StoreACLPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink CreateLinkPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink DeleteLinkPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue GetLinkValuePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::CanonicalState$PST06000021(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::CanonicalState$PST06000021(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       690 (0x2b2)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0122

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   35
      IL_0017:  beq        IL_012d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   34
      IL_001f:  beq        IL_0138

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   33
      IL_0027:  beq        IL_0143

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   32
      IL_002f:  beq        IL_014e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   31
      IL_0037:  beq        IL_0159

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   30
      IL_003f:  beq        IL_0164

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   29
      IL_0047:  beq        IL_016f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   28
      IL_004f:  beq        IL_017a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   27
      IL_0057:  beq        IL_0185

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   26
      IL_005f:  beq        IL_0190

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   25
      IL_0067:  beq        IL_019b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   24
      IL_006f:  beq        IL_01a6

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   23
      IL_0077:  beq        IL_01b1

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   22
      IL_007f:  beq        IL_01bc

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   21
      IL_0087:  beq        IL_01c7

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   20
      IL_008f:  beq        IL_01d2

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   19
      IL_0097:  beq        IL_01dd

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   18
      IL_009f:  beq        IL_01e8

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   17
      IL_00a7:  beq        IL_01f3

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   16
      IL_00af:  beq        IL_01fe

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   15
      IL_00b7:  beq        IL_0209

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   14
      IL_00bf:  beq        IL_0214

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   13
      IL_00c7:  beq        IL_021f

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.s   12
      IL_00cf:  beq        IL_022a

      IL_00d4:  ldloc.0
      IL_00d5:  ldc.i4.s   11
      IL_00d7:  beq        IL_0235

      IL_00dc:  ldloc.0
      IL_00dd:  ldc.i4.s   10
      IL_00df:  beq        IL_0240

      IL_00e4:  ldloc.0
      IL_00e5:  ldc.i4.s   9
      IL_00e7:  beq        IL_024b

      IL_00ec:  ldloc.0
      IL_00ed:  ldc.i4.8
      IL_00ee:  beq        IL_0256

      IL_00f3:  ldloc.0
      IL_00f4:  ldc.i4.7
      IL_00f5:  beq        IL_0261

      IL_00fa:  ldloc.0
      IL_00fb:  ldc.i4.6
      IL_00fc:  beq        IL_026c

      IL_0101:  ldloc.0
      IL_0102:  ldc.i4.5
      IL_0103:  beq        IL_0277

      IL_0108:  ldloc.0
      IL_0109:  ldc.i4.4
      IL_010a:  beq        IL_0282

      IL_010f:  ldloc.0
      IL_0110:  ldc.i4.3
      IL_0111:  beq        IL_028d

      IL_0116:  ldloc.0
      IL_0117:  ldc.i4.2
      IL_0118:  beq        IL_0298

      IL_011d:  br         IL_02a3

      IL_0122:  ldstr      "Enumerate"
      IL_0127:  stloc.1
      IL_0128:  br         IL_02ae

      IL_012d:  ldstr      "EnumerateAck"
      IL_0132:  stloc.1
      IL_0133:  br         IL_02ae

      IL_0138:  ldstr      "Ready"
      IL_013d:  stloc.1
      IL_013e:  br         IL_02ae

      IL_0143:  ldstr      "Ready$0"
      IL_0148:  stloc.1
      IL_0149:  br         IL_02ae

      IL_014e:  ldstr      "Ready$1"
      IL_0153:  stloc.1
      IL_0154:  br         IL_02ae

      IL_0159:  ldstr      "Ready$2"
      IL_015e:  stloc.1
      IL_015f:  br         IL_02ae

      IL_0164:  ldstr      "Ready$3"
      IL_0169:  stloc.1
      IL_016a:  br         IL_02ae

      IL_016f:  ldstr      "Ready$4"
      IL_0174:  stloc.1
      IL_0175:  br         IL_02ae

      IL_017a:  ldstr      "Ready$5"
      IL_017f:  stloc.1
      IL_0180:  br         IL_02ae

      IL_0185:  ldstr      "Ready$6"
      IL_018a:  stloc.1
      IL_018b:  br         IL_02ae

      IL_0190:  ldstr      "Ready$7"
      IL_0195:  stloc.1
      IL_0196:  br         IL_02ae

      IL_019b:  ldstr      "Ready$8"
      IL_01a0:  stloc.1
      IL_01a1:  br         IL_02ae

      IL_01a6:  ldstr      "Ready$9"
      IL_01ab:  stloc.1
      IL_01ac:  br         IL_02ae

      IL_01b1:  ldstr      "Ready$10"
      IL_01b6:  stloc.1
      IL_01b7:  br         IL_02ae

      IL_01bc:  ldstr      "Ready$11"
      IL_01c1:  stloc.1
      IL_01c2:  br         IL_02ae

      IL_01c7:  ldstr      "Ready$12"
      IL_01cc:  stloc.1
      IL_01cd:  br         IL_02ae

      IL_01d2:  ldstr      "Ready$13"
      IL_01d7:  stloc.1
      IL_01d8:  br         IL_02ae

      IL_01dd:  ldstr      "Ready$14"
      IL_01e2:  stloc.1
      IL_01e3:  br         IL_02ae

      IL_01e8:  ldstr      "Ready$15"
      IL_01ed:  stloc.1
      IL_01ee:  br         IL_02ae

      IL_01f3:  ldstr      "Ready$16"
      IL_01f8:  stloc.1
      IL_01f9:  br         IL_02ae

      IL_01fe:  ldstr      "Ready$17"
      IL_0203:  stloc.1
      IL_0204:  br         IL_02ae

      IL_0209:  ldstr      "Ready$18"
      IL_020e:  stloc.1
      IL_020f:  br         IL_02ae

      IL_0214:  ldstr      "Ready$19"
      IL_0219:  stloc.1
      IL_021a:  br         IL_02ae

      IL_021f:  ldstr      "Ready$20"
      IL_0224:  stloc.1
      IL_0225:  br         IL_02ae

      IL_022a:  ldstr      "Ready$21"
      IL_022f:  stloc.1
      IL_0230:  br         IL_02ae

      IL_0235:  ldstr      "Ready$22"
      IL_023a:  stloc.1
      IL_023b:  br         IL_02ae

      IL_0240:  ldstr      "Ready$23"
      IL_0245:  stloc.1
      IL_0246:  br         IL_02ae

      IL_024b:  ldstr      "Ready$24"
      IL_0250:  stloc.1
      IL_0251:  br         IL_02ae

      IL_0256:  ldstr      "Ready$25"
      IL_025b:  stloc.1
      IL_025c:  br         IL_02ae

      IL_0261:  ldstr      "Ready$26"
      IL_0266:  stloc.1
      IL_0267:  br         IL_02ae

      IL_026c:  ldstr      "Ready$27"
      IL_0271:  stloc.1
      IL_0272:  br         IL_02ae

      IL_0277:  ldstr      "Ready$28"
      IL_027c:  stloc.1
      IL_027d:  br         IL_02ae

      IL_0282:  ldstr      "Ready$29"
      IL_0287:  stloc.1
      IL_0288:  br         IL_02ae

      IL_028d:  ldstr      "Start"
      IL_0292:  stloc.1
      IL_0293:  br         IL_02ae

      IL_0298:  ldstr      "DoneState"
      IL_029d:  stloc.1
      IL_029e:  br         IL_02ae

      IL_02a3:  ldstr      "<protocol terminated>"
      IL_02a8:  stloc.1
      IL_02a9:  br         IL_02ae

      IL_02ae:  ldloc.1
      IL_02af:  stloc.2
      IL_02b0:  ldloc.1
      IL_02b1:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvBind([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                           [out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.3
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.3
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Bind when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BindPod0
      IL_008e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0093:  stind.i
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BindPod0
      IL_009b:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_00a0:  stind.i
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BindPod0
      IL_00b0:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/Bind
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   33
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv Bind in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Exp::RecvBind

    .method public instance void  SendAckBind() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   33
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckBind0$PST06000116()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckBind0$PST06000117(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   32
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckBind in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckBind

    .method public instance void  SendNakBind(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp,
                                              valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   33
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00b0

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_008a

      IL_0070:  ldloc.s    V_4
      IL_0072:  ldarg.1
      IL_0073:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0078:  ldloc.3
      IL_0079:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_007e:  ldarg.1
      IL_007f:  ldarg.2
      IL_0080:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakBind0$PST06000118(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start),
                                                                                                                                   valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0085:  br         IL_0098

      IL_008a:  ldloc.3
      IL_008b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0090:  ldarg.1
      IL_0091:  ldarg.2
      IL_0092:  ldarg.0
      IL_0093:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakBind0$PST06000119(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start),
                                                                                                                                           valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0098:  ldarg.0
      IL_0099:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   32
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't send NakBind in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::SendNakBind

    .method public instance void  SendNakBindReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest,
                                                     bool linkFound,
                                                     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       242 (0xf2)
      .maxstack  16
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_6)
      IL_0000:  ldarg.s    exp
      IL_0002:  brfalse    IL_0043

      IL_0007:  ldarg.s    exp
      IL_0009:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000e:  ldarg.s    exp
      IL_0010:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0015:  ldc.i4.3
      IL_0016:  call       instance bool Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_001b:  brtrue     IL_0043

      IL_0020:  ldstr      "can't move endpoint exp in state "
      IL_0025:  ldarg.s    exp
      IL_0027:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_002c:  ldarg.s    exp
      IL_002e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0033:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0038:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_003d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0042:  throw

      IL_0043:  ldarg.0
      IL_0044:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0049:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004e:  stloc.0
      IL_004f:  ldloc.0
      IL_0050:  ldc.i4.s   33
      IL_0052:  beq        IL_005c

      IL_0057:  br         IL_00db

      IL_005c:  ldarg.0
      IL_005d:  ldloca.s   V_1
      IL_005f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0064:  stloc.2
      IL_0065:  ldloc.2
      IL_0066:  stloc.3
      IL_0067:  ldloc.3
      IL_0068:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_006d:  stloc.s    V_4
      IL_006f:  ldloc.1
      IL_0070:  brtrue     IL_00b2

      IL_0075:  ldarg.1
      IL_0076:  stloc.s    V_5
      IL_0078:  ldloc.s    V_4
      IL_007a:  ldloc.s    V_5
      IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0081:  ldarg.2
      IL_0082:  stloc.s    V_6
      IL_0084:  ldloc.s    V_6
      IL_0086:  brfalse    IL_0094

      IL_008b:  ldloc.s    V_4
      IL_008d:  ldloc.s    V_6
      IL_008f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0094:  ldloc.s    V_4
      IL_0096:  ldarg.s    exp
      IL_0098:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_009d:  ldloc.3
      IL_009e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_00a3:  ldarg.1
      IL_00a4:  ldarg.2
      IL_00a5:  ldarg.3
      IL_00a6:  ldarg.s    exp
      IL_00a8:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakBindReparse0$PST0600011A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                          char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                          bool,
                                                                                                                                          valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00ad:  br         IL_00c3

      IL_00b2:  ldloc.3
      IL_00b3:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_00b8:  ldarg.1
      IL_00b9:  ldarg.2
      IL_00ba:  ldarg.3
      IL_00bb:  ldarg.s    exp
      IL_00bd:  ldarg.0
      IL_00be:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakBindReparse0$PST0600011B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                                  bool,
                                                                                                                                                  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c3:  ldarg.0
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cf:  ldc.i4.s   32
      IL_00d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d6:  br         IL_00f1

      IL_00db:  ldstr      "can't send NakBindReparse in state "
      IL_00e0:  ldarg.0
      IL_00e1:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00e6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00eb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f0:  throw

      IL_00f1:  ret
    } // end of method Exp::SendNakBindReparse

    .method public instance void  RecvNotify([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                             [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& pattern,
                                             [out] bool& sendExisting,
                                             [out] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       254 (0xfe)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00e7

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv Notify when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_008e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0093:  stind.i
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_009b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_00a0:  stind.i
      IL_00a1:  ldarg.3
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_00a8:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::sendExisting
      IL_00ad:  stobj      [Corlib]System.Boolean
      IL_00b2:  ldarg.s    imp
      IL_00b4:  ldarg.0
      IL_00b5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_00ba:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00bf:  stind.i
      IL_00c0:  ldarg.0
      IL_00c1:  ldc.i4.0
      IL_00c2:  volatile.
      IL_00c4:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c9:  ldarg.0
      IL_00ca:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_00cf:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/Notify
      IL_00d5:  ldarg.0
      IL_00d6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00db:  ldc.i4.s   11
      IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e2:  br         IL_00fd

      IL_00e7:  ldstr      "can't recv Notify in state "
      IL_00ec:  ldarg.0
      IL_00ed:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00f2:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f7:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00fc:  throw

      IL_00fd:  ret
    } // end of method Exp::RecvNotify

    .method public instance void  SendAckNotify() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckNotify0$PST0600011C()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckNotify0$PST0600011D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   10
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckNotify in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckNotify

    .method public instance void  SendNakNotify(valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0012:  ldc.i4.4
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.NotifyContract/Imp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint imp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Imp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   11
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00b0

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_008a

      IL_0070:  ldloc.s    V_4
      IL_0072:  ldarg.1
      IL_0073:  call       void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0078:  ldloc.3
      IL_0079:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_007e:  ldarg.1
      IL_007f:  ldarg.2
      IL_0080:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakNotify0$PST0600011E(valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                     valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0085:  br         IL_0098

      IL_008a:  ldloc.3
      IL_008b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0090:  ldarg.1
      IL_0091:  ldarg.2
      IL_0092:  ldarg.0
      IL_0093:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakNotify0$PST0600011F(valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                             valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0098:  ldarg.0
      IL_0099:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   10
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't send NakNotify in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::SendNakNotify

    .method public instance void  SendNakNotifyReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                       bool linkFound,
                                                       valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       235 (0xeb)
      .maxstack  16
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.s    imp
      IL_0002:  brfalse    IL_0043

      IL_0007:  ldarg.s    imp
      IL_0009:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000e:  ldarg.s    imp
      IL_0010:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0015:  ldc.i4.4
      IL_0016:  call       instance bool Microsoft.Singularity.Directory.NotifyContract/Imp::InState(int32)
      IL_001b:  brtrue     IL_0043

      IL_0020:  ldstr      "can't move endpoint imp in state "
      IL_0025:  ldarg.s    imp
      IL_0027:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_002c:  ldarg.s    imp
      IL_002e:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0033:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Imp::CurrentState()
      IL_0038:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_003d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0042:  throw

      IL_0043:  ldarg.0
      IL_0044:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0049:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004e:  stloc.0
      IL_004f:  ldloc.0
      IL_0050:  ldc.i4.s   11
      IL_0052:  beq        IL_005c

      IL_0057:  br         IL_00d4

      IL_005c:  ldarg.0
      IL_005d:  ldloca.s   V_1
      IL_005f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0064:  stloc.2
      IL_0065:  ldloc.2
      IL_0066:  stloc.3
      IL_0067:  ldloc.3
      IL_0068:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_006d:  stloc.s    V_4
      IL_006f:  ldloc.1
      IL_0070:  brtrue     IL_00ab

      IL_0075:  ldarg.1
      IL_0076:  stloc.s    V_5
      IL_0078:  ldloc.s    V_4
      IL_007a:  ldloc.s    V_5
      IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0081:  ldarg.2
      IL_0082:  stloc.s    V_6
      IL_0084:  ldloc.s    V_4
      IL_0086:  ldloc.s    V_6
      IL_0088:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_008d:  ldloc.s    V_4
      IL_008f:  ldarg.s    imp
      IL_0091:  call       void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0096:  ldloc.3
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_009c:  ldarg.1
      IL_009d:  ldarg.2
      IL_009e:  ldarg.3
      IL_009f:  ldarg.s    imp
      IL_00a1:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakNotifyReparse0$PST06000120(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            bool,
                                                                                                                                            valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start))
      IL_00a6:  br         IL_00bc

      IL_00ab:  ldloc.3
      IL_00ac:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_00b1:  ldarg.1
      IL_00b2:  ldarg.2
      IL_00b3:  ldarg.3
      IL_00b4:  ldarg.s    imp
      IL_00b6:  ldarg.0
      IL_00b7:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakNotifyReparse0$PST06000121(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                    bool,
                                                                                                                                                    valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start),
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00bc:  ldarg.0
      IL_00bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.s   10
      IL_00ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cf:  br         IL_00ea

      IL_00d4:  ldstr      "can't send NakNotifyReparse in state "
      IL_00d9:  ldarg.0
      IL_00da:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00df:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e4:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e9:  throw

      IL_00ea:  ret
    } // end of method Exp::SendNakNotifyReparse

    .method public instance void  RecvBeginEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv BeginEnumeration when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BeginEnumerationPod0
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   36
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv BeginEnumeration in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvBeginEnumeration

    .method public instance void  RecvReadEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   35
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ReadEnumeration when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::ReadEnumerationPod1
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   36
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv ReadEnumeration in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvReadEnumeration

    .method public instance void  RecvEndEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   35
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv EndEnumeration when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::EndEnumerationPod1
      IL_0098:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   34
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv EndEnumeration in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvEndEnumeration

    .method public instance void  SendEnumerationEntries(valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) results,
                                                         bool moreEntries) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0072

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldloc.s    V_4
      IL_0034:  ldarg.1
      IL_0035:  call       void Microsoft.Singularity.Directory.EnumerationRecords::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  ldarg.2
      IL_0042:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverEnumerationEntries0$PST06000122(valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool)
      IL_0047:  br         IL_005a

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.2
      IL_0054:  ldarg.0
      IL_0055:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverEnumerationEntries0$PST06000123(valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      bool,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0060:  ldarg.0
      IL_0061:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0066:  ldc.i4.s   35
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send EnumerationEntries in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendEnumerationEntries

    .method public instance void  SendEnumerationTerminated(valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverEnumerationTerminated0$PST06000124(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverEnumerationTerminated0$PST06000125(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   34
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send EnumerationTerminated in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendEnumerationTerminated

    .method public instance void  RecvGetAttributes([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   16
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   16
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetAttributes when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetAttributesPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetAttributesPod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   15
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv GetAttributes in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvGetAttributes

    .method public instance void  SendAckGetAttributes(valuetype Microsoft.Singularity.Directory.FileAttributesRecord fileAttributes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0071

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   fileAttributes
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void Microsoft.Singularity.Directory.FileAttributesRecord::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckGetAttributes0$PST06000126(valuetype Microsoft.Singularity.Directory.FileAttributesRecord)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckGetAttributes0$PST06000127(valuetype Microsoft.Singularity.Directory.FileAttributesRecord,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.s   14
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send AckGetAttributes in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_007c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Exp::SendAckGetAttributes

    .method public instance void  SendNakGetAttributes(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetAttributes0$PST06000128(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakGetAttributes0$PST06000129(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   14
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakGetAttributes in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakGetAttributes

    .method public instance void  SendNakGetAttributesReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                              bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetAttributesReparse0$PST0600012A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakGetAttributesReparse0$PST0600012B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                           bool,
                                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   14
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakGetAttributesReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakGetAttributesReparse

    .method public instance void  RecvQueryACL([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                               [out] bool& effective) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       229 (0xe5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ce

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   20
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   20
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv QueryACL when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::QueryACLPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::QueryACLPod0
      IL_009d:  ldfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::effective
      IL_00a2:  stobj      [Corlib]System.Boolean
      IL_00a7:  ldarg.0
      IL_00a8:  ldc.i4.0
      IL_00a9:  volatile.
      IL_00ab:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::QueryACLPod0
      IL_00b6:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.s   9
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c9:  br         IL_00e4

      IL_00ce:  ldstr      "can't recv QueryACL in state "
      IL_00d3:  ldarg.0
      IL_00d4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00d9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00de:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e3:  throw

      IL_00e4:  ret
    } // end of method Exp::RecvQueryACL

    .method public instance void  SendAckQueryACL(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern,
                                                  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       166 (0xa6)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_008f

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_006a

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_5
      IL_0037:  brfalse    IL_0045

      IL_003c:  ldloc.s    V_4
      IL_003e:  ldloc.s    V_5
      IL_0040:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0045:  ldarg.2
      IL_0046:  stloc.s    V_6
      IL_0048:  ldloc.s    V_6
      IL_004a:  brfalse    IL_0058

      IL_004f:  ldloc.s    V_4
      IL_0051:  ldloc.s    V_6
      IL_0053:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0058:  ldloc.3
      IL_0059:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_005e:  ldarg.1
      IL_005f:  ldarg.2
      IL_0060:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckQueryACL0$PST0600012C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0065:  br         IL_0078

      IL_006a:  ldloc.3
      IL_006b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0070:  ldarg.1
      IL_0071:  ldarg.2
      IL_0072:  ldarg.0
      IL_0073:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckQueryACL0$PST0600012D(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0078:  ldarg.0
      IL_0079:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007e:  ldarg.0
      IL_007f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0084:  ldc.i4.8
      IL_0085:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_008a:  br         IL_00a5

      IL_008f:  ldstr      "can't send AckQueryACL in state "
      IL_0094:  ldarg.0
      IL_0095:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_009a:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_009f:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00a4:  throw

      IL_00a5:  ret
    } // end of method Exp::SendAckQueryACL

    .method public instance void  SendNakQueryACL(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0067

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakQueryACL0$PST0600012E(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakQueryACL0$PST0600012F(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send NakQueryACL in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Exp::SendNakQueryACL

    .method public instance void  SendNakQueryACLReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                         bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       154 (0x9a)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0083

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakQueryACLReparse0$PST06000130(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakQueryACLReparse0$PST06000131(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      bool,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.8
      IL_0079:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007e:  br         IL_0099

      IL_0083:  ldstr      "can't send NakQueryACLReparse in state "
      IL_0088:  ldarg.0
      IL_0089:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008e:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0093:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0098:  throw

      IL_0099:  ret
    } // end of method Exp::SendNakQueryACLReparse

    .method public instance void  RecvRegister([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                               [out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       224 (0xe0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c9

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   24
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   24
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Register when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::RegisterPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::RegisterPod0
      IL_009d:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_00a2:  stind.i
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::RegisterPod0
      IL_00b2:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/Register
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.7
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c4:  br         IL_00df

      IL_00c9:  ldstr      "can't recv Register in state "
      IL_00ce:  ldarg.0
      IL_00cf:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00d4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00de:  throw

      IL_00df:  ret
    } // end of method Exp::RecvRegister

    .method public instance void  SendAckRegister() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckRegister0$PST06000132()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckRegister0$PST06000133(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckRegister in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckRegister

    .method public instance void  SendNakRegister(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp,
                                                  valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceProviderContract/Imp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint imp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.7
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ae

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0089

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_007d:  ldarg.1
      IL_007e:  ldarg.2
      IL_007f:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakRegister0$PST06000134(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start),
                                                                                                                                       valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0084:  br         IL_0097

      IL_0089:  ldloc.3
      IL_008a:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.2
      IL_0091:  ldarg.0
      IL_0092:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakRegister0$PST06000135(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start),
                                                                                                                                               valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0097:  ldarg.0
      IL_0098:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.6
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't send NakRegister in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::SendNakRegister

    .method public instance void  SendNakRegisterReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                         bool linkFound,
                                                         valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       233 (0xe9)
      .maxstack  16
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.s    imp
      IL_0002:  brfalse    IL_0043

      IL_0007:  ldarg.s    imp
      IL_0009:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000e:  ldarg.s    imp
      IL_0010:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0015:  ldc.i4.3
      IL_0016:  call       instance bool Microsoft.Singularity.Directory.ServiceProviderContract/Imp::InState(int32)
      IL_001b:  brtrue     IL_0043

      IL_0020:  ldstr      "can't move endpoint imp in state "
      IL_0025:  ldarg.s    imp
      IL_0027:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_002c:  ldarg.s    imp
      IL_002e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0033:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_0038:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_003d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0042:  throw

      IL_0043:  ldarg.0
      IL_0044:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0049:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_004e:  stloc.0
      IL_004f:  ldloc.0
      IL_0050:  ldc.i4.7
      IL_0051:  beq        IL_005b

      IL_0056:  br         IL_00d2

      IL_005b:  ldarg.0
      IL_005c:  ldloca.s   V_1
      IL_005e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0063:  stloc.2
      IL_0064:  ldloc.2
      IL_0065:  stloc.3
      IL_0066:  ldloc.3
      IL_0067:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_006c:  stloc.s    V_4
      IL_006e:  ldloc.1
      IL_006f:  brtrue     IL_00aa

      IL_0074:  ldarg.1
      IL_0075:  stloc.s    V_5
      IL_0077:  ldloc.s    V_4
      IL_0079:  ldloc.s    V_5
      IL_007b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0080:  ldarg.2
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_4
      IL_0085:  ldloc.s    V_6
      IL_0087:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_008c:  ldloc.s    V_4
      IL_008e:  ldarg.s    imp
      IL_0090:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0095:  ldloc.3
      IL_0096:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_009b:  ldarg.1
      IL_009c:  ldarg.2
      IL_009d:  ldarg.3
      IL_009e:  ldarg.s    imp
      IL_00a0:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakRegisterReparse0$PST06000136(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool,
                                                                                                                                              valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00a5:  br         IL_00bb

      IL_00aa:  ldloc.3
      IL_00ab:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_00b0:  ldarg.1
      IL_00b1:  ldarg.2
      IL_00b2:  ldarg.3
      IL_00b3:  ldarg.s    imp
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakRegisterReparse0$PST06000137(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      bool,
                                                                                                                                                      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00bb:  ldarg.0
      IL_00bc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c1:  ldarg.0
      IL_00c2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c7:  ldc.i4.6
      IL_00c8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cd:  br         IL_00e8

      IL_00d2:  ldstr      "can't send NakRegisterReparse in state "
      IL_00d7:  ldarg.0
      IL_00d8:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00dd:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e2:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e7:  throw

      IL_00e8:  ret
    } // end of method Exp::SendNakRegisterReparse

    .method public instance void  RecvDeregister([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   28
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   28
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv Deregister when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeregisterPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeregisterPod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   17
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv Deregister in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvDeregister

    .method public instance void  SendAckDeregister(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceProviderContract/Imp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint imp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   17
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00ae

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_0089

      IL_0070:  ldloc.s    V_4
      IL_0072:  ldarg.1
      IL_0073:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0078:  ldloc.3
      IL_0079:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_007e:  ldarg.1
      IL_007f:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeregister0$PST06000138(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0084:  br         IL_0096

      IL_0089:  ldloc.3
      IL_008a:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckDeregister0$PST06000139(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0096:  ldarg.0
      IL_0097:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   16
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't send AckDeregister in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::SendAckDeregister

    .method public instance void  SendNakDeregister(valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeregister0$PST0600013A(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeregister0$PST0600013B(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   16
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakDeregister in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakDeregister

    .method public instance void  SendNakDeregisterReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                           bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   17
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeregisterReparse0$PST0600013C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeregisterReparse0$PST0600013D(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        bool,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   16
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakDeregisterReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakDeregisterReparse

    .method public instance void  RecvCreateDirectory([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& dirName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   32
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   32
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CreateDirectory when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateDirectoryPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateDirectoryPod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   29
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv CreateDirectory in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvCreateDirectory

    .method public instance void  SendAckCreateDirectory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 21 00 00 00 00 00 )                         // ..!.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateDirectory0$PST0600013E()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckCreateDirectory0$PST0600013F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   28
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckCreateDirectory in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckCreateDirectory

    .method public instance void  SendNakCreateDirectory(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 22 00 00 00 00 00 )                         // ..".....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateDirectory0$PST06000140(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateDirectory0$PST06000141(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   28
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakCreateDirectory in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakCreateDirectory

    .method public instance void  SendNakCreateDirectoryReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 23 00 00 00 00 00 )                         // ..#.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   29
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateDirectoryReparse0$PST06000142(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateDirectoryReparse0$PST06000143(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                             bool,
                                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   28
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakCreateDirectoryReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakCreateDirectoryReparse

    .method public instance void  RecvDeleteDirectory([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& dirName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 24 00 00 00 00 00 )                         // ..$.....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   36
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   36
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv DeleteDirectory when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteDirectoryPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteDirectoryPod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   23
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv DeleteDirectory in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvDeleteDirectory

    .method public instance void  SendAckDeleteDirectory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 25 00 00 00 00 00 )                         // ..%.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeleteDirectory0$PST06000144()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckDeleteDirectory0$PST06000145(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   22
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckDeleteDirectory in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckDeleteDirectory

    .method public instance void  SendNakDeleteDirectory(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 26 00 00 00 00 00 )                         // ..&.....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteDirectory0$PST06000146(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeleteDirectory0$PST06000147(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   22
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakDeleteDirectory in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakDeleteDirectory

    .method public instance void  SendNakDeleteDirectoryReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                                bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 27 00 00 00 00 00 )                         // ..'.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteDirectoryReparse0$PST06000148(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                     bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeleteDirectoryReparse0$PST06000149(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                             bool,
                                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   22
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakDeleteDirectoryReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakDeleteDirectoryReparse

    .method public instance void  RecvCreateFile([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& fileName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 28 00 00 00 00 00 )                         // ..(.....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   40
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   40
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CreateFile when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateFilePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateFilePod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   27
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv CreateFile in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvCreateFile

    .method public instance void  SendAckCreateFile() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 29 00 00 00 00 00 )                         // ..).....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateFile0$PST0600014A()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckCreateFile0$PST0600014B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   26
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckCreateFile in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckCreateFile

    .method public instance void  SendNakCreateFile(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 2A 00 00 00 00 00 )                         // ..*.....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateFile0$PST0600014C(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateFile0$PST0600014D(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   26
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakCreateFile in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakCreateFile

    .method public instance void  SendNakCreateFileReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                           bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 2B 00 00 00 00 00 )                         // ..+.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateFileReparse0$PST0600014E(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateFileReparse0$PST0600014F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        bool,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   26
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakCreateFileReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakCreateFileReparse

    .method public instance void  RecvCreateAndBindFile([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& fileName,
                                                        [out] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 2C 00 00 00 00 00 )                         // ..,.....
      // Code size       225 (0xe1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ca

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   44
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   44
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CreateAndBindFile when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateAndBindFilePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateAndBindFilePod0
      IL_009d:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_00a2:  stind.i
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateAndBindFilePod0
      IL_00b2:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   31
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_00e0

      IL_00ca:  ldstr      "can't recv CreateAndBindFile in state "
      IL_00cf:  ldarg.0
      IL_00d0:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00d5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00da:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00df:  throw

      IL_00e0:  ret
    } // end of method Exp::RecvCreateAndBindFile

    .method public instance void  SendAckCreateAndBindFile() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 2D 00 00 00 00 00 )                         // ..-.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateAndBindFile0$PST06000150()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckCreateAndBindFile0$PST06000151(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   30
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckCreateAndBindFile in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckCreateAndBindFile

    .method public instance void  SendNakCreateAndBindFile(valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                           valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 2E 00 00 00 00 00 )                         // ........
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.FileContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.s   31
      IL_004d:  beq        IL_0057

      IL_0052:  br         IL_00b0

      IL_0057:  ldarg.0
      IL_0058:  ldloca.s   V_1
      IL_005a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005f:  stloc.2
      IL_0060:  ldloc.2
      IL_0061:  stloc.3
      IL_0062:  ldloc.3
      IL_0063:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0068:  stloc.s    V_4
      IL_006a:  ldloc.1
      IL_006b:  brtrue     IL_008a

      IL_0070:  ldloc.s    V_4
      IL_0072:  ldarg.1
      IL_0073:  call       void Microsoft.Singularity.Directory.FileContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0078:  ldloc.3
      IL_0079:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_007e:  ldarg.1
      IL_007f:  ldarg.2
      IL_0080:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateAndBindFile0$PST06000152(valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0085:  br         IL_0098

      IL_008a:  ldloc.3
      IL_008b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0090:  ldarg.1
      IL_0091:  ldarg.2
      IL_0092:  ldarg.0
      IL_0093:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateAndBindFile0$PST06000153(valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0098:  ldarg.0
      IL_0099:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   30
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't send NakCreateAndBindFile in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::SendNakCreateAndBindFile

    .method public instance void  RecvDeleteFile([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& fileName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 2F 00 00 00 00 00 )                         // ../.....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   47
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   47
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv DeleteFile when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteFilePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteFilePod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   21
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv DeleteFile in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvDeleteFile

    .method public instance void  SendAckDeleteFile() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 30 00 00 00 00 00 )                         // ..0.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeleteFile0$PST06000154()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckDeleteFile0$PST06000155(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   20
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckDeleteFile in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckDeleteFile

    .method public instance void  SendNakDeleteFile(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 31 00 00 00 00 00 )                         // ..1.....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteFile0$PST06000156(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeleteFile0$PST06000157(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   20
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakDeleteFile in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakDeleteFile

    .method public instance void  SendNakDeleteFileReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                           bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 32 00 00 00 00 00 )                         // ..2.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   21
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteFileReparse0$PST06000158(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeleteFileReparse0$PST06000159(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        bool,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   20
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakDeleteFileReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakDeleteFileReparse

    .method public instance void  RecvStoreACL([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& fileName,
                                               [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& nodePattern,
                                               [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& descendantPattern) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 33 00 00 00 00 00 )                         // ..3.....
      // Code size       237 (0xed)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d6

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   51
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   51
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StoreACL when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_00a2:  stind.i
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_00aa:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_00af:  stind.i
      IL_00b0:  ldarg.0
      IL_00b1:  ldc.i4.0
      IL_00b2:  volatile.
      IL_00b4:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_00bf:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL
      IL_00c5:  ldarg.0
      IL_00c6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cb:  ldc.i4.5
      IL_00cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d1:  br         IL_00ec

      IL_00d6:  ldstr      "can't recv StoreACL in state "
      IL_00db:  ldarg.0
      IL_00dc:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00e1:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e6:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00eb:  throw

      IL_00ec:  ret
    } // end of method Exp::RecvStoreACL

    .method public instance void  SendAckStoreACL() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 34 00 00 00 00 00 )                         // ..4.....
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckStoreACL0$PST0600015A()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckStoreACL0$PST0600015B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckStoreACL in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckStoreACL

    .method public instance void  SendNakStoreACL(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 35 00 00 00 00 00 )                         // ..5.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakStoreACL0$PST0600015C(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakStoreACL0$PST0600015D(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.4
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send NakStoreACL in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendNakStoreACL

    .method public instance void  SendNakStoreACLReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                         char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                         bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 36 00 00 00 00 00 )                         // ..6.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       153 (0x99)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0082

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_005c

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldarg.2
      IL_003e:  stloc.s    V_6
      IL_0040:  ldloc.s    V_4
      IL_0042:  ldloc.s    V_6
      IL_0044:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0049:  ldloc.3
      IL_004a:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_004f:  ldarg.1
      IL_0050:  ldarg.2
      IL_0051:  ldarg.3
      IL_0052:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakStoreACLReparse0$PST0600015E(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              bool)
      IL_0057:  br         IL_006b

      IL_005c:  ldloc.3
      IL_005d:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0062:  ldarg.1
      IL_0063:  ldarg.2
      IL_0064:  ldarg.3
      IL_0065:  ldarg.0
      IL_0066:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakStoreACLReparse0$PST0600015F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      bool,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006b:  ldarg.0
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0071:  ldarg.0
      IL_0072:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0077:  ldc.i4.4
      IL_0078:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007d:  br         IL_0098

      IL_0082:  ldstr      "can't send NakStoreACLReparse in state "
      IL_0087:  ldarg.0
      IL_0088:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0092:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0097:  throw

      IL_0098:  ret
    } // end of method Exp::SendNakStoreACLReparse

    .method public instance void  RecvCreateLink([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& linkPath,
                                                 [out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& linkValue) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 37 00 00 00 00 00 )                         // ..7.....
      // Code size       225 (0xe1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ca

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   55
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   55
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CreateLink when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateLinkPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0095:  stind.i
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateLinkPod0
      IL_009d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_00a2:  stind.i
      IL_00a3:  ldarg.0
      IL_00a4:  ldc.i4.0
      IL_00a5:  volatile.
      IL_00a7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateLinkPod0
      IL_00b2:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink
      IL_00b8:  ldarg.0
      IL_00b9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00be:  ldc.i4.s   25
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_00e0

      IL_00ca:  ldstr      "can't recv CreateLink in state "
      IL_00cf:  ldarg.0
      IL_00d0:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00d5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00da:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00df:  throw

      IL_00e0:  ret
    } // end of method Exp::RecvCreateLink

    .method public instance void  SendAckCreateLink() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 38 00 00 00 00 00 )                         // ..8.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckCreateLink0$PST06000160()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckCreateLink0$PST06000161(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   24
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckCreateLink in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckCreateLink

    .method public instance void  SendNakCreateLink(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 39 00 00 00 00 00 )                         // ..9.....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateLink0$PST06000162(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateLink0$PST06000163(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   24
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakCreateLink in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakCreateLink

    .method public instance void  SendNakCreateLinkReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                           bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 3A 00 00 00 00 00 )                         // ..:.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakCreateLinkReparse0$PST06000164(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakCreateLinkReparse0$PST06000165(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        bool,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   24
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakCreateLinkReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakCreateLinkReparse

    .method public instance void  RecvDeleteLink([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& linkPath) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 3B 00 00 00 00 00 )                         // ..;.....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   59
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   59
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv DeleteLink when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteLinkPod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteLinkPod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   19
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv DeleteLink in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvDeleteLink

    .method public instance void  SendAckDeleteLink() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 3C 00 00 00 00 00 )                         // ..<.....
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckDeleteLink0$PST06000166()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckDeleteLink0$PST06000167(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   18
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send AckDeleteLink in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendAckDeleteLink

    .method public instance void  SendNakDeleteLink(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 3D 00 00 00 00 00 )                         // ..=.....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteLink0$PST06000168(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeleteLink0$PST06000169(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   18
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakDeleteLink in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakDeleteLink

    .method public instance void  SendNakDeleteLinkReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                           bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 3E 00 00 00 00 00 )                         // ..>.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   19
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakDeleteLinkReparse0$PST0600016A(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakDeleteLinkReparse0$PST0600016B(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        bool,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   18
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakDeleteLinkReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakDeleteLinkReparse

    .method public instance void  RecvGetLinkValue([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& linkPath) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 3F 00 00 00 00 00 )                         // ..?.....
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   34
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   63
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   63
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetLinkValue when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetLinkValuePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetLinkValuePod0
      IL_00a5:  initobj    Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   13
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv GetLinkValue in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvGetLinkValue

    .method public instance void  SendAckGetLinkValue(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 40 00 00 00 00 00 )                         // ..@.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverAckGetLinkValue0$PST0600016C(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverAckGetLinkValue0$PST0600016D(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   12
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send AckGetLinkValue in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendAckGetLinkValue

    .method public instance void  SendNakGetLinkValue(valuetype Microsoft.Singularity.Directory.ErrorCode code) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 41 00 00 00 00 00 )                         // ..A.....
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetLinkValue0$PST0600016E(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakGetLinkValue0$PST0600016F(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   12
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send NakGetLinkValue in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendNakGetLinkValue

    .method public instance void  SendNakGetLinkValueReparse(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) rest,
                                                             bool linkFound) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 42 00 00 00 00 00 )                         // ..B.....
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       155 (0x9b)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_6)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0084

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_005d

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldarg.2
      IL_003f:  stloc.s    V_6
      IL_0041:  ldloc.s    V_4
      IL_0043:  ldloc.s    V_6
      IL_0045:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.3
      IL_0053:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverNakGetLinkValueReparse0$PST06000170(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  bool)
      IL_0058:  br         IL_006c

      IL_005d:  ldloc.3
      IL_005e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0063:  ldarg.1
      IL_0064:  ldarg.2
      IL_0065:  ldarg.3
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverNakGetLinkValueReparse0$PST06000171(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                          char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                          bool,
                                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   12
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_009a

      IL_0084:  ldstr      "can't send NakGetLinkValueReparse in state "
      IL_0089:  ldarg.0
      IL_008a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_008f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0094:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0099:  throw

      IL_009a:  ret
    } // end of method Exp::SendNakGetLinkValueReparse

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 43 00 00 00 00 00 )                         // ..C.....
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverSuccess0$PST06000172()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverSuccess0$PST06000173(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   34
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Success in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::DeliverContractNotSupported0$PST06000174()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallDeliverContractNotSupported0$PST06000175(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1543 (0x607)
      .maxstack  22
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               int32 V_41)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_00a8

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_00e8

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_0130

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0178

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_01c0

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   15
      IL_0037:  beq        IL_0208

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   17
      IL_003f:  beq        IL_0250

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.s   19
      IL_0047:  beq        IL_0298

      IL_004c:  ldloc.1
      IL_004d:  ldc.i4.s   21
      IL_004f:  beq        IL_02e0

      IL_0054:  ldloc.1
      IL_0055:  ldc.i4.s   23
      IL_0057:  beq        IL_0328

      IL_005c:  ldloc.1
      IL_005d:  ldc.i4.s   25
      IL_005f:  beq        IL_0370

      IL_0064:  ldloc.1
      IL_0065:  ldc.i4.s   27
      IL_0067:  beq        IL_03b8

      IL_006c:  ldloc.1
      IL_006d:  ldc.i4.s   29
      IL_006f:  beq        IL_0400

      IL_0074:  ldloc.1
      IL_0075:  ldc.i4.s   31
      IL_0077:  beq        IL_0448

      IL_007c:  ldloc.1
      IL_007d:  ldc.i4.s   33
      IL_007f:  beq        IL_0490

      IL_0084:  ldloc.1
      IL_0085:  ldc.i4.s   34
      IL_0087:  beq        IL_04d8

      IL_008c:  ldloc.1
      IL_008d:  ldc.i4.s   35
      IL_008f:  beq        IL_0520

      IL_0094:  ldloc.1
      IL_0095:  ldc.i4.s   36
      IL_0097:  beq        IL_0568

      IL_009c:  ldloc.1
      IL_009d:  ldc.i4.3
      IL_009e:  beq        IL_05b0

      IL_00a3:  br         IL_05f8

      IL_00a8:  ldc.i4.0
      IL_00a9:  stloc.2
      IL_00aa:  ldarg.0
      IL_00ab:  volatile.
      IL_00ad:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b2:  stloc.3
      IL_00b3:  ldloc.3
      IL_00b4:  brtrue     IL_00c9

      IL_00b9:  ldarg.0
      IL_00ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00bf:  stloc.2
      IL_00c0:  ldarg.0
      IL_00c1:  volatile.
      IL_00c3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c8:  stloc.3
      IL_00c9:  ldloc.3
      IL_00ca:  ldc.i4.0
      IL_00cb:  ceq
      IL_00cd:  brfalse    IL_00e0

      IL_00d2:  ldloc.2
      IL_00d3:  brfalse    IL_00e0

      IL_00d8:  ldc.i4.m1
      IL_00d9:  stloc.s    V_4
      IL_00db:  br         IL_0600

      IL_00e0:  ldloc.3
      IL_00e1:  stloc.s    V_4
      IL_00e3:  br         IL_0600

      IL_00e8:  ldc.i4.0
      IL_00e9:  stloc.s    V_5
      IL_00eb:  ldarg.0
      IL_00ec:  volatile.
      IL_00ee:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00f3:  stloc.s    V_6
      IL_00f5:  ldloc.s    V_6
      IL_00f7:  brtrue     IL_010e

      IL_00fc:  ldarg.0
      IL_00fd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0102:  stloc.s    V_5
      IL_0104:  ldarg.0
      IL_0105:  volatile.
      IL_0107:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_010c:  stloc.s    V_6
      IL_010e:  ldloc.s    V_6
      IL_0110:  ldc.i4.0
      IL_0111:  ceq
      IL_0113:  brfalse    IL_0127

      IL_0118:  ldloc.s    V_5
      IL_011a:  brfalse    IL_0127

      IL_011f:  ldc.i4.m1
      IL_0120:  stloc.s    V_4
      IL_0122:  br         IL_0600

      IL_0127:  ldloc.s    V_6
      IL_0129:  stloc.s    V_4
      IL_012b:  br         IL_0600

      IL_0130:  ldc.i4.0
      IL_0131:  stloc.s    V_7
      IL_0133:  ldarg.0
      IL_0134:  volatile.
      IL_0136:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_013b:  stloc.s    V_8
      IL_013d:  ldloc.s    V_8
      IL_013f:  brtrue     IL_0156

      IL_0144:  ldarg.0
      IL_0145:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_014a:  stloc.s    V_7
      IL_014c:  ldarg.0
      IL_014d:  volatile.
      IL_014f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0154:  stloc.s    V_8
      IL_0156:  ldloc.s    V_8
      IL_0158:  ldc.i4.0
      IL_0159:  ceq
      IL_015b:  brfalse    IL_016f

      IL_0160:  ldloc.s    V_7
      IL_0162:  brfalse    IL_016f

      IL_0167:  ldc.i4.m1
      IL_0168:  stloc.s    V_4
      IL_016a:  br         IL_0600

      IL_016f:  ldloc.s    V_8
      IL_0171:  stloc.s    V_4
      IL_0173:  br         IL_0600

      IL_0178:  ldc.i4.0
      IL_0179:  stloc.s    V_9
      IL_017b:  ldarg.0
      IL_017c:  volatile.
      IL_017e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0183:  stloc.s    V_10
      IL_0185:  ldloc.s    V_10
      IL_0187:  brtrue     IL_019e

      IL_018c:  ldarg.0
      IL_018d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0192:  stloc.s    V_9
      IL_0194:  ldarg.0
      IL_0195:  volatile.
      IL_0197:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_019c:  stloc.s    V_10
      IL_019e:  ldloc.s    V_10
      IL_01a0:  ldc.i4.0
      IL_01a1:  ceq
      IL_01a3:  brfalse    IL_01b7

      IL_01a8:  ldloc.s    V_9
      IL_01aa:  brfalse    IL_01b7

      IL_01af:  ldc.i4.m1
      IL_01b0:  stloc.s    V_4
      IL_01b2:  br         IL_0600

      IL_01b7:  ldloc.s    V_10
      IL_01b9:  stloc.s    V_4
      IL_01bb:  br         IL_0600

      IL_01c0:  ldc.i4.0
      IL_01c1:  stloc.s    V_11
      IL_01c3:  ldarg.0
      IL_01c4:  volatile.
      IL_01c6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01cb:  stloc.s    V_12
      IL_01cd:  ldloc.s    V_12
      IL_01cf:  brtrue     IL_01e6

      IL_01d4:  ldarg.0
      IL_01d5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01da:  stloc.s    V_11
      IL_01dc:  ldarg.0
      IL_01dd:  volatile.
      IL_01df:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01e4:  stloc.s    V_12
      IL_01e6:  ldloc.s    V_12
      IL_01e8:  ldc.i4.0
      IL_01e9:  ceq
      IL_01eb:  brfalse    IL_01ff

      IL_01f0:  ldloc.s    V_11
      IL_01f2:  brfalse    IL_01ff

      IL_01f7:  ldc.i4.m1
      IL_01f8:  stloc.s    V_4
      IL_01fa:  br         IL_0600

      IL_01ff:  ldloc.s    V_12
      IL_0201:  stloc.s    V_4
      IL_0203:  br         IL_0600

      IL_0208:  ldc.i4.0
      IL_0209:  stloc.s    V_13
      IL_020b:  ldarg.0
      IL_020c:  volatile.
      IL_020e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0213:  stloc.s    V_14
      IL_0215:  ldloc.s    V_14
      IL_0217:  brtrue     IL_022e

      IL_021c:  ldarg.0
      IL_021d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0222:  stloc.s    V_13
      IL_0224:  ldarg.0
      IL_0225:  volatile.
      IL_0227:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_022c:  stloc.s    V_14
      IL_022e:  ldloc.s    V_14
      IL_0230:  ldc.i4.0
      IL_0231:  ceq
      IL_0233:  brfalse    IL_0247

      IL_0238:  ldloc.s    V_13
      IL_023a:  brfalse    IL_0247

      IL_023f:  ldc.i4.m1
      IL_0240:  stloc.s    V_4
      IL_0242:  br         IL_0600

      IL_0247:  ldloc.s    V_14
      IL_0249:  stloc.s    V_4
      IL_024b:  br         IL_0600

      IL_0250:  ldc.i4.0
      IL_0251:  stloc.s    V_15
      IL_0253:  ldarg.0
      IL_0254:  volatile.
      IL_0256:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_025b:  stloc.s    V_16
      IL_025d:  ldloc.s    V_16
      IL_025f:  brtrue     IL_0276

      IL_0264:  ldarg.0
      IL_0265:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_026a:  stloc.s    V_15
      IL_026c:  ldarg.0
      IL_026d:  volatile.
      IL_026f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0274:  stloc.s    V_16
      IL_0276:  ldloc.s    V_16
      IL_0278:  ldc.i4.0
      IL_0279:  ceq
      IL_027b:  brfalse    IL_028f

      IL_0280:  ldloc.s    V_15
      IL_0282:  brfalse    IL_028f

      IL_0287:  ldc.i4.m1
      IL_0288:  stloc.s    V_4
      IL_028a:  br         IL_0600

      IL_028f:  ldloc.s    V_16
      IL_0291:  stloc.s    V_4
      IL_0293:  br         IL_0600

      IL_0298:  ldc.i4.0
      IL_0299:  stloc.s    V_17
      IL_029b:  ldarg.0
      IL_029c:  volatile.
      IL_029e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02a3:  stloc.s    V_18
      IL_02a5:  ldloc.s    V_18
      IL_02a7:  brtrue     IL_02be

      IL_02ac:  ldarg.0
      IL_02ad:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02b2:  stloc.s    V_17
      IL_02b4:  ldarg.0
      IL_02b5:  volatile.
      IL_02b7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02bc:  stloc.s    V_18
      IL_02be:  ldloc.s    V_18
      IL_02c0:  ldc.i4.0
      IL_02c1:  ceq
      IL_02c3:  brfalse    IL_02d7

      IL_02c8:  ldloc.s    V_17
      IL_02ca:  brfalse    IL_02d7

      IL_02cf:  ldc.i4.m1
      IL_02d0:  stloc.s    V_4
      IL_02d2:  br         IL_0600

      IL_02d7:  ldloc.s    V_18
      IL_02d9:  stloc.s    V_4
      IL_02db:  br         IL_0600

      IL_02e0:  ldc.i4.0
      IL_02e1:  stloc.s    V_19
      IL_02e3:  ldarg.0
      IL_02e4:  volatile.
      IL_02e6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02eb:  stloc.s    V_20
      IL_02ed:  ldloc.s    V_20
      IL_02ef:  brtrue     IL_0306

      IL_02f4:  ldarg.0
      IL_02f5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02fa:  stloc.s    V_19
      IL_02fc:  ldarg.0
      IL_02fd:  volatile.
      IL_02ff:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0304:  stloc.s    V_20
      IL_0306:  ldloc.s    V_20
      IL_0308:  ldc.i4.0
      IL_0309:  ceq
      IL_030b:  brfalse    IL_031f

      IL_0310:  ldloc.s    V_19
      IL_0312:  brfalse    IL_031f

      IL_0317:  ldc.i4.m1
      IL_0318:  stloc.s    V_4
      IL_031a:  br         IL_0600

      IL_031f:  ldloc.s    V_20
      IL_0321:  stloc.s    V_4
      IL_0323:  br         IL_0600

      IL_0328:  ldc.i4.0
      IL_0329:  stloc.s    V_21
      IL_032b:  ldarg.0
      IL_032c:  volatile.
      IL_032e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0333:  stloc.s    V_22
      IL_0335:  ldloc.s    V_22
      IL_0337:  brtrue     IL_034e

      IL_033c:  ldarg.0
      IL_033d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0342:  stloc.s    V_21
      IL_0344:  ldarg.0
      IL_0345:  volatile.
      IL_0347:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_034c:  stloc.s    V_22
      IL_034e:  ldloc.s    V_22
      IL_0350:  ldc.i4.0
      IL_0351:  ceq
      IL_0353:  brfalse    IL_0367

      IL_0358:  ldloc.s    V_21
      IL_035a:  brfalse    IL_0367

      IL_035f:  ldc.i4.m1
      IL_0360:  stloc.s    V_4
      IL_0362:  br         IL_0600

      IL_0367:  ldloc.s    V_22
      IL_0369:  stloc.s    V_4
      IL_036b:  br         IL_0600

      IL_0370:  ldc.i4.0
      IL_0371:  stloc.s    V_23
      IL_0373:  ldarg.0
      IL_0374:  volatile.
      IL_0376:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_037b:  stloc.s    V_24
      IL_037d:  ldloc.s    V_24
      IL_037f:  brtrue     IL_0396

      IL_0384:  ldarg.0
      IL_0385:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_038a:  stloc.s    V_23
      IL_038c:  ldarg.0
      IL_038d:  volatile.
      IL_038f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0394:  stloc.s    V_24
      IL_0396:  ldloc.s    V_24
      IL_0398:  ldc.i4.0
      IL_0399:  ceq
      IL_039b:  brfalse    IL_03af

      IL_03a0:  ldloc.s    V_23
      IL_03a2:  brfalse    IL_03af

      IL_03a7:  ldc.i4.m1
      IL_03a8:  stloc.s    V_4
      IL_03aa:  br         IL_0600

      IL_03af:  ldloc.s    V_24
      IL_03b1:  stloc.s    V_4
      IL_03b3:  br         IL_0600

      IL_03b8:  ldc.i4.0
      IL_03b9:  stloc.s    V_25
      IL_03bb:  ldarg.0
      IL_03bc:  volatile.
      IL_03be:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03c3:  stloc.s    V_26
      IL_03c5:  ldloc.s    V_26
      IL_03c7:  brtrue     IL_03de

      IL_03cc:  ldarg.0
      IL_03cd:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03d2:  stloc.s    V_25
      IL_03d4:  ldarg.0
      IL_03d5:  volatile.
      IL_03d7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03dc:  stloc.s    V_26
      IL_03de:  ldloc.s    V_26
      IL_03e0:  ldc.i4.0
      IL_03e1:  ceq
      IL_03e3:  brfalse    IL_03f7

      IL_03e8:  ldloc.s    V_25
      IL_03ea:  brfalse    IL_03f7

      IL_03ef:  ldc.i4.m1
      IL_03f0:  stloc.s    V_4
      IL_03f2:  br         IL_0600

      IL_03f7:  ldloc.s    V_26
      IL_03f9:  stloc.s    V_4
      IL_03fb:  br         IL_0600

      IL_0400:  ldc.i4.0
      IL_0401:  stloc.s    V_27
      IL_0403:  ldarg.0
      IL_0404:  volatile.
      IL_0406:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_040b:  stloc.s    V_28
      IL_040d:  ldloc.s    V_28
      IL_040f:  brtrue     IL_0426

      IL_0414:  ldarg.0
      IL_0415:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_041a:  stloc.s    V_27
      IL_041c:  ldarg.0
      IL_041d:  volatile.
      IL_041f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0424:  stloc.s    V_28
      IL_0426:  ldloc.s    V_28
      IL_0428:  ldc.i4.0
      IL_0429:  ceq
      IL_042b:  brfalse    IL_043f

      IL_0430:  ldloc.s    V_27
      IL_0432:  brfalse    IL_043f

      IL_0437:  ldc.i4.m1
      IL_0438:  stloc.s    V_4
      IL_043a:  br         IL_0600

      IL_043f:  ldloc.s    V_28
      IL_0441:  stloc.s    V_4
      IL_0443:  br         IL_0600

      IL_0448:  ldc.i4.0
      IL_0449:  stloc.s    V_29
      IL_044b:  ldarg.0
      IL_044c:  volatile.
      IL_044e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0453:  stloc.s    V_30
      IL_0455:  ldloc.s    V_30
      IL_0457:  brtrue     IL_046e

      IL_045c:  ldarg.0
      IL_045d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0462:  stloc.s    V_29
      IL_0464:  ldarg.0
      IL_0465:  volatile.
      IL_0467:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_046c:  stloc.s    V_30
      IL_046e:  ldloc.s    V_30
      IL_0470:  ldc.i4.0
      IL_0471:  ceq
      IL_0473:  brfalse    IL_0487

      IL_0478:  ldloc.s    V_29
      IL_047a:  brfalse    IL_0487

      IL_047f:  ldc.i4.m1
      IL_0480:  stloc.s    V_4
      IL_0482:  br         IL_0600

      IL_0487:  ldloc.s    V_30
      IL_0489:  stloc.s    V_4
      IL_048b:  br         IL_0600

      IL_0490:  ldc.i4.0
      IL_0491:  stloc.s    V_31
      IL_0493:  ldarg.0
      IL_0494:  volatile.
      IL_0496:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_049b:  stloc.s    V_32
      IL_049d:  ldloc.s    V_32
      IL_049f:  brtrue     IL_04b6

      IL_04a4:  ldarg.0
      IL_04a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04aa:  stloc.s    V_31
      IL_04ac:  ldarg.0
      IL_04ad:  volatile.
      IL_04af:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_04b4:  stloc.s    V_32
      IL_04b6:  ldloc.s    V_32
      IL_04b8:  ldc.i4.0
      IL_04b9:  ceq
      IL_04bb:  brfalse    IL_04cf

      IL_04c0:  ldloc.s    V_31
      IL_04c2:  brfalse    IL_04cf

      IL_04c7:  ldc.i4.m1
      IL_04c8:  stloc.s    V_4
      IL_04ca:  br         IL_0600

      IL_04cf:  ldloc.s    V_32
      IL_04d1:  stloc.s    V_4
      IL_04d3:  br         IL_0600

      IL_04d8:  ldc.i4.0
      IL_04d9:  stloc.s    V_33
      IL_04db:  ldarg.0
      IL_04dc:  volatile.
      IL_04de:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_04e3:  stloc.s    V_34
      IL_04e5:  ldloc.s    V_34
      IL_04e7:  brtrue     IL_04fe

      IL_04ec:  ldarg.0
      IL_04ed:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04f2:  stloc.s    V_33
      IL_04f4:  ldarg.0
      IL_04f5:  volatile.
      IL_04f7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_04fc:  stloc.s    V_34
      IL_04fe:  ldloc.s    V_34
      IL_0500:  ldc.i4.0
      IL_0501:  ceq
      IL_0503:  brfalse    IL_0517

      IL_0508:  ldloc.s    V_33
      IL_050a:  brfalse    IL_0517

      IL_050f:  ldc.i4.m1
      IL_0510:  stloc.s    V_4
      IL_0512:  br         IL_0600

      IL_0517:  ldloc.s    V_34
      IL_0519:  stloc.s    V_4
      IL_051b:  br         IL_0600

      IL_0520:  ldc.i4.0
      IL_0521:  stloc.s    V_35
      IL_0523:  ldarg.0
      IL_0524:  volatile.
      IL_0526:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_052b:  stloc.s    V_36
      IL_052d:  ldloc.s    V_36
      IL_052f:  brtrue     IL_0546

      IL_0534:  ldarg.0
      IL_0535:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_053a:  stloc.s    V_35
      IL_053c:  ldarg.0
      IL_053d:  volatile.
      IL_053f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0544:  stloc.s    V_36
      IL_0546:  ldloc.s    V_36
      IL_0548:  ldc.i4.0
      IL_0549:  ceq
      IL_054b:  brfalse    IL_055f

      IL_0550:  ldloc.s    V_35
      IL_0552:  brfalse    IL_055f

      IL_0557:  ldc.i4.m1
      IL_0558:  stloc.s    V_4
      IL_055a:  br         IL_0600

      IL_055f:  ldloc.s    V_36
      IL_0561:  stloc.s    V_4
      IL_0563:  br         IL_0600

      IL_0568:  ldc.i4.0
      IL_0569:  stloc.s    V_37
      IL_056b:  ldarg.0
      IL_056c:  volatile.
      IL_056e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0573:  stloc.s    V_38
      IL_0575:  ldloc.s    V_38
      IL_0577:  brtrue     IL_058e

      IL_057c:  ldarg.0
      IL_057d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0582:  stloc.s    V_37
      IL_0584:  ldarg.0
      IL_0585:  volatile.
      IL_0587:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_058c:  stloc.s    V_38
      IL_058e:  ldloc.s    V_38
      IL_0590:  ldc.i4.0
      IL_0591:  ceq
      IL_0593:  brfalse    IL_05a7

      IL_0598:  ldloc.s    V_37
      IL_059a:  brfalse    IL_05a7

      IL_059f:  ldc.i4.m1
      IL_05a0:  stloc.s    V_4
      IL_05a2:  br         IL_0600

      IL_05a7:  ldloc.s    V_38
      IL_05a9:  stloc.s    V_4
      IL_05ab:  br         IL_0600

      IL_05b0:  ldc.i4.0
      IL_05b1:  stloc.s    V_39
      IL_05b3:  ldarg.0
      IL_05b4:  volatile.
      IL_05b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_05bb:  stloc.s    V_40
      IL_05bd:  ldloc.s    V_40
      IL_05bf:  brtrue     IL_05d6

      IL_05c4:  ldarg.0
      IL_05c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05ca:  stloc.s    V_39
      IL_05cc:  ldarg.0
      IL_05cd:  volatile.
      IL_05cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_05d4:  stloc.s    V_40
      IL_05d6:  ldloc.s    V_40
      IL_05d8:  ldc.i4.0
      IL_05d9:  ceq
      IL_05db:  brfalse    IL_05ef

      IL_05e0:  ldloc.s    V_39
      IL_05e2:  brfalse    IL_05ef

      IL_05e7:  ldc.i4.m1
      IL_05e8:  stloc.s    V_4
      IL_05ea:  br         IL_0600

      IL_05ef:  ldloc.s    V_40
      IL_05f1:  stloc.s    V_4
      IL_05f3:  br         IL_0600

      IL_05f8:  ldc.i4.m1
      IL_05f9:  stloc.s    V_4
      IL_05fb:  br         IL_0600

      IL_0600:  ldloc.s    V_4
      IL_0602:  stloc.s    V_41
      IL_0604:  ldloc.s    V_4
      IL_0606:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverBind0$PST060001C8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                 valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BindPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BindPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.3
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.3
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0028:  ret
    } // end of method Exp::DeliverBind0

    .method privatescope instance void  MarshallDeliverBind0$PST060001C9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                         valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverBind0$PST060001C8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BindPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverBind0

    .method privatescope instance void  DeliverNotify0$PST060001CA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                   char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) pattern,
                                                                   bool sendExisting,
                                                                   valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       66 (0x42)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::sendExisting
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_002a:  ldarg.s    imp
      IL_002c:  stfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.7
      IL_0033:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0038:  ldarg.0
      IL_0039:  ldc.i4.7
      IL_003a:  volatile.
      IL_003c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0041:  ret
    } // end of method Exp::DeliverNotify0

    .method privatescope instance void  MarshallDeliverNotify0$PST060001CB(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                           char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) pattern,
                                                                           bool sendExisting,
                                                                           valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [4]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    imp
      IL_0006:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverNotify0$PST060001CA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                  bool,
                                                                                                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::NotifyPod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::MarshallAll(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverNotify0

    .method privatescope instance void  DeliverBeginEnumeration0$PST060001CC() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverBeginEnumeration0

    .method privatescope instance void  MarshallDeliverBeginEnumeration0$PST060001CD(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverBeginEnumeration0$PST060001CC()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::BeginEnumerationPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverBeginEnumeration0

    .method privatescope instance void  DeliverReadEnumeration1$PST060001CE() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverReadEnumeration1

    .method privatescope instance void  MarshallDeliverReadEnumeration1$PST060001CF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverReadEnumeration1$PST060001CE()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::ReadEnumerationPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverReadEnumeration1

    .method privatescope instance void  DeliverEndEnumeration1$PST060001D0() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   13
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   13
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverEndEnumeration1

    .method privatescope instance void  MarshallDeliverEndEnumeration1$PST060001D1(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverEndEnumeration1$PST060001D0()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::EndEnumerationPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverEndEnumeration1

    .method privatescope instance void  DeliverGetAttributes0$PST060001D2(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetAttributesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   16
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   16
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetAttributes0

    .method privatescope instance void  MarshallDeliverGetAttributes0$PST060001D3(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverGetAttributes0$PST060001D2(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetAttributesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetAttributes0

    .method privatescope instance void  DeliverQueryACL0$PST060001D4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                     bool effective) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::QueryACLPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::QueryACLPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      bool Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::effective
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   20
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   20
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverQueryACL0

    .method privatescope instance void  MarshallDeliverQueryACL0$PST060001D5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                             bool effective,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverQueryACL0$PST060001D4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    bool)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::QueryACLPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverQueryACL0

    .method privatescope instance void  DeliverRegister0$PST060001D6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::RegisterPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::RegisterPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   24
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   24
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverRegister0

    .method privatescope instance void  MarshallDeliverRegister0$PST060001D7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                             valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverRegister0$PST060001D6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::RegisterPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Register::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverRegister0

    .method privatescope instance void  DeliverDeregister0$PST060001D8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeregisterPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   28
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   28
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverDeregister0

    .method privatescope instance void  MarshallDeliverDeregister0$PST060001D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeregister0$PST060001D8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeregisterPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverDeregister0

    .method privatescope instance void  DeliverCreateDirectory0$PST060001DA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dirName) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateDirectoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   32
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverCreateDirectory0

    .method privatescope instance void  MarshallDeliverCreateDirectory0$PST060001DB(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dirName,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateDirectory0$PST060001DA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateDirectoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverCreateDirectory0

    .method privatescope instance void  DeliverDeleteDirectory0$PST060001DC(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dirName) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteDirectoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverDeleteDirectory0

    .method privatescope instance void  MarshallDeliverDeleteDirectory0$PST060001DD(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dirName,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeleteDirectory0$PST060001DC(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteDirectoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverDeleteDirectory0

    .method privatescope instance void  DeliverCreateFile0$PST060001DE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateFilePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   40
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   40
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverCreateFile0

    .method privatescope instance void  MarshallDeliverCreateFile0$PST060001DF(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateFile0$PST060001DE(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateFilePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverCreateFile0

    .method privatescope instance void  DeliverCreateAndBindFile0$PST060001E0(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                                              valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateAndBindFilePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateAndBindFilePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   44
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   44
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverCreateAndBindFile0

    .method privatescope instance void  MarshallDeliverCreateAndBindFile0$PST060001E1(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                                                      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateAndBindFile0$PST060001E0(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                             valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateAndBindFilePod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverCreateAndBindFile0

    .method privatescope instance void  DeliverDeleteFile0$PST060001E2(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteFilePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   47
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   47
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverDeleteFile0

    .method privatescope instance void  MarshallDeliverDeleteFile0$PST060001E3(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeleteFile0$PST060001E2(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteFilePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverDeleteFile0

    .method privatescope instance void  DeliverStoreACL0$PST060001E4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern,
                                                                     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   51
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   51
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0036:  ret
    } // end of method Exp::DeliverStoreACL0

    .method privatescope instance void  MarshallDeliverStoreACL0$PST060001E5(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) fileName,
                                                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern,
                                                                             char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [3]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverStoreACL0$PST060001E4(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                    char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::StoreACLPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Exp::MarshallDeliverStoreACL0

    .method privatescope instance void  DeliverCreateLink0$PST060001E6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath,
                                                                       char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkValue) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateLinkPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateLinkPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   55
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   55
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverCreateLink0

    .method privatescope instance void  MarshallDeliverCreateLink0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath,
                                                                               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkValue,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverCreateLink0$PST060001E6(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::CreateLinkPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverCreateLink0

    .method privatescope instance void  DeliverDeleteLink0$PST060001E8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteLinkPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   59
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   59
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverDeleteLink0

    .method privatescope instance void  MarshallDeliverDeleteLink0$PST060001E9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverDeleteLink0$PST060001E8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeleteLinkPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverDeleteLink0

    .method privatescope instance void  DeliverGetLinkValue0$PST060001EA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetLinkValuePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   63
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   63
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetLinkValue0

    .method privatescope instance void  MarshallDeliverGetLinkValue0$PST060001EB(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) linkPath,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::DeliverGetLinkValue0$PST060001EA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::GetLinkValuePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::MarshallAll(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetLinkValue0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Bind
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       33 (0x21)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.1
      IL_0015:  ldarg.0
      IL_0016:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_001b:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0020:  ret
    } // end of method Bind::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Bind::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Bind::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Bind
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Bind::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Bind::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       162 (0xa2)
      .maxstack  10
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_3)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.0
      IL_0051:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_0056:  brfalse    IL_00a1

      IL_005b:  ldarg.0
      IL_005c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_0061:  stloc.3
      IL_0062:  ldarg.2
      IL_0063:  ldarg.1
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_006a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_006f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0074:  ldarg.3
      IL_0075:  ldarg.0
      IL_0076:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_007b:  conv.i
      IL_007c:  ldarg.3
      IL_007d:  conv.i
      IL_007e:  sub
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0084:  ldarg.0
      IL_0085:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_008a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.2
      IL_0091:  ldarg.0
      IL_0092:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_009c:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_00a1:  ret
    } // end of method Bind::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       64 (0x40)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_003f

      IL_0027:  ldloc.1
      IL_0028:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002d:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0032:  ldloc.1
      IL_0033:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0038:  ldarg.0
      IL_0039:  ldnull
      IL_003a:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Bind::exp
      IL_003f:  ret
    } // end of method Bind::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Bind::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Bind::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Bind::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Bind::Release

  } // end of class Bind

  .class sequential ansi sealed nested public specialname AckBind
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckBind::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckBind::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method AckBind::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckBind::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckBind::Release

  } // end of class AckBind

  .class sequential ansi sealed nested public specialname NakBind
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0007:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NakBind::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBind::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBind::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method NakBind::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakBind::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0051:  ret
    } // end of method NakBind::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind::exp
      IL_0025:  ret
    } // end of method NakBind::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBind::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBind::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBind::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBind::Release

  } // end of class NakBind

  .class sequential ansi sealed nested public specialname NakBindReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .field public valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       53 (0x35)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ldarg.1
      IL_0029:  ldarg.0
      IL_002a:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_002f:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0034:  ret
    } // end of method NakBindReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBindReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakBindReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method NakBindReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakBindReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       249 (0xf9)
      .maxstack  11
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5,
               [6] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_6)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ldarg.0
      IL_00a7:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00ac:  brfalse    IL_00f8

      IL_00b1:  ldarg.0
      IL_00b2:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00b7:  stloc.s    V_6
      IL_00b9:  ldarg.2
      IL_00ba:  ldarg.1
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00c1:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_00c6:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_00cb:  ldarg.3
      IL_00cc:  ldarg.0
      IL_00cd:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00d2:  conv.i
      IL_00d3:  ldarg.3
      IL_00d4:  conv.i
      IL_00d5:  sub
      IL_00d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_00db:  ldarg.0
      IL_00dc:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00e1:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_00e6:  ldarg.1
      IL_00e7:  ldarg.2
      IL_00e8:  ldarg.0
      IL_00e9:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_00ee:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_00f3:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_00f8:  ret
    } // end of method NakBindReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       90 (0x5a)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::rest
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_003a:  stloc.2
      IL_003b:  ldloc.2
      IL_003c:  brfalse    IL_0059

      IL_0041:  ldloc.2
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0047:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_004c:  ldloc.2
      IL_004d:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0052:  ldarg.0
      IL_0053:  ldnull
      IL_0054:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse::exp
      IL_0059:  ret
    } // end of method NakBindReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBindReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBindReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBindReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakBindReparse::Release

  } // end of class NakBindReparse

  .class sequential ansi sealed nested public specialname Notify
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pattern
    .field public bool sendExisting
    .field public valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) imp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       53 (0x35)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ldarg.1
      IL_0029:  ldarg.0
      IL_002a:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_002f:  call       void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0034:  ret
    } // end of method Notify::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Notify::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Notify::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Notify
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*,
                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method Notify::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Notify::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       249 (0xf9)
      .maxstack  11
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5,
               [6] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) V_6)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ldarg.0
      IL_00a7:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00ac:  brfalse    IL_00f8

      IL_00b1:  ldarg.0
      IL_00b2:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00b7:  stloc.s    V_6
      IL_00b9:  ldarg.2
      IL_00ba:  ldarg.1
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00c1:  ldtoken    valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start)
      IL_00c6:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_00cb:  ldarg.3
      IL_00cc:  ldarg.0
      IL_00cd:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00d2:  conv.i
      IL_00d3:  ldarg.3
      IL_00d4:  conv.i
      IL_00d5:  sub
      IL_00d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_00db:  ldarg.0
      IL_00dc:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00e1:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_00e6:  ldarg.1
      IL_00e7:  ldarg.2
      IL_00e8:  ldarg.0
      IL_00e9:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_00ee:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_00f3:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_00f8:  ret
    } // end of method Notify::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       90 (0x5a)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::pattern
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_003a:  stloc.2
      IL_003b:  ldloc.2
      IL_003c:  brfalse    IL_0059

      IL_0041:  ldloc.2
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0047:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::Dispose()
      IL_004c:  ldloc.2
      IL_004d:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0052:  ldarg.0
      IL_0053:  ldnull
      IL_0054:  stfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Notify::imp
      IL_0059:  ret
    } // end of method Notify::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Notify::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Notify::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Notify::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Notify::Release

  } // end of class Notify

  .class sequential ansi sealed nested public specialname AckNotify
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNotify::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNotify::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*,
                                                                                                                             int32&)
      IL_001d:  ret
    } // end of method AckNotify::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckNotify::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNotify::Release

  } // end of class AckNotify

  .class sequential ansi sealed nested public specialname NakNotify
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) imp
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0007:  call       void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NakNotify::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakNotify::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakNotify::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*,
                                                                                                                             int32&)
      IL_001d:  ret
    } // end of method NakNotify::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakNotify::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0051:  ret
    } // end of method NakNotify::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify::imp
      IL_0025:  ret
    } // end of method NakNotify::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotify::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotify::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotify::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotify::Release

  } // end of class NakNotify

  .class sequential ansi sealed nested public specialname NakNotifyReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .field public valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) imp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       53 (0x35)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ldarg.1
      IL_0029:  ldarg.0
      IL_002a:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_002f:  call       void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0034:  ret
    } // end of method NakNotifyReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakNotifyReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakNotifyReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method NakNotifyReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakNotifyReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       249 (0xf9)
      .maxstack  11
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5,
               [6] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) V_6)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ldarg.0
      IL_00a7:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00ac:  brfalse    IL_00f8

      IL_00b1:  ldarg.0
      IL_00b2:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00b7:  stloc.s    V_6
      IL_00b9:  ldarg.2
      IL_00ba:  ldarg.1
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00c1:  ldtoken    valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start)
      IL_00c6:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_00cb:  ldarg.3
      IL_00cc:  ldarg.0
      IL_00cd:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00d2:  conv.i
      IL_00d3:  ldarg.3
      IL_00d4:  conv.i
      IL_00d5:  sub
      IL_00d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_00db:  ldarg.0
      IL_00dc:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00e1:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_00e6:  ldarg.1
      IL_00e7:  ldarg.2
      IL_00e8:  ldarg.0
      IL_00e9:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_00ee:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_00f3:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_00f8:  ret
    } // end of method NakNotifyReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       90 (0x5a)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::rest
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_003a:  stloc.2
      IL_003b:  ldloc.2
      IL_003c:  brfalse    IL_0059

      IL_0041:  ldloc.2
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0047:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::Dispose()
      IL_004c:  ldloc.2
      IL_004d:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0052:  ldarg.0
      IL_0053:  ldnull
      IL_0054:  stfld      valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.NotifyContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse::imp
      IL_0059:  ret
    } // end of method NakNotifyReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotifyReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotifyReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotifyReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNotifyReparse::Release

  } // end of class NakNotifyReparse

  .class sequential ansi sealed nested public specialname BeginEnumeration
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BeginEnumeration::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BeginEnumeration::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method BeginEnumeration::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method BeginEnumeration::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BeginEnumeration::Release

  } // end of class BeginEnumeration

  .class sequential ansi sealed nested public specialname ReadEnumeration
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ReadEnumeration::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ReadEnumeration::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method ReadEnumeration::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ReadEnumeration::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ReadEnumeration::Release

  } // end of class ReadEnumeration

  .class sequential ansi sealed nested public specialname EndEnumeration
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EndEnumeration::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EndEnumeration::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method EndEnumeration::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EndEnumeration::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Release

  } // end of class EndEnumeration

  .class sequential ansi sealed nested public specialname EnumerationEntries
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) results
    .field public bool moreEntries
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_0007:  call       void Microsoft.Singularity.Directory.EnumerationRecords::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method EnumerationEntries::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerationEntries::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerationEntries::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method EnumerationEntries::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EnumerationEntries::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_0008:  ldtoken    Microsoft.Singularity.Directory.EnumerationRecords
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_002b:  call       void Microsoft.Singularity.Directory.EnumerationRecords::MarshallVector(uint8*,
                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                   uint8*,
                                                                                                   valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method EnumerationEntries::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       71 (0x47)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0046

      IL_000d:  ldloc.0
      IL_000e:  ldlen
      IL_000f:  stloc.1
      IL_0010:  ldc.i4.0
      IL_0011:  stloc.2
      IL_0012:  ldloc.2
      IL_0013:  ldloc.1
      IL_0014:  bge        IL_0039

      IL_0019:  ldloc.0
      IL_001a:  ldloc.2
      IL_001b:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::Expose(void*,
                                                                                                      int32)
      IL_0020:  ldloc.0
      IL_0021:  ldloc.2
      IL_0022:  ldelema    Microsoft.Singularity.Directory.EnumerationRecords
      IL_0027:  call       instance void Microsoft.Singularity.Directory.EnumerationRecords::Dispose()
      IL_002c:  ldloc.0
      IL_002d:  ldloc.2
      IL_002e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::UnExpose(void*,
                                                                                                        int32)
      IL_0033:  ldloc.2
      IL_0034:  ldc.i4.1
      IL_0035:  add
      IL_0036:  stloc.2
      IL_0037:  br.s       IL_0012

      IL_0039:  ldloc.0
      IL_003a:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003f:  ldarg.0
      IL_0040:  ldnull
      IL_0041:  stfld      valuetype Microsoft.Singularity.Directory.EnumerationRecords* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries::results
      IL_0046:  ret
    } // end of method EnumerationEntries::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationEntries::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationEntries::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationEntries::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationEntries::Release

  } // end of class EnumerationEntries

  .class sequential ansi sealed nested public specialname EnumerationTerminated
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerationTerminated::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerationTerminated::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated::MarshallContent(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         uint8*,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method EnumerationTerminated::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EnumerationTerminated::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Release

  } // end of class EnumerationTerminated

  .class sequential ansi sealed nested public specialname GetAttributes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method GetAttributes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetAttributes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetAttributes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method GetAttributes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetAttributes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method GetAttributes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes::path
      IL_001a:  ret
    } // end of method GetAttributes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetAttributes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetAttributes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetAttributes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetAttributes::Release

  } // end of class GetAttributes

  .class sequential ansi sealed nested public specialname AckGetAttributes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.FileAttributesRecord fileAttributes
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetAttributes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetAttributes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetAttributes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method AckGetAttributes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetAttributes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.FileAttributesRecord Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes::fileAttributes
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void Microsoft.Singularity.Directory.FileAttributesRecord::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*)
      IL_000e:  ret
    } // end of method AckGetAttributes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetAttributes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetAttributes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetAttributes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetAttributes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetAttributes::Release

  } // end of class AckGetAttributes

  .class sequential ansi sealed nested public specialname NakGetAttributes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetAttributes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetAttributes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method NakGetAttributes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakGetAttributes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributes::Release

  } // end of class NakGetAttributes

  .class sequential ansi sealed nested public specialname NakGetAttributesReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakGetAttributesReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetAttributesReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetAttributesReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::MarshallContent(uint8*,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                           uint8*,
                                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method NakGetAttributesReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakGetAttributesReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakGetAttributesReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse::rest
      IL_0034:  ret
    } // end of method NakGetAttributesReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributesReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributesReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributesReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetAttributesReparse::Release

  } // end of class NakGetAttributesReparse

  .class sequential ansi sealed nested public specialname QueryACL
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public bool effective
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method QueryACL::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method QueryACL::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method QueryACL::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method QueryACL::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method QueryACL::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method QueryACL::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL::path
      IL_001a:  ret
    } // end of method QueryACL::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryACL::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryACL::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryACL::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryACL::Release

  } // end of class QueryACL

  .class sequential ansi sealed nested public specialname AckQueryACL
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method AckQueryACL::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckQueryACL::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckQueryACL::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckQueryACL::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckQueryACL::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method AckQueryACL::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::nodePattern
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL::descendantPattern
      IL_0034:  ret
    } // end of method AckQueryACL::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckQueryACL::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckQueryACL::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckQueryACL::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckQueryACL::Release

  } // end of class AckQueryACL

  .class sequential ansi sealed nested public specialname NakQueryACL
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakQueryACL::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakQueryACL::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NakQueryACL::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakQueryACL::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACL::Release

  } // end of class NakQueryACL

  .class sequential ansi sealed nested public specialname NakQueryACLReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakQueryACLReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakQueryACLReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakQueryACLReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NakQueryACLReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakQueryACLReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakQueryACLReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse::rest
      IL_0034:  ret
    } // end of method NakQueryACLReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACLReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACLReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACLReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakQueryACLReparse::Release

  } // end of class NakQueryACLReparse

  .class sequential ansi sealed nested public specialname Register
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       33 (0x21)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.1
      IL_0015:  ldarg.0
      IL_0016:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_001b:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0020:  ret
    } // end of method Register::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Register::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Register::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Register
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Register::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Register::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Register::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       162 (0xa2)
      .maxstack  10
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_3)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.0
      IL_0051:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_0056:  brfalse    IL_00a1

      IL_005b:  ldarg.0
      IL_005c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_0061:  stloc.3
      IL_0062:  ldarg.2
      IL_0063:  ldarg.1
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_006a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start)
      IL_006f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0074:  ldarg.3
      IL_0075:  ldarg.0
      IL_0076:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_007b:  conv.i
      IL_007c:  ldarg.3
      IL_007d:  conv.i
      IL_007e:  sub
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0084:  ldarg.0
      IL_0085:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_008a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.2
      IL_0091:  ldarg.0
      IL_0092:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_009c:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_00a1:  ret
    } // end of method Register::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       64 (0x40)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_003f

      IL_0027:  ldloc.1
      IL_0028:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_002d:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Dispose()
      IL_0032:  ldloc.1
      IL_0033:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0038:  ldarg.0
      IL_0039:  ldnull
      IL_003a:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/Register::imp
      IL_003f:  ret
    } // end of method Register::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Register::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Register::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Register::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Register::Release

  } // end of class Register

  .class sequential ansi sealed nested public specialname AckRegister
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRegister::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRegister::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckRegister::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckRegister::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRegister::Release

  } // end of class AckRegister

  .class sequential ansi sealed nested public specialname NakRegister
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0007:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NakRegister::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRegister::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRegister::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NakRegister::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakRegister::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_0051:  ret
    } // end of method NakRegister::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister::imp
      IL_0025:  ret
    } // end of method NakRegister::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegister::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegister::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegister::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegister::Release

  } // end of class NakRegister

  .class sequential ansi sealed nested public specialname NakRegisterReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .field public valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       53 (0x35)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ldarg.1
      IL_0029:  ldarg.0
      IL_002a:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_002f:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0034:  ret
    } // end of method NakRegisterReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRegisterReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakRegisterReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NakRegisterReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakRegisterReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       249 (0xf9)
      .maxstack  11
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5,
               [6] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_6)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ldarg.0
      IL_00a7:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00ac:  brfalse    IL_00f8

      IL_00b1:  ldarg.0
      IL_00b2:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00b7:  stloc.s    V_6
      IL_00b9:  ldarg.2
      IL_00ba:  ldarg.1
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00c1:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start)
      IL_00c6:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_00cb:  ldarg.3
      IL_00cc:  ldarg.0
      IL_00cd:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00d2:  conv.i
      IL_00d3:  ldarg.3
      IL_00d4:  conv.i
      IL_00d5:  sub
      IL_00d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_00db:  ldarg.0
      IL_00dc:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00e1:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_00e6:  ldarg.1
      IL_00e7:  ldarg.2
      IL_00e8:  ldarg.0
      IL_00e9:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_00ee:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_00f3:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_00f8:  ret
    } // end of method NakRegisterReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       90 (0x5a)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::rest
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_003a:  stloc.2
      IL_003b:  ldloc.2
      IL_003c:  brfalse    IL_0059

      IL_0041:  ldloc.2
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0047:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Dispose()
      IL_004c:  ldloc.2
      IL_004d:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0052:  ldarg.0
      IL_0053:  ldnull
      IL_0054:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse::imp
      IL_0059:  ret
    } // end of method NakRegisterReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakRegisterReparse::Release

  } // end of class NakRegisterReparse

  .class sequential ansi sealed nested public specialname Deregister
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Deregister::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Deregister::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Deregister::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method Deregister::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Deregister::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Deregister::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister::path
      IL_001a:  ret
    } // end of method Deregister::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Deregister::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Deregister::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Deregister::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Deregister::Release

  } // end of class Deregister

  .class sequential ansi sealed nested public specialname AckDeregister
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) imp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0007:  call       void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method AckDeregister::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeregister::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeregister::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckDeregister::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckDeregister::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_0051:  ret
    } // end of method AckDeregister::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister::imp
      IL_0025:  ret
    } // end of method AckDeregister::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregister::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregister::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregister::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeregister::Release

  } // end of class AckDeregister

  .class sequential ansi sealed nested public specialname NakDeregister
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeregister::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeregister::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakDeregister::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeregister::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregister::Release

  } // end of class NakDeregister

  .class sequential ansi sealed nested public specialname NakDeregisterReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakDeregisterReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeregisterReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeregisterReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakDeregisterReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeregisterReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakDeregisterReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse::rest
      IL_0034:  ret
    } // end of method NakDeregisterReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeregisterReparse::Release

  } // end of class NakDeregisterReparse

  .class sequential ansi sealed nested public specialname CreateDirectory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) dirName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method CreateDirectory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateDirectory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateDirectory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method CreateDirectory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateDirectory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method CreateDirectory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory::dirName
      IL_001a:  ret
    } // end of method CreateDirectory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateDirectory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateDirectory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateDirectory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateDirectory::Release

  } // end of class CreateDirectory

  .class sequential ansi sealed nested public specialname AckCreateDirectory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateDirectory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateDirectory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method AckCreateDirectory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCreateDirectory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateDirectory::Release

  } // end of class AckCreateDirectory

  .class sequential ansi sealed nested public specialname NakCreateDirectory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateDirectory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateDirectory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NakCreateDirectory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateDirectory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectory::Release

  } // end of class NakCreateDirectory

  .class sequential ansi sealed nested public specialname NakCreateDirectoryReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakCreateDirectoryReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateDirectoryReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateDirectoryReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::MarshallContent(uint8*,
                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                             uint8*,
                                                                                                                                             int32&)
      IL_001d:  ret
    } // end of method NakCreateDirectoryReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateDirectoryReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakCreateDirectoryReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse::rest
      IL_0034:  ret
    } // end of method NakCreateDirectoryReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectoryReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectoryReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectoryReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateDirectoryReparse::Release

  } // end of class NakCreateDirectoryReparse

  .class sequential ansi sealed nested public specialname DeleteDirectory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) dirName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method DeleteDirectory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteDirectory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteDirectory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method DeleteDirectory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DeleteDirectory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method DeleteDirectory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory::dirName
      IL_001a:  ret
    } // end of method DeleteDirectory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteDirectory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteDirectory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteDirectory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteDirectory::Release

  } // end of class DeleteDirectory

  .class sequential ansi sealed nested public specialname AckDeleteDirectory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeleteDirectory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeleteDirectory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method AckDeleteDirectory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckDeleteDirectory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteDirectory::Release

  } // end of class AckDeleteDirectory

  .class sequential ansi sealed nested public specialname NakDeleteDirectory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteDirectory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteDirectory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NakDeleteDirectory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeleteDirectory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectory::Release

  } // end of class NakDeleteDirectory

  .class sequential ansi sealed nested public specialname NakDeleteDirectoryReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakDeleteDirectoryReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteDirectoryReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteDirectoryReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::MarshallContent(uint8*,
                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                             uint8*,
                                                                                                                                             int32&)
      IL_001d:  ret
    } // end of method NakDeleteDirectoryReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeleteDirectoryReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakDeleteDirectoryReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse::rest
      IL_0034:  ret
    } // end of method NakDeleteDirectoryReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectoryReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectoryReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectoryReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteDirectoryReparse::Release

  } // end of class NakDeleteDirectoryReparse

  .class sequential ansi sealed nested public specialname CreateFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) fileName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method CreateFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method CreateFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method CreateFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile::fileName
      IL_001a:  ret
    } // end of method CreateFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateFile::Release

  } // end of class CreateFile

  .class sequential ansi sealed nested public specialname AckCreateFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckCreateFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCreateFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateFile::Release

  } // end of class AckCreateFile

  .class sequential ansi sealed nested public specialname NakCreateFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakCreateFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFile::Release

  } // end of class NakCreateFile

  .class sequential ansi sealed nested public specialname NakCreateFileReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakCreateFileReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateFileReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateFileReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakCreateFileReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateFileReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakCreateFileReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse::rest
      IL_0034:  ret
    } // end of method NakCreateFileReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFileReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFileReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFileReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateFileReparse::Release

  } // end of class NakCreateFileReparse

  .class sequential ansi sealed nested public specialname CreateAndBindFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) fileName
    .field public valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       33 (0x21)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.1
      IL_0015:  ldarg.0
      IL_0016:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_001b:  call       void Microsoft.Singularity.Directory.FileContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0020:  ret
    } // end of method CreateAndBindFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateAndBindFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateAndBindFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method CreateAndBindFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateAndBindFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       162 (0xa2)
      .maxstack  10
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) V_3)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.0
      IL_0051:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_0056:  brfalse    IL_00a1

      IL_005b:  ldarg.0
      IL_005c:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_0061:  stloc.3
      IL_0062:  ldarg.2
      IL_0063:  ldarg.1
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_006a:  ldtoken    valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start)
      IL_006f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0074:  ldarg.3
      IL_0075:  ldarg.0
      IL_0076:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_007b:  conv.i
      IL_007c:  ldarg.3
      IL_007d:  conv.i
      IL_007e:  sub
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0084:  ldarg.0
      IL_0085:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_008a:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.2
      IL_0091:  ldarg.0
      IL_0092:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_0097:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_009c:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_00a1:  ret
    } // end of method CreateAndBindFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       64 (0x40)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::fileName
      IL_001a:  ldarg.0
      IL_001b:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_003f

      IL_0027:  ldloc.1
      IL_0028:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_002d:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::Dispose()
      IL_0032:  ldloc.1
      IL_0033:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0038:  ldarg.0
      IL_0039:  ldnull
      IL_003a:  stfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile::exp
      IL_003f:  ret
    } // end of method CreateAndBindFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateAndBindFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateAndBindFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateAndBindFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateAndBindFile::Release

  } // end of class CreateAndBindFile

  .class sequential ansi sealed nested public specialname AckCreateAndBindFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateAndBindFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateAndBindFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method AckCreateAndBindFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCreateAndBindFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateAndBindFile::Release

  } // end of class AckCreateAndBindFile

  .class sequential ansi sealed nested public specialname NakCreateAndBindFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) exp
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0007:  call       void Microsoft.Singularity.Directory.FileContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                    valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NakCreateAndBindFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateAndBindFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateAndBindFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakCreateAndBindFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateAndBindFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0051:  ret
    } // end of method NakCreateAndBindFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.FileContract/Start) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile::exp
      IL_0025:  ret
    } // end of method NakCreateAndBindFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateAndBindFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateAndBindFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateAndBindFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateAndBindFile::Release

  } // end of class NakCreateAndBindFile

  .class sequential ansi sealed nested public specialname DeleteFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) fileName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method DeleteFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method DeleteFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DeleteFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method DeleteFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile::fileName
      IL_001a:  ret
    } // end of method DeleteFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteFile::Release

  } // end of class DeleteFile

  .class sequential ansi sealed nested public specialname AckDeleteFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeleteFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeleteFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckDeleteFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckDeleteFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteFile::Release

  } // end of class AckDeleteFile

  .class sequential ansi sealed nested public specialname NakDeleteFile
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteFile::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteFile::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakDeleteFile::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeleteFile::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFile::Release

  } // end of class NakDeleteFile

  .class sequential ansi sealed nested public specialname NakDeleteFileReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakDeleteFileReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteFileReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteFileReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakDeleteFileReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeleteFileReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakDeleteFileReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse::rest
      IL_0034:  ret
    } // end of method NakDeleteFileReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFileReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFileReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFileReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteFileReparse::Release

  } // end of class NakDeleteFileReparse

  .class sequential ansi sealed nested public specialname StoreACL
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) fileName
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) nodePattern
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) descendantPattern
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       61 (0x3d)
      .maxstack  5
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ldarg.0
      IL_0029:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_002e:  stloc.2
      IL_002f:  ldloc.2
      IL_0030:  brfalse    IL_003c

      IL_0035:  ldarg.1
      IL_0036:  ldloc.2
      IL_0037:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003c:  ret
    } // end of method StoreACL::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StoreACL::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StoreACL::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method StoreACL::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StoreACL::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       254 (0xfe)
      .maxstack  10
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5,
               [6] char& V_6,
               [7] int32 V_7,
               [8] int32 V_8)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ldarg.2
      IL_00a7:  ldarg.1
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_00ae:  ldtoken    [Corlib]System.Char
      IL_00b3:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_00b8:  ldarg.3
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_00bf:  conv.i
      IL_00c0:  ldarg.3
      IL_00c1:  conv.i
      IL_00c2:  sub
      IL_00c3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_00c8:  ldarg.0
      IL_00c9:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_00ce:  brfalse    IL_00fd

      IL_00d3:  ldarg.0
      IL_00d4:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_00d9:  castclass  char&
      IL_00de:  stloc.s    V_6
      IL_00e0:  ldarg.0
      IL_00e1:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_00e6:  ldlen
      IL_00e7:  stloc.s    V_7
      IL_00e9:  ldc.i4.0
      IL_00ea:  stloc.s    V_8
      IL_00ec:  ldloc.s    V_8
      IL_00ee:  ldloc.s    V_7
      IL_00f0:  bge        IL_00fd

      IL_00f5:  ldloc.s    V_8
      IL_00f7:  ldc.i4.1
      IL_00f8:  add
      IL_00f9:  stloc.s    V_8
      IL_00fb:  br.s       IL_00ec

      IL_00fd:  ret
    } // end of method StoreACL::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       79 (0x4f)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1,
               [2] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::fileName
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::nodePattern
      IL_0034:  ldarg.0
      IL_0035:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_003a:  stloc.2
      IL_003b:  ldloc.2
      IL_003c:  brfalse    IL_004e

      IL_0041:  ldloc.2
      IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0047:  ldarg.0
      IL_0048:  ldnull
      IL_0049:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL::descendantPattern
      IL_004e:  ret
    } // end of method StoreACL::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StoreACL::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StoreACL::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StoreACL::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StoreACL::Release

  } // end of class StoreACL

  .class sequential ansi sealed nested public specialname AckStoreACL
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckStoreACL::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckStoreACL::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckStoreACL::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckStoreACL::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStoreACL::Release

  } // end of class AckStoreACL

  .class sequential ansi sealed nested public specialname NakStoreACL
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakStoreACL::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakStoreACL::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NakStoreACL::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakStoreACL::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACL::Release

  } // end of class NakStoreACL

  .class sequential ansi sealed nested public specialname NakStoreACLReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakStoreACLReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakStoreACLReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakStoreACLReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NakStoreACLReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakStoreACLReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakStoreACLReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse::rest
      IL_0034:  ret
    } // end of method NakStoreACLReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACLReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACLReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACLReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakStoreACLReparse::Release

  } // end of class NakStoreACLReparse

  .class sequential ansi sealed nested public specialname CreateLink
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) linkPath
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) linkValue
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method CreateLink::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateLink::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateLink::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method CreateLink::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateLink::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method CreateLink::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkPath
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink::linkValue
      IL_0034:  ret
    } // end of method CreateLink::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateLink::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateLink::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateLink::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateLink::Release

  } // end of class CreateLink

  .class sequential ansi sealed nested public specialname AckCreateLink
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateLink::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckCreateLink::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckCreateLink::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckCreateLink::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckCreateLink::Release

  } // end of class AckCreateLink

  .class sequential ansi sealed nested public specialname NakCreateLink
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateLink::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateLink::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakCreateLink::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateLink::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLink::Release

  } // end of class NakCreateLink

  .class sequential ansi sealed nested public specialname NakCreateLinkReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakCreateLinkReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateLinkReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakCreateLinkReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakCreateLinkReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakCreateLinkReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakCreateLinkReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse::rest
      IL_0034:  ret
    } // end of method NakCreateLinkReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLinkReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLinkReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLinkReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakCreateLinkReparse::Release

  } // end of class NakCreateLinkReparse

  .class sequential ansi sealed nested public specialname DeleteLink
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) linkPath
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method DeleteLink::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteLink::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteLink::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method DeleteLink::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DeleteLink::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method DeleteLink::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink::linkPath
      IL_001a:  ret
    } // end of method DeleteLink::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteLink::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteLink::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteLink::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteLink::Release

  } // end of class DeleteLink

  .class sequential ansi sealed nested public specialname AckDeleteLink
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeleteLink::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckDeleteLink::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckDeleteLink::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckDeleteLink::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckDeleteLink::Release

  } // end of class AckDeleteLink

  .class sequential ansi sealed nested public specialname NakDeleteLink
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteLink::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteLink::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakDeleteLink::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeleteLink::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLink::Release

  } // end of class NakDeleteLink

  .class sequential ansi sealed nested public specialname NakDeleteLinkReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakDeleteLinkReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteLinkReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakDeleteLinkReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method NakDeleteLinkReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakDeleteLinkReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakDeleteLinkReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse::rest
      IL_0034:  ret
    } // end of method NakDeleteLinkReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLinkReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLinkReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLinkReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakDeleteLinkReparse::Release

  } // end of class NakDeleteLinkReparse

  .class sequential ansi sealed nested public specialname GetLinkValue
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) linkPath
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method GetLinkValue::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLinkValue::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetLinkValue::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::MarshallContent(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                uint8*,
                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method GetLinkValue::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetLinkValue::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method GetLinkValue::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue::linkPath
      IL_001a:  ret
    } // end of method GetLinkValue::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLinkValue::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLinkValue::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLinkValue::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetLinkValue::Release

  } // end of class GetLinkValue

  .class sequential ansi sealed nested public specialname AckGetLinkValue
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) linkPath
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckGetLinkValue::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetLinkValue::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckGetLinkValue::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method AckGetLinkValue::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckGetLinkValue::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckGetLinkValue::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue::linkPath
      IL_001a:  ret
    } // end of method AckGetLinkValue::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetLinkValue::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetLinkValue::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetLinkValue::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckGetLinkValue::Release

  } // end of class AckGetLinkValue

  .class sequential ansi sealed nested public specialname NakGetLinkValue
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode code
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetLinkValue::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetLinkValue::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method NakGetLinkValue::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakGetLinkValue::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValue::Release

  } // end of class NakGetLinkValue

  .class sequential ansi sealed nested public specialname NakGetLinkValueReparse
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) rest
    .field public bool linkFound
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       41 (0x29)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.0
      IL_0015:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_001a:  stloc.1
      IL_001b:  ldloc.1
      IL_001c:  brfalse    IL_0028

      IL_0021:  ldarg.1
      IL_0022:  ldloc.1
      IL_0023:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0028:  ret
    } // end of method NakGetLinkValueReparse::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetLinkValueReparse::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakGetLinkValueReparse::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::MarshallContent(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          uint8*,
                                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method NakGetLinkValueReparse::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakGetLinkValueReparse::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       167 (0xa7)
      .maxstack  9
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] char& V_3,
               [4] int32 V_4,
               [5] int32 V_5)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.2
      IL_0051:  ldarg.1
      IL_0052:  ldarg.0
      IL_0053:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0058:  ldtoken    [Corlib]System.Char
      IL_005d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0062:  ldarg.3
      IL_0063:  ldarg.0
      IL_0064:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0069:  conv.i
      IL_006a:  ldarg.3
      IL_006b:  conv.i
      IL_006c:  sub
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0072:  ldarg.0
      IL_0073:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0078:  brfalse    IL_00a6

      IL_007d:  ldarg.0
      IL_007e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0083:  castclass  char&
      IL_0088:  stloc.3
      IL_0089:  ldarg.0
      IL_008a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_008f:  ldlen
      IL_0090:  stloc.s    V_4
      IL_0092:  ldc.i4.0
      IL_0093:  stloc.s    V_5
      IL_0095:  ldloc.s    V_5
      IL_0097:  ldloc.s    V_4
      IL_0099:  bge        IL_00a6

      IL_009e:  ldloc.s    V_5
      IL_00a0:  ldc.i4.1
      IL_00a1:  add
      IL_00a2:  stloc.s    V_5
      IL_00a4:  br.s       IL_0095

      IL_00a6:  ret
    } // end of method NakGetLinkValueReparse::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       53 (0x35)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_0034

      IL_0027:  ldloc.1
      IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002d:  ldarg.0
      IL_002e:  ldnull
      IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse::rest
      IL_0034:  ret
    } // end of method NakGetLinkValueReparse::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValueReparse::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValueReparse::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValueReparse::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakGetLinkValueReparse::Release

  } // end of class NakGetLinkValueReparse

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Success::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Enumerate
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000024)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationTerminated msg) cil managed
    {
    } // end of method Enumerate::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerateAck 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EnumerationEntries msg) cil managed
    {
    } // end of method Enumerate::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Enumerate::.ctor

  } // end of class Enumerate

  .class abstract auto ansi nested public specialname EnumerateAck
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000023)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Enumerate 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/ReadEnumeration msg) cil managed
    {
    } // end of method EnumerateAck::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/EndEnumeration msg) cil managed
    {
    } // end of method EnumerateAck::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method EnumerateAck::.ctor

  } // end of class EnumerateAck

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000022)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Bind msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Enumerate 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/BeginEnumeration msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$2 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateAndBindFile msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$4 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateDirectory msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$6 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateFile msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$8 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/CreateLink msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$10 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteDirectory msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$12 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteFile msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$14 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/DeleteLink msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$16 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Deregister msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$18 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetAttributes msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$20 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/GetLinkValue msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$22 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Notify msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$24 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/QueryACL msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$26 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Register msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$28 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/StoreACL msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000021)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckBind msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBind msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakBindReparse msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000020)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class abstract auto ansi nested public specialname Ready$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001F)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$3 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateAndBindFile msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$3 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateAndBindFile msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$2::.ctor

  } // end of class Ready$2

  .class abstract auto ansi nested public specialname Ready$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001E)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$3::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$3::.ctor

  } // end of class Ready$3

  .class abstract auto ansi nested public specialname Ready$4
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001D)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateDirectory msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectory msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$5 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateDirectoryReparse msg) cil managed
    {
    } // end of method Ready$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$4::.ctor

  } // end of class Ready$4

  .class abstract auto ansi nested public specialname Ready$5
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001C)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$5::.ctor

  } // end of class Ready$5

  .class abstract auto ansi nested public specialname Ready$6
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001B)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateFile msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFile msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$7 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateFileReparse msg) cil managed
    {
    } // end of method Ready$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$6::.ctor

  } // end of class Ready$6

  .class abstract auto ansi nested public specialname Ready$7
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001A)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$7::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$7::.ctor

  } // end of class Ready$7

  .class abstract auto ansi nested public specialname Ready$8
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000019)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckCreateLink msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLink msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$9 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakCreateLinkReparse msg) cil managed
    {
    } // end of method Ready$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$8::.ctor

  } // end of class Ready$8

  .class abstract auto ansi nested public specialname Ready$9
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000018)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$9::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$9::.ctor

  } // end of class Ready$9

  .class abstract auto ansi nested public specialname Ready$10
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000017)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$11 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteDirectory msg) cil managed
    {
    } // end of method Ready$10::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$11 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectory msg) cil managed
    {
    } // end of method Ready$10::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$11 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteDirectoryReparse msg) cil managed
    {
    } // end of method Ready$10::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$10::.ctor

  } // end of class Ready$10

  .class abstract auto ansi nested public specialname Ready$11
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000016)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$11::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$11::.ctor

  } // end of class Ready$11

  .class abstract auto ansi nested public specialname Ready$12
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000015)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$13 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteFile msg) cil managed
    {
    } // end of method Ready$12::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$13 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFile msg) cil managed
    {
    } // end of method Ready$12::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$13 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteFileReparse msg) cil managed
    {
    } // end of method Ready$12::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$12::.ctor

  } // end of class Ready$12

  .class abstract auto ansi nested public specialname Ready$13
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000014)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$13::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$13::.ctor

  } // end of class Ready$13

  .class abstract auto ansi nested public specialname Ready$14
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000013)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$15 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeleteLink msg) cil managed
    {
    } // end of method Ready$14::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$15 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLink msg) cil managed
    {
    } // end of method Ready$14::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$15 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeleteLinkReparse msg) cil managed
    {
    } // end of method Ready$14::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$14::.ctor

  } // end of class Ready$14

  .class abstract auto ansi nested public specialname Ready$15
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000012)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$15::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$15::.ctor

  } // end of class Ready$15

  .class abstract auto ansi nested public specialname Ready$16
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$17 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckDeregister msg) cil managed
    {
    } // end of method Ready$16::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$17 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregister msg) cil managed
    {
    } // end of method Ready$16::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$17 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakDeregisterReparse msg) cil managed
    {
    } // end of method Ready$16::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$16::.ctor

  } // end of class Ready$16

  .class abstract auto ansi nested public specialname Ready$17
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$17::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$17::.ctor

  } // end of class Ready$17

  .class abstract auto ansi nested public specialname Ready$18
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$19 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetAttributes msg) cil managed
    {
    } // end of method Ready$18::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$19 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributes msg) cil managed
    {
    } // end of method Ready$18::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$19 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetAttributesReparse msg) cil managed
    {
    } // end of method Ready$18::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$18::.ctor

  } // end of class Ready$18

  .class abstract auto ansi nested public specialname Ready$19
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$19::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$19::.ctor

  } // end of class Ready$19

  .class abstract auto ansi nested public specialname Ready$20
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$21 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckGetLinkValue msg) cil managed
    {
    } // end of method Ready$20::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$21 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValue msg) cil managed
    {
    } // end of method Ready$20::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$21 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakGetLinkValueReparse msg) cil managed
    {
    } // end of method Ready$20::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$20::.ctor

  } // end of class Ready$20

  .class abstract auto ansi nested public specialname Ready$21
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$21::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$21::.ctor

  } // end of class Ready$21

  .class abstract auto ansi nested public specialname Ready$22
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$23 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckNotify msg) cil managed
    {
    } // end of method Ready$22::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$23 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotify msg) cil managed
    {
    } // end of method Ready$22::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$23 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakNotifyReparse msg) cil managed
    {
    } // end of method Ready$22::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$22::.ctor

  } // end of class Ready$22

  .class abstract auto ansi nested public specialname Ready$23
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$23::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$23::.ctor

  } // end of class Ready$23

  .class abstract auto ansi nested public specialname Ready$24
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$25 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckQueryACL msg) cil managed
    {
    } // end of method Ready$24::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$25 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACL msg) cil managed
    {
    } // end of method Ready$24::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$25 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakQueryACLReparse msg) cil managed
    {
    } // end of method Ready$24::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$24::.ctor

  } // end of class Ready$24

  .class abstract auto ansi nested public specialname Ready$25
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$25::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$25::.ctor

  } // end of class Ready$25

  .class abstract auto ansi nested public specialname Ready$26
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$27 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckRegister msg) cil managed
    {
    } // end of method Ready$26::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$27 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegister msg) cil managed
    {
    } // end of method Ready$26::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$27 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakRegisterReparse msg) cil managed
    {
    } // end of method Ready$26::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$26::.ctor

  } // end of class Ready$26

  .class abstract auto ansi nested public specialname Ready$27
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$27::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$27::.ctor

  } // end of class Ready$27

  .class abstract auto ansi nested public specialname Ready$28
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$29 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/AckStoreACL msg) cil managed
    {
    } // end of method Ready$28::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$29 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACL msg) cil managed
    {
    } // end of method Ready$28::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready$29 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/NakStoreACLReparse msg) cil managed
    {
    } // end of method Ready$28::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$28::.ctor

  } // end of class Ready$28

  .class abstract auto ansi nested public specialname Ready$29
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$29::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$29::.ctor

  } // end of class Ready$29

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::'.ctor$PST060000C4'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DirectoryServiceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::'.ctor$PST060000C4'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DirectoryServiceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method DirectoryServiceContract::.ctor

  .method privatescope static int32  StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       468 (0x1d4)
    .maxstack  21
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.s   26
    IL_000c:  beq        IL_008a

    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.s   10
    IL_0014:  beq        IL_009e

    IL_0019:  ldloc.1
    IL_001a:  ldc.i4.s   18
    IL_001c:  beq        IL_00b2

    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.s   22
    IL_0024:  beq        IL_00c6

    IL_0029:  ldloc.1
    IL_002a:  ldc.i4.6
    IL_002b:  beq        IL_00da

    IL_0030:  ldloc.1
    IL_0031:  ldc.i4.s   14
    IL_0033:  beq        IL_00ee

    IL_0038:  ldloc.1
    IL_0039:  ldc.i4.2
    IL_003a:  beq        IL_0102

    IL_003f:  ldloc.1
    IL_0040:  ldc.i4.s   30
    IL_0042:  beq        IL_0115

    IL_0047:  ldloc.1
    IL_0048:  ldc.i4.s   24
    IL_004a:  beq        IL_0129

    IL_004f:  ldloc.1
    IL_0050:  ldc.i4.8
    IL_0051:  beq        IL_013d

    IL_0056:  ldloc.1
    IL_0057:  ldc.i4.s   16
    IL_0059:  beq        IL_0151

    IL_005e:  ldloc.1
    IL_005f:  ldc.i4.s   32
    IL_0061:  beq        IL_0165

    IL_0066:  ldloc.1
    IL_0067:  ldc.i4.s   20
    IL_0069:  beq        IL_0179

    IL_006e:  ldloc.1
    IL_006f:  ldc.i4.4
    IL_0070:  beq        IL_018d

    IL_0075:  ldloc.1
    IL_0076:  ldc.i4.s   12
    IL_0078:  beq        IL_01a1

    IL_007d:  ldloc.1
    IL_007e:  ldc.i4.s   28
    IL_0080:  beq        IL_01b5

    IL_0085:  br         IL_01c9

    IL_008a:  ldarg.0
    IL_008b:  ldc.i4.s   34
    IL_008d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0092:  ldarg.0
    IL_0093:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0098:  stloc.2
    IL_0099:  br         IL_01d0

    IL_009e:  ldarg.0
    IL_009f:  ldc.i4.s   34
    IL_00a1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00a6:  ldarg.0
    IL_00a7:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00ac:  stloc.2
    IL_00ad:  br         IL_01d0

    IL_00b2:  ldarg.0
    IL_00b3:  ldc.i4.s   34
    IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00ba:  ldarg.0
    IL_00bb:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00c0:  stloc.2
    IL_00c1:  br         IL_01d0

    IL_00c6:  ldarg.0
    IL_00c7:  ldc.i4.s   34
    IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00ce:  ldarg.0
    IL_00cf:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00d4:  stloc.2
    IL_00d5:  br         IL_01d0

    IL_00da:  ldarg.0
    IL_00db:  ldc.i4.s   34
    IL_00dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00e2:  ldarg.0
    IL_00e3:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00e8:  stloc.2
    IL_00e9:  br         IL_01d0

    IL_00ee:  ldarg.0
    IL_00ef:  ldc.i4.s   34
    IL_00f1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00f6:  ldarg.0
    IL_00f7:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00fc:  stloc.2
    IL_00fd:  br         IL_01d0

    IL_0102:  ldarg.0
    IL_0103:  ldc.i4.1
    IL_0104:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0109:  ldarg.0
    IL_010a:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_010f:  stloc.2
    IL_0110:  br         IL_01d0

    IL_0115:  ldarg.0
    IL_0116:  ldc.i4.s   34
    IL_0118:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_011d:  ldarg.0
    IL_011e:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0123:  stloc.2
    IL_0124:  br         IL_01d0

    IL_0129:  ldarg.0
    IL_012a:  ldc.i4.s   34
    IL_012c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0131:  ldarg.0
    IL_0132:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0137:  stloc.2
    IL_0138:  br         IL_01d0

    IL_013d:  ldarg.0
    IL_013e:  ldc.i4.s   34
    IL_0140:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0145:  ldarg.0
    IL_0146:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_014b:  stloc.2
    IL_014c:  br         IL_01d0

    IL_0151:  ldarg.0
    IL_0152:  ldc.i4.s   34
    IL_0154:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0159:  ldarg.0
    IL_015a:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_015f:  stloc.2
    IL_0160:  br         IL_01d0

    IL_0165:  ldarg.0
    IL_0166:  ldc.i4.s   34
    IL_0168:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_016d:  ldarg.0
    IL_016e:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0173:  stloc.2
    IL_0174:  br         IL_01d0

    IL_0179:  ldarg.0
    IL_017a:  ldc.i4.s   34
    IL_017c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0181:  ldarg.0
    IL_0182:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0187:  stloc.2
    IL_0188:  br         IL_01d0

    IL_018d:  ldarg.0
    IL_018e:  ldc.i4.s   34
    IL_0190:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0195:  ldarg.0
    IL_0196:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_019b:  stloc.2
    IL_019c:  br         IL_01d0

    IL_01a1:  ldarg.0
    IL_01a2:  ldc.i4.s   34
    IL_01a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_01a9:  ldarg.0
    IL_01aa:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_01af:  stloc.2
    IL_01b0:  br         IL_01d0

    IL_01b5:  ldarg.0
    IL_01b6:  ldc.i4.s   34
    IL_01b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_01bd:  ldarg.0
    IL_01be:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceContract::StableState$PST06000020(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_01c3:  stloc.2
    IL_01c4:  br         IL_01d0

    IL_01c9:  ldloc.0
    IL_01ca:  stloc.2
    IL_01cb:  br         IL_01d0

    IL_01d0:  ldloc.2
    IL_01d1:  stloc.3
    IL_01d2:  ldloc.2
    IL_01d3:  ret
  } // end of method DirectoryServiceContract::StableState

  .method privatescope static int32  CanonicalState$PST06000021(int32 state) cil managed
  {
    // Code size       269 (0x10d)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   26
    IL_0005:  beq        IL_0083

    IL_000a:  ldloc.0
    IL_000b:  ldc.i4.s   10
    IL_000d:  beq        IL_008b

    IL_0012:  ldloc.0
    IL_0013:  ldc.i4.s   18
    IL_0015:  beq        IL_0093

    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.s   22
    IL_001d:  beq        IL_009b

    IL_0022:  ldloc.0
    IL_0023:  ldc.i4.6
    IL_0024:  beq        IL_00a3

    IL_0029:  ldloc.0
    IL_002a:  ldc.i4.s   14
    IL_002c:  beq        IL_00ab

    IL_0031:  ldloc.0
    IL_0032:  ldc.i4.2
    IL_0033:  beq        IL_00b3

    IL_0038:  ldloc.0
    IL_0039:  ldc.i4.s   30
    IL_003b:  beq        IL_00ba

    IL_0040:  ldloc.0
    IL_0041:  ldc.i4.s   24
    IL_0043:  beq        IL_00c2

    IL_0048:  ldloc.0
    IL_0049:  ldc.i4.8
    IL_004a:  beq        IL_00ca

    IL_004f:  ldloc.0
    IL_0050:  ldc.i4.s   16
    IL_0052:  beq        IL_00d2

    IL_0057:  ldloc.0
    IL_0058:  ldc.i4.s   32
    IL_005a:  beq        IL_00da

    IL_005f:  ldloc.0
    IL_0060:  ldc.i4.s   20
    IL_0062:  beq        IL_00e2

    IL_0067:  ldloc.0
    IL_0068:  ldc.i4.4
    IL_0069:  beq        IL_00ea

    IL_006e:  ldloc.0
    IL_006f:  ldc.i4.s   12
    IL_0071:  beq        IL_00f2

    IL_0076:  ldloc.0
    IL_0077:  ldc.i4.s   28
    IL_0079:  beq        IL_00fa

    IL_007e:  br         IL_0102

    IL_0083:  ldc.i4.s   34
    IL_0085:  stloc.1
    IL_0086:  br         IL_0109

    IL_008b:  ldc.i4.s   34
    IL_008d:  stloc.1
    IL_008e:  br         IL_0109

    IL_0093:  ldc.i4.s   34
    IL_0095:  stloc.1
    IL_0096:  br         IL_0109

    IL_009b:  ldc.i4.s   34
    IL_009d:  stloc.1
    IL_009e:  br         IL_0109

    IL_00a3:  ldc.i4.s   34
    IL_00a5:  stloc.1
    IL_00a6:  br         IL_0109

    IL_00ab:  ldc.i4.s   34
    IL_00ad:  stloc.1
    IL_00ae:  br         IL_0109

    IL_00b3:  ldc.i4.1
    IL_00b4:  stloc.1
    IL_00b5:  br         IL_0109

    IL_00ba:  ldc.i4.s   34
    IL_00bc:  stloc.1
    IL_00bd:  br         IL_0109

    IL_00c2:  ldc.i4.s   34
    IL_00c4:  stloc.1
    IL_00c5:  br         IL_0109

    IL_00ca:  ldc.i4.s   34
    IL_00cc:  stloc.1
    IL_00cd:  br         IL_0109

    IL_00d2:  ldc.i4.s   34
    IL_00d4:  stloc.1
    IL_00d5:  br         IL_0109

    IL_00da:  ldc.i4.s   34
    IL_00dc:  stloc.1
    IL_00dd:  br         IL_0109

    IL_00e2:  ldc.i4.s   34
    IL_00e4:  stloc.1
    IL_00e5:  br         IL_0109

    IL_00ea:  ldc.i4.s   34
    IL_00ec:  stloc.1
    IL_00ed:  br         IL_0109

    IL_00f2:  ldc.i4.s   34
    IL_00f4:  stloc.1
    IL_00f5:  br         IL_0109

    IL_00fa:  ldc.i4.s   34
    IL_00fc:  stloc.1
    IL_00fd:  br         IL_0109

    IL_0102:  ldarg.0
    IL_0103:  stloc.1
    IL_0104:  br         IL_0109

    IL_0109:  ldloc.1
    IL_010a:  stloc.2
    IL_010b:  ldloc.1
    IL_010c:  ret
  } // end of method DirectoryServiceContract::CanonicalState

} // end of class Microsoft.Singularity.Directory.DirectoryServiceContract

.class public auto ansi sealed Microsoft.Singularity.Directory.NotifyType
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.Directory.NotifyType Deletion = int32(0x00000001)
  .field public static literal valuetype Microsoft.Singularity.Directory.NotifyType Modification = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.Directory.NotifyType Creation = int32(0x00000000)
} // end of class Microsoft.Singularity.Directory.NotifyType

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Directory.NotifyContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000005)
    .field public static literal specialname int32 Begin = int32(0x00000002)
    .field public static literal specialname int32 ChangeNotification = int32(0x00000003)
    .field public static literal specialname int32 AckChangeNotification = int32(0x00000004)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification AckChangeNotificationPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000529'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.NotifyContract::CanonicalState$PST06000026(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.NotifyContract::CanonicalState$PST06000026(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "Start"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "Notify"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "NotifyAck"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendBegin() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::DeliverBegin1$PST06000551()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::MarshallDeliverBegin1$PST06000552(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.3
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Begin in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendBegin

    .method public instance void  SendChangeNotification(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                         valuetype Microsoft.Singularity.Directory.NotifyType 'type') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0074

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004f

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::DeliverChangeNotification0$PST06000553(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype Microsoft.Singularity.Directory.NotifyType)
      IL_004a:  br         IL_005d

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.2
      IL_0057:  ldarg.0
      IL_0058:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::MarshallDeliverChangeNotification0$PST06000554(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                            valuetype Microsoft.Singularity.Directory.NotifyType,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005d:  ldarg.0
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0063:  ldarg.0
      IL_0064:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0069:  ldc.i4.2
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send ChangeNotification in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendChangeNotification

    .method public instance void  RecvAckChangeNotification() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckChangeNotification when next message"
      + " has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification Microsoft.Singularity.Directory.NotifyContract/Imp::AckChangeNotificationPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.3
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckChangeNotification in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckChangeNotification

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.NotifyContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.NotifyContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.NotifyContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.NotifyContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckChangeNotification0$PST0600053C() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckChangeNotification0

    .method privatescope instance void  MarshallDeliverAckChangeNotification0$PST0600053D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::DeliverAckChangeNotification0$PST0600053C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification Microsoft.Singularity.Directory.NotifyContract/Imp::AckChangeNotificationPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckChangeNotification0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod1
    .field family valuetype Microsoft.Singularity.Directory.NotifyContract/Begin BeginPod1
    .field family valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification ChangeNotificationPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.NotifyContract::CanonicalState$PST06000026(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.NotifyContract::CanonicalState$PST06000026(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "Start"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "Notify"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "NotifyAck"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvBegin() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Begin when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Begin Microsoft.Singularity.Directory.NotifyContract/Exp::BeginPod1
      IL_0095:  initobj    Microsoft.Singularity.Directory.NotifyContract/Begin
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.3
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Begin in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvBegin

    .method public instance void  RecvChangeNotification([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& path,
                                                         [out] valuetype Microsoft.Singularity.Directory.NotifyType& 'type') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       225 (0xe1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ca

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ChangeNotification when next message ha"
      + "s tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification Microsoft.Singularity.Directory.NotifyContract/Exp::ChangeNotificationPod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification Microsoft.Singularity.Directory.NotifyContract/Exp::ChangeNotificationPod0
      IL_009a:  ldfld      valuetype Microsoft.Singularity.Directory.NotifyType Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::'type'
      IL_009f:  stobj      Microsoft.Singularity.Directory.NotifyType
      IL_00a4:  ldarg.0
      IL_00a5:  ldc.i4.0
      IL_00a6:  volatile.
      IL_00a8:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification Microsoft.Singularity.Directory.NotifyContract/Exp::ChangeNotificationPod0
      IL_00b3:  initobj    Microsoft.Singularity.Directory.NotifyContract/ChangeNotification
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bf:  ldc.i4.2
      IL_00c0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c5:  br         IL_00e0

      IL_00ca:  ldstr      "can't recv ChangeNotification in state "
      IL_00cf:  ldarg.0
      IL_00d0:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Exp::CurrentState()
      IL_00d5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00da:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00df:  throw

      IL_00e0:  ret
    } // end of method Exp::RecvChangeNotification

    .method public instance void  SendAckChangeNotification() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::DeliverAckChangeNotification0$PST0600053C()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::MarshallDeliverAckChangeNotification0$PST0600053D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.3
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckChangeNotification in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.NotifyContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckChangeNotification

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.NotifyContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.NotifyContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.NotifyContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.NotifyContract::StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.NotifyContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverBegin1$PST06000551() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_0010:  ret
    } // end of method Exp::DeliverBegin1

    .method privatescope instance void  MarshallDeliverBegin1$PST06000552(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::DeliverBegin1$PST06000551()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/Begin Microsoft.Singularity.Directory.NotifyContract/Exp::BeginPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Begin::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverBegin1

    .method privatescope instance void  DeliverChangeNotification0$PST06000553(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                               valuetype Microsoft.Singularity.Directory.NotifyType 'type') cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification Microsoft.Singularity.Directory.NotifyContract/Exp::ChangeNotificationPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification Microsoft.Singularity.Directory.NotifyContract/Exp::ChangeNotificationPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype Microsoft.Singularity.Directory.NotifyType Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::'type'
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.3
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.3
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0028:  ret
    } // end of method Exp::DeliverChangeNotification0

    .method privatescope instance void  MarshallDeliverChangeNotification0$PST06000554(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) path,
                                                                                       valuetype Microsoft.Singularity.Directory.NotifyType 'type',
                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::DeliverChangeNotification0$PST06000553(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                    valuetype Microsoft.Singularity.Directory.NotifyType)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification Microsoft.Singularity.Directory.NotifyContract/Exp::ChangeNotificationPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.NotifyContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverChangeNotification0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Begin
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/Begin* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Begin::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.NotifyContract/Begin* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Begin::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/Begin
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Begin::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Begin::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.NotifyContract/Begin* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Begin::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Begin::Release

  } // end of class Begin

  .class sequential ansi sealed nested public specialname ChangeNotification
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public valuetype Microsoft.Singularity.Directory.NotifyType 'type'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method ChangeNotification::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ChangeNotification::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ChangeNotification::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/ChangeNotification
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method ChangeNotification::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ChangeNotification::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method ChangeNotification::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.NotifyContract/ChangeNotification::path
      IL_001a:  ret
    } // end of method ChangeNotification::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChangeNotification::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChangeNotification::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChangeNotification::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChangeNotification::Release

  } // end of class ChangeNotification

  .class sequential ansi sealed nested public specialname AckChangeNotification
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckChangeNotification::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckChangeNotification::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckChangeNotification::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckChangeNotification::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckChangeNotification::Release

  } // end of class AckChangeNotification

  .class abstract auto ansi nested public specialname Start
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.NotifyContract/Notify 
            Recv(valuetype Microsoft.Singularity.Directory.NotifyContract/Begin msg) cil managed
    {
    } // end of method Start::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Notify
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.NotifyContract/NotifyAck 
            Recv(valuetype Microsoft.Singularity.Directory.NotifyContract/ChangeNotification msg) cil managed
    {
    } // end of method Notify::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Notify::.ctor

  } // end of class Notify

  .class abstract auto ansi nested public specialname NotifyAck
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.NotifyContract/Notify 
            Send(valuetype Microsoft.Singularity.Directory.NotifyContract/AckChangeNotification msg) cil managed
    {
    } // end of method NotifyAck::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method NotifyAck::.ctor

  } // end of class NotifyAck

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
    IL_0017:  ldc.i4.4
    IL_0018:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
    IL_0036:  ldc.i4.4
    IL_0037:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::'.ctor$PST06000529'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method NotifyContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.NotifyContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.NotifyContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.NotifyContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.NotifyContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Directory.NotifyContract/Imp::'.ctor$PST06000529'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method NotifyContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method NotifyContract::.ctor

  .method privatescope static int32  StableState$PST06000025(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       25 (0x19)
    .maxstack  4
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.0
    IL_000f:  stloc.2
    IL_0010:  br         IL_0015

    IL_0015:  ldloc.2
    IL_0016:  stloc.3
    IL_0017:  ldloc.2
    IL_0018:  ret
  } // end of method NotifyContract::StableState

  .method privatescope static int32  CanonicalState$PST06000026(int32 state) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  1
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  br         IL_0007

    IL_0007:  ldarg.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.1
    IL_000f:  stloc.2
    IL_0010:  ldloc.1
    IL_0011:  ret
  } // end of method NotifyContract::CanonicalState

} // end of class Microsoft.Singularity.Directory.NotifyContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Directory.ServiceContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000003)
    .field public static literal specialname int32 ContractNotSupported = int32(0x00000002)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600057C'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.ServiceContract::CanonicalState$PST0600002B(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.ServiceContract::CanonicalState$PST0600002B(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_002a

      IL_001a:  br         IL_0035

      IL_001f:  ldstr      "Start"
      IL_0024:  stloc.1
      IL_0025:  br         IL_0040

      IL_002a:  ldstr      "DoneState"
      IL_002f:  stloc.1
      IL_0030:  br         IL_0040

      IL_0035:  ldstr      "<protocol terminated>"
      IL_003a:  stloc.1
      IL_003b:  br         IL_0040

      IL_0040:  ldloc.1
      IL_0041:  stloc.2
      IL_0042:  ldloc.1
      IL_0043:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.ServiceContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.ServiceContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       105 (0x69)
      .maxstack  4
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               int32 V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_001a

      IL_0015:  br         IL_005a

      IL_001a:  ldc.i4.0
      IL_001b:  stloc.2
      IL_001c:  ldarg.0
      IL_001d:  volatile.
      IL_001f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_0024:  stloc.3
      IL_0025:  ldloc.3
      IL_0026:  brtrue     IL_003b

      IL_002b:  ldarg.0
      IL_002c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0031:  stloc.2
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  ldc.i4.0
      IL_003d:  ceq
      IL_003f:  brfalse    IL_0052

      IL_0044:  ldloc.2
      IL_0045:  brfalse    IL_0052

      IL_004a:  ldc.i4.m1
      IL_004b:  stloc.s    V_4
      IL_004d:  br         IL_0062

      IL_0052:  ldloc.3
      IL_0053:  stloc.s    V_4
      IL_0055:  br         IL_0062

      IL_005a:  ldc.i4.m1
      IL_005b:  stloc.s    V_4
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.s    V_4
      IL_0064:  stloc.s    V_5
      IL_0066:  ldloc.s    V_4
      IL_0068:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.ServiceContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverContractNotSupported0$PST0600058D() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST0600058E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::DeliverContractNotSupported0$PST0600058D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.ServiceContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.ServiceContract::CanonicalState$PST0600002B(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.ServiceContract::CanonicalState$PST0600002B(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_002a

      IL_001a:  br         IL_0035

      IL_001f:  ldstr      "Start"
      IL_0024:  stloc.1
      IL_0025:  br         IL_0040

      IL_002a:  ldstr      "DoneState"
      IL_002f:  stloc.1
      IL_0030:  br         IL_0040

      IL_0035:  ldstr      "<protocol terminated>"
      IL_003a:  stloc.1
      IL_003b:  br         IL_0040

      IL_0040:  ldloc.1
      IL_0041:  stloc.2
      IL_0042:  ldloc.1
      IL_0043:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::DeliverContractNotSupported0$PST0600058D()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::MarshallDeliverContractNotSupported0$PST0600058E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.ServiceContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       105 (0x69)
      .maxstack  4
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               int32 V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.3
      IL_0010:  beq        IL_001a

      IL_0015:  br         IL_005a

      IL_001a:  ldc.i4.0
      IL_001b:  stloc.2
      IL_001c:  ldarg.0
      IL_001d:  volatile.
      IL_001f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0024:  stloc.3
      IL_0025:  ldloc.3
      IL_0026:  brtrue     IL_003b

      IL_002b:  ldarg.0
      IL_002c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0031:  stloc.2
      IL_0032:  ldarg.0
      IL_0033:  volatile.
      IL_0035:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_003a:  stloc.3
      IL_003b:  ldloc.3
      IL_003c:  ldc.i4.0
      IL_003d:  ceq
      IL_003f:  brfalse    IL_0052

      IL_0044:  ldloc.2
      IL_0045:  brfalse    IL_0052

      IL_004a:  ldc.i4.m1
      IL_004b:  stloc.s    V_4
      IL_004d:  br         IL_0062

      IL_0052:  ldloc.3
      IL_0053:  stloc.s    V_4
      IL_0055:  br         IL_0062

      IL_005a:  ldc.i4.m1
      IL_005b:  stloc.s    V_4
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.s    V_4
      IL_0064:  stloc.s    V_5
      IL_0066:  ldloc.s    V_4
      IL_0068:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.ServiceContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

  } // end of class Exp

  .class sequential ansi sealed nested public specialname ContractNotSupported
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ContractNotSupported::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ContractNotSupported::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method ContractNotSupported::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ContractNotSupported::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ContractNotSupported::Release

  } // end of class ContractNotSupported

  .class abstract auto ansi nested public specialname Start
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.ServiceContract/DoneState 
            Send(valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname DoneState
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method DoneState::.ctor

  } // end of class DoneState

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.ServiceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.ServiceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::'.ctor$PST0600057C'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.ServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.ServiceContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.ServiceContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Imp::'.ctor$PST0600057C'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ServiceContract::.ctor

  .method privatescope static int32  StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Directory.ServiceContract::StableState$PST0600002A(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method ServiceContract::StableState

  .method privatescope static int32  CanonicalState$PST0600002B(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method ServiceContract::CanonicalState

} // end of class Microsoft.Singularity.Directory.ServiceContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Directory.ServiceProviderContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000005)
    .field public static literal specialname int32 Connect = int32(0x00000002)
    .field public static literal specialname int32 AckConnect = int32(0x00000003)
    .field public static literal specialname int32 NackConnect = int32(0x00000004)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect AckConnectPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect NackConnectPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060005AE'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::CanonicalState$PST06000030(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::CanonicalState$PST06000030(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_002a

      IL_001a:  br         IL_0035

      IL_001f:  ldstr      "Start"
      IL_0024:  stloc.1
      IL_0025:  br         IL_0040

      IL_002a:  ldstr      "Ack"
      IL_002f:  stloc.1
      IL_0030:  br         IL_0040

      IL_0035:  ldstr      "<protocol terminated>"
      IL_003a:  stloc.1
      IL_003b:  br         IL_0040

      IL_0040:  ldloc.1
      IL_0041:  stloc.2
      IL_0042:  ldloc.1
      IL_0043:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendConnect(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.3
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ac

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0088

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
      IL_007d:  ldarg.1
      IL_007e:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::DeliverConnect0$PST060005D8(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0083:  br         IL_0095

      IL_0088:  ldloc.3
      IL_0089:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
      IL_008e:  ldarg.1
      IL_008f:  ldarg.0
      IL_0090:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::MarshallDeliverConnect0$PST060005D9(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0095:  ldarg.0
      IL_0096:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't send Connect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::SendConnect

    .method public instance void  RecvAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckConnect when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect Microsoft.Singularity.Directory.ServiceProviderContract/Imp::AckConnectPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.3
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckConnect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckConnect

    .method public instance void  RecvNackConnect([out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NackConnect when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect Microsoft.Singularity.Directory.ServiceProviderContract/Imp::NackConnectPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect Microsoft.Singularity.Directory.ServiceProviderContract/Imp::NackConnectPod0
      IL_00a2:  initobj    Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.3
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv NackConnect in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvNackConnect

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceProviderContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceProviderContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.ServiceProviderContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       184 (0xb8)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               int32 V_7)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0021

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0061

      IL_001c:  br         IL_00a9

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.2
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.2
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0041:  stloc.3
      IL_0042:  ldloc.3
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0059

      IL_004b:  ldloc.2
      IL_004c:  brfalse    IL_0059

      IL_0051:  ldc.i4.m1
      IL_0052:  stloc.s    V_4
      IL_0054:  br         IL_00b1

      IL_0059:  ldloc.3
      IL_005a:  stloc.s    V_4
      IL_005c:  br         IL_00b1

      IL_0061:  ldc.i4.0
      IL_0062:  stloc.s    V_5
      IL_0064:  ldarg.0
      IL_0065:  volatile.
      IL_0067:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_006c:  stloc.s    V_6
      IL_006e:  ldloc.s    V_6
      IL_0070:  brtrue     IL_0087

      IL_0075:  ldarg.0
      IL_0076:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_007b:  stloc.s    V_5
      IL_007d:  ldarg.0
      IL_007e:  volatile.
      IL_0080:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0085:  stloc.s    V_6
      IL_0087:  ldloc.s    V_6
      IL_0089:  ldc.i4.0
      IL_008a:  ceq
      IL_008c:  brfalse    IL_00a0

      IL_0091:  ldloc.s    V_5
      IL_0093:  brfalse    IL_00a0

      IL_0098:  ldc.i4.m1
      IL_0099:  stloc.s    V_4
      IL_009b:  br         IL_00b1

      IL_00a0:  ldloc.s    V_6
      IL_00a2:  stloc.s    V_4
      IL_00a4:  br         IL_00b1

      IL_00a9:  ldc.i4.m1
      IL_00aa:  stloc.s    V_4
      IL_00ac:  br         IL_00b1

      IL_00b1:  ldloc.s    V_4
      IL_00b3:  stloc.s    V_7
      IL_00b5:  ldloc.s    V_4
      IL_00b7:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAckConnect0$PST060005C1() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckConnect0

    .method privatescope instance void  MarshallDeliverAckConnect0$PST060005C2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::DeliverAckConnect0$PST060005C1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect Microsoft.Singularity.Directory.ServiceProviderContract/Imp::AckConnectPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect::MarshallAll(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckConnect0

    .method privatescope instance void  DeliverNackConnect0$PST060005C3(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect Microsoft.Singularity.Directory.ServiceProviderContract/Imp::NackConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.4
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.4
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverNackConnect0

    .method privatescope instance void  MarshallDeliverNackConnect0$PST060005C4(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::DeliverNackConnect0$PST060005C3(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect Microsoft.Singularity.Directory.ServiceProviderContract/Imp::NackConnectPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNackConnect0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect ConnectPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::CanonicalState$PST06000030(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::CanonicalState$PST06000030(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       68 (0x44)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_002a

      IL_001a:  br         IL_0035

      IL_001f:  ldstr      "Start"
      IL_0024:  stloc.1
      IL_0025:  br         IL_0040

      IL_002a:  ldstr      "Ack"
      IL_002f:  stloc.1
      IL_0030:  br         IL_0040

      IL_0035:  ldstr      "<protocol terminated>"
      IL_003a:  stloc.1
      IL_003b:  br         IL_0040

      IL_0040:  ldloc.1
      IL_0041:  stloc.2
      IL_0042:  ldloc.1
      IL_0043:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvConnect([out] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Connect when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect Microsoft.Singularity.Directory.ServiceProviderContract/Exp::ConnectPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect Microsoft.Singularity.Directory.ServiceProviderContract/Exp::ConnectPod0
      IL_00a2:  initobj    Microsoft.Singularity.Directory.ServiceProviderContract/Connect
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.2
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv Connect in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Exp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Exp::RecvConnect

    .method public instance void  SendAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::DeliverAckConnect0$PST060005C1()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallDeliverAckConnect0$PST060005C2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.3
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckConnect in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckConnect

    .method public instance void  SendNackConnect(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.2
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ac

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0088

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_007d:  ldarg.1
      IL_007e:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::DeliverNackConnect0$PST060005C3(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start))
      IL_0083:  br         IL_0095

      IL_0088:  ldloc.3
      IL_0089:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_008e:  ldarg.1
      IL_008f:  ldarg.0
      IL_0090:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::MarshallDeliverNackConnect0$PST060005C4(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0095:  ldarg.0
      IL_0096:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.3
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't send NackConnect in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.ServiceProviderContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::SendNackConnect

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceProviderContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.ServiceProviderContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.ServiceProviderContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::MarshallContent(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       184 (0xb8)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               int32 V_7)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.ServiceProviderContract::StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0021

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0061

      IL_001c:  br         IL_00a9

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.2
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.2
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_0041:  stloc.3
      IL_0042:  ldloc.3
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0059

      IL_004b:  ldloc.2
      IL_004c:  brfalse    IL_0059

      IL_0051:  ldc.i4.m1
      IL_0052:  stloc.s    V_4
      IL_0054:  br         IL_00b1

      IL_0059:  ldloc.3
      IL_005a:  stloc.s    V_4
      IL_005c:  br         IL_00b1

      IL_0061:  ldc.i4.0
      IL_0062:  stloc.s    V_5
      IL_0064:  ldarg.0
      IL_0065:  volatile.
      IL_0067:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_006c:  stloc.s    V_6
      IL_006e:  ldloc.s    V_6
      IL_0070:  brtrue     IL_0087

      IL_0075:  ldarg.0
      IL_0076:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_007b:  stloc.s    V_5
      IL_007d:  ldarg.0
      IL_007e:  volatile.
      IL_0080:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_0085:  stloc.s    V_6
      IL_0087:  ldloc.s    V_6
      IL_0089:  ldc.i4.0
      IL_008a:  ceq
      IL_008c:  brfalse    IL_00a0

      IL_0091:  ldloc.s    V_5
      IL_0093:  brfalse    IL_00a0

      IL_0098:  ldc.i4.m1
      IL_0099:  stloc.s    V_4
      IL_009b:  br         IL_00b1

      IL_00a0:  ldloc.s    V_6
      IL_00a2:  stloc.s    V_4
      IL_00a4:  br         IL_00b1

      IL_00a9:  ldc.i4.m1
      IL_00aa:  stloc.s    V_4
      IL_00ac:  br         IL_00b1

      IL_00b1:  ldloc.s    V_4
      IL_00b3:  stloc.s    V_7
      IL_00b5:  ldloc.s    V_4
      IL_00b7:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.ServiceProviderContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverConnect0$PST060005D8(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect Microsoft.Singularity.Directory.ServiceProviderContract/Exp::ConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.2
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.2
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverConnect0

    .method privatescope instance void  MarshallDeliverConnect0$PST060005D9(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::DeliverConnect0$PST060005D8(valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect Microsoft.Singularity.Directory.ServiceProviderContract/Exp::ConnectPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceProviderContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Connect::MarshallAll(uint8*,
                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverConnect0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Connect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0007:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method Connect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/Connect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Connect::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*,
                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method Connect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Connect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0051:  ret
    } // end of method Connect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/Connect::exp
      IL_0025:  ret
    } // end of method Connect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Release

  } // end of class Connect

  .class sequential ansi sealed nested public specialname AckConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*,
                                                                                                                             int32&)
      IL_001d:  ret
    } // end of method AckConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Release

  } // end of class AckConnect

  .class sequential ansi sealed nested public specialname NackConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0007:  call       void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                       valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NackConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NackConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NackConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method NackConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NackConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                              uint8*)
      IL_0051:  ret
    } // end of method NackConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect::exp
      IL_0025:  ret
    } // end of method NackConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NackConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NackConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NackConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NackConnect::Release

  } // end of class NackConnect

  .class abstract auto ansi nested public specialname Start
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.ServiceProviderContract/Ack 
            Recv(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Connect msg) cil managed
    {
    } // end of method Start::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ack
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.ServiceProviderContract/Start 
            Send(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/AckConnect msg) cil managed
    {
    } // end of method Ack::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.ServiceProviderContract/Start 
            Send(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/NackConnect msg) cil managed
    {
    } // end of method Ack::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ack::.ctor

  } // end of class Ack

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::'.ctor$PST060005AE'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceProviderContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.ServiceProviderContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::'.ctor$PST060005AE'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceProviderContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ServiceProviderContract::.ctor

  .method privatescope static int32  StableState$PST0600002F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       25 (0x19)
    .maxstack  4
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.0
    IL_000f:  stloc.2
    IL_0010:  br         IL_0015

    IL_0015:  ldloc.2
    IL_0016:  stloc.3
    IL_0017:  ldloc.2
    IL_0018:  ret
  } // end of method ServiceProviderContract::StableState

  .method privatescope static int32  CanonicalState$PST06000030(int32 state) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  1
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  br         IL_0007

    IL_0007:  ldarg.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.1
    IL_000f:  stloc.2
    IL_0010:  ldloc.1
    IL_0011:  ret
  } // end of method ServiceProviderContract::CanonicalState

} // end of class Microsoft.Singularity.Directory.ServiceProviderContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Directory.FileContract
       extends Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x0000000A)
    .field public static literal specialname int32 Success = int32(0x00000003)
    .field public static literal specialname int32 Read = int32(0x00000004)
    .field public static literal specialname int32 AckRead = int32(0x00000005)
    .field public static literal specialname int32 Write = int32(0x00000006)
    .field public static literal specialname int32 AckWrite = int32(0x00000007)
    .field public static literal specialname int32 Close = int32(0x00000008)
    .field public static literal specialname int32 AckClose = int32(0x00000009)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.FileContract/Success SuccessPod0
    .field family valuetype Microsoft.Singularity.Directory.FileContract/AckRead AckReadPod0
    .field family valuetype Microsoft.Singularity.Directory.FileContract/AckWrite AckWritePod0
    .field family valuetype Microsoft.Singularity.Directory.FileContract/AckClose AckClosePod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000600'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.FileContract::CanonicalState$PST06000035(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.FileContract::CanonicalState$PST06000035(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Ready"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "Ready$0"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Ready$1"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "Ready$2"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "Start"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "DoneState"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Success when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Success Microsoft.Singularity.Directory.FileContract/Imp::SuccessPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.FileContract/Success
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.7
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Success in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  SendRead(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                           int64 bufOffset,
                                           int64 fileOffset,
                                           int64 maxLength) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       145 (0x91)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_007a

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0052

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  ldarg.s    maxLength
      IL_0048:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::DeliverRead0$PST0600063A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                    int64,
                                                                                                                    int64,
                                                                                                                    int64)
      IL_004d:  br         IL_0063

      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0058:  ldarg.1
      IL_0059:  ldarg.2
      IL_005a:  ldarg.3
      IL_005b:  ldarg.s    maxLength
      IL_005d:  ldarg.0
      IL_005e:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallDeliverRead0$PST0600063B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                            int64,
                                                                                                                            int64,
                                                                                                                            int64,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0063:  ldarg.0
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0069:  ldarg.0
      IL_006a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006f:  ldc.i4.6
      IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0075:  br         IL_0090

      IL_007a:  ldstr      "can't send Read in state "
      IL_007f:  ldarg.0
      IL_0080:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_0085:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_008a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008f:  throw

      IL_0090:  ret
    } // end of method Imp::SendRead

    .method public instance void  RecvAckRead([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buf,
                                              [out] int64& bytesRead,
                                              [out] int32& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       234 (0xea)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckRead when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_009a:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/AckRead::bytesRead
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_00a7:  ldfld      int32 Microsoft.Singularity.Directory.FileContract/AckRead::'error'
      IL_00ac:  stind.i4
      IL_00ad:  ldarg.0
      IL_00ae:  ldc.i4.0
      IL_00af:  volatile.
      IL_00b1:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_00bc:  initobj    Microsoft.Singularity.Directory.FileContract/AckRead
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.7
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_00e9

      IL_00d3:  ldstr      "can't recv AckRead in state "
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_00de:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e8:  throw

      IL_00e9:  ret
    } // end of method Imp::RecvAckRead

    .method public instance void  SendWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                            int64 bufOffset,
                                            int64 fileOffset,
                                            int64 maxLength) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       145 (0x91)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_007a

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0052

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  ldarg.s    maxLength
      IL_0048:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::DeliverWrite0$PST0600063C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                     int64,
                                                                                                                     int64,
                                                                                                                     int64)
      IL_004d:  br         IL_0063

      IL_0052:  ldloc.3
      IL_0053:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0058:  ldarg.1
      IL_0059:  ldarg.2
      IL_005a:  ldarg.3
      IL_005b:  ldarg.s    maxLength
      IL_005d:  ldarg.0
      IL_005e:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallDeliverWrite0$PST0600063D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             int64,
                                                                                                                             int64,
                                                                                                                             int64,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0063:  ldarg.0
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0069:  ldarg.0
      IL_006a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006f:  ldc.i4.5
      IL_0070:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0075:  br         IL_0090

      IL_007a:  ldstr      "can't send Write in state "
      IL_007f:  ldarg.0
      IL_0080:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_0085:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_008a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008f:  throw

      IL_0090:  ret
    } // end of method Imp::SendWrite

    .method public instance void  RecvAckWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buf,
                                               [out] int64& bytesWritten,
                                               [out] int32& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       234 (0xea)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckWrite when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_009a:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/AckWrite::bytesWritten
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_00a7:  ldfld      int32 Microsoft.Singularity.Directory.FileContract/AckWrite::'error'
      IL_00ac:  stind.i4
      IL_00ad:  ldarg.0
      IL_00ae:  ldc.i4.0
      IL_00af:  volatile.
      IL_00b1:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_00bc:  initobj    Microsoft.Singularity.Directory.FileContract/AckWrite
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.7
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_00e9

      IL_00d3:  ldstr      "can't recv AckWrite in state "
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_00de:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e8:  throw

      IL_00e9:  ret
    } // end of method Imp::RecvAckWrite

    .method public instance void  SendClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::DeliverClose0$PST0600063E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallDeliverClose0$PST0600063F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Close in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendClose

    .method public instance void  RecvAckClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckClose when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckClose Microsoft.Singularity.Directory.FileContract/Imp::AckClosePod0
      IL_0097:  initobj    Microsoft.Singularity.Directory.FileContract/AckClose
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.7
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckClose in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckClose

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.FileContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.FileContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.FileContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.FileContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.FileContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.3
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.FileContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverSuccess0$PST06000618() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000619(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverSuccess0$PST06000618()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Success Microsoft.Singularity.Directory.FileContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.FileContract/Success::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverAckRead0$PST0600061A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                    int64 bytesRead,
                                                                    int32 'error') cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Directory.FileContract/AckRead::bytesRead
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Directory.FileContract/AckRead::'error'
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.5
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.5
      IL_002d:  volatile.
      IL_002f:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0034:  ret
    } // end of method Imp::DeliverAckRead0

    .method privatescope instance void  MarshallDeliverAckRead0$PST0600061B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                            int64 bytesRead,
                                                                            int32 'error',
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverAckRead0$PST0600061A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                       int64,
                                                                                                                       int32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckRead Microsoft.Singularity.Directory.FileContract/Imp::AckReadPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/AckRead::MarshallAll(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverAckRead0

    .method privatescope instance void  DeliverAckWrite0$PST0600061C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                     int64 bytesWritten,
                                                                     int32 'error') cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Directory.FileContract/AckWrite::bytesWritten
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int32 Microsoft.Singularity.Directory.FileContract/AckWrite::'error'
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.7
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.7
      IL_002d:  volatile.
      IL_002f:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0034:  ret
    } // end of method Imp::DeliverAckWrite0

    .method privatescope instance void  MarshallDeliverAckWrite0$PST0600061D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                             int64 bytesWritten,
                                                                             int32 'error',
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverAckWrite0$PST0600061C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        int64,
                                                                                                                        int32)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckWrite Microsoft.Singularity.Directory.FileContract/Imp::AckWritePod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/AckWrite::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverAckWrite0

    .method privatescope instance void  DeliverAckClose0$PST0600061E() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   9
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   9
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckClose0

    .method privatescope instance void  MarshallDeliverAckClose0$PST0600061F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverAckClose0$PST0600061E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/AckClose Microsoft.Singularity.Directory.FileContract/Imp::AckClosePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.FileContract/AckClose::MarshallAll(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckClose0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000620() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000621(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverContractNotSupported0$PST06000620()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.FileContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.FileContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Directory.FileContract/Read ReadPod0
    .field family valuetype Microsoft.Singularity.Directory.FileContract/Write WritePod0
    .field family valuetype Microsoft.Singularity.Directory.FileContract/Close ClosePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.FileContract::CanonicalState$PST06000035(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.FileContract::CanonicalState$PST06000035(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Ready"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "Ready$0"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Ready$1"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "Ready$2"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "Start"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "DoneState"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverSuccess0$PST06000618()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallDeliverSuccess0$PST06000619(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.7
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Success in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  RecvRead([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buf,
                                           [out] int64& bufOffset,
                                           [out] int64& fileOffset,
                                           [out] int64& maxLength) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       248 (0xf8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00e1

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Read when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_009a:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/Read::bufOffset
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_00a7:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/Read::fileOffset
      IL_00ac:  stind.i8
      IL_00ad:  ldarg.s    maxLength
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_00b5:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/Read::maxLength
      IL_00ba:  stind.i8
      IL_00bb:  ldarg.0
      IL_00bc:  ldc.i4.0
      IL_00bd:  volatile.
      IL_00bf:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c4:  ldarg.0
      IL_00c5:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_00ca:  initobj    Microsoft.Singularity.Directory.FileContract/Read
      IL_00d0:  ldarg.0
      IL_00d1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d6:  ldc.i4.6
      IL_00d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00dc:  br         IL_00f7

      IL_00e1:  ldstr      "can't recv Read in state "
      IL_00e6:  ldarg.0
      IL_00e7:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_00ec:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ret
    } // end of method Exp::RecvRead

    .method public instance void  SendAckRead(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                              int64 bytesRead,
                                              int32 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       141 (0x8d)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0076

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0050

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverAckRead0$PST0600061A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                       int64,
                                                                                                                       int32)
      IL_004b:  br         IL_005f

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0056:  ldarg.1
      IL_0057:  ldarg.2
      IL_0058:  ldarg.3
      IL_0059:  ldarg.0
      IL_005a:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallDeliverAckRead0$PST0600061B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int64,
                                                                                                                               int32,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005f:  ldarg.0
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0065:  ldarg.0
      IL_0066:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006b:  ldc.i4.7
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_008c

      IL_0076:  ldstr      "can't send AckRead in state "
      IL_007b:  ldarg.0
      IL_007c:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_0081:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0086:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ret
    } // end of method Exp::SendAckRead

    .method public instance void  RecvWrite([out] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& buf,
                                            [out] int64& bufOffset,
                                            [out] int64& fileOffset,
                                            [out] int64& maxLength) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       248 (0xf8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00e1

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Write when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_008d:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0092:  stind.i
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_009a:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/Write::bufOffset
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_00a7:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/Write::fileOffset
      IL_00ac:  stind.i8
      IL_00ad:  ldarg.s    maxLength
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_00b5:  ldfld      int64 Microsoft.Singularity.Directory.FileContract/Write::maxLength
      IL_00ba:  stind.i8
      IL_00bb:  ldarg.0
      IL_00bc:  ldc.i4.0
      IL_00bd:  volatile.
      IL_00bf:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c4:  ldarg.0
      IL_00c5:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_00ca:  initobj    Microsoft.Singularity.Directory.FileContract/Write
      IL_00d0:  ldarg.0
      IL_00d1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d6:  ldc.i4.5
      IL_00d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00dc:  br         IL_00f7

      IL_00e1:  ldstr      "can't recv Write in state "
      IL_00e6:  ldarg.0
      IL_00e7:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_00ec:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00f1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00f6:  throw

      IL_00f7:  ret
    } // end of method Exp::RecvWrite

    .method public instance void  SendAckWrite(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                               int64 bytesWritten,
                                               int32 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       141 (0x8d)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0076

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0050

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  ldarg.2
      IL_0045:  ldarg.3
      IL_0046:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverAckWrite0$PST0600061C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                        int64,
                                                                                                                        int32)
      IL_004b:  br         IL_005f

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0056:  ldarg.1
      IL_0057:  ldarg.2
      IL_0058:  ldarg.3
      IL_0059:  ldarg.0
      IL_005a:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallDeliverAckWrite0$PST0600061D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                int64,
                                                                                                                                int32,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005f:  ldarg.0
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0065:  ldarg.0
      IL_0066:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006b:  ldc.i4.7
      IL_006c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0071:  br         IL_008c

      IL_0076:  ldstr      "can't send AckWrite in state "
      IL_007b:  ldarg.0
      IL_007c:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_0081:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0086:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ret
    } // end of method Exp::SendAckWrite

    .method public instance void  RecvClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.8
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Close when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Close Microsoft.Singularity.Directory.FileContract/Exp::ClosePod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.FileContract/Close
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Close in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvClose

    .method public instance void  SendAckClose() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverAckClose0$PST0600061E()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallDeliverAckClose0$PST0600061F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.7
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckClose in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckClose

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::DeliverContractNotSupported0$PST06000620()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::MarshallDeliverContractNotSupported0$PST06000621(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.FileContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.FileContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.FileContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.FileContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.3
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.FileContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverRead0$PST0600063A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                 int64 bufOffset,
                                                                 int64 fileOffset,
                                                                 int64 maxLength) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       66 (0x42)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Directory.FileContract/Read::bufOffset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int64 Microsoft.Singularity.Directory.FileContract/Read::fileOffset
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_002a:  ldarg.s    maxLength
      IL_002c:  stfld      int64 Microsoft.Singularity.Directory.FileContract/Read::maxLength
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.4
      IL_0033:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0038:  ldarg.0
      IL_0039:  ldc.i4.4
      IL_003a:  volatile.
      IL_003c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0041:  ret
    } // end of method Exp::DeliverRead0

    .method privatescope instance void  MarshallDeliverRead0$PST0600063B(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                         int64 bufOffset,
                                                                         int64 fileOffset,
                                                                         int64 maxLength,
                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    maxLength
      IL_0006:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::DeliverRead0$PST0600063A(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                    int64,
                                                                                                                    int64,
                                                                                                                    int64)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Read Microsoft.Singularity.Directory.FileContract/Exp::ReadPod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.FileContract/Read::MarshallAll(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverRead0

    .method privatescope instance void  DeliverWrite0$PST0600063C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                  int64 bufOffset,
                                                                  int64 fileOffset,
                                                                  int64 maxLength) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       66 (0x42)
      .maxstack  4
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Directory.FileContract/Write::bufOffset
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int64 Microsoft.Singularity.Directory.FileContract/Write::fileOffset
      IL_0024:  ldarg.0
      IL_0025:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_002a:  ldarg.s    maxLength
      IL_002c:  stfld      int64 Microsoft.Singularity.Directory.FileContract/Write::maxLength
      IL_0031:  ldarg.0
      IL_0032:  ldc.i4.6
      IL_0033:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0038:  ldarg.0
      IL_0039:  ldc.i4.6
      IL_003a:  volatile.
      IL_003c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0041:  ret
    } // end of method Exp::DeliverWrite0

    .method privatescope instance void  MarshallDeliverWrite0$PST0600063D(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) buf,
                                                                          int64 bufOffset,
                                                                          int64 fileOffset,
                                                                          int64 maxLength,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       32 (0x20)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  ldarg.s    maxLength
      IL_0006:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::DeliverWrite0$PST0600063C(uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                     int64,
                                                                                                                     int64,
                                                                                                                     int64)
      IL_000b:  ldarg.0
      IL_000c:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Write Microsoft.Singularity.Directory.FileContract/Exp::WritePod0
      IL_0011:  ldarg.0
      IL_0012:  ldarg.s    endpoint
      IL_0014:  ldarg.0
      IL_0015:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.FileContract/Write::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_001f:  ret
    } // end of method Exp::MarshallDeliverWrite0

    .method privatescope instance void  DeliverClose0$PST0600063E() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverClose0

    .method privatescope instance void  MarshallDeliverClose0$PST0600063F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::DeliverClose0$PST0600063E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.FileContract/Close Microsoft.Singularity.Directory.FileContract/Exp::ClosePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.FileContract/Close::MarshallAll(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverClose0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/Success::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class sequential ansi sealed nested public specialname Read
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buf
    .field public int64 bufOffset
    .field public int64 fileOffset
    .field public int64 maxLength
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Read::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Read::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/Read
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/Read::MarshallContent(uint8*,
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                            uint8*,
                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Read::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/Read* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Read::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Read::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Read::buf
      IL_001a:  ret
    } // end of method Read::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Read::Release

  } // end of class Read

  .class sequential ansi sealed nested public specialname AckRead
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buf
    .field public int64 bytesRead
    .field public int32 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckRead::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRead::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckRead::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/AckRead
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/AckRead::MarshallContent(uint8*,
                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                               uint8*,
                                                                                                               int32&)
      IL_001d:  ret
    } // end of method AckRead::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/AckRead* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckRead::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckRead::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckRead::buf
      IL_001a:  ret
    } // end of method AckRead::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckRead::Release

  } // end of class AckRead

  .class sequential ansi sealed nested public specialname Write
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buf
    .field public int64 bufOffset
    .field public int64 fileOffset
    .field public int64 maxLength
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method Write::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Write::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/Write
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/Write::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Write::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/Write* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Write::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method Write::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/Write::buf
      IL_001a:  ret
    } // end of method Write::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Write::Release

  } // end of class Write

  .class sequential ansi sealed nested public specialname AckWrite
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) buf
    .field public int64 bytesWritten
    .field public int32 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method AckWrite::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckWrite::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/AckWrite
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/AckWrite::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method AckWrite::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/AckWrite* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckWrite::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] uint8& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0008:  ldtoken    [Corlib]System.Byte
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0033:  castclass  uint8&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method AckWrite::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      uint8* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Directory.FileContract/AckWrite::buf
      IL_001a:  ret
    } // end of method AckWrite::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckWrite::Release

  } // end of class AckWrite

  .class sequential ansi sealed nested public specialname Close
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Close::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Close::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/Close
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/Close::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*,
                                                                                                             int32&)
      IL_001d:  ret
    } // end of method Close::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/Close* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Close::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Close::Release

  } // end of class Close

  .class sequential ansi sealed nested public specialname AckClose
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.FileContract/AckClose* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckClose::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.FileContract/AckClose* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckClose::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.FileContract/AckClose
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/AckClose::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*,
                                                                                                                int32&)
      IL_001d:  ret
    } // end of method AckClose::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.FileContract/AckClose* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckClose::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckClose::Release

  } // end of class AckClose

  .class abstract auto ansi nested public specialname Start
         extends Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.FileContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Directory.FileContract/Read msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready$1 
            Recv(valuetype Microsoft.Singularity.Directory.FileContract/Write msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready$2 
            Recv(valuetype Microsoft.Singularity.Directory.FileContract/Close msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.FileContract/AckRead msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.FileContract/AckWrite msg) cil managed
    {
    } // end of method Ready$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class abstract auto ansi nested public specialname Ready$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.FileContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.FileContract/AckClose msg) cil managed
    {
    } // end of method Ready$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$2::.ctor

  } // end of class Ready$2

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.FileContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.FileContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::'.ctor$PST06000600'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method FileContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.FileContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.FileContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.FileContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Directory.FileContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.FileContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.FileContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Directory.FileContract/Imp::'.ctor$PST06000600'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method FileContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method FileContract::.ctor

  .method privatescope static int32  StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Directory.FileContract::StableState$PST06000034(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method FileContract::StableState

  .method privatescope static int32  CanonicalState$PST06000035(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method FileContract::CanonicalState

} // end of class Microsoft.Singularity.Directory.FileContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Directory.DirectoryServiceFeederContract
       extends Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000007)
    .field public static literal specialname int32 InitializationComplete = int32(0x00000003)
    .field public static literal specialname int32 GetNewDirectoryChannel = int32(0x00000004)
    .field public static literal specialname int32 AckNewChannel = int32(0x00000005)
    .field public static literal specialname int32 NakNewChannel = int32(0x00000006)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete InitializationCompletePod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel AckNewChannelPod0
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel NakNewChannelPod0
    .field family valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000699'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::CanonicalState$PST0600003A(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::CanonicalState$PST0600003A(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       122 (0x7a)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0034

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_003f

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_004a

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.3
      IL_0023:  beq        IL_0055

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.2
      IL_002a:  beq        IL_0060

      IL_002f:  br         IL_006b

      IL_0034:  ldstr      "Ready"
      IL_0039:  stloc.1
      IL_003a:  br         IL_0076

      IL_003f:  ldstr      "Ready$0"
      IL_0044:  stloc.1
      IL_0045:  br         IL_0076

      IL_004a:  ldstr      "Ready$1"
      IL_004f:  stloc.1
      IL_0050:  br         IL_0076

      IL_0055:  ldstr      "Start"
      IL_005a:  stloc.1
      IL_005b:  br         IL_0076

      IL_0060:  ldstr      "DoneState"
      IL_0065:  stloc.1
      IL_0066:  br         IL_0076

      IL_006b:  ldstr      "<protocol terminated>"
      IL_0070:  stloc.1
      IL_0071:  br         IL_0076

      IL_0076:  ldloc.1
      IL_0077:  stloc.2
      IL_0078:  ldloc.1
      IL_0079:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvInitializationComplete() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv InitializationComplete when next messag"
      + "e has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::InitializationCompletePod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv InitializationComplete in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvInitializationComplete

    .method public instance void  SendGetNewDirectoryChannel() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::DeliverGetNewDirectoryChannel0$PST060006CB()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::MarshallDeliverGetNewDirectoryChannel0$PST060006CC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send GetNewDirectoryChannel in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendGetNewDirectoryChannel

    .method public instance void  RecvAckNewChannel([out] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckNewChannel when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::AckNewChannelPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::AckNewChannelPod0
      IL_00a2:  initobj    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.4
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv AckNewChannel in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvAckNewChannel

    .method public instance void  RecvNakNewChannel([out] valuetype Microsoft.Singularity.Directory.ErrorCode& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bd

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv NakNewChannel when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::NakNewChannelPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel::'error'
      IL_0092:  stobj      Microsoft.Singularity.Directory.ErrorCode
      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::NakNewChannelPod0
      IL_00a6:  initobj    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.4
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv NakNewChannel in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvNakNewChannel

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverInitializationComplete0$PST060006AE() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverInitializationComplete0

    .method privatescope instance void  MarshallDeliverInitializationComplete0$PST060006AF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverInitializationComplete0$PST060006AE()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::InitializationCompletePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete::MarshallAll(uint8*,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverInitializationComplete0

    .method privatescope instance void  DeliverAckNewChannel0$PST060006B0(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::AckNewChannelPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverAckNewChannel0

    .method privatescope instance void  MarshallDeliverAckNewChannel0$PST060006B1(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverAckNewChannel0$PST060006B0(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::AckNewChannelPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::MarshallAll(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverAckNewChannel0

    .method privatescope instance void  DeliverNakNewChannel0$PST060006B2(valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::NakNewChannelPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel::'error'
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverNakNewChannel0

    .method privatescope instance void  MarshallDeliverNakNewChannel0$PST060006B3(valuetype Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverNakNewChannel0$PST060006B2(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::NakNewChannelPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel::MarshallAll(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverNakNewChannel0

    .method privatescope instance void  DeliverContractNotSupported0$PST060006B4() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060006B5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverContractNotSupported0$PST060006B4()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel GetNewDirectoryChannelPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::CanonicalState$PST0600003A(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::CanonicalState$PST0600003A(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       122 (0x7a)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0034

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_003f

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_004a

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.3
      IL_0023:  beq        IL_0055

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.2
      IL_002a:  beq        IL_0060

      IL_002f:  br         IL_006b

      IL_0034:  ldstr      "Ready"
      IL_0039:  stloc.1
      IL_003a:  br         IL_0076

      IL_003f:  ldstr      "Ready$0"
      IL_0044:  stloc.1
      IL_0045:  br         IL_0076

      IL_004a:  ldstr      "Ready$1"
      IL_004f:  stloc.1
      IL_0050:  br         IL_0076

      IL_0055:  ldstr      "Start"
      IL_005a:  stloc.1
      IL_005b:  br         IL_0076

      IL_0060:  ldstr      "DoneState"
      IL_0065:  stloc.1
      IL_0066:  br         IL_0076

      IL_006b:  ldstr      "<protocol terminated>"
      IL_0070:  stloc.1
      IL_0071:  br         IL_0076

      IL_0076:  ldloc.1
      IL_0077:  stloc.2
      IL_0078:  ldloc.1
      IL_0079:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendInitializationComplete() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverInitializationComplete0$PST060006AE()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::MarshallDeliverInitializationComplete0$PST060006AF(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send InitializationComplete in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendInitializationComplete

    .method public instance void  RecvGetNewDirectoryChannel() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetNewDirectoryChannel when next messag"
      + "e has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::GetNewDirectoryChannelPod0
      IL_0095:  initobj    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv GetNewDirectoryChannel in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvGetNewDirectoryChannel

    .method public instance void  SendAckNewChannel(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) imp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.1
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.1
      IL_000d:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint imp in state "
      IL_0022:  ldarg.1
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.1
      IL_0029:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_002e:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.5
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ac

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0088

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.1
      IL_0072:  call       void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_007d:  ldarg.1
      IL_007e:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverAckNewChannel0$PST060006B0(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0083:  br         IL_0095

      IL_0088:  ldloc.3
      IL_0089:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_008e:  ldarg.1
      IL_008f:  ldarg.0
      IL_0090:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::MarshallDeliverAckNewChannel0$PST060006B1(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0095:  ldarg.0
      IL_0096:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't send AckNewChannel in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::SendAckNewChannel

    .method public instance void  SendNakNewChannel(valuetype Microsoft.Singularity.Directory.ErrorCode 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverNakNewChannel0$PST060006B2(valuetype Microsoft.Singularity.Directory.ErrorCode)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::MarshallDeliverNakNewChannel0$PST060006B3(valuetype Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.4
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send NakNewChannel in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendNakNewChannel

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::DeliverContractNotSupported0$PST060006B4()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::MarshallDeliverContractNotSupported0$PST060006B5(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::MarshallContent(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.6
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.3
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetNewDirectoryChannel0$PST060006CB() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetNewDirectoryChannel0

    .method privatescope instance void  MarshallDeliverGetNewDirectoryChannel0$PST060006CC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::DeliverGetNewDirectoryChannel0$PST060006CB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::GetNewDirectoryChannelPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel::MarshallAll(uint8*,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetNewDirectoryChannel0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname InitializationComplete
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InitializationComplete::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method InitializationComplete::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete::MarshallContent(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                uint8*,
                                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method InitializationComplete::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method InitializationComplete::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method InitializationComplete::Release

  } // end of class InitializationComplete

  .class sequential ansi sealed nested public specialname GetNewDirectoryChannel
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetNewDirectoryChannel::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetNewDirectoryChannel::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel::MarshallContent(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                uint8*,
                                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method GetNewDirectoryChannel::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetNewDirectoryChannel::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetNewDirectoryChannel::Release

  } // end of class GetNewDirectoryChannel

  .class sequential ansi sealed nested public specialname AckNewChannel
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) imp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0007:  call       void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method AckNewChannel::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNewChannel::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckNewChannel::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::MarshallContent(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       uint8*,
                                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method AckNewChannel::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckNewChannel::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_001a:  ldtoken    valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_003a:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0047:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_004c:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::MarshallContent(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       uint8*)
      IL_0051:  ret
    } // end of method AckNewChannel::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_0013:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel::imp
      IL_0025:  ret
    } // end of method AckNewChannel::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNewChannel::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNewChannel::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNewChannel::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckNewChannel::Release

  } // end of class AckNewChannel

  .class sequential ansi sealed nested public specialname NakNewChannel
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Directory.ErrorCode 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakNewChannel::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakNewChannel::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel::MarshallContent(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       uint8*,
                                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method NakNewChannel::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakNewChannel::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakNewChannel::Release

  } // end of class NakNewChannel

  .class abstract auto ansi nested public specialname Start
         extends Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Ready 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/InitializationComplete msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/GetNewDirectoryChannel msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/AckNewChannel msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Ready$1 
            Send(valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/NakNewChannel msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Ready 
            Epsilon() cil managed
    {
    } // end of method Ready$1::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::'.ctor$PST06000699'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DirectoryServiceFeederContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceFeederContract/Imp::'.ctor$PST06000699'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method DirectoryServiceFeederContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method DirectoryServiceFeederContract::.ctor

  .method privatescope static int32  StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       77 (0x4d)
    .maxstack  7
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.4
    IL_000b:  beq        IL_001c

    IL_0010:  ldloc.1
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_002f

    IL_0017:  br         IL_0042

    IL_001c:  ldarg.0
    IL_001d:  ldc.i4.6
    IL_001e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0023:  ldarg.0
    IL_0024:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0029:  stloc.2
    IL_002a:  br         IL_0049

    IL_002f:  ldarg.0
    IL_0030:  ldc.i4.1
    IL_0031:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0036:  ldarg.0
    IL_0037:  call       int32 Microsoft.Singularity.Directory.DirectoryServiceFeederContract::StableState$PST06000039(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_003c:  stloc.2
    IL_003d:  br         IL_0049

    IL_0042:  ldloc.0
    IL_0043:  stloc.2
    IL_0044:  br         IL_0049

    IL_0049:  ldloc.2
    IL_004a:  stloc.3
    IL_004b:  ldloc.2
    IL_004c:  ret
  } // end of method DirectoryServiceFeederContract::StableState

  .method privatescope static int32  CanonicalState$PST0600003A(int32 state) cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.4
    IL_0004:  beq        IL_0015

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_001c

    IL_0010:  br         IL_0023

    IL_0015:  ldc.i4.6
    IL_0016:  stloc.1
    IL_0017:  br         IL_002a

    IL_001c:  ldc.i4.1
    IL_001d:  stloc.1
    IL_001e:  br         IL_002a

    IL_0023:  ldarg.0
    IL_0024:  stloc.1
    IL_0025:  br         IL_002a

    IL_002a:  ldloc.1
    IL_002b:  stloc.2
    IL_002c:  ldloc.1
    IL_002d:  ret
  } // end of method DirectoryServiceFeederContract::CanonicalState

} // end of class Microsoft.Singularity.Directory.DirectoryServiceFeederContract

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   3C 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // <Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F 72 79   // larity.Directory
                                                                                                                                   2E 44 69 72 65 63 74 6F 72 79 53 65 72 76 69 63   // .DirectoryServic
                                                                                                                                   65 43 6F 6E 74 72 61 63 74 2B 49 6D 70 3E 4D 69   // eContract+Imp>Mi
                                                                                                                                   63 72 6F 73 6F 66 74 2E 53 69 6E 67 75 6C 61 72   // crosoft.Singular
                                                                                                                                   69 74 79 2E 44 69 72 65 63 74 6F 72 79 2E 44 69   // ity.Directory.Di
                                                                                                                                   72 65 63 74 6F 72 79 53 65 72 76 69 63 65 43 6F   // rectoryServiceCo
                                                                                                                                   6E 74 72 61 63 74 2B 53 74 61 72 74 00 00 )       // ntract+Start..
  .field private valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_001e:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) elem,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_002b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) toDelete,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_001b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   3C 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // <Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F 72 79   // larity.Directory
                                                                                                                                   2E 44 69 72 65 63 74 6F 72 79 53 65 72 76 69 63   // .DirectoryServic
                                                                                                                                   65 43 6F 6E 74 72 61 63 74 2B 45 78 70 3E 4D 69   // eContract+Exp>Mi
                                                                                                                                   63 72 6F 73 6F 66 74 2E 53 69 6E 67 75 6C 61 72   // crosoft.Singular
                                                                                                                                   69 74 79 2E 44 69 72 65 63 74 6F 72 79 2E 44 69   // ity.Directory.Di
                                                                                                                                   72 65 63 74 6F 72 79 53 65 72 76 69 63 65 43 6F   // rectoryServiceCo
                                                                                                                                   6E 74 72 61 63 74 2B 53 74 61 72 74 00 00 )       // ntract+Start..
  .field private valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_001e:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) elem,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_002b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) toDelete,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_001b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Start>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   3C 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // <Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F 72 79   // larity.Directory
                                                                                                                                   2E 44 69 72 65 63 74 6F 72 79 53 65 72 76 69 63   // .DirectoryServic
                                                                                                                                   65 43 6F 6E 74 72 61 63 74 2B 49 6D 70 3E 4D 69   // eContract+Imp>Mi
                                                                                                                                   63 72 6F 73 6F 66 74 2E 53 69 6E 67 75 6C 61 72   // crosoft.Singular
                                                                                                                                   69 74 79 2E 44 69 72 65 63 74 6F 72 79 2E 44 69   // ity.Directory.Di
                                                                                                                                   72 65 63 74 6F 72 79 53 65 72 76 69 63 65 43 6F   // rectoryServiceCo
                                                                                                                                   6E 74 72 61 63 74 2B 52 65 61 64 79 00 00 )       // ntract+Ready..
  .field private valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_001e:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) elem,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_002b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) toDelete,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Imp&
      IL_001b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Imp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Imp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   3C 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // <Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F 72 79   // larity.Directory
                                                                                                                                   2E 44 69 72 65 63 74 6F 72 79 53 65 72 76 69 63   // .DirectoryServic
                                                                                                                                   65 43 6F 6E 74 72 61 63 74 2B 45 78 70 3E 4D 69   // eContract+Exp>Mi
                                                                                                                                   63 72 6F 73 6F 66 74 2E 53 69 6E 67 75 6C 61 72   // crosoft.Singular
                                                                                                                                   69 74 79 2E 44 69 72 65 63 74 6F 72 79 2E 44 69   // ity.Directory.Di
                                                                                                                                   72 65 63 74 6F 72 79 53 65 72 76 69 63 65 43 6F   // rectoryServiceCo
                                                                                                                                   6E 74 72 61 63 74 2B 52 65 61 64 79 00 00 )       // ntract+Ready..
  .field private valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_001e:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) elem,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_002b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
    IL_0018:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) toDelete,
             [1] valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.DirectoryServiceContract/Ready) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Directory.DirectoryServiceContract/Exp&
      IL_001b:  call       instance void Microsoft.Singularity.Directory.DirectoryServiceContract/Exp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.DirectoryServiceContract+Exp,Microsoft.Singularity.Directory.DirectoryServiceContract+Ready>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   3B 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // ;Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F 72 79   // larity.Directory
                                                                                                                                   2E 53 65 72 76 69 63 65 50 72 6F 76 69 64 65 72   // .ServiceProvider
                                                                                                                                   43 6F 6E 74 72 61 63 74 2B 49 6D 70 3D 4D 69 63   // Contract+Imp=Mic
                                                                                                                                   72 6F 73 6F 66 74 2E 53 69 6E 67 75 6C 61 72 69   // rosoft.Singulari
                                                                                                                                   74 79 2E 44 69 72 65 63 74 6F 72 79 2E 53 65 72   // ty.Directory.Ser
                                                                                                                                   76 69 63 65 50 72 6F 76 69 64 65 72 43 6F 6E 74   // viceProviderCont
                                                                                                                                   72 61 63 74 2B 53 74 61 72 74 00 00 )             // ract+Start..
  .field private valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
    IL_001e:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) elem,
             [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
    IL_002b:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
    IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) toDelete,
             [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Imp&
      IL_001b:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Imp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Imp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   3B 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // ;Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 44 69 72 65 63 74 6F 72 79   // larity.Directory
                                                                                                                                   2E 53 65 72 76 69 63 65 50 72 6F 76 69 64 65 72   // .ServiceProvider
                                                                                                                                   43 6F 6E 74 72 61 63 74 2B 45 78 70 3D 4D 69 63   // Contract+Exp=Mic
                                                                                                                                   72 6F 73 6F 66 74 2E 53 69 6E 67 75 6C 61 72 69   // rosoft.Singulari
                                                                                                                                   74 79 2E 44 69 72 65 63 74 6F 72 79 2E 53 65 72   // ty.Directory.Ser
                                                                                                                                   76 69 63 65 50 72 6F 76 69 64 65 72 43 6F 6E 74   // viceProviderCont
                                                                                                                                   72 61 63 74 2B 53 74 61 72 74 00 00 )             // ract+Start..
  .field private valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
    IL_001e:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) elem,
             [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
    IL_002b:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
    IL_0018:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) toDelete,
             [1] valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Directory.ServiceProviderContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Directory.ServiceProviderContract/Exp&
      IL_001b:  call       instance void Microsoft.Singularity.Directory.ServiceProviderContract/Exp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Directory.ServiceProviderContract+Exp,Microsoft.Singularity.Directory.ServiceProviderContract+Start>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   35 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // 5Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 45 78 74 65 6E 64 69 6E 67   // larity.Extending
                                                                                                                                   2E 45 78 74 65 6E 73 69 6F 6E 43 6F 6E 74 72 61   // .ExtensionContra
                                                                                                                                   63 74 2B 49 6D 70 37 4D 69 63 72 6F 73 6F 66 74   // ct+Imp7Microsoft
                                                                                                                                   2E 53 69 6E 67 75 6C 61 72 69 74 79 2E 45 78 74   // .Singularity.Ext
                                                                                                                                   65 6E 64 69 6E 67 2E 45 78 74 65 6E 73 69 6F 6E   // ending.Extension
                                                                                                                                   43 6F 6E 74 72 61 63 74 2B 53 74 61 72 74 00 00 ) // Contract+Start..
  .field private valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
    IL_001e:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) elem,
             [1] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
    IL_002b:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
    IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) toDelete,
             [1] valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Imp&
      IL_001b:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Imp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Imp,Microsoft.Singularity.Extending.ExtensionContract+Start>'

.class public auto ansi sealed beforefieldinit Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'
       extends [Corlib]System.Object
{
  .custom instance void [System.Compiler.Runtime]System.Compiler.TemplateInstanceAttribute::.ctor(class [Corlib]System.Type,
                                                                                                  class [Corlib]System.Type[]) = ( 01 00 80 88 4D 69 63 72 6F 73 6F 66 74 2E 53 69   // ....Microsoft.Si
                                                                                                                                   6E 67 75 6C 61 72 69 74 79 2E 43 68 61 6E 6E 65   // ngularity.Channe
                                                                                                                                   6C 73 2E 54 52 65 66 5F 32 2C 20 4D 69 63 72 6F   // ls.TRef_2, Micro
                                                                                                                                   73 6F 66 74 2E 53 69 6E 67 53 68 61 72 70 2E 52   // soft.SingSharp.R
                                                                                                                                   75 6E 74 69 6D 65 2C 20 56 65 72 73 69 6F 6E 3D   // untime, Version=
                                                                                                                                   31 2E 30 2E 33 35 35 35 2E 30 2C 20 43 75 6C 74   // 1.0.3555.0, Cult
                                                                                                                                   75 72 65 3D 6E 65 75 74 72 61 6C 2C 20 50 75 62   // ure=neutral, Pub
                                                                                                                                   6C 69 63 4B 65 79 54 6F 6B 65 6E 3D 37 33 36 34   // licKeyToken=7364
                                                                                                                                   34 30 63 39 62 34 31 34 65 61 31 36 02 00 00 00   // 40c9b414ea16....
                                                                                                                                   35 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E 67 75   // 5Microsoft.Singu
                                                                                                                                   6C 61 72 69 74 79 2E 45 78 74 65 6E 64 69 6E 67   // larity.Extending
                                                                                                                                   2E 45 78 74 65 6E 73 69 6F 6E 43 6F 6E 74 72 61   // .ExtensionContra
                                                                                                                                   63 74 2B 45 78 70 37 4D 69 63 72 6F 73 6F 66 74   // ct+Exp7Microsoft
                                                                                                                                   2E 53 69 6E 67 75 6C 61 72 69 74 79 2E 45 78 74   // .Singularity.Ext
                                                                                                                                   65 6E 64 69 6E 67 2E 45 78 74 65 6E 73 69 6F 6E   // ending.Extension
                                                                                                                                   43 6F 6E 74 72 61 63 74 2B 53 74 61 72 74 00 00 ) // Contract+Start..
  .field private valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) obj
  .field private class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) mutex
  .method public hidebysig specialname rtspecialname 
          instance void  .ctor(valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) i_obj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       54 (0x36)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ldarg.1
    IL_0007:  ldnull
    IL_0008:  bne.un     IL_0018

    IL_000d:  ldstr      "TRef must be initialized with a non-null value!"
    IL_0012:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0017:  throw

    IL_0018:  ldarg.1
    IL_0019:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
    IL_001e:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::Release()
    IL_0023:  ldarg.0
    IL_0024:  ldarg.1
    IL_0025:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_002a:  ldarg.0
    IL_002b:  newobj     instance void [Corlib]System.Threading.Mutex::.ctor()
    IL_0030:  stfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::mutex
    IL_0035:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::.ctor

  .method public hidebysig instance valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          Acquire() cil managed
  {
    // Code size       66 (0x42)
    .maxstack  5
    .locals init ([0] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) elem,
             [1] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::mutex
    IL_0006:  callvirt   instance bool [Corlib]System.Threading.Mutex::WaitOne()
    IL_000b:  pop
    IL_000c:  ldarg.0
    IL_000d:  ldfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_0012:  stloc.0
    IL_0013:  ldloc.0
    IL_0014:  ldnull
    IL_0015:  bne.un     IL_0025

    IL_001a:  ldstr      "thread already holds TRef!"
    IL_001f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
    IL_0024:  throw

    IL_0025:  ldloc.0
    IL_0026:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
    IL_002b:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::Acquire()
    IL_0030:  ldarg.0
    IL_0031:  ldnull
    IL_0032:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_0037:  ldloc.0
    IL_0038:  stloc.1
    IL_0039:  br         IL_003e

    IL_003e:  ldloc.1
    IL_003f:  stloc.2
    IL_0040:  ldloc.1
    IL_0041:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::Acquire

  .method public hidebysig instance void 
          Release(valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) newObj) cil managed
  {
    .param [1]
    .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
    // Code size       48 (0x30)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  ldnull
    IL_0002:  bne.un     IL_0012

    IL_0007:  ldstr      "TRef must be released with a non-null value!"
    IL_000c:  newobj     instance void [Corlib]System.ArgumentNullException::.ctor(string)
    IL_0011:  throw

    IL_0012:  ldarg.1
    IL_0013:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
    IL_0018:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::Release()
    IL_001d:  ldarg.0
    IL_001e:  ldarg.1
    IL_001f:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
    IL_0024:  ldarg.0
    IL_0025:  ldfld      class [Corlib]System.Threading.Mutex modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::mutex
    IL_002a:  call       instance void [Corlib]System.Threading.Mutex::ReleaseMutex()
    IL_002f:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::Release

  .method family hidebysig virtual instance void 
          Finalize() cil managed
  {
    // Code size       59 (0x3b)
    .maxstack  4
    .locals init ([0] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) toDelete,
             [1] valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) local1)
    .try
    {
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  ldnull
      IL_0009:  beq        IL_002e

      IL_000e:  ldarg.0
      IL_000f:  ldnull
      IL_0010:  stfld      valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt(Microsoft.Singularity.Extending.ExtensionContract/Start) Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::obj
      IL_0015:  ldloc.0
      IL_0016:  castclass  valuetype Microsoft.Singularity.Extending.ExtensionContract/Exp&
      IL_001b:  call       instance void Microsoft.Singularity.Extending.ExtensionContract/Exp::Dispose()
      IL_0020:  ldloc.0
      IL_0021:  stloc.1
      IL_0022:  ldloc.1
      IL_0023:  brfalse    IL_002e

      IL_0028:  ldloc.1
      IL_0029:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002e:  leave      IL_003a

    }  // end .try
    finally
    {
      IL_0033:  ldarg.0
      IL_0034:  call       instance void [Corlib]System.Object::Finalize()
      IL_0039:  endfinally
    }  // end handler
    IL_003a:  ret
  } // end of method 'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'::Finalize

} // end of class Microsoft.Singularity.Channels.'TRef_2<Microsoft.Singularity.Extending.ExtensionContract+Exp,Microsoft.Singularity.Extending.ExtensionContract+Start>'


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
