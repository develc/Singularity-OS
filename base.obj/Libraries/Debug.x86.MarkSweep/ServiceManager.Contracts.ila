
//  Microsoft (R) .NET Framework IL Disassembler.  Version 2.0.50727.42
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v1.1.9999
.assembly extern Corlib
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly extern Microsoft.SingSharp.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:3555:0
}
.assembly extern System.Compiler.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:5031:5
}
.assembly extern Directory.Contracts
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly ServiceManager.Contracts
{

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [Corlib]System.Diagnostics.DebuggableAttribute::.ctor(bool,
  //                                                                              bool) = ( 01 00 01 01 00 00 ) 

  .hash algorithm 0x00008004
  .ver 0:0:0:0
}
.module ServiceManager.Contracts.dll
// MVID: {E6808B42-3D1B-429A-AD76-8B23A7140698}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00010001    //  ILONLY TRACKDEBUGDATA
// Image base: 0x00DE0000


// =============== CLASS MEMBERS DECLARATION ===================

.class public sequential ansi beforefieldinit Microsoft.Singularity.ServiceManager.ExSchedulerTime
       extends [Corlib]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public int64 Ticks
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.ServiceManager.ExSchedulerTime* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ExSchedulerTime::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.ServiceManager.ExSchedulerTime* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ExSchedulerTime::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.ServiceManager.ExSchedulerTime::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
    IL_0009:  ret
  } // end of method ExSchedulerTime::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.ServiceManager.ExSchedulerTime* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ExSchedulerTime
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ExSchedulerTime
    IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ExSchedulerTime::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method ExSchedulerTime::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ExSchedulerTime::Release

} // end of class Microsoft.Singularity.ServiceManager.ExSchedulerTime

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceActivationMode
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceActivationMode AlwaysActive = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceActivationMode Manual = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceActivationMode Demand = int32(0x00000001)
} // end of class Microsoft.Singularity.ServiceManager.ServiceActivationMode

.class public sequential ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceConfig
       extends [Corlib]System.ValueType
       implements [Corlib]Microsoft.SingSharp.ITracked,
                  [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) ServiceName
  .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) DisplayName
  .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) ExecutableName
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceActivationMode ActivationMode
  .field public bool IsAdministrativelyDisabled
  .field public int32 MinProcesses
  .field public int32 MaxProcesses
  .field public int32 MaxClientsPerProcess
  .field public int32 MaxProcessAgeInSeconds
  .field public static literal int32 UnlimitedProcesses = int32(0xFFFFFFFF)
  .field public static literal int32 UnlimitedClientsPerProcess = int32(0xFFFFFFFF)
  .field public static literal int32 UnlimitedProcessAge = int32(0xFFFFFFFF)
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       43 (0x2b)
    .maxstack  5
    .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_0,
             [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_1,
             [2] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_0006:  stloc.0
    IL_0007:  ldarg.1
    IL_0008:  ldloc.0
    IL_0009:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000e:  ldarg.0
    IL_000f:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_0014:  stloc.1
    IL_0015:  ldarg.1
    IL_0016:  ldloc.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_001c:  ldarg.0
    IL_001d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_0022:  stloc.2
    IL_0023:  ldarg.1
    IL_0024:  ldloc.2
    IL_0025:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002a:  ret
  } // end of method ServiceConfig::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.ServiceManager.ServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_0019

    IL_0006:  ldarg.1
    IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceConfig&
    IL_000c:  ldarg.0
    IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0019:  ret
  } // end of method ServiceConfig::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.ServiceManager.ServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_002c

    IL_0006:  ldarg.1
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_0025

    IL_0012:  ldarg.1
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceConfig
    IL_0019:  ldarg.0
    IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.1
    IL_0021:  add
    IL_0022:  stloc.1
    IL_0023:  br.s       IL_000b

    IL_0025:  ldarg.0
    IL_0026:  ldarg.1
    IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002c:  ret
  } // end of method ServiceConfig::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_0009:  ret
  } // end of method ServiceConfig::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.ServiceManager.ServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceConfig
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceConfig
    IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method ServiceConfig::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       221 (0xdd)
    .maxstack  10
    .locals init ([0] char& V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] char& V_3,
             [4] int32 V_4,
             [5] int32 V_5,
             [6] char& V_6,
             [7] int32 V_7,
             [8] int32 V_8)
    IL_0000:  ldarg.2
    IL_0001:  ldarg.1
    IL_0002:  ldarg.0
    IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_0008:  ldtoken    [Corlib]System.Char
    IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_0012:  ldarg.3
    IL_0013:  ldarg.0
    IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_0019:  conv.i
    IL_001a:  ldarg.3
    IL_001b:  conv.i
    IL_001c:  sub
    IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_0022:  ldarg.0
    IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_0028:  castclass  char&
    IL_002d:  stloc.0
    IL_002e:  ldarg.0
    IL_002f:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_0034:  ldlen
    IL_0035:  stloc.1
    IL_0036:  ldc.i4.0
    IL_0037:  stloc.2
    IL_0038:  ldloc.2
    IL_0039:  ldloc.1
    IL_003a:  bge        IL_0045

    IL_003f:  ldloc.2
    IL_0040:  ldc.i4.1
    IL_0041:  add
    IL_0042:  stloc.2
    IL_0043:  br.s       IL_0038

    IL_0045:  ldarg.2
    IL_0046:  ldarg.1
    IL_0047:  ldarg.0
    IL_0048:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_004d:  ldtoken    [Corlib]System.Char
    IL_0052:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_0057:  ldarg.3
    IL_0058:  ldarg.0
    IL_0059:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_005e:  conv.i
    IL_005f:  ldarg.3
    IL_0060:  conv.i
    IL_0061:  sub
    IL_0062:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_0067:  ldarg.0
    IL_0068:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_006d:  castclass  char&
    IL_0072:  stloc.3
    IL_0073:  ldarg.0
    IL_0074:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_0079:  ldlen
    IL_007a:  stloc.s    V_4
    IL_007c:  ldc.i4.0
    IL_007d:  stloc.s    V_5
    IL_007f:  ldloc.s    V_5
    IL_0081:  ldloc.s    V_4
    IL_0083:  bge        IL_0090

    IL_0088:  ldloc.s    V_5
    IL_008a:  ldc.i4.1
    IL_008b:  add
    IL_008c:  stloc.s    V_5
    IL_008e:  br.s       IL_007f

    IL_0090:  ldarg.2
    IL_0091:  ldarg.1
    IL_0092:  ldarg.0
    IL_0093:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_0098:  ldtoken    [Corlib]System.Char
    IL_009d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_00a2:  ldarg.3
    IL_00a3:  ldarg.0
    IL_00a4:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_00a9:  conv.i
    IL_00aa:  ldarg.3
    IL_00ab:  conv.i
    IL_00ac:  sub
    IL_00ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                             uint8*,
                                                                                                                             int32)
    IL_00b2:  ldarg.0
    IL_00b3:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_00b8:  castclass  char&
    IL_00bd:  stloc.s    V_6
    IL_00bf:  ldarg.0
    IL_00c0:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_00c5:  ldlen
    IL_00c6:  stloc.s    V_7
    IL_00c8:  ldc.i4.0
    IL_00c9:  stloc.s    V_8
    IL_00cb:  ldloc.s    V_8
    IL_00cd:  ldloc.s    V_7
    IL_00cf:  bge        IL_00dc

    IL_00d4:  ldloc.s    V_8
    IL_00d6:  ldc.i4.1
    IL_00d7:  add
    IL_00d8:  stloc.s    V_8
    IL_00da:  br.s       IL_00cb

    IL_00dc:  ret
  } // end of method ServiceConfig::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       79 (0x4f)
    .maxstack  2
    .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_0,
             [1] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_1,
             [2] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_2)
    IL_0000:  ldarg.0
    IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  brfalse    IL_001a

    IL_000d:  ldloc.0
    IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0013:  ldarg.0
    IL_0014:  ldnull
    IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ServiceName
    IL_001a:  ldarg.0
    IL_001b:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_0020:  stloc.1
    IL_0021:  ldloc.1
    IL_0022:  brfalse    IL_0034

    IL_0027:  ldloc.1
    IL_0028:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002d:  ldarg.0
    IL_002e:  ldnull
    IL_002f:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::DisplayName
    IL_0034:  ldarg.0
    IL_0035:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_003a:  stloc.2
    IL_003b:  ldloc.2
    IL_003c:  brfalse    IL_004e

    IL_0041:  ldloc.2
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0047:  ldarg.0
    IL_0048:  ldnull
    IL_0049:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) Microsoft.Singularity.ServiceManager.ServiceConfig::ExecutableName
    IL_004e:  ret
  } // end of method ServiceConfig::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceConfig::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceConfig::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceConfig::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceConfig::Release

} // end of class Microsoft.Singularity.ServiceManager.ServiceConfig

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceProcessState
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState Running = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState Stopping = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState Defective = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState Starting = int32(0x00000001)
} // end of class Microsoft.Singularity.ServiceManager.ServiceProcessState

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceState
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceState Starting = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceState Running = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceState Stopping = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceState Stopped = int32(0x00000001)
} // end of class Microsoft.Singularity.ServiceManager.ServiceState

.class public sequential ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceStatus
       extends [Corlib]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceState State
  .field public int32 TotalActiveClients
  .field public int32 TotalActiveProcesses
  .field public int32 ConnectQueueLength
  .field public int64 ProcessId
  .field public bool LastStartFailed
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceError LastStartError
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.ServiceManager.ServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ServiceStatus::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.ServiceManager.ServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ServiceStatus::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_0009:  ret
  } // end of method ServiceStatus::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.ServiceManager.ServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceStatus
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceStatus
    IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method ServiceStatus::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceStatus::Release

} // end of class Microsoft.Singularity.ServiceManager.ServiceStatus

.class public sequential ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceProcessStatus
       extends [Corlib]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public int64 ProcessId
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState State
  .field public int32 TotalConnects
  .field public valuetype Microsoft.Singularity.ServiceManager.ExSchedulerTime TimeCreated
  .field public int32 ActiveClientCount
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceHealth Health
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Load
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceProcessStatus::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.ServiceManager.ServiceProcessStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ServiceProcessStatus::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.ServiceManager.ServiceProcessStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ServiceProcessStatus::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessStatus::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*)
    IL_0009:  ret
  } // end of method ServiceProcessStatus::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.ServiceManager.ServiceProcessStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessStatus
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessStatus
    IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessStatus::MarshallContent(uint8*,
                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                  uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method ServiceProcessStatus::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       15 (0xf)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ExSchedulerTime Microsoft.Singularity.ServiceManager.ServiceProcessStatus::TimeCreated
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  call       instance void Microsoft.Singularity.ServiceManager.ExSchedulerTime::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
    IL_000e:  ret
  } // end of method ServiceProcessStatus::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceProcessStatus::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceProcessStatus::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceProcessStatus::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceProcessStatus::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceProcessStatus::Release

} // end of class Microsoft.Singularity.ServiceManager.ServiceProcessStatus

.class public sequential ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceInfo
       extends [Corlib]System.ValueType
       implements [Corlib]Microsoft.SingSharp.ITracked,
                  [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Config
  .field public valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Status
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       13 (0xd)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceInfo::Config
    IL_0006:  ldarg.1
    IL_0007:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_000c:  ret
  } // end of method ServiceInfo::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       26 (0x1a)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_0019

    IL_0006:  ldarg.1
    IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceInfo&
    IL_000c:  ldarg.0
    IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_0012:  ldarg.0
    IL_0013:  ldarg.1
    IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_0019:  ret
  } // end of method ServiceInfo::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       45 (0x2d)
    .maxstack  5
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_002c

    IL_0006:  ldarg.1
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_0025

    IL_0012:  ldarg.1
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceInfo
    IL_0019:  ldarg.0
    IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.1
    IL_0021:  add
    IL_0022:  stloc.1
    IL_0023:  br.s       IL_000b

    IL_0025:  ldarg.0
    IL_0026:  ldarg.1
    IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_002c:  ret
  } // end of method ServiceInfo::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*)
    IL_0009:  ret
  } // end of method ServiceInfo::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceInfo
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceInfo
    IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::MarshallContent(uint8*,
                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                         uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method ServiceInfo::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       29 (0x1d)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceInfo::Config
    IL_0006:  ldarg.1
    IL_0007:  ldarg.2
    IL_0008:  ldarg.3
    IL_0009:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_000e:  ldarg.0
    IL_000f:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceInfo::Status
    IL_0014:  ldarg.1
    IL_0015:  ldarg.2
    IL_0016:  ldarg.3
    IL_0017:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::MarshallContent(uint8*,
                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                           uint8*)
    IL_001c:  ret
  } // end of method ServiceInfo::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       12 (0xc)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceInfo::Config
    IL_0006:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::Dispose()
    IL_000b:  ret
  } // end of method ServiceInfo::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceInfo::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceInfo::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceInfo::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ServiceInfo::Release

} // end of class Microsoft.Singularity.ServiceManager.ServiceInfo

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceManagerEventMask
       extends [Corlib]System.Enum
{
  .custom instance void [Corlib]System.FlagsAttribute::.ctor() = ( 01 00 00 00 ) 
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask AnyServiceStatus = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask AnyServiceConfig = int32(0x00000001)
} // end of class Microsoft.Singularity.ServiceManager.ServiceManagerEventMask

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceManagerContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000025)
    .field public static literal specialname int32 Success = int32(0x00000003)
    .field public static literal specialname int32 EndEnumeration = int32(0x00000004)
    .field public static literal specialname int32 EnumerationTerminated = int32(0x00000005)
    .field public static literal specialname int32 NextServiceInfo = int32(0x00000006)
    .field public static literal specialname int32 WatchServiceManager = int32(0x00000007)
    .field public static literal specialname int32 EnumerateServices = int32(0x00000008)
    .field public static literal specialname int32 CreateService = int32(0x00000009)
    .field public static literal specialname int32 SelectService = int32(0x0000000A)
    .field public static literal specialname int32 StopWatchingServiceManager = int32(0x0000000B)
    .field public static literal specialname int32 WaitNextServiceManagerChange = int32(0x0000000C)
    .field public static literal specialname int32 ServiceManagerChanged = int32(0x0000000D)
    .field public static literal specialname int32 StartServiceNoWait = int32(0x0000000E)
    .field public static literal specialname int32 StartServiceWait = int32(0x0000000F)
    .field public static literal specialname int32 StopServiceWait = int32(0x00000010)
    .field public static literal specialname int32 StopServiceNoWait = int32(0x00000011)
    .field public static literal specialname int32 DeleteService = int32(0x00000012)
    .field public static literal specialname int32 UnselectService = int32(0x00000013)
    .field public static literal specialname int32 QueryServiceConfig = int32(0x00000014)
    .field public static literal specialname int32 QueryServiceStatus = int32(0x00000015)
    .field public static literal specialname int32 WatchServiceStatus = int32(0x00000016)
    .field public static literal specialname int32 EnableService = int32(0x00000017)
    .field public static literal specialname int32 TerminateServiceAllProcesses = int32(0x00000018)
    .field public static literal specialname int32 TerminateServiceProcess = int32(0x00000019)
    .field public static literal specialname int32 CurrentServiceConfig = int32(0x0000001A)
    .field public static literal specialname int32 CurrentServiceStatus = int32(0x0000001B)
    .field public static literal specialname int32 ServiceStarting = int32(0x0000001C)
    .field public static literal specialname int32 ServiceStarted = int32(0x0000001D)
    .field public static literal specialname int32 ServiceStopping = int32(0x0000001E)
    .field public static literal specialname int32 ServiceStopped = int32(0x0000001F)
    .field public static literal specialname int32 WaitServiceChange = int32(0x00000020)
    .field public static literal specialname int32 StopWatchingService = int32(0x00000021)
    .field public static literal specialname int32 ServiceStatusChanged = int32(0x00000022)
    .field public static literal specialname int32 Ok = int32(0x00000023)
    .field public static literal specialname int32 RequestFailed = int32(0x00000024)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success SuccessPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated EnumerationTerminatedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo NextServiceInfoPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged ServiceManagerChangedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig CurrentServiceConfigPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus CurrentServiceStatusPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting ServiceStartingPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted ServiceStartedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping ServiceStoppingPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped ServiceStoppedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged ServiceStatusChangedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok OkPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed RequestFailedPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600004D'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::CanonicalState$PST0600003C(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::CanonicalState$PST0600003C(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       614 (0x266)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  beq        IL_0102

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   31
      IL_0017:  beq        IL_010d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   30
      IL_001f:  beq        IL_0118

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   29
      IL_0027:  beq        IL_0123

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   28
      IL_002f:  beq        IL_012e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   27
      IL_0037:  beq        IL_0139

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   26
      IL_003f:  beq        IL_0144

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   25
      IL_0047:  beq        IL_014f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   24
      IL_004f:  beq        IL_015a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   23
      IL_0057:  beq        IL_0165

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  beq        IL_0170

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   21
      IL_0067:  beq        IL_017b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   20
      IL_006f:  beq        IL_0186

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   19
      IL_0077:  beq        IL_0191

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   18
      IL_007f:  beq        IL_019c

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   17
      IL_0087:  beq        IL_01a7

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   16
      IL_008f:  beq        IL_01b2

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   15
      IL_0097:  beq        IL_01bd

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   14
      IL_009f:  beq        IL_01c8

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   13
      IL_00a7:  beq        IL_01d3

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   12
      IL_00af:  beq        IL_01de

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   11
      IL_00b7:  beq        IL_01e9

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   10
      IL_00bf:  beq        IL_01f4

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   9
      IL_00c7:  beq        IL_01ff

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.8
      IL_00ce:  beq        IL_020a

      IL_00d3:  ldloc.0
      IL_00d4:  ldc.i4.7
      IL_00d5:  beq        IL_0215

      IL_00da:  ldloc.0
      IL_00db:  ldc.i4.6
      IL_00dc:  beq        IL_0220

      IL_00e1:  ldloc.0
      IL_00e2:  ldc.i4.5
      IL_00e3:  beq        IL_022b

      IL_00e8:  ldloc.0
      IL_00e9:  ldc.i4.4
      IL_00ea:  beq        IL_0236

      IL_00ef:  ldloc.0
      IL_00f0:  ldc.i4.3
      IL_00f1:  beq        IL_0241

      IL_00f6:  ldloc.0
      IL_00f7:  ldc.i4.2
      IL_00f8:  beq        IL_024c

      IL_00fd:  br         IL_0257

      IL_0102:  ldstr      "EnumeratingServices"
      IL_0107:  stloc.1
      IL_0108:  br         IL_0262

      IL_010d:  ldstr      "EnumerateAck"
      IL_0112:  stloc.1
      IL_0113:  br         IL_0262

      IL_0118:  ldstr      "Ready"
      IL_011d:  stloc.1
      IL_011e:  br         IL_0262

      IL_0123:  ldstr      "Ready$0"
      IL_0128:  stloc.1
      IL_0129:  br         IL_0262

      IL_012e:  ldstr      "Ready$1"
      IL_0133:  stloc.1
      IL_0134:  br         IL_0262

      IL_0139:  ldstr      "SelectingService"
      IL_013e:  stloc.1
      IL_013f:  br         IL_0262

      IL_0144:  ldstr      "RequestingWatchServiceManager"
      IL_0149:  stloc.1
      IL_014a:  br         IL_0262

      IL_014f:  ldstr      "ReadyWatchServiceManager"
      IL_0154:  stloc.1
      IL_0155:  br         IL_0262

      IL_015a:  ldstr      "WaitingServiceManagerChange"
      IL_015f:  stloc.1
      IL_0160:  br         IL_0262

      IL_0165:  ldstr      "ServiceSelected"
      IL_016a:  stloc.1
      IL_016b:  br         IL_0262

      IL_0170:  ldstr      "ServiceSelected$2"
      IL_0175:  stloc.1
      IL_0176:  br         IL_0262

      IL_017b:  ldstr      "ServiceSelected$3"
      IL_0180:  stloc.1
      IL_0181:  br         IL_0262

      IL_0186:  ldstr      "ServiceSelected$4"
      IL_018b:  stloc.1
      IL_018c:  br         IL_0262

      IL_0191:  ldstr      "ServiceSelected$5"
      IL_0196:  stloc.1
      IL_0197:  br         IL_0262

      IL_019c:  ldstr      "ServiceSelected$6"
      IL_01a1:  stloc.1
      IL_01a2:  br         IL_0262

      IL_01a7:  ldstr      "ServiceSelected$7"
      IL_01ac:  stloc.1
      IL_01ad:  br         IL_0262

      IL_01b2:  ldstr      "ServiceSelected$8"
      IL_01b7:  stloc.1
      IL_01b8:  br         IL_0262

      IL_01bd:  ldstr      "ServiceSelected$9"
      IL_01c2:  stloc.1
      IL_01c3:  br         IL_0262

      IL_01c8:  ldstr      "ServiceSelected$10"
      IL_01cd:  stloc.1
      IL_01ce:  br         IL_0262

      IL_01d3:  ldstr      "ServiceSelected$11"
      IL_01d8:  stloc.1
      IL_01d9:  br         IL_0262

      IL_01de:  ldstr      "ServiceSelected$12"
      IL_01e3:  stloc.1
      IL_01e4:  br         IL_0262

      IL_01e9:  ldstr      "ServiceSelected$13"
      IL_01ee:  stloc.1
      IL_01ef:  br         IL_0262

      IL_01f4:  ldstr      "RequestingWatchServiceStatus"
      IL_01f9:  stloc.1
      IL_01fa:  br         IL_0262

      IL_01ff:  ldstr      "StartingServiceWait"
      IL_0204:  stloc.1
      IL_0205:  br         IL_0262

      IL_020a:  ldstr      "StartingServiceNoWait"
      IL_020f:  stloc.1
      IL_0210:  br         IL_0262

      IL_0215:  ldstr      "StoppingServiceWait"
      IL_021a:  stloc.1
      IL_021b:  br         IL_0262

      IL_0220:  ldstr      "StoppingServiceNoWait"
      IL_0225:  stloc.1
      IL_0226:  br         IL_0262

      IL_022b:  ldstr      "ReadyWatchService"
      IL_0230:  stloc.1
      IL_0231:  br         IL_0262

      IL_0236:  ldstr      "WaitingServiceChange"
      IL_023b:  stloc.1
      IL_023c:  br         IL_0262

      IL_0241:  ldstr      "Start"
      IL_0246:  stloc.1
      IL_0247:  br         IL_0262

      IL_024c:  ldstr      "DoneState"
      IL_0251:  stloc.1
      IL_0252:  br         IL_0262

      IL_0257:  ldstr      "<protocol terminated>"
      IL_025c:  stloc.1
      IL_025d:  br         IL_0262

      IL_0262:  ldloc.1
      IL_0263:  stloc.2
      IL_0264:  ldloc.1
      IL_0265:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       196 (0xc4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ad

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Success when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::SuccessPod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.s   30
      IL_00a3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a8:  br         IL_00c3

      IL_00ad:  ldstr      "can't recv Success in state "
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00b8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c2:  throw

      IL_00c3:  ret
    } // end of method Imp::RecvSuccess

    .method public instance void  SendEndEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEndEnumeration1$PST060000CF()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverEndEnumeration1$PST060000D0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   30
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send EndEnumeration in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendEndEnumeration

    .method public instance void  RecvEnumerationTerminated([out] valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& infos,
                                                            [out] int32& count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv EnumerationTerminated when next message"
      + " has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::EnumerationTerminatedPod0
      IL_008e:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_0093:  stind.i
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::EnumerationTerminatedPod0
      IL_009b:  ldfld      int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::count
      IL_00a0:  stind.i4
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::EnumerationTerminatedPod0
      IL_00b0:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   30
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv EnumerationTerminated in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Imp::RecvEnumerationTerminated

    .method public instance void  RecvNextServiceInfo([out] valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& infos,
                                                      [out] int32& count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c8

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv NextServiceInfo when next message has t"
      + "ag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::NextServiceInfoPod0
      IL_008e:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_0093:  stind.i
      IL_0094:  ldarg.2
      IL_0095:  ldarg.0
      IL_0096:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::NextServiceInfoPod0
      IL_009b:  ldfld      int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::count
      IL_00a0:  stind.i4
      IL_00a1:  ldarg.0
      IL_00a2:  ldc.i4.0
      IL_00a3:  volatile.
      IL_00a5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::NextServiceInfoPod0
      IL_00b0:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   31
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv NextServiceInfo in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Imp::RecvNextServiceInfo

    .method public instance void  SendWatchServiceManager(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWatchServiceManager0$PST060000D1(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverWatchServiceManager0$PST060000D2(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask,
                                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   26
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send WatchServiceManager in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendWatchServiceManager

    .method public instance void  SendEnumerateServices(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       237 (0xed)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  beq        IL_0078

      IL_001c:  br         IL_00d6

      IL_0021:  ldarg.0
      IL_0022:  ldloca.s   V_1
      IL_0024:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  stloc.3
      IL_002c:  ldloc.3
      IL_002d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0032:  stloc.s    V_4
      IL_0034:  ldloc.1
      IL_0035:  brtrue     IL_0053

      IL_003a:  ldloc.s    V_4
      IL_003c:  ldarg.1
      IL_003d:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.1
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEnumerateServices1$PST060000D3(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004e:  br         IL_0060

      IL_0053:  ldloc.3
      IL_0054:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0059:  ldarg.1
      IL_005a:  ldarg.0
      IL_005b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverEnumerateServices1$PST060000D4(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0060:  ldarg.0
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0066:  ldarg.0
      IL_0067:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_006c:  ldc.i4.s   32
      IL_006e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0073:  br         IL_00ec

      IL_0078:  ldarg.0
      IL_0079:  ldloca.s   V_5
      IL_007b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0080:  stloc.s    V_6
      IL_0082:  ldloc.s    V_6
      IL_0084:  stloc.s    V_7
      IL_0086:  ldloc.s    V_7
      IL_0088:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_008d:  stloc.s    V_8
      IL_008f:  ldloc.s    V_5
      IL_0091:  brtrue     IL_00b0

      IL_0096:  ldloc.s    V_8
      IL_0098:  ldarg.1
      IL_0099:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_009e:  ldloc.s    V_7
      IL_00a0:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_00a5:  ldarg.1
      IL_00a6:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEnumerateServices0$PST060000D5(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_00ab:  br         IL_00be

      IL_00b0:  ldloc.s    V_7
      IL_00b2:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_00b7:  ldarg.1
      IL_00b8:  ldarg.0
      IL_00b9:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverEnumerateServices0$PST060000D6(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00be:  ldarg.0
      IL_00bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c4:  ldarg.0
      IL_00c5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ca:  ldc.i4.s   32
      IL_00cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d1:  br         IL_00ec

      IL_00d6:  ldstr      "can't send EnumerateServices in state "
      IL_00db:  ldarg.0
      IL_00dc:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00e1:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e6:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00eb:  throw

      IL_00ec:  ret
    } // end of method Imp::SendEnumerateServices

    .method public instance void  SendCreateService(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0071

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   config
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverCreateService0$PST060000D7(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverCreateService0$PST060000D8(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.s   29
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send CreateService in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_007c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Imp::SendCreateService

    .method public instance void  SendSelectService(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) serviceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverSelectService0$PST060000D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverSelectService0$PST060000DA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   27
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send SelectService in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Imp::SendSelectService

    .method public instance void  SendStopWatchingServiceManager() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopWatchingServiceManager1$PST060000DB()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverStopWatchingServiceManager1$PST060000DC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   30
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send StopWatchingServiceManager in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendStopWatchingServiceManager

    .method public instance void  SendWaitNextServiceManagerChange() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWaitNextServiceManagerChange1$PST060000DD()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverWaitNextServiceManagerChange1$PST060000DE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   24
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send WaitNextServiceManagerChange in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendWaitNextServiceManagerChange

    .method public instance void  RecvServiceManagerChanged([out] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask& mask) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ServiceManagerChanged when next message"
      + " has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceManagerChangedPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged::mask
      IL_0095:  stobj      Microsoft.Singularity.ServiceManager.ServiceManagerEventMask
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceManagerChangedPod0
      IL_00a9:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   25
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv ServiceManagerChanged in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvServiceManagerChanged

    .method public instance void  SendStartServiceNoWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStartServiceNoWait1$PST060000DF()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverStartServiceNoWait1$PST060000E0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.8
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send StartServiceNoWait in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendStartServiceNoWait

    .method public instance void  SendStartServiceWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStartServiceWait1$PST060000E1()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverStartServiceWait1$PST060000E2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   9
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send StartServiceWait in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendStartServiceWait

    .method public instance void  SendStopServiceWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopServiceWait1$PST060000E3()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverStopServiceWait1$PST060000E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.7
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send StopServiceWait in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendStopServiceWait

    .method public instance void  SendStopServiceNoWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopServiceNoWait1$PST060000E5()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverStopServiceNoWait1$PST060000E6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.6
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send StopServiceNoWait in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendStopServiceNoWait

    .method public instance void  SendDeleteService() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverDeleteService1$PST060000E7()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverDeleteService1$PST060000E8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   18
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send DeleteService in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendDeleteService

    .method public instance void  SendUnselectService() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverUnselectService1$PST060000E9()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverUnselectService1$PST060000EA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   30
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send UnselectService in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendUnselectService

    .method public instance void  SendQueryServiceConfig() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverQueryServiceConfig1$PST060000EB()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverQueryServiceConfig1$PST060000EC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   20
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send QueryServiceConfig in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendQueryServiceConfig

    .method public instance void  SendQueryServiceStatus() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverQueryServiceStatus1$PST060000ED()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverQueryServiceStatus1$PST060000EE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   22
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send QueryServiceStatus in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendQueryServiceStatus

    .method public instance void  SendWatchServiceStatus() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWatchServiceStatus1$PST060000EF()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverWatchServiceStatus1$PST060000F0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   10
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send WatchServiceStatus in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendWatchServiceStatus

    .method public instance void  SendEnableService(bool enable) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEnableService1$PST060000F1(bool)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverEnableService1$PST060000F2(bool,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   16
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send EnableService in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendEnableService

    .method public instance void  SendTerminateServiceAllProcesses() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverTerminateServiceAllProcesses1$PST060000F3()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverTerminateServiceAllProcesses1$PST060000F4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   14
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send TerminateServiceAllProcesses in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendTerminateServiceAllProcesses

    .method public instance void  SendTerminateServiceProcess(int32 processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverTerminateServiceProcess1$PST060000F5(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverTerminateServiceProcess1$PST060000F6(int32,
                                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   12
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send TerminateServiceProcess in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendTerminateServiceProcess

    .method public instance void  RecvCurrentServiceConfig([out] valuetype Microsoft.Singularity.ServiceManager.ServiceConfig& config) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   26
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   26
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CurrentServiceConfig when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceConfigPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::config
      IL_0095:  stobj      Microsoft.Singularity.ServiceManager.ServiceConfig
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceConfigPod0
      IL_00a9:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   19
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv CurrentServiceConfig in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvCurrentServiceConfig

    .method public instance void  RecvCurrentServiceStatus([out] valuetype Microsoft.Singularity.ServiceManager.ServiceStatus& status) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   27
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   27
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CurrentServiceStatus when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceStatusPod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus::status
      IL_0095:  stobj      Microsoft.Singularity.ServiceManager.ServiceStatus
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceStatusPod0
      IL_00a9:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   21
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv CurrentServiceStatus in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::RecvCurrentServiceStatus

    .method public instance void  RecvServiceStarting() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   28
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   28
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv ServiceStarting when next message has t"
      + "ag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStartingPod0
      IL_0097:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   23
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv ServiceStarting in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvServiceStarting

    .method public instance void  RecvServiceStarted() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   29
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   29
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ServiceStarted when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStartedPod0
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   23
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv ServiceStarted in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Imp::RecvServiceStarted

    .method public instance void  RecvServiceStopping() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   30
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   30
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv ServiceStopping when next message has t"
      + "ag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStoppingPod0
      IL_0097:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   23
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv ServiceStopping in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvServiceStopping

    .method public instance void  RecvServiceStopped() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   31
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   31
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv ServiceStopped when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStoppedPod0
      IL_0097:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   23
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv ServiceStopped in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Imp::RecvServiceStopped

    .method public instance void  SendWaitServiceChange() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWaitServiceChange1$PST060000F7()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverWaitServiceChange1$PST060000F8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send WaitServiceChange in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendWaitServiceChange

    .method public instance void  SendStopWatchingService() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 21 00 00 00 00 00 )                         // ..!.....
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopWatchingService1$PST060000F9()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallDeliverStopWatchingService1$PST060000FA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   30
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send StopWatchingService in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendStopWatchingService

    .method public instance void  RecvServiceStatusChanged([out] valuetype Microsoft.Singularity.ServiceManager.ServiceStatus& status,
                                                           [out] bool& missedChanges) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 22 00 00 00 00 00 )                         // ..".....
      // Code size       231 (0xe7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d0

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   34
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   34
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv ServiceStatusChanged when next message "
      + "has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStatusChangedPod0
      IL_008f:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::status
      IL_0094:  stobj      Microsoft.Singularity.ServiceManager.ServiceStatus
      IL_0099:  ldarg.2
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStatusChangedPod0
      IL_00a0:  ldfld      bool Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::missedChanges
      IL_00a5:  stobj      [Corlib]System.Boolean
      IL_00aa:  ldarg.0
      IL_00ab:  ldc.i4.0
      IL_00ac:  volatile.
      IL_00ae:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00b3:  ldarg.0
      IL_00b4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStatusChangedPod0
      IL_00b9:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged
      IL_00bf:  ldarg.0
      IL_00c0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c5:  ldc.i4.5
      IL_00c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cb:  br         IL_00e6

      IL_00d0:  ldstr      "can't recv ServiceStatusChanged in state "
      IL_00d5:  ldarg.0
      IL_00d6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00db:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e5:  throw

      IL_00e6:  ret
    } // end of method Imp::RecvServiceStatusChanged

    .method public instance void  RecvOk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 23 00 00 00 00 00 )                         // ..#.....
      // Code size       1364 (0x554)
      .maxstack  37
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0051

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   29
      IL_0017:  beq        IL_00e8

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   16
      IL_001f:  beq        IL_0184

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   26
      IL_0027:  beq        IL_0223

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   14
      IL_002f:  beq        IL_02c2

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   27
      IL_0037:  beq        IL_0361

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   10
      IL_003f:  beq        IL_0400

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   18
      IL_0047:  beq        IL_049e

      IL_004c:  br         IL_053d

      IL_0051:  ldc.i4.0
      IL_0052:  stloc.1
      IL_0053:  ldarg.0
      IL_0054:  volatile.
      IL_0056:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_005b:  stloc.2
      IL_005c:  ldloc.2
      IL_005d:  brtrue     IL_0072

      IL_0062:  ldarg.0
      IL_0063:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0068:  stloc.1
      IL_0069:  ldarg.0
      IL_006a:  volatile.
      IL_006c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0071:  stloc.2
      IL_0072:  ldloc.2
      IL_0073:  ldc.i4.0
      IL_0074:  ceq
      IL_0076:  brfalse    IL_0094

      IL_007b:  ldloc.1
      IL_007c:  brfalse    IL_008c

      IL_0081:  ldstr      "Peer is closed"
      IL_0086:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_008b:  throw

      IL_008c:  ldarg.0
      IL_008d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0092:  br.s       IL_0051

      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.s   35
      IL_0097:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_009c:  ldloc.2
      IL_009d:  ldc.i4.s   35
      IL_009f:  beq        IL_00c1

      IL_00a4:  ldstr      "can't recv Ok when next message has tag "
      IL_00a9:  ldarg.0
      IL_00aa:  volatile.
      IL_00ac:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00b1:  box        [Corlib]System.Int32
      IL_00b6:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_00bb:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00c0:  throw

      IL_00c1:  ldarg.0
      IL_00c2:  ldc.i4.0
      IL_00c3:  volatile.
      IL_00c5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00ca:  ldarg.0
      IL_00cb:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_00d0:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_00d6:  ldarg.0
      IL_00d7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00dc:  ldc.i4.s   11
      IL_00de:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e3:  br         IL_0553

      IL_00e8:  ldc.i4.0
      IL_00e9:  stloc.3
      IL_00ea:  ldarg.0
      IL_00eb:  volatile.
      IL_00ed:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00f2:  stloc.s    V_4
      IL_00f4:  ldloc.s    V_4
      IL_00f6:  brtrue     IL_010c

      IL_00fb:  ldarg.0
      IL_00fc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0101:  stloc.3
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_010a:  stloc.s    V_4
      IL_010c:  ldloc.s    V_4
      IL_010e:  ldc.i4.0
      IL_010f:  ceq
      IL_0111:  brfalse    IL_012f

      IL_0116:  ldloc.3
      IL_0117:  brfalse    IL_0127

      IL_011c:  ldstr      "Peer is closed"
      IL_0121:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0126:  throw

      IL_0127:  ldarg.0
      IL_0128:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_012d:  br.s       IL_00e8

      IL_012f:  ldarg.0
      IL_0130:  ldc.i4.s   35
      IL_0132:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0137:  ldloc.s    V_4
      IL_0139:  ldc.i4.s   35
      IL_013b:  beq        IL_015d

      IL_0140:  ldstr      "can't recv Ok when next message has tag "
      IL_0145:  ldarg.0
      IL_0146:  volatile.
      IL_0148:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_014d:  box        [Corlib]System.Int32
      IL_0152:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0157:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_015c:  throw

      IL_015d:  ldarg.0
      IL_015e:  ldc.i4.0
      IL_015f:  volatile.
      IL_0161:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0166:  ldarg.0
      IL_0167:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_016c:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_0172:  ldarg.0
      IL_0173:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0178:  ldc.i4.s   28
      IL_017a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017f:  br         IL_0553

      IL_0184:  ldc.i4.0
      IL_0185:  stloc.s    V_5
      IL_0187:  ldarg.0
      IL_0188:  volatile.
      IL_018a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_018f:  stloc.s    V_6
      IL_0191:  ldloc.s    V_6
      IL_0193:  brtrue     IL_01aa

      IL_0198:  ldarg.0
      IL_0199:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_019e:  stloc.s    V_5
      IL_01a0:  ldarg.0
      IL_01a1:  volatile.
      IL_01a3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01a8:  stloc.s    V_6
      IL_01aa:  ldloc.s    V_6
      IL_01ac:  ldc.i4.0
      IL_01ad:  ceq
      IL_01af:  brfalse    IL_01ce

      IL_01b4:  ldloc.s    V_5
      IL_01b6:  brfalse    IL_01c6

      IL_01bb:  ldstr      "Peer is closed"
      IL_01c0:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01c5:  throw

      IL_01c6:  ldarg.0
      IL_01c7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01cc:  br.s       IL_0184

      IL_01ce:  ldarg.0
      IL_01cf:  ldc.i4.s   35
      IL_01d1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01d6:  ldloc.s    V_6
      IL_01d8:  ldc.i4.s   35
      IL_01da:  beq        IL_01fc

      IL_01df:  ldstr      "can't recv Ok when next message has tag "
      IL_01e4:  ldarg.0
      IL_01e5:  volatile.
      IL_01e7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01ec:  box        [Corlib]System.Int32
      IL_01f1:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_01f6:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01fb:  throw

      IL_01fc:  ldarg.0
      IL_01fd:  ldc.i4.0
      IL_01fe:  volatile.
      IL_0200:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0205:  ldarg.0
      IL_0206:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_020b:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_0211:  ldarg.0
      IL_0212:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0217:  ldc.i4.s   15
      IL_0219:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_021e:  br         IL_0553

      IL_0223:  ldc.i4.0
      IL_0224:  stloc.s    V_7
      IL_0226:  ldarg.0
      IL_0227:  volatile.
      IL_0229:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_022e:  stloc.s    V_8
      IL_0230:  ldloc.s    V_8
      IL_0232:  brtrue     IL_0249

      IL_0237:  ldarg.0
      IL_0238:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_023d:  stloc.s    V_7
      IL_023f:  ldarg.0
      IL_0240:  volatile.
      IL_0242:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0247:  stloc.s    V_8
      IL_0249:  ldloc.s    V_8
      IL_024b:  ldc.i4.0
      IL_024c:  ceq
      IL_024e:  brfalse    IL_026d

      IL_0253:  ldloc.s    V_7
      IL_0255:  brfalse    IL_0265

      IL_025a:  ldstr      "Peer is closed"
      IL_025f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0264:  throw

      IL_0265:  ldarg.0
      IL_0266:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_026b:  br.s       IL_0223

      IL_026d:  ldarg.0
      IL_026e:  ldc.i4.s   35
      IL_0270:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0275:  ldloc.s    V_8
      IL_0277:  ldc.i4.s   35
      IL_0279:  beq        IL_029b

      IL_027e:  ldstr      "can't recv Ok when next message has tag "
      IL_0283:  ldarg.0
      IL_0284:  volatile.
      IL_0286:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_028b:  box        [Corlib]System.Int32
      IL_0290:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0295:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_029a:  throw

      IL_029b:  ldarg.0
      IL_029c:  ldc.i4.0
      IL_029d:  volatile.
      IL_029f:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02a4:  ldarg.0
      IL_02a5:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_02aa:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_02b0:  ldarg.0
      IL_02b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02b6:  ldc.i4.s   25
      IL_02b8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02bd:  br         IL_0553

      IL_02c2:  ldc.i4.0
      IL_02c3:  stloc.s    V_9
      IL_02c5:  ldarg.0
      IL_02c6:  volatile.
      IL_02c8:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02cd:  stloc.s    V_10
      IL_02cf:  ldloc.s    V_10
      IL_02d1:  brtrue     IL_02e8

      IL_02d6:  ldarg.0
      IL_02d7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02dc:  stloc.s    V_9
      IL_02de:  ldarg.0
      IL_02df:  volatile.
      IL_02e1:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02e6:  stloc.s    V_10
      IL_02e8:  ldloc.s    V_10
      IL_02ea:  ldc.i4.0
      IL_02eb:  ceq
      IL_02ed:  brfalse    IL_030c

      IL_02f2:  ldloc.s    V_9
      IL_02f4:  brfalse    IL_0304

      IL_02f9:  ldstr      "Peer is closed"
      IL_02fe:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0303:  throw

      IL_0304:  ldarg.0
      IL_0305:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_030a:  br.s       IL_02c2

      IL_030c:  ldarg.0
      IL_030d:  ldc.i4.s   35
      IL_030f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0314:  ldloc.s    V_10
      IL_0316:  ldc.i4.s   35
      IL_0318:  beq        IL_033a

      IL_031d:  ldstr      "can't recv Ok when next message has tag "
      IL_0322:  ldarg.0
      IL_0323:  volatile.
      IL_0325:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_032a:  box        [Corlib]System.Int32
      IL_032f:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0334:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0339:  throw

      IL_033a:  ldarg.0
      IL_033b:  ldc.i4.0
      IL_033c:  volatile.
      IL_033e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0343:  ldarg.0
      IL_0344:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_0349:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_034f:  ldarg.0
      IL_0350:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0355:  ldc.i4.s   13
      IL_0357:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_035c:  br         IL_0553

      IL_0361:  ldc.i4.0
      IL_0362:  stloc.s    V_11
      IL_0364:  ldarg.0
      IL_0365:  volatile.
      IL_0367:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_036c:  stloc.s    V_12
      IL_036e:  ldloc.s    V_12
      IL_0370:  brtrue     IL_0387

      IL_0375:  ldarg.0
      IL_0376:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_037b:  stloc.s    V_11
      IL_037d:  ldarg.0
      IL_037e:  volatile.
      IL_0380:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0385:  stloc.s    V_12
      IL_0387:  ldloc.s    V_12
      IL_0389:  ldc.i4.0
      IL_038a:  ceq
      IL_038c:  brfalse    IL_03ab

      IL_0391:  ldloc.s    V_11
      IL_0393:  brfalse    IL_03a3

      IL_0398:  ldstr      "Peer is closed"
      IL_039d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_03a2:  throw

      IL_03a3:  ldarg.0
      IL_03a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_03a9:  br.s       IL_0361

      IL_03ab:  ldarg.0
      IL_03ac:  ldc.i4.s   35
      IL_03ae:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03b3:  ldloc.s    V_12
      IL_03b5:  ldc.i4.s   35
      IL_03b7:  beq        IL_03d9

      IL_03bc:  ldstr      "can't recv Ok when next message has tag "
      IL_03c1:  ldarg.0
      IL_03c2:  volatile.
      IL_03c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03c9:  box        [Corlib]System.Int32
      IL_03ce:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_03d3:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_03d8:  throw

      IL_03d9:  ldarg.0
      IL_03da:  ldc.i4.0
      IL_03db:  volatile.
      IL_03dd:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03e2:  ldarg.0
      IL_03e3:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_03e8:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_03ee:  ldarg.0
      IL_03ef:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03f4:  ldc.i4.s   23
      IL_03f6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03fb:  br         IL_0553

      IL_0400:  ldc.i4.0
      IL_0401:  stloc.s    V_13
      IL_0403:  ldarg.0
      IL_0404:  volatile.
      IL_0406:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_040b:  stloc.s    V_14
      IL_040d:  ldloc.s    V_14
      IL_040f:  brtrue     IL_0426

      IL_0414:  ldarg.0
      IL_0415:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_041a:  stloc.s    V_13
      IL_041c:  ldarg.0
      IL_041d:  volatile.
      IL_041f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0424:  stloc.s    V_14
      IL_0426:  ldloc.s    V_14
      IL_0428:  ldc.i4.0
      IL_0429:  ceq
      IL_042b:  brfalse    IL_044a

      IL_0430:  ldloc.s    V_13
      IL_0432:  brfalse    IL_0442

      IL_0437:  ldstr      "Peer is closed"
      IL_043c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0441:  throw

      IL_0442:  ldarg.0
      IL_0443:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0448:  br.s       IL_0400

      IL_044a:  ldarg.0
      IL_044b:  ldc.i4.s   35
      IL_044d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0452:  ldloc.s    V_14
      IL_0454:  ldc.i4.s   35
      IL_0456:  beq        IL_0478

      IL_045b:  ldstr      "can't recv Ok when next message has tag "
      IL_0460:  ldarg.0
      IL_0461:  volatile.
      IL_0463:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0468:  box        [Corlib]System.Int32
      IL_046d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0472:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0477:  throw

      IL_0478:  ldarg.0
      IL_0479:  ldc.i4.0
      IL_047a:  volatile.
      IL_047c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0481:  ldarg.0
      IL_0482:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_0487:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_048d:  ldarg.0
      IL_048e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0493:  ldc.i4.5
      IL_0494:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0499:  br         IL_0553

      IL_049e:  ldc.i4.0
      IL_049f:  stloc.s    V_15
      IL_04a1:  ldarg.0
      IL_04a2:  volatile.
      IL_04a4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_04a9:  stloc.s    V_16
      IL_04ab:  ldloc.s    V_16
      IL_04ad:  brtrue     IL_04c4

      IL_04b2:  ldarg.0
      IL_04b3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04b8:  stloc.s    V_15
      IL_04ba:  ldarg.0
      IL_04bb:  volatile.
      IL_04bd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_04c2:  stloc.s    V_16
      IL_04c4:  ldloc.s    V_16
      IL_04c6:  ldc.i4.0
      IL_04c7:  ceq
      IL_04c9:  brfalse    IL_04e8

      IL_04ce:  ldloc.s    V_15
      IL_04d0:  brfalse    IL_04e0

      IL_04d5:  ldstr      "Peer is closed"
      IL_04da:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_04df:  throw

      IL_04e0:  ldarg.0
      IL_04e1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_04e6:  br.s       IL_049e

      IL_04e8:  ldarg.0
      IL_04e9:  ldc.i4.s   35
      IL_04eb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_04f0:  ldloc.s    V_16
      IL_04f2:  ldc.i4.s   35
      IL_04f4:  beq        IL_0516

      IL_04f9:  ldstr      "can't recv Ok when next message has tag "
      IL_04fe:  ldarg.0
      IL_04ff:  volatile.
      IL_0501:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0506:  box        [Corlib]System.Int32
      IL_050b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0510:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0515:  throw

      IL_0516:  ldarg.0
      IL_0517:  ldc.i4.0
      IL_0518:  volatile.
      IL_051a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_051f:  ldarg.0
      IL_0520:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_0525:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_052b:  ldarg.0
      IL_052c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0531:  ldc.i4.s   17
      IL_0533:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0538:  br         IL_0553

      IL_053d:  ldstr      "can't recv Ok in state "
      IL_0542:  ldarg.0
      IL_0543:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0548:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_054d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0552:  throw

      IL_0553:  ret
    } // end of method Imp::RecvOk

    .method public instance void  RecvRequestFailed([out] valuetype Microsoft.Singularity.ServiceManager.ServiceError& err) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 24 00 00 00 00 00 )                         // ..$.....
      // Code size       2785 (0xae1)
      .maxstack  65
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0085

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   29
      IL_0017:  beq        IL_012d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_01da

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.8
      IL_0025:  beq        IL_028a

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_033a

      IL_0031:  ldloc.0
      IL_0032:  ldc.i4.s   22
      IL_0034:  beq        IL_03ea

      IL_0039:  ldloc.0
      IL_003a:  ldc.i4.s   16
      IL_003c:  beq        IL_049a

      IL_0041:  ldloc.0
      IL_0042:  ldc.i4.s   9
      IL_0044:  beq        IL_054a

      IL_0049:  ldloc.0
      IL_004a:  ldc.i4.s   20
      IL_004c:  beq        IL_05fa

      IL_0051:  ldloc.0
      IL_0052:  ldc.i4.s   14
      IL_0054:  beq        IL_06aa

      IL_0059:  ldloc.0
      IL_005a:  ldc.i4.s   10
      IL_005c:  beq        IL_075a

      IL_0061:  ldloc.0
      IL_0062:  ldc.i4.6
      IL_0063:  beq        IL_080a

      IL_0068:  ldloc.0
      IL_0069:  ldc.i4.s   27
      IL_006b:  beq        IL_08ba

      IL_0070:  ldloc.0
      IL_0071:  ldc.i4.s   26
      IL_0073:  beq        IL_096a

      IL_0078:  ldloc.0
      IL_0079:  ldc.i4.s   18
      IL_007b:  beq        IL_0a1a

      IL_0080:  br         IL_0aca

      IL_0085:  ldc.i4.0
      IL_0086:  stloc.1
      IL_0087:  ldarg.0
      IL_0088:  volatile.
      IL_008a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_008f:  stloc.2
      IL_0090:  ldloc.2
      IL_0091:  brtrue     IL_00a6

      IL_0096:  ldarg.0
      IL_0097:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_009c:  stloc.1
      IL_009d:  ldarg.0
      IL_009e:  volatile.
      IL_00a0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00a5:  stloc.2
      IL_00a6:  ldloc.2
      IL_00a7:  ldc.i4.0
      IL_00a8:  ceq
      IL_00aa:  brfalse    IL_00c8

      IL_00af:  ldloc.1
      IL_00b0:  brfalse    IL_00c0

      IL_00b5:  ldstr      "Peer is closed"
      IL_00ba:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00bf:  throw

      IL_00c0:  ldarg.0
      IL_00c1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00c6:  br.s       IL_0085

      IL_00c8:  ldarg.0
      IL_00c9:  ldc.i4.s   36
      IL_00cb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_00d0:  ldloc.2
      IL_00d1:  ldc.i4.s   36
      IL_00d3:  beq        IL_00f5

      IL_00d8:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_00dd:  ldarg.0
      IL_00de:  volatile.
      IL_00e0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00e5:  box        [Corlib]System.Int32
      IL_00ea:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_00ef:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00f4:  throw

      IL_00f5:  ldarg.1
      IL_00f6:  ldarg.0
      IL_00f7:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_00fc:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_0101:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0106:  ldarg.0
      IL_0107:  ldc.i4.0
      IL_0108:  volatile.
      IL_010a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_010f:  ldarg.0
      IL_0110:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0115:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_011b:  ldarg.0
      IL_011c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0121:  ldc.i4.s   11
      IL_0123:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0128:  br         IL_0ae0

      IL_012d:  ldc.i4.0
      IL_012e:  stloc.3
      IL_012f:  ldarg.0
      IL_0130:  volatile.
      IL_0132:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0137:  stloc.s    V_4
      IL_0139:  ldloc.s    V_4
      IL_013b:  brtrue     IL_0151

      IL_0140:  ldarg.0
      IL_0141:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0146:  stloc.3
      IL_0147:  ldarg.0
      IL_0148:  volatile.
      IL_014a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_014f:  stloc.s    V_4
      IL_0151:  ldloc.s    V_4
      IL_0153:  ldc.i4.0
      IL_0154:  ceq
      IL_0156:  brfalse    IL_0174

      IL_015b:  ldloc.3
      IL_015c:  brfalse    IL_016c

      IL_0161:  ldstr      "Peer is closed"
      IL_0166:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_016b:  throw

      IL_016c:  ldarg.0
      IL_016d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0172:  br.s       IL_012d

      IL_0174:  ldarg.0
      IL_0175:  ldc.i4.s   36
      IL_0177:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_017c:  ldloc.s    V_4
      IL_017e:  ldc.i4.s   36
      IL_0180:  beq        IL_01a2

      IL_0185:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_018a:  ldarg.0
      IL_018b:  volatile.
      IL_018d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0192:  box        [Corlib]System.Int32
      IL_0197:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_019c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01a1:  throw

      IL_01a2:  ldarg.1
      IL_01a3:  ldarg.0
      IL_01a4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_01a9:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_01ae:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_01b3:  ldarg.0
      IL_01b4:  ldc.i4.0
      IL_01b5:  volatile.
      IL_01b7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01bc:  ldarg.0
      IL_01bd:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_01c2:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_01c8:  ldarg.0
      IL_01c9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ce:  ldc.i4.s   28
      IL_01d0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01d5:  br         IL_0ae0

      IL_01da:  ldc.i4.0
      IL_01db:  stloc.s    V_5
      IL_01dd:  ldarg.0
      IL_01de:  volatile.
      IL_01e0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01e5:  stloc.s    V_6
      IL_01e7:  ldloc.s    V_6
      IL_01e9:  brtrue     IL_0200

      IL_01ee:  ldarg.0
      IL_01ef:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01f4:  stloc.s    V_5
      IL_01f6:  ldarg.0
      IL_01f7:  volatile.
      IL_01f9:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01fe:  stloc.s    V_6
      IL_0200:  ldloc.s    V_6
      IL_0202:  ldc.i4.0
      IL_0203:  ceq
      IL_0205:  brfalse    IL_0224

      IL_020a:  ldloc.s    V_5
      IL_020c:  brfalse    IL_021c

      IL_0211:  ldstr      "Peer is closed"
      IL_0216:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_021b:  throw

      IL_021c:  ldarg.0
      IL_021d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0222:  br.s       IL_01da

      IL_0224:  ldarg.0
      IL_0225:  ldc.i4.s   36
      IL_0227:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_022c:  ldloc.s    V_6
      IL_022e:  ldc.i4.s   36
      IL_0230:  beq        IL_0252

      IL_0235:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_023a:  ldarg.0
      IL_023b:  volatile.
      IL_023d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0242:  box        [Corlib]System.Int32
      IL_0247:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_024c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0251:  throw

      IL_0252:  ldarg.1
      IL_0253:  ldarg.0
      IL_0254:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0259:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_025e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0263:  ldarg.0
      IL_0264:  ldc.i4.0
      IL_0265:  volatile.
      IL_0267:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_026c:  ldarg.0
      IL_026d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0272:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0278:  ldarg.0
      IL_0279:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_027e:  ldc.i4.s   30
      IL_0280:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0285:  br         IL_0ae0

      IL_028a:  ldc.i4.0
      IL_028b:  stloc.s    V_7
      IL_028d:  ldarg.0
      IL_028e:  volatile.
      IL_0290:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0295:  stloc.s    V_8
      IL_0297:  ldloc.s    V_8
      IL_0299:  brtrue     IL_02b0

      IL_029e:  ldarg.0
      IL_029f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02a4:  stloc.s    V_7
      IL_02a6:  ldarg.0
      IL_02a7:  volatile.
      IL_02a9:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02ae:  stloc.s    V_8
      IL_02b0:  ldloc.s    V_8
      IL_02b2:  ldc.i4.0
      IL_02b3:  ceq
      IL_02b5:  brfalse    IL_02d4

      IL_02ba:  ldloc.s    V_7
      IL_02bc:  brfalse    IL_02cc

      IL_02c1:  ldstr      "Peer is closed"
      IL_02c6:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_02cb:  throw

      IL_02cc:  ldarg.0
      IL_02cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02d2:  br.s       IL_028a

      IL_02d4:  ldarg.0
      IL_02d5:  ldc.i4.s   36
      IL_02d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02dc:  ldloc.s    V_8
      IL_02de:  ldc.i4.s   36
      IL_02e0:  beq        IL_0302

      IL_02e5:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_02ea:  ldarg.0
      IL_02eb:  volatile.
      IL_02ed:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02f2:  box        [Corlib]System.Int32
      IL_02f7:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_02fc:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0301:  throw

      IL_0302:  ldarg.1
      IL_0303:  ldarg.0
      IL_0304:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0309:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_030e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0313:  ldarg.0
      IL_0314:  ldc.i4.0
      IL_0315:  volatile.
      IL_0317:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_031c:  ldarg.0
      IL_031d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0322:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0328:  ldarg.0
      IL_0329:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_032e:  ldc.i4.s   23
      IL_0330:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0335:  br         IL_0ae0

      IL_033a:  ldc.i4.0
      IL_033b:  stloc.s    V_9
      IL_033d:  ldarg.0
      IL_033e:  volatile.
      IL_0340:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0345:  stloc.s    V_10
      IL_0347:  ldloc.s    V_10
      IL_0349:  brtrue     IL_0360

      IL_034e:  ldarg.0
      IL_034f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0354:  stloc.s    V_9
      IL_0356:  ldarg.0
      IL_0357:  volatile.
      IL_0359:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_035e:  stloc.s    V_10
      IL_0360:  ldloc.s    V_10
      IL_0362:  ldc.i4.0
      IL_0363:  ceq
      IL_0365:  brfalse    IL_0384

      IL_036a:  ldloc.s    V_9
      IL_036c:  brfalse    IL_037c

      IL_0371:  ldstr      "Peer is closed"
      IL_0376:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_037b:  throw

      IL_037c:  ldarg.0
      IL_037d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0382:  br.s       IL_033a

      IL_0384:  ldarg.0
      IL_0385:  ldc.i4.s   36
      IL_0387:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_038c:  ldloc.s    V_10
      IL_038e:  ldc.i4.s   36
      IL_0390:  beq        IL_03b2

      IL_0395:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_039a:  ldarg.0
      IL_039b:  volatile.
      IL_039d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03a2:  box        [Corlib]System.Int32
      IL_03a7:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_03ac:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_03b1:  throw

      IL_03b2:  ldarg.1
      IL_03b3:  ldarg.0
      IL_03b4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_03b9:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_03be:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_03c3:  ldarg.0
      IL_03c4:  ldc.i4.0
      IL_03c5:  volatile.
      IL_03c7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03cc:  ldarg.0
      IL_03cd:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_03d2:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_03d8:  ldarg.0
      IL_03d9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03de:  ldc.i4.s   23
      IL_03e0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03e5:  br         IL_0ae0

      IL_03ea:  ldc.i4.0
      IL_03eb:  stloc.s    V_11
      IL_03ed:  ldarg.0
      IL_03ee:  volatile.
      IL_03f0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03f5:  stloc.s    V_12
      IL_03f7:  ldloc.s    V_12
      IL_03f9:  brtrue     IL_0410

      IL_03fe:  ldarg.0
      IL_03ff:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0404:  stloc.s    V_11
      IL_0406:  ldarg.0
      IL_0407:  volatile.
      IL_0409:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_040e:  stloc.s    V_12
      IL_0410:  ldloc.s    V_12
      IL_0412:  ldc.i4.0
      IL_0413:  ceq
      IL_0415:  brfalse    IL_0434

      IL_041a:  ldloc.s    V_11
      IL_041c:  brfalse    IL_042c

      IL_0421:  ldstr      "Peer is closed"
      IL_0426:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_042b:  throw

      IL_042c:  ldarg.0
      IL_042d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0432:  br.s       IL_03ea

      IL_0434:  ldarg.0
      IL_0435:  ldc.i4.s   36
      IL_0437:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_043c:  ldloc.s    V_12
      IL_043e:  ldc.i4.s   36
      IL_0440:  beq        IL_0462

      IL_0445:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_044a:  ldarg.0
      IL_044b:  volatile.
      IL_044d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0452:  box        [Corlib]System.Int32
      IL_0457:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_045c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0461:  throw

      IL_0462:  ldarg.1
      IL_0463:  ldarg.0
      IL_0464:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0469:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_046e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0473:  ldarg.0
      IL_0474:  ldc.i4.0
      IL_0475:  volatile.
      IL_0477:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_047c:  ldarg.0
      IL_047d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0482:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0488:  ldarg.0
      IL_0489:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_048e:  ldc.i4.s   21
      IL_0490:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0495:  br         IL_0ae0

      IL_049a:  ldc.i4.0
      IL_049b:  stloc.s    V_13
      IL_049d:  ldarg.0
      IL_049e:  volatile.
      IL_04a0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_04a5:  stloc.s    V_14
      IL_04a7:  ldloc.s    V_14
      IL_04a9:  brtrue     IL_04c0

      IL_04ae:  ldarg.0
      IL_04af:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04b4:  stloc.s    V_13
      IL_04b6:  ldarg.0
      IL_04b7:  volatile.
      IL_04b9:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_04be:  stloc.s    V_14
      IL_04c0:  ldloc.s    V_14
      IL_04c2:  ldc.i4.0
      IL_04c3:  ceq
      IL_04c5:  brfalse    IL_04e4

      IL_04ca:  ldloc.s    V_13
      IL_04cc:  brfalse    IL_04dc

      IL_04d1:  ldstr      "Peer is closed"
      IL_04d6:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_04db:  throw

      IL_04dc:  ldarg.0
      IL_04dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_04e2:  br.s       IL_049a

      IL_04e4:  ldarg.0
      IL_04e5:  ldc.i4.s   36
      IL_04e7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_04ec:  ldloc.s    V_14
      IL_04ee:  ldc.i4.s   36
      IL_04f0:  beq        IL_0512

      IL_04f5:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_04fa:  ldarg.0
      IL_04fb:  volatile.
      IL_04fd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0502:  box        [Corlib]System.Int32
      IL_0507:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_050c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0511:  throw

      IL_0512:  ldarg.1
      IL_0513:  ldarg.0
      IL_0514:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0519:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_051e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0523:  ldarg.0
      IL_0524:  ldc.i4.0
      IL_0525:  volatile.
      IL_0527:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_052c:  ldarg.0
      IL_052d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0532:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0538:  ldarg.0
      IL_0539:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_053e:  ldc.i4.s   15
      IL_0540:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0545:  br         IL_0ae0

      IL_054a:  ldc.i4.0
      IL_054b:  stloc.s    V_15
      IL_054d:  ldarg.0
      IL_054e:  volatile.
      IL_0550:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0555:  stloc.s    V_16
      IL_0557:  ldloc.s    V_16
      IL_0559:  brtrue     IL_0570

      IL_055e:  ldarg.0
      IL_055f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0564:  stloc.s    V_15
      IL_0566:  ldarg.0
      IL_0567:  volatile.
      IL_0569:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_056e:  stloc.s    V_16
      IL_0570:  ldloc.s    V_16
      IL_0572:  ldc.i4.0
      IL_0573:  ceq
      IL_0575:  brfalse    IL_0594

      IL_057a:  ldloc.s    V_15
      IL_057c:  brfalse    IL_058c

      IL_0581:  ldstr      "Peer is closed"
      IL_0586:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_058b:  throw

      IL_058c:  ldarg.0
      IL_058d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0592:  br.s       IL_054a

      IL_0594:  ldarg.0
      IL_0595:  ldc.i4.s   36
      IL_0597:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_059c:  ldloc.s    V_16
      IL_059e:  ldc.i4.s   36
      IL_05a0:  beq        IL_05c2

      IL_05a5:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_05aa:  ldarg.0
      IL_05ab:  volatile.
      IL_05ad:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_05b2:  box        [Corlib]System.Int32
      IL_05b7:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_05bc:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_05c1:  throw

      IL_05c2:  ldarg.1
      IL_05c3:  ldarg.0
      IL_05c4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_05c9:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_05ce:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_05d3:  ldarg.0
      IL_05d4:  ldc.i4.0
      IL_05d5:  volatile.
      IL_05d7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_05dc:  ldarg.0
      IL_05dd:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_05e2:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_05e8:  ldarg.0
      IL_05e9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_05ee:  ldc.i4.s   23
      IL_05f0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_05f5:  br         IL_0ae0

      IL_05fa:  ldc.i4.0
      IL_05fb:  stloc.s    V_17
      IL_05fd:  ldarg.0
      IL_05fe:  volatile.
      IL_0600:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0605:  stloc.s    V_18
      IL_0607:  ldloc.s    V_18
      IL_0609:  brtrue     IL_0620

      IL_060e:  ldarg.0
      IL_060f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0614:  stloc.s    V_17
      IL_0616:  ldarg.0
      IL_0617:  volatile.
      IL_0619:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_061e:  stloc.s    V_18
      IL_0620:  ldloc.s    V_18
      IL_0622:  ldc.i4.0
      IL_0623:  ceq
      IL_0625:  brfalse    IL_0644

      IL_062a:  ldloc.s    V_17
      IL_062c:  brfalse    IL_063c

      IL_0631:  ldstr      "Peer is closed"
      IL_0636:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_063b:  throw

      IL_063c:  ldarg.0
      IL_063d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0642:  br.s       IL_05fa

      IL_0644:  ldarg.0
      IL_0645:  ldc.i4.s   36
      IL_0647:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_064c:  ldloc.s    V_18
      IL_064e:  ldc.i4.s   36
      IL_0650:  beq        IL_0672

      IL_0655:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_065a:  ldarg.0
      IL_065b:  volatile.
      IL_065d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0662:  box        [Corlib]System.Int32
      IL_0667:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_066c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0671:  throw

      IL_0672:  ldarg.1
      IL_0673:  ldarg.0
      IL_0674:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0679:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_067e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0683:  ldarg.0
      IL_0684:  ldc.i4.0
      IL_0685:  volatile.
      IL_0687:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_068c:  ldarg.0
      IL_068d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0692:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0698:  ldarg.0
      IL_0699:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_069e:  ldc.i4.s   19
      IL_06a0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_06a5:  br         IL_0ae0

      IL_06aa:  ldc.i4.0
      IL_06ab:  stloc.s    V_19
      IL_06ad:  ldarg.0
      IL_06ae:  volatile.
      IL_06b0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_06b5:  stloc.s    V_20
      IL_06b7:  ldloc.s    V_20
      IL_06b9:  brtrue     IL_06d0

      IL_06be:  ldarg.0
      IL_06bf:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06c4:  stloc.s    V_19
      IL_06c6:  ldarg.0
      IL_06c7:  volatile.
      IL_06c9:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_06ce:  stloc.s    V_20
      IL_06d0:  ldloc.s    V_20
      IL_06d2:  ldc.i4.0
      IL_06d3:  ceq
      IL_06d5:  brfalse    IL_06f4

      IL_06da:  ldloc.s    V_19
      IL_06dc:  brfalse    IL_06ec

      IL_06e1:  ldstr      "Peer is closed"
      IL_06e6:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_06eb:  throw

      IL_06ec:  ldarg.0
      IL_06ed:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_06f2:  br.s       IL_06aa

      IL_06f4:  ldarg.0
      IL_06f5:  ldc.i4.s   36
      IL_06f7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_06fc:  ldloc.s    V_20
      IL_06fe:  ldc.i4.s   36
      IL_0700:  beq        IL_0722

      IL_0705:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_070a:  ldarg.0
      IL_070b:  volatile.
      IL_070d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0712:  box        [Corlib]System.Int32
      IL_0717:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_071c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0721:  throw

      IL_0722:  ldarg.1
      IL_0723:  ldarg.0
      IL_0724:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0729:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_072e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0733:  ldarg.0
      IL_0734:  ldc.i4.0
      IL_0735:  volatile.
      IL_0737:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_073c:  ldarg.0
      IL_073d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0742:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0748:  ldarg.0
      IL_0749:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_074e:  ldc.i4.s   13
      IL_0750:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0755:  br         IL_0ae0

      IL_075a:  ldc.i4.0
      IL_075b:  stloc.s    V_21
      IL_075d:  ldarg.0
      IL_075e:  volatile.
      IL_0760:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0765:  stloc.s    V_22
      IL_0767:  ldloc.s    V_22
      IL_0769:  brtrue     IL_0780

      IL_076e:  ldarg.0
      IL_076f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0774:  stloc.s    V_21
      IL_0776:  ldarg.0
      IL_0777:  volatile.
      IL_0779:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_077e:  stloc.s    V_22
      IL_0780:  ldloc.s    V_22
      IL_0782:  ldc.i4.0
      IL_0783:  ceq
      IL_0785:  brfalse    IL_07a4

      IL_078a:  ldloc.s    V_21
      IL_078c:  brfalse    IL_079c

      IL_0791:  ldstr      "Peer is closed"
      IL_0796:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_079b:  throw

      IL_079c:  ldarg.0
      IL_079d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_07a2:  br.s       IL_075a

      IL_07a4:  ldarg.0
      IL_07a5:  ldc.i4.s   36
      IL_07a7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_07ac:  ldloc.s    V_22
      IL_07ae:  ldc.i4.s   36
      IL_07b0:  beq        IL_07d2

      IL_07b5:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_07ba:  ldarg.0
      IL_07bb:  volatile.
      IL_07bd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_07c2:  box        [Corlib]System.Int32
      IL_07c7:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_07cc:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_07d1:  throw

      IL_07d2:  ldarg.1
      IL_07d3:  ldarg.0
      IL_07d4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_07d9:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_07de:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_07e3:  ldarg.0
      IL_07e4:  ldc.i4.0
      IL_07e5:  volatile.
      IL_07e7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_07ec:  ldarg.0
      IL_07ed:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_07f2:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_07f8:  ldarg.0
      IL_07f9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_07fe:  ldc.i4.s   30
      IL_0800:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0805:  br         IL_0ae0

      IL_080a:  ldc.i4.0
      IL_080b:  stloc.s    V_23
      IL_080d:  ldarg.0
      IL_080e:  volatile.
      IL_0810:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0815:  stloc.s    V_24
      IL_0817:  ldloc.s    V_24
      IL_0819:  brtrue     IL_0830

      IL_081e:  ldarg.0
      IL_081f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0824:  stloc.s    V_23
      IL_0826:  ldarg.0
      IL_0827:  volatile.
      IL_0829:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_082e:  stloc.s    V_24
      IL_0830:  ldloc.s    V_24
      IL_0832:  ldc.i4.0
      IL_0833:  ceq
      IL_0835:  brfalse    IL_0854

      IL_083a:  ldloc.s    V_23
      IL_083c:  brfalse    IL_084c

      IL_0841:  ldstr      "Peer is closed"
      IL_0846:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_084b:  throw

      IL_084c:  ldarg.0
      IL_084d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0852:  br.s       IL_080a

      IL_0854:  ldarg.0
      IL_0855:  ldc.i4.s   36
      IL_0857:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_085c:  ldloc.s    V_24
      IL_085e:  ldc.i4.s   36
      IL_0860:  beq        IL_0882

      IL_0865:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_086a:  ldarg.0
      IL_086b:  volatile.
      IL_086d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0872:  box        [Corlib]System.Int32
      IL_0877:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_087c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0881:  throw

      IL_0882:  ldarg.1
      IL_0883:  ldarg.0
      IL_0884:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0889:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_088e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0893:  ldarg.0
      IL_0894:  ldc.i4.0
      IL_0895:  volatile.
      IL_0897:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_089c:  ldarg.0
      IL_089d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_08a2:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_08a8:  ldarg.0
      IL_08a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_08ae:  ldc.i4.s   23
      IL_08b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_08b5:  br         IL_0ae0

      IL_08ba:  ldc.i4.0
      IL_08bb:  stloc.s    V_25
      IL_08bd:  ldarg.0
      IL_08be:  volatile.
      IL_08c0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_08c5:  stloc.s    V_26
      IL_08c7:  ldloc.s    V_26
      IL_08c9:  brtrue     IL_08e0

      IL_08ce:  ldarg.0
      IL_08cf:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_08d4:  stloc.s    V_25
      IL_08d6:  ldarg.0
      IL_08d7:  volatile.
      IL_08d9:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_08de:  stloc.s    V_26
      IL_08e0:  ldloc.s    V_26
      IL_08e2:  ldc.i4.0
      IL_08e3:  ceq
      IL_08e5:  brfalse    IL_0904

      IL_08ea:  ldloc.s    V_25
      IL_08ec:  brfalse    IL_08fc

      IL_08f1:  ldstr      "Peer is closed"
      IL_08f6:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_08fb:  throw

      IL_08fc:  ldarg.0
      IL_08fd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0902:  br.s       IL_08ba

      IL_0904:  ldarg.0
      IL_0905:  ldc.i4.s   36
      IL_0907:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_090c:  ldloc.s    V_26
      IL_090e:  ldc.i4.s   36
      IL_0910:  beq        IL_0932

      IL_0915:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_091a:  ldarg.0
      IL_091b:  volatile.
      IL_091d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0922:  box        [Corlib]System.Int32
      IL_0927:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_092c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0931:  throw

      IL_0932:  ldarg.1
      IL_0933:  ldarg.0
      IL_0934:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0939:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_093e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0943:  ldarg.0
      IL_0944:  ldc.i4.0
      IL_0945:  volatile.
      IL_0947:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_094c:  ldarg.0
      IL_094d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0952:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0958:  ldarg.0
      IL_0959:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_095e:  ldc.i4.s   30
      IL_0960:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0965:  br         IL_0ae0

      IL_096a:  ldc.i4.0
      IL_096b:  stloc.s    V_27
      IL_096d:  ldarg.0
      IL_096e:  volatile.
      IL_0970:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0975:  stloc.s    V_28
      IL_0977:  ldloc.s    V_28
      IL_0979:  brtrue     IL_0990

      IL_097e:  ldarg.0
      IL_097f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0984:  stloc.s    V_27
      IL_0986:  ldarg.0
      IL_0987:  volatile.
      IL_0989:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_098e:  stloc.s    V_28
      IL_0990:  ldloc.s    V_28
      IL_0992:  ldc.i4.0
      IL_0993:  ceq
      IL_0995:  brfalse    IL_09b4

      IL_099a:  ldloc.s    V_27
      IL_099c:  brfalse    IL_09ac

      IL_09a1:  ldstr      "Peer is closed"
      IL_09a6:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_09ab:  throw

      IL_09ac:  ldarg.0
      IL_09ad:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_09b2:  br.s       IL_096a

      IL_09b4:  ldarg.0
      IL_09b5:  ldc.i4.s   36
      IL_09b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_09bc:  ldloc.s    V_28
      IL_09be:  ldc.i4.s   36
      IL_09c0:  beq        IL_09e2

      IL_09c5:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_09ca:  ldarg.0
      IL_09cb:  volatile.
      IL_09cd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_09d2:  box        [Corlib]System.Int32
      IL_09d7:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_09dc:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_09e1:  throw

      IL_09e2:  ldarg.1
      IL_09e3:  ldarg.0
      IL_09e4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_09e9:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_09ee:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_09f3:  ldarg.0
      IL_09f4:  ldc.i4.0
      IL_09f5:  volatile.
      IL_09f7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_09fc:  ldarg.0
      IL_09fd:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0a02:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0a08:  ldarg.0
      IL_0a09:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0a0e:  ldc.i4.s   30
      IL_0a10:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0a15:  br         IL_0ae0

      IL_0a1a:  ldc.i4.0
      IL_0a1b:  stloc.s    V_29
      IL_0a1d:  ldarg.0
      IL_0a1e:  volatile.
      IL_0a20:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0a25:  stloc.s    V_30
      IL_0a27:  ldloc.s    V_30
      IL_0a29:  brtrue     IL_0a40

      IL_0a2e:  ldarg.0
      IL_0a2f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0a34:  stloc.s    V_29
      IL_0a36:  ldarg.0
      IL_0a37:  volatile.
      IL_0a39:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0a3e:  stloc.s    V_30
      IL_0a40:  ldloc.s    V_30
      IL_0a42:  ldc.i4.0
      IL_0a43:  ceq
      IL_0a45:  brfalse    IL_0a64

      IL_0a4a:  ldloc.s    V_29
      IL_0a4c:  brfalse    IL_0a5c

      IL_0a51:  ldstr      "Peer is closed"
      IL_0a56:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0a5b:  throw

      IL_0a5c:  ldarg.0
      IL_0a5d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0a62:  br.s       IL_0a1a

      IL_0a64:  ldarg.0
      IL_0a65:  ldc.i4.s   36
      IL_0a67:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0a6c:  ldloc.s    V_30
      IL_0a6e:  ldc.i4.s   36
      IL_0a70:  beq        IL_0a92

      IL_0a75:  ldstr      "can't recv RequestFailed when next message has tag "
      IL_0a7a:  ldarg.0
      IL_0a7b:  volatile.
      IL_0a7d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0a82:  box        [Corlib]System.Int32
      IL_0a87:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0a8c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0a91:  throw

      IL_0a92:  ldarg.1
      IL_0a93:  ldarg.0
      IL_0a94:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0a99:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_0a9e:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0aa3:  ldarg.0
      IL_0aa4:  ldc.i4.0
      IL_0aa5:  volatile.
      IL_0aa7:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0aac:  ldarg.0
      IL_0aad:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0ab2:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0ab8:  ldarg.0
      IL_0ab9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0abe:  ldc.i4.s   17
      IL_0ac0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0ac5:  br         IL_0ae0

      IL_0aca:  ldstr      "can't recv RequestFailed in state "
      IL_0acf:  ldarg.0
      IL_0ad0:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_0ad5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0ada:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0adf:  throw

      IL_0ae0:  ret
    } // end of method Imp::RecvRequestFailed

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1860 (0x744)
      .maxstack  26
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               bool V_41,
               int32 V_42,
               bool V_43,
               int32 V_44,
               bool V_45,
               int32 V_46,
               bool V_47,
               int32 V_48,
               int32 V_49)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_00c5

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0105

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_014d

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0195

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_01dd

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.s   9
      IL_0034:  beq        IL_0225

      IL_0039:  ldloc.1
      IL_003a:  ldc.i4.s   10
      IL_003c:  beq        IL_026d

      IL_0041:  ldloc.1
      IL_0042:  ldc.i4.s   12
      IL_0044:  beq        IL_02b5

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.s   14
      IL_004c:  beq        IL_02fd

      IL_0051:  ldloc.1
      IL_0052:  ldc.i4.s   16
      IL_0054:  beq        IL_0345

      IL_0059:  ldloc.1
      IL_005a:  ldc.i4.s   18
      IL_005c:  beq        IL_038d

      IL_0061:  ldloc.1
      IL_0062:  ldc.i4.s   20
      IL_0064:  beq        IL_03d5

      IL_0069:  ldloc.1
      IL_006a:  ldc.i4.s   22
      IL_006c:  beq        IL_041d

      IL_0071:  ldloc.1
      IL_0072:  ldc.i4.s   23
      IL_0074:  beq        IL_0465

      IL_0079:  ldloc.1
      IL_007a:  ldc.i4.s   24
      IL_007c:  beq        IL_04ad

      IL_0081:  ldloc.1
      IL_0082:  ldc.i4.s   25
      IL_0084:  beq        IL_04f5

      IL_0089:  ldloc.1
      IL_008a:  ldc.i4.s   26
      IL_008c:  beq        IL_053d

      IL_0091:  ldloc.1
      IL_0092:  ldc.i4.s   27
      IL_0094:  beq        IL_0585

      IL_0099:  ldloc.1
      IL_009a:  ldc.i4.s   29
      IL_009c:  beq        IL_05cd

      IL_00a1:  ldloc.1
      IL_00a2:  ldc.i4.s   30
      IL_00a4:  beq        IL_0615

      IL_00a9:  ldloc.1
      IL_00aa:  ldc.i4.s   31
      IL_00ac:  beq        IL_065d

      IL_00b1:  ldloc.1
      IL_00b2:  ldc.i4.s   32
      IL_00b4:  beq        IL_06a5

      IL_00b9:  ldloc.1
      IL_00ba:  ldc.i4.3
      IL_00bb:  beq        IL_06ed

      IL_00c0:  br         IL_0735

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.2
      IL_00c7:  ldarg.0
      IL_00c8:  volatile.
      IL_00ca:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00cf:  stloc.3
      IL_00d0:  ldloc.3
      IL_00d1:  brtrue     IL_00e6

      IL_00d6:  ldarg.0
      IL_00d7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00dc:  stloc.2
      IL_00dd:  ldarg.0
      IL_00de:  volatile.
      IL_00e0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_00e5:  stloc.3
      IL_00e6:  ldloc.3
      IL_00e7:  ldc.i4.0
      IL_00e8:  ceq
      IL_00ea:  brfalse    IL_00fd

      IL_00ef:  ldloc.2
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_073d

      IL_00fd:  ldloc.3
      IL_00fe:  stloc.s    V_4
      IL_0100:  br         IL_073d

      IL_0105:  ldc.i4.0
      IL_0106:  stloc.s    V_5
      IL_0108:  ldarg.0
      IL_0109:  volatile.
      IL_010b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0110:  stloc.s    V_6
      IL_0112:  ldloc.s    V_6
      IL_0114:  brtrue     IL_012b

      IL_0119:  ldarg.0
      IL_011a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_011f:  stloc.s    V_5
      IL_0121:  ldarg.0
      IL_0122:  volatile.
      IL_0124:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0129:  stloc.s    V_6
      IL_012b:  ldloc.s    V_6
      IL_012d:  ldc.i4.0
      IL_012e:  ceq
      IL_0130:  brfalse    IL_0144

      IL_0135:  ldloc.s    V_5
      IL_0137:  brfalse    IL_0144

      IL_013c:  ldc.i4.m1
      IL_013d:  stloc.s    V_4
      IL_013f:  br         IL_073d

      IL_0144:  ldloc.s    V_6
      IL_0146:  stloc.s    V_4
      IL_0148:  br         IL_073d

      IL_014d:  ldc.i4.0
      IL_014e:  stloc.s    V_7
      IL_0150:  ldarg.0
      IL_0151:  volatile.
      IL_0153:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0158:  stloc.s    V_8
      IL_015a:  ldloc.s    V_8
      IL_015c:  brtrue     IL_0173

      IL_0161:  ldarg.0
      IL_0162:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0167:  stloc.s    V_7
      IL_0169:  ldarg.0
      IL_016a:  volatile.
      IL_016c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0171:  stloc.s    V_8
      IL_0173:  ldloc.s    V_8
      IL_0175:  ldc.i4.0
      IL_0176:  ceq
      IL_0178:  brfalse    IL_018c

      IL_017d:  ldloc.s    V_7
      IL_017f:  brfalse    IL_018c

      IL_0184:  ldc.i4.m1
      IL_0185:  stloc.s    V_4
      IL_0187:  br         IL_073d

      IL_018c:  ldloc.s    V_8
      IL_018e:  stloc.s    V_4
      IL_0190:  br         IL_073d

      IL_0195:  ldc.i4.0
      IL_0196:  stloc.s    V_9
      IL_0198:  ldarg.0
      IL_0199:  volatile.
      IL_019b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01a0:  stloc.s    V_10
      IL_01a2:  ldloc.s    V_10
      IL_01a4:  brtrue     IL_01bb

      IL_01a9:  ldarg.0
      IL_01aa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01af:  stloc.s    V_9
      IL_01b1:  ldarg.0
      IL_01b2:  volatile.
      IL_01b4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01b9:  stloc.s    V_10
      IL_01bb:  ldloc.s    V_10
      IL_01bd:  ldc.i4.0
      IL_01be:  ceq
      IL_01c0:  brfalse    IL_01d4

      IL_01c5:  ldloc.s    V_9
      IL_01c7:  brfalse    IL_01d4

      IL_01cc:  ldc.i4.m1
      IL_01cd:  stloc.s    V_4
      IL_01cf:  br         IL_073d

      IL_01d4:  ldloc.s    V_10
      IL_01d6:  stloc.s    V_4
      IL_01d8:  br         IL_073d

      IL_01dd:  ldc.i4.0
      IL_01de:  stloc.s    V_11
      IL_01e0:  ldarg.0
      IL_01e1:  volatile.
      IL_01e3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_01e8:  stloc.s    V_12
      IL_01ea:  ldloc.s    V_12
      IL_01ec:  brtrue     IL_0203

      IL_01f1:  ldarg.0
      IL_01f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01f7:  stloc.s    V_11
      IL_01f9:  ldarg.0
      IL_01fa:  volatile.
      IL_01fc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0201:  stloc.s    V_12
      IL_0203:  ldloc.s    V_12
      IL_0205:  ldc.i4.0
      IL_0206:  ceq
      IL_0208:  brfalse    IL_021c

      IL_020d:  ldloc.s    V_11
      IL_020f:  brfalse    IL_021c

      IL_0214:  ldc.i4.m1
      IL_0215:  stloc.s    V_4
      IL_0217:  br         IL_073d

      IL_021c:  ldloc.s    V_12
      IL_021e:  stloc.s    V_4
      IL_0220:  br         IL_073d

      IL_0225:  ldc.i4.0
      IL_0226:  stloc.s    V_13
      IL_0228:  ldarg.0
      IL_0229:  volatile.
      IL_022b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0230:  stloc.s    V_14
      IL_0232:  ldloc.s    V_14
      IL_0234:  brtrue     IL_024b

      IL_0239:  ldarg.0
      IL_023a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_023f:  stloc.s    V_13
      IL_0241:  ldarg.0
      IL_0242:  volatile.
      IL_0244:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0249:  stloc.s    V_14
      IL_024b:  ldloc.s    V_14
      IL_024d:  ldc.i4.0
      IL_024e:  ceq
      IL_0250:  brfalse    IL_0264

      IL_0255:  ldloc.s    V_13
      IL_0257:  brfalse    IL_0264

      IL_025c:  ldc.i4.m1
      IL_025d:  stloc.s    V_4
      IL_025f:  br         IL_073d

      IL_0264:  ldloc.s    V_14
      IL_0266:  stloc.s    V_4
      IL_0268:  br         IL_073d

      IL_026d:  ldc.i4.0
      IL_026e:  stloc.s    V_15
      IL_0270:  ldarg.0
      IL_0271:  volatile.
      IL_0273:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0278:  stloc.s    V_16
      IL_027a:  ldloc.s    V_16
      IL_027c:  brtrue     IL_0293

      IL_0281:  ldarg.0
      IL_0282:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0287:  stloc.s    V_15
      IL_0289:  ldarg.0
      IL_028a:  volatile.
      IL_028c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0291:  stloc.s    V_16
      IL_0293:  ldloc.s    V_16
      IL_0295:  ldc.i4.0
      IL_0296:  ceq
      IL_0298:  brfalse    IL_02ac

      IL_029d:  ldloc.s    V_15
      IL_029f:  brfalse    IL_02ac

      IL_02a4:  ldc.i4.m1
      IL_02a5:  stloc.s    V_4
      IL_02a7:  br         IL_073d

      IL_02ac:  ldloc.s    V_16
      IL_02ae:  stloc.s    V_4
      IL_02b0:  br         IL_073d

      IL_02b5:  ldc.i4.0
      IL_02b6:  stloc.s    V_17
      IL_02b8:  ldarg.0
      IL_02b9:  volatile.
      IL_02bb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02c0:  stloc.s    V_18
      IL_02c2:  ldloc.s    V_18
      IL_02c4:  brtrue     IL_02db

      IL_02c9:  ldarg.0
      IL_02ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02cf:  stloc.s    V_17
      IL_02d1:  ldarg.0
      IL_02d2:  volatile.
      IL_02d4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_02d9:  stloc.s    V_18
      IL_02db:  ldloc.s    V_18
      IL_02dd:  ldc.i4.0
      IL_02de:  ceq
      IL_02e0:  brfalse    IL_02f4

      IL_02e5:  ldloc.s    V_17
      IL_02e7:  brfalse    IL_02f4

      IL_02ec:  ldc.i4.m1
      IL_02ed:  stloc.s    V_4
      IL_02ef:  br         IL_073d

      IL_02f4:  ldloc.s    V_18
      IL_02f6:  stloc.s    V_4
      IL_02f8:  br         IL_073d

      IL_02fd:  ldc.i4.0
      IL_02fe:  stloc.s    V_19
      IL_0300:  ldarg.0
      IL_0301:  volatile.
      IL_0303:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0308:  stloc.s    V_20
      IL_030a:  ldloc.s    V_20
      IL_030c:  brtrue     IL_0323

      IL_0311:  ldarg.0
      IL_0312:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0317:  stloc.s    V_19
      IL_0319:  ldarg.0
      IL_031a:  volatile.
      IL_031c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0321:  stloc.s    V_20
      IL_0323:  ldloc.s    V_20
      IL_0325:  ldc.i4.0
      IL_0326:  ceq
      IL_0328:  brfalse    IL_033c

      IL_032d:  ldloc.s    V_19
      IL_032f:  brfalse    IL_033c

      IL_0334:  ldc.i4.m1
      IL_0335:  stloc.s    V_4
      IL_0337:  br         IL_073d

      IL_033c:  ldloc.s    V_20
      IL_033e:  stloc.s    V_4
      IL_0340:  br         IL_073d

      IL_0345:  ldc.i4.0
      IL_0346:  stloc.s    V_21
      IL_0348:  ldarg.0
      IL_0349:  volatile.
      IL_034b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0350:  stloc.s    V_22
      IL_0352:  ldloc.s    V_22
      IL_0354:  brtrue     IL_036b

      IL_0359:  ldarg.0
      IL_035a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_035f:  stloc.s    V_21
      IL_0361:  ldarg.0
      IL_0362:  volatile.
      IL_0364:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0369:  stloc.s    V_22
      IL_036b:  ldloc.s    V_22
      IL_036d:  ldc.i4.0
      IL_036e:  ceq
      IL_0370:  brfalse    IL_0384

      IL_0375:  ldloc.s    V_21
      IL_0377:  brfalse    IL_0384

      IL_037c:  ldc.i4.m1
      IL_037d:  stloc.s    V_4
      IL_037f:  br         IL_073d

      IL_0384:  ldloc.s    V_22
      IL_0386:  stloc.s    V_4
      IL_0388:  br         IL_073d

      IL_038d:  ldc.i4.0
      IL_038e:  stloc.s    V_23
      IL_0390:  ldarg.0
      IL_0391:  volatile.
      IL_0393:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0398:  stloc.s    V_24
      IL_039a:  ldloc.s    V_24
      IL_039c:  brtrue     IL_03b3

      IL_03a1:  ldarg.0
      IL_03a2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03a7:  stloc.s    V_23
      IL_03a9:  ldarg.0
      IL_03aa:  volatile.
      IL_03ac:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03b1:  stloc.s    V_24
      IL_03b3:  ldloc.s    V_24
      IL_03b5:  ldc.i4.0
      IL_03b6:  ceq
      IL_03b8:  brfalse    IL_03cc

      IL_03bd:  ldloc.s    V_23
      IL_03bf:  brfalse    IL_03cc

      IL_03c4:  ldc.i4.m1
      IL_03c5:  stloc.s    V_4
      IL_03c7:  br         IL_073d

      IL_03cc:  ldloc.s    V_24
      IL_03ce:  stloc.s    V_4
      IL_03d0:  br         IL_073d

      IL_03d5:  ldc.i4.0
      IL_03d6:  stloc.s    V_25
      IL_03d8:  ldarg.0
      IL_03d9:  volatile.
      IL_03db:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03e0:  stloc.s    V_26
      IL_03e2:  ldloc.s    V_26
      IL_03e4:  brtrue     IL_03fb

      IL_03e9:  ldarg.0
      IL_03ea:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03ef:  stloc.s    V_25
      IL_03f1:  ldarg.0
      IL_03f2:  volatile.
      IL_03f4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_03f9:  stloc.s    V_26
      IL_03fb:  ldloc.s    V_26
      IL_03fd:  ldc.i4.0
      IL_03fe:  ceq
      IL_0400:  brfalse    IL_0414

      IL_0405:  ldloc.s    V_25
      IL_0407:  brfalse    IL_0414

      IL_040c:  ldc.i4.m1
      IL_040d:  stloc.s    V_4
      IL_040f:  br         IL_073d

      IL_0414:  ldloc.s    V_26
      IL_0416:  stloc.s    V_4
      IL_0418:  br         IL_073d

      IL_041d:  ldc.i4.0
      IL_041e:  stloc.s    V_27
      IL_0420:  ldarg.0
      IL_0421:  volatile.
      IL_0423:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0428:  stloc.s    V_28
      IL_042a:  ldloc.s    V_28
      IL_042c:  brtrue     IL_0443

      IL_0431:  ldarg.0
      IL_0432:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0437:  stloc.s    V_27
      IL_0439:  ldarg.0
      IL_043a:  volatile.
      IL_043c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0441:  stloc.s    V_28
      IL_0443:  ldloc.s    V_28
      IL_0445:  ldc.i4.0
      IL_0446:  ceq
      IL_0448:  brfalse    IL_045c

      IL_044d:  ldloc.s    V_27
      IL_044f:  brfalse    IL_045c

      IL_0454:  ldc.i4.m1
      IL_0455:  stloc.s    V_4
      IL_0457:  br         IL_073d

      IL_045c:  ldloc.s    V_28
      IL_045e:  stloc.s    V_4
      IL_0460:  br         IL_073d

      IL_0465:  ldc.i4.0
      IL_0466:  stloc.s    V_29
      IL_0468:  ldarg.0
      IL_0469:  volatile.
      IL_046b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0470:  stloc.s    V_30
      IL_0472:  ldloc.s    V_30
      IL_0474:  brtrue     IL_048b

      IL_0479:  ldarg.0
      IL_047a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_047f:  stloc.s    V_29
      IL_0481:  ldarg.0
      IL_0482:  volatile.
      IL_0484:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0489:  stloc.s    V_30
      IL_048b:  ldloc.s    V_30
      IL_048d:  ldc.i4.0
      IL_048e:  ceq
      IL_0490:  brfalse    IL_04a4

      IL_0495:  ldloc.s    V_29
      IL_0497:  brfalse    IL_04a4

      IL_049c:  ldc.i4.m1
      IL_049d:  stloc.s    V_4
      IL_049f:  br         IL_073d

      IL_04a4:  ldloc.s    V_30
      IL_04a6:  stloc.s    V_4
      IL_04a8:  br         IL_073d

      IL_04ad:  ldc.i4.0
      IL_04ae:  stloc.s    V_31
      IL_04b0:  ldarg.0
      IL_04b1:  volatile.
      IL_04b3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_04b8:  stloc.s    V_32
      IL_04ba:  ldloc.s    V_32
      IL_04bc:  brtrue     IL_04d3

      IL_04c1:  ldarg.0
      IL_04c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04c7:  stloc.s    V_31
      IL_04c9:  ldarg.0
      IL_04ca:  volatile.
      IL_04cc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_04d1:  stloc.s    V_32
      IL_04d3:  ldloc.s    V_32
      IL_04d5:  ldc.i4.0
      IL_04d6:  ceq
      IL_04d8:  brfalse    IL_04ec

      IL_04dd:  ldloc.s    V_31
      IL_04df:  brfalse    IL_04ec

      IL_04e4:  ldc.i4.m1
      IL_04e5:  stloc.s    V_4
      IL_04e7:  br         IL_073d

      IL_04ec:  ldloc.s    V_32
      IL_04ee:  stloc.s    V_4
      IL_04f0:  br         IL_073d

      IL_04f5:  ldc.i4.0
      IL_04f6:  stloc.s    V_33
      IL_04f8:  ldarg.0
      IL_04f9:  volatile.
      IL_04fb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0500:  stloc.s    V_34
      IL_0502:  ldloc.s    V_34
      IL_0504:  brtrue     IL_051b

      IL_0509:  ldarg.0
      IL_050a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_050f:  stloc.s    V_33
      IL_0511:  ldarg.0
      IL_0512:  volatile.
      IL_0514:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0519:  stloc.s    V_34
      IL_051b:  ldloc.s    V_34
      IL_051d:  ldc.i4.0
      IL_051e:  ceq
      IL_0520:  brfalse    IL_0534

      IL_0525:  ldloc.s    V_33
      IL_0527:  brfalse    IL_0534

      IL_052c:  ldc.i4.m1
      IL_052d:  stloc.s    V_4
      IL_052f:  br         IL_073d

      IL_0534:  ldloc.s    V_34
      IL_0536:  stloc.s    V_4
      IL_0538:  br         IL_073d

      IL_053d:  ldc.i4.0
      IL_053e:  stloc.s    V_35
      IL_0540:  ldarg.0
      IL_0541:  volatile.
      IL_0543:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0548:  stloc.s    V_36
      IL_054a:  ldloc.s    V_36
      IL_054c:  brtrue     IL_0563

      IL_0551:  ldarg.0
      IL_0552:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0557:  stloc.s    V_35
      IL_0559:  ldarg.0
      IL_055a:  volatile.
      IL_055c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0561:  stloc.s    V_36
      IL_0563:  ldloc.s    V_36
      IL_0565:  ldc.i4.0
      IL_0566:  ceq
      IL_0568:  brfalse    IL_057c

      IL_056d:  ldloc.s    V_35
      IL_056f:  brfalse    IL_057c

      IL_0574:  ldc.i4.m1
      IL_0575:  stloc.s    V_4
      IL_0577:  br         IL_073d

      IL_057c:  ldloc.s    V_36
      IL_057e:  stloc.s    V_4
      IL_0580:  br         IL_073d

      IL_0585:  ldc.i4.0
      IL_0586:  stloc.s    V_37
      IL_0588:  ldarg.0
      IL_0589:  volatile.
      IL_058b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0590:  stloc.s    V_38
      IL_0592:  ldloc.s    V_38
      IL_0594:  brtrue     IL_05ab

      IL_0599:  ldarg.0
      IL_059a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_059f:  stloc.s    V_37
      IL_05a1:  ldarg.0
      IL_05a2:  volatile.
      IL_05a4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_05a9:  stloc.s    V_38
      IL_05ab:  ldloc.s    V_38
      IL_05ad:  ldc.i4.0
      IL_05ae:  ceq
      IL_05b0:  brfalse    IL_05c4

      IL_05b5:  ldloc.s    V_37
      IL_05b7:  brfalse    IL_05c4

      IL_05bc:  ldc.i4.m1
      IL_05bd:  stloc.s    V_4
      IL_05bf:  br         IL_073d

      IL_05c4:  ldloc.s    V_38
      IL_05c6:  stloc.s    V_4
      IL_05c8:  br         IL_073d

      IL_05cd:  ldc.i4.0
      IL_05ce:  stloc.s    V_39
      IL_05d0:  ldarg.0
      IL_05d1:  volatile.
      IL_05d3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_05d8:  stloc.s    V_40
      IL_05da:  ldloc.s    V_40
      IL_05dc:  brtrue     IL_05f3

      IL_05e1:  ldarg.0
      IL_05e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05e7:  stloc.s    V_39
      IL_05e9:  ldarg.0
      IL_05ea:  volatile.
      IL_05ec:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_05f1:  stloc.s    V_40
      IL_05f3:  ldloc.s    V_40
      IL_05f5:  ldc.i4.0
      IL_05f6:  ceq
      IL_05f8:  brfalse    IL_060c

      IL_05fd:  ldloc.s    V_39
      IL_05ff:  brfalse    IL_060c

      IL_0604:  ldc.i4.m1
      IL_0605:  stloc.s    V_4
      IL_0607:  br         IL_073d

      IL_060c:  ldloc.s    V_40
      IL_060e:  stloc.s    V_4
      IL_0610:  br         IL_073d

      IL_0615:  ldc.i4.0
      IL_0616:  stloc.s    V_41
      IL_0618:  ldarg.0
      IL_0619:  volatile.
      IL_061b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0620:  stloc.s    V_42
      IL_0622:  ldloc.s    V_42
      IL_0624:  brtrue     IL_063b

      IL_0629:  ldarg.0
      IL_062a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_062f:  stloc.s    V_41
      IL_0631:  ldarg.0
      IL_0632:  volatile.
      IL_0634:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0639:  stloc.s    V_42
      IL_063b:  ldloc.s    V_42
      IL_063d:  ldc.i4.0
      IL_063e:  ceq
      IL_0640:  brfalse    IL_0654

      IL_0645:  ldloc.s    V_41
      IL_0647:  brfalse    IL_0654

      IL_064c:  ldc.i4.m1
      IL_064d:  stloc.s    V_4
      IL_064f:  br         IL_073d

      IL_0654:  ldloc.s    V_42
      IL_0656:  stloc.s    V_4
      IL_0658:  br         IL_073d

      IL_065d:  ldc.i4.0
      IL_065e:  stloc.s    V_43
      IL_0660:  ldarg.0
      IL_0661:  volatile.
      IL_0663:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0668:  stloc.s    V_44
      IL_066a:  ldloc.s    V_44
      IL_066c:  brtrue     IL_0683

      IL_0671:  ldarg.0
      IL_0672:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0677:  stloc.s    V_43
      IL_0679:  ldarg.0
      IL_067a:  volatile.
      IL_067c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0681:  stloc.s    V_44
      IL_0683:  ldloc.s    V_44
      IL_0685:  ldc.i4.0
      IL_0686:  ceq
      IL_0688:  brfalse    IL_069c

      IL_068d:  ldloc.s    V_43
      IL_068f:  brfalse    IL_069c

      IL_0694:  ldc.i4.m1
      IL_0695:  stloc.s    V_4
      IL_0697:  br         IL_073d

      IL_069c:  ldloc.s    V_44
      IL_069e:  stloc.s    V_4
      IL_06a0:  br         IL_073d

      IL_06a5:  ldc.i4.0
      IL_06a6:  stloc.s    V_45
      IL_06a8:  ldarg.0
      IL_06a9:  volatile.
      IL_06ab:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_06b0:  stloc.s    V_46
      IL_06b2:  ldloc.s    V_46
      IL_06b4:  brtrue     IL_06cb

      IL_06b9:  ldarg.0
      IL_06ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06bf:  stloc.s    V_45
      IL_06c1:  ldarg.0
      IL_06c2:  volatile.
      IL_06c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_06c9:  stloc.s    V_46
      IL_06cb:  ldloc.s    V_46
      IL_06cd:  ldc.i4.0
      IL_06ce:  ceq
      IL_06d0:  brfalse    IL_06e4

      IL_06d5:  ldloc.s    V_45
      IL_06d7:  brfalse    IL_06e4

      IL_06dc:  ldc.i4.m1
      IL_06dd:  stloc.s    V_4
      IL_06df:  br         IL_073d

      IL_06e4:  ldloc.s    V_46
      IL_06e6:  stloc.s    V_4
      IL_06e8:  br         IL_073d

      IL_06ed:  ldc.i4.0
      IL_06ee:  stloc.s    V_47
      IL_06f0:  ldarg.0
      IL_06f1:  volatile.
      IL_06f3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_06f8:  stloc.s    V_48
      IL_06fa:  ldloc.s    V_48
      IL_06fc:  brtrue     IL_0713

      IL_0701:  ldarg.0
      IL_0702:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0707:  stloc.s    V_47
      IL_0709:  ldarg.0
      IL_070a:  volatile.
      IL_070c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0711:  stloc.s    V_48
      IL_0713:  ldloc.s    V_48
      IL_0715:  ldc.i4.0
      IL_0716:  ceq
      IL_0718:  brfalse    IL_072c

      IL_071d:  ldloc.s    V_47
      IL_071f:  brfalse    IL_072c

      IL_0724:  ldc.i4.m1
      IL_0725:  stloc.s    V_4
      IL_0727:  br         IL_073d

      IL_072c:  ldloc.s    V_48
      IL_072e:  stloc.s    V_4
      IL_0730:  br         IL_073d

      IL_0735:  ldc.i4.m1
      IL_0736:  stloc.s    V_4
      IL_0738:  br         IL_073d

      IL_073d:  ldloc.s    V_4
      IL_073f:  stloc.s    V_49
      IL_0741:  ldloc.s    V_4
      IL_0743:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverSuccess0$PST06000080() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverSuccess0

    .method privatescope instance void  MarshallDeliverSuccess0$PST06000081(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverSuccess0$PST06000080()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::SuccessPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverSuccess0

    .method privatescope instance void  DeliverEnumerationTerminated0$PST06000082(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                                                  int32 count) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::EnumerationTerminatedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::EnumerationTerminatedPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::count
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.5
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.5
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0028:  ret
    } // end of method Imp::DeliverEnumerationTerminated0

    .method privatescope instance void  MarshallDeliverEnumerationTerminated0$PST06000083(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                                                          int32 count,
                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverEnumerationTerminated0$PST06000082(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                    int32)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::EnumerationTerminatedPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::MarshallAll(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverEnumerationTerminated0

    .method privatescope instance void  DeliverNextServiceInfo0$PST06000084(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                                            int32 count) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       41 (0x29)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::NextServiceInfoPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::NextServiceInfoPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::count
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.6
      IL_001a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_001f:  ldarg.0
      IL_0020:  ldc.i4.6
      IL_0021:  volatile.
      IL_0023:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0028:  ret
    } // end of method Imp::DeliverNextServiceInfo0

    .method privatescope instance void  MarshallDeliverNextServiceInfo0$PST06000085(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                                                    int32 count,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverNextServiceInfo0$PST06000084(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              int32)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::NextServiceInfoPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverNextServiceInfo0

    .method privatescope instance void  DeliverServiceManagerChanged0$PST06000086(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceManagerChangedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged::mask
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverServiceManagerChanged0

    .method privatescope instance void  MarshallDeliverServiceManagerChanged0$PST06000087(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask,
                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceManagerChanged0$PST06000086(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceManagerChangedPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged::MarshallAll(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverServiceManagerChanged0

    .method privatescope instance void  DeliverCurrentServiceConfig0$PST06000088(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceConfigPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::config
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   26
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   26
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverCurrentServiceConfig0

    .method privatescope instance void  MarshallDeliverCurrentServiceConfig0$PST06000089(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverCurrentServiceConfig0$PST06000088(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceConfigPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::MarshallAll(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverCurrentServiceConfig0

    .method privatescope instance void  DeliverCurrentServiceStatus0$PST0600008A(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceStatusPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus::status
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   27
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   27
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverCurrentServiceStatus0

    .method privatescope instance void  MarshallDeliverCurrentServiceStatus0$PST0600008B(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverCurrentServiceStatus0$PST0600008A(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::CurrentServiceStatusPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus::MarshallAll(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverCurrentServiceStatus0

    .method privatescope instance void  DeliverServiceStarting0$PST0600008C() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   28
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   28
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverServiceStarting0

    .method privatescope instance void  MarshallDeliverServiceStarting0$PST0600008D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStarting0$PST0600008C()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStartingPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverServiceStarting0

    .method privatescope instance void  DeliverServiceStarted0$PST0600008E() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   29
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   29
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverServiceStarted0

    .method privatescope instance void  MarshallDeliverServiceStarted0$PST0600008F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStarted0$PST0600008E()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStartedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverServiceStarted0

    .method privatescope instance void  DeliverServiceStopping0$PST06000090() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   30
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   30
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverServiceStopping0

    .method privatescope instance void  MarshallDeliverServiceStopping0$PST06000091(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStopping0$PST06000090()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStoppingPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverServiceStopping0

    .method privatescope instance void  DeliverServiceStopped0$PST06000092() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   31
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   31
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverServiceStopped0

    .method privatescope instance void  MarshallDeliverServiceStopped0$PST06000093(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStopped0$PST06000092()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStoppedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverServiceStopped0

    .method privatescope instance void  DeliverServiceStatusChanged0$PST06000094(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status,
                                                                                 bool missedChanges) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStatusChangedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::status
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStatusChangedPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      bool Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::missedChanges
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   34
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   34
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverServiceStatusChanged0

    .method privatescope instance void  MarshallDeliverServiceStatusChanged0$PST06000095(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status,
                                                                                         bool missedChanges,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStatusChanged0$PST06000094(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus,
                                                                                                                                                   bool)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ServiceStatusChangedPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::MarshallAll(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverServiceStatusChanged0

    .method privatescope instance void  DeliverOk0$PST06000096() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   35
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   35
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverOk0

    .method privatescope instance void  MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::OkPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok::MarshallAll(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverOk0

    .method privatescope instance void  DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError err) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::err
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   36
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   36
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverRequestFailed0

    .method privatescope instance void  MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError err,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::RequestFailedPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverRequestFailed0

    .method privatescope instance void  DeliverContractNotSupported0$PST0600009A() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST0600009B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverContractNotSupported0$PST0600009A()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration EndEnumerationPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager WatchServiceManagerPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices EnumerateServicesPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices EnumerateServicesPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService CreateServicePod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService SelectServicePod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager StopWatchingServiceManagerPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange WaitNextServiceManagerChangePod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait StartServiceNoWaitPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait StartServiceWaitPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait StopServiceWaitPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait StopServiceNoWaitPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService DeleteServicePod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService UnselectServicePod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig QueryServiceConfigPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus QueryServiceStatusPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus WatchServiceStatusPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService EnableServicePod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses TerminateServiceAllProcessesPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess TerminateServiceProcessPod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange WaitServiceChangePod1
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService StopWatchingServicePod1
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::CanonicalState$PST0600003C(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::CanonicalState$PST0600003C(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       614 (0x266)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  beq        IL_0102

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   31
      IL_0017:  beq        IL_010d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   30
      IL_001f:  beq        IL_0118

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   29
      IL_0027:  beq        IL_0123

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   28
      IL_002f:  beq        IL_012e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   27
      IL_0037:  beq        IL_0139

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   26
      IL_003f:  beq        IL_0144

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   25
      IL_0047:  beq        IL_014f

      IL_004c:  ldloc.0
      IL_004d:  ldc.i4.s   24
      IL_004f:  beq        IL_015a

      IL_0054:  ldloc.0
      IL_0055:  ldc.i4.s   23
      IL_0057:  beq        IL_0165

      IL_005c:  ldloc.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  beq        IL_0170

      IL_0064:  ldloc.0
      IL_0065:  ldc.i4.s   21
      IL_0067:  beq        IL_017b

      IL_006c:  ldloc.0
      IL_006d:  ldc.i4.s   20
      IL_006f:  beq        IL_0186

      IL_0074:  ldloc.0
      IL_0075:  ldc.i4.s   19
      IL_0077:  beq        IL_0191

      IL_007c:  ldloc.0
      IL_007d:  ldc.i4.s   18
      IL_007f:  beq        IL_019c

      IL_0084:  ldloc.0
      IL_0085:  ldc.i4.s   17
      IL_0087:  beq        IL_01a7

      IL_008c:  ldloc.0
      IL_008d:  ldc.i4.s   16
      IL_008f:  beq        IL_01b2

      IL_0094:  ldloc.0
      IL_0095:  ldc.i4.s   15
      IL_0097:  beq        IL_01bd

      IL_009c:  ldloc.0
      IL_009d:  ldc.i4.s   14
      IL_009f:  beq        IL_01c8

      IL_00a4:  ldloc.0
      IL_00a5:  ldc.i4.s   13
      IL_00a7:  beq        IL_01d3

      IL_00ac:  ldloc.0
      IL_00ad:  ldc.i4.s   12
      IL_00af:  beq        IL_01de

      IL_00b4:  ldloc.0
      IL_00b5:  ldc.i4.s   11
      IL_00b7:  beq        IL_01e9

      IL_00bc:  ldloc.0
      IL_00bd:  ldc.i4.s   10
      IL_00bf:  beq        IL_01f4

      IL_00c4:  ldloc.0
      IL_00c5:  ldc.i4.s   9
      IL_00c7:  beq        IL_01ff

      IL_00cc:  ldloc.0
      IL_00cd:  ldc.i4.8
      IL_00ce:  beq        IL_020a

      IL_00d3:  ldloc.0
      IL_00d4:  ldc.i4.7
      IL_00d5:  beq        IL_0215

      IL_00da:  ldloc.0
      IL_00db:  ldc.i4.6
      IL_00dc:  beq        IL_0220

      IL_00e1:  ldloc.0
      IL_00e2:  ldc.i4.5
      IL_00e3:  beq        IL_022b

      IL_00e8:  ldloc.0
      IL_00e9:  ldc.i4.4
      IL_00ea:  beq        IL_0236

      IL_00ef:  ldloc.0
      IL_00f0:  ldc.i4.3
      IL_00f1:  beq        IL_0241

      IL_00f6:  ldloc.0
      IL_00f7:  ldc.i4.2
      IL_00f8:  beq        IL_024c

      IL_00fd:  br         IL_0257

      IL_0102:  ldstr      "EnumeratingServices"
      IL_0107:  stloc.1
      IL_0108:  br         IL_0262

      IL_010d:  ldstr      "EnumerateAck"
      IL_0112:  stloc.1
      IL_0113:  br         IL_0262

      IL_0118:  ldstr      "Ready"
      IL_011d:  stloc.1
      IL_011e:  br         IL_0262

      IL_0123:  ldstr      "Ready$0"
      IL_0128:  stloc.1
      IL_0129:  br         IL_0262

      IL_012e:  ldstr      "Ready$1"
      IL_0133:  stloc.1
      IL_0134:  br         IL_0262

      IL_0139:  ldstr      "SelectingService"
      IL_013e:  stloc.1
      IL_013f:  br         IL_0262

      IL_0144:  ldstr      "RequestingWatchServiceManager"
      IL_0149:  stloc.1
      IL_014a:  br         IL_0262

      IL_014f:  ldstr      "ReadyWatchServiceManager"
      IL_0154:  stloc.1
      IL_0155:  br         IL_0262

      IL_015a:  ldstr      "WaitingServiceManagerChange"
      IL_015f:  stloc.1
      IL_0160:  br         IL_0262

      IL_0165:  ldstr      "ServiceSelected"
      IL_016a:  stloc.1
      IL_016b:  br         IL_0262

      IL_0170:  ldstr      "ServiceSelected$2"
      IL_0175:  stloc.1
      IL_0176:  br         IL_0262

      IL_017b:  ldstr      "ServiceSelected$3"
      IL_0180:  stloc.1
      IL_0181:  br         IL_0262

      IL_0186:  ldstr      "ServiceSelected$4"
      IL_018b:  stloc.1
      IL_018c:  br         IL_0262

      IL_0191:  ldstr      "ServiceSelected$5"
      IL_0196:  stloc.1
      IL_0197:  br         IL_0262

      IL_019c:  ldstr      "ServiceSelected$6"
      IL_01a1:  stloc.1
      IL_01a2:  br         IL_0262

      IL_01a7:  ldstr      "ServiceSelected$7"
      IL_01ac:  stloc.1
      IL_01ad:  br         IL_0262

      IL_01b2:  ldstr      "ServiceSelected$8"
      IL_01b7:  stloc.1
      IL_01b8:  br         IL_0262

      IL_01bd:  ldstr      "ServiceSelected$9"
      IL_01c2:  stloc.1
      IL_01c3:  br         IL_0262

      IL_01c8:  ldstr      "ServiceSelected$10"
      IL_01cd:  stloc.1
      IL_01ce:  br         IL_0262

      IL_01d3:  ldstr      "ServiceSelected$11"
      IL_01d8:  stloc.1
      IL_01d9:  br         IL_0262

      IL_01de:  ldstr      "ServiceSelected$12"
      IL_01e3:  stloc.1
      IL_01e4:  br         IL_0262

      IL_01e9:  ldstr      "ServiceSelected$13"
      IL_01ee:  stloc.1
      IL_01ef:  br         IL_0262

      IL_01f4:  ldstr      "RequestingWatchServiceStatus"
      IL_01f9:  stloc.1
      IL_01fa:  br         IL_0262

      IL_01ff:  ldstr      "StartingServiceWait"
      IL_0204:  stloc.1
      IL_0205:  br         IL_0262

      IL_020a:  ldstr      "StartingServiceNoWait"
      IL_020f:  stloc.1
      IL_0210:  br         IL_0262

      IL_0215:  ldstr      "StoppingServiceWait"
      IL_021a:  stloc.1
      IL_021b:  br         IL_0262

      IL_0220:  ldstr      "StoppingServiceNoWait"
      IL_0225:  stloc.1
      IL_0226:  br         IL_0262

      IL_022b:  ldstr      "ReadyWatchService"
      IL_0230:  stloc.1
      IL_0231:  br         IL_0262

      IL_0236:  ldstr      "WaitingServiceChange"
      IL_023b:  stloc.1
      IL_023c:  br         IL_0262

      IL_0241:  ldstr      "Start"
      IL_0246:  stloc.1
      IL_0247:  br         IL_0262

      IL_024c:  ldstr      "DoneState"
      IL_0251:  stloc.1
      IL_0252:  br         IL_0262

      IL_0257:  ldstr      "<protocol terminated>"
      IL_025c:  stloc.1
      IL_025d:  br         IL_0262

      IL_0262:  ldloc.1
      IL_0263:  stloc.2
      IL_0264:  ldloc.1
      IL_0265:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendSuccess() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverSuccess0$PST06000080()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverSuccess0$PST06000081(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   30
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Success in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendSuccess

    .method public instance void  RecvEndEnumeration() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv EndEnumeration when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EndEnumerationPod1
      IL_0096:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   30
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv EndEnumeration in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvEndEnumeration

    .method public instance void  SendEnumerationTerminated(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                            int32 count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0072

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldloc.s    V_4
      IL_0034:  ldarg.1
      IL_0035:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  ldarg.2
      IL_0042:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverEnumerationTerminated0$PST06000082(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                    int32)
      IL_0047:  br         IL_005a

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.2
      IL_0054:  ldarg.0
      IL_0055:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverEnumerationTerminated0$PST06000083(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                            int32,
                                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0060:  ldarg.0
      IL_0061:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0066:  ldc.i4.s   30
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send EnumerationTerminated in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendEnumerationTerminated

    .method public instance void  SendNextServiceInfo(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                      int32 count) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   32
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0072

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldloc.s    V_4
      IL_0034:  ldarg.1
      IL_0035:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  ldarg.2
      IL_0042:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverNextServiceInfo0$PST06000084(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              int32)
      IL_0047:  br         IL_005a

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.2
      IL_0054:  ldarg.0
      IL_0055:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverNextServiceInfo0$PST06000085(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                      int32,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0060:  ldarg.0
      IL_0061:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0066:  ldc.i4.s   31
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send NextServiceInfo in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendNextServiceInfo

    .method public instance void  RecvWatchServiceManager([out] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask& mask) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       214 (0xd6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bf

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.7
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.7
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv WatchServiceManager when next message h"
      + "as tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WatchServiceManagerPod0
      IL_008e:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager::mask
      IL_0093:  stobj      Microsoft.Singularity.ServiceManager.ServiceManagerEventMask
      IL_0098:  ldarg.0
      IL_0099:  ldc.i4.0
      IL_009a:  volatile.
      IL_009c:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WatchServiceManagerPod0
      IL_00a7:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.s   26
      IL_00b5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ba:  br         IL_00d5

      IL_00bf:  ldstr      "can't recv WatchServiceManager in state "
      IL_00c4:  ldarg.0
      IL_00c5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00ca:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d4:  throw

      IL_00d5:  ret
    } // end of method Exp::RecvWatchServiceManager

    .method public instance void  RecvEnumerateServices([out] valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& infos) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       385 (0x181)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   31
      IL_000f:  beq        IL_0021

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   30
      IL_0017:  beq        IL_00c3

      IL_001c:  br         IL_016a

      IL_0021:  ldc.i4.0
      IL_0022:  stloc.1
      IL_0023:  ldarg.0
      IL_0024:  volatile.
      IL_0026:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_002b:  stloc.2
      IL_002c:  ldloc.2
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldarg.0
      IL_0033:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  ldc.i4.0
      IL_0044:  ceq
      IL_0046:  brfalse    IL_0064

      IL_004b:  ldloc.1
      IL_004c:  brfalse    IL_005c

      IL_0051:  ldstr      "Peer is closed"
      IL_0056:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_005b:  throw

      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0062:  br.s       IL_0021

      IL_0064:  ldarg.0
      IL_0065:  ldc.i4.8
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006b:  ldloc.2
      IL_006c:  ldc.i4.8
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv EnumerateServices when next message has"
      + " tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_007f:  box        [Corlib]System.Int32
      IL_0084:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod1
      IL_0096:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_009b:  stind.i
      IL_009c:  ldarg.0
      IL_009d:  ldc.i4.0
      IL_009e:  volatile.
      IL_00a0:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_00a5:  ldarg.0
      IL_00a6:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod1
      IL_00ab:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices
      IL_00b1:  ldarg.0
      IL_00b2:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b7:  ldc.i4.s   32
      IL_00b9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00be:  br         IL_0180

      IL_00c3:  ldc.i4.0
      IL_00c4:  stloc.3
      IL_00c5:  ldarg.0
      IL_00c6:  volatile.
      IL_00c8:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00cd:  stloc.s    V_4
      IL_00cf:  ldloc.s    V_4
      IL_00d1:  brtrue     IL_00e7

      IL_00d6:  ldarg.0
      IL_00d7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00dc:  stloc.3
      IL_00dd:  ldarg.0
      IL_00de:  volatile.
      IL_00e0:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e5:  stloc.s    V_4
      IL_00e7:  ldloc.s    V_4
      IL_00e9:  ldc.i4.0
      IL_00ea:  ceq
      IL_00ec:  brfalse    IL_010a

      IL_00f1:  ldloc.3
      IL_00f2:  brfalse    IL_0102

      IL_00f7:  ldstr      "Peer is closed"
      IL_00fc:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0101:  throw

      IL_0102:  ldarg.0
      IL_0103:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0108:  br.s       IL_00c3

      IL_010a:  ldarg.0
      IL_010b:  ldc.i4.8
      IL_010c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0111:  ldloc.s    V_4
      IL_0113:  ldc.i4.8
      IL_0114:  beq        IL_0136

      IL_0119:  ldstr      "can't recv EnumerateServices when next message has"
      + " tag "
      IL_011e:  ldarg.0
      IL_011f:  volatile.
      IL_0121:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0126:  box        [Corlib]System.Int32
      IL_012b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0130:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0135:  throw

      IL_0136:  ldarg.1
      IL_0137:  ldarg.0
      IL_0138:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod0
      IL_013d:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_0142:  stind.i
      IL_0143:  ldarg.0
      IL_0144:  ldc.i4.0
      IL_0145:  volatile.
      IL_0147:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_014c:  ldarg.0
      IL_014d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod0
      IL_0152:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices
      IL_0158:  ldarg.0
      IL_0159:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015e:  ldc.i4.s   32
      IL_0160:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0165:  br         IL_0180

      IL_016a:  ldstr      "can't recv EnumerateServices in state "
      IL_016f:  ldarg.0
      IL_0170:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0175:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_017a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_017f:  throw

      IL_0180:  ret
    } // end of method Exp::RecvEnumerateServices

    .method public instance void  RecvCreateService([out] valuetype Microsoft.Singularity.ServiceManager.ServiceConfig& config) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CreateService when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CreateServicePod0
      IL_0090:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::config
      IL_0095:  stobj      Microsoft.Singularity.ServiceManager.ServiceConfig
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CreateServicePod0
      IL_00a9:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   29
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv CreateService in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Exp::RecvCreateService

    .method public instance void  RecvSelectService([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& serviceName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   30
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv SelectService when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::SelectServicePod0
      IL_0090:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::SelectServicePod0
      IL_00a5:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   27
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv SelectService in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvSelectService

    .method public instance void  RecvStopWatchingServiceManager() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StopWatchingServiceManager when next me"
      + "ssage has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopWatchingServiceManagerPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   30
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv StopWatchingServiceManager in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvStopWatchingServiceManager

    .method public instance void  RecvWaitNextServiceManagerChange() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv WaitNextServiceManagerChange when next "
      + "message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WaitNextServiceManagerChangePod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   24
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv WaitNextServiceManagerChange in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvWaitNextServiceManagerChange

    .method public instance void  SendServiceManagerChanged(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   24
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceManagerChanged0$PST06000086(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverServiceManagerChanged0$PST06000087(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask,
                                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   25
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send ServiceManagerChanged in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Exp::SendServiceManagerChanged

    .method public instance void  RecvStartServiceNoWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StartServiceNoWait when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StartServiceNoWaitPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.8
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv StartServiceNoWait in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvStartServiceNoWait

    .method public instance void  RecvStartServiceWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StartServiceWait when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StartServiceWaitPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   9
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv StartServiceWait in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvStartServiceWait

    .method public instance void  RecvStopServiceWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   16
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   16
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StopServiceWait when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopServiceWaitPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.7
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv StopServiceWait in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvStopServiceWait

    .method public instance void  RecvStopServiceNoWait() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   17
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   17
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv StopServiceNoWait when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopServiceNoWaitPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.6
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv StopServiceNoWait in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvStopServiceNoWait

    .method public instance void  RecvDeleteService() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 12 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   18
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   18
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv DeleteService when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeleteServicePod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   18
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv DeleteService in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvDeleteService

    .method public instance void  RecvUnselectService() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 13 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   19
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   19
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv UnselectService when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::UnselectServicePod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   30
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv UnselectService in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvUnselectService

    .method public instance void  RecvQueryServiceConfig() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 14 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   20
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   20
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv QueryServiceConfig when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::QueryServiceConfigPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   20
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv QueryServiceConfig in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvQueryServiceConfig

    .method public instance void  RecvQueryServiceStatus() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 15 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   21
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   21
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv QueryServiceStatus when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::QueryServiceStatusPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   22
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv QueryServiceStatus in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvQueryServiceStatus

    .method public instance void  RecvWatchServiceStatus() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 16 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   22
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   22
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv WatchServiceStatus when next message ha"
      + "s tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WatchServiceStatusPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   10
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv WatchServiceStatus in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvWatchServiceStatus

    .method public instance void  RecvEnableService([out] bool& enable) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 17 00 00 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00c1

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   23
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   23
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv EnableService when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnableServicePod1
      IL_0090:  ldfld      bool Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService::enable
      IL_0095:  stobj      [Corlib]System.Boolean
      IL_009a:  ldarg.0
      IL_009b:  ldc.i4.0
      IL_009c:  volatile.
      IL_009e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_00a3:  ldarg.0
      IL_00a4:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnableServicePod1
      IL_00a9:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b5:  ldc.i4.s   16
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't recv EnableService in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Exp::RecvEnableService

    .method public instance void  RecvTerminateServiceAllProcesses() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 18 00 00 00 00 00 ) 
      // Code size       199 (0xc7)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00b0

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   24
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   24
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv TerminateServiceAllProcesses when next "
      + "message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TerminateServiceAllProcessesPod1
      IL_0098:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.s   14
      IL_00a6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ab:  br         IL_00c6

      IL_00b0:  ldstr      "can't recv TerminateServiceAllProcesses in state "
      IL_00b5:  ldarg.0
      IL_00b6:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00bb:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c0:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c5:  throw

      IL_00c6:  ret
    } // end of method Exp::RecvTerminateServiceAllProcesses

    .method public instance void  RecvTerminateServiceProcess([out] int32& processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 19 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   25
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   25
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv TerminateServiceProcess when next messa"
      + "ge has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TerminateServiceProcessPod1
      IL_0090:  ldfld      int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess::processId
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TerminateServiceProcessPod1
      IL_00a5:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   12
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv TerminateServiceProcess in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvTerminateServiceProcess

    .method public instance void  SendCurrentServiceConfig(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1A 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   20
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0071

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   config
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverCurrentServiceConfig0$PST06000088(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverCurrentServiceConfig0$PST06000089(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig,
                                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.s   19
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send CurrentServiceConfig in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_007c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Exp::SendCurrentServiceConfig

    .method public instance void  SendCurrentServiceStatus(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1B 00 00 00 00 00 ) 
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   22
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0071

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004c

      IL_0032:  ldarga.s   status
      IL_0034:  ldloc.s    V_4
      IL_0036:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003b:  ldloc.3
      IL_003c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0041:  ldarg.1
      IL_0042:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverCurrentServiceStatus0$PST0600008A(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus)
      IL_0047:  br         IL_0059

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.0
      IL_0054:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverCurrentServiceStatus0$PST0600008B(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus,
                                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0059:  ldarg.0
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005f:  ldarg.0
      IL_0060:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0065:  ldc.i4.s   21
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send CurrentServiceStatus in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_007c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Exp::SendCurrentServiceStatus

    .method public instance void  SendServiceStarting() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1C 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStarting0$PST0600008C()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverServiceStarting0$PST0600008D(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   23
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send ServiceStarting in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendServiceStarting

    .method public instance void  SendServiceStarted() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1D 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStarted0$PST0600008E()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverServiceStarted0$PST0600008F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   23
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send ServiceStarted in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendServiceStarted

    .method public instance void  SendServiceStopping() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1E 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStopping0$PST06000090()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverServiceStopping0$PST06000091(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   23
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send ServiceStopping in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendServiceStopping

    .method public instance void  SendServiceStopped() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 1F 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStopped0$PST06000092()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverServiceStopped0$PST06000093(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   23
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send ServiceStopped in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendServiceStopped

    .method public instance void  RecvWaitServiceChange() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 20 00 00 00 00 00 )                         // .. .....
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   32
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   32
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv WaitServiceChange when next message has"
      + " tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WaitServiceChangePod1
      IL_0097:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.4
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv WaitServiceChange in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvWaitServiceChange

    .method public instance void  RecvStopWatchingService() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 21 00 00 00 00 00 )                         // ..!.....
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00af

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   33
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   33
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv StopWatchingService when next message h"
      + "as tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopWatchingServicePod1
      IL_0097:  initobj    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.s   30
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv StopWatchingService in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvStopWatchingService

    .method public instance void  SendServiceStatusChanged(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status,
                                                           bool missedChanges) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 22 00 00 00 00 00 )                         // ..".....
      // Code size       136 (0x88)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0071

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004c

      IL_0031:  ldarga.s   status
      IL_0033:  ldloc.s    V_4
      IL_0035:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_003a:  ldloc.3
      IL_003b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0040:  ldarg.1
      IL_0041:  ldarg.2
      IL_0042:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverServiceStatusChanged0$PST06000094(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus,
                                                                                                                                                   bool)
      IL_0047:  br         IL_005a

      IL_004c:  ldloc.3
      IL_004d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0052:  ldarg.1
      IL_0053:  ldarg.2
      IL_0054:  ldarg.0
      IL_0055:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverServiceStatusChanged0$PST06000095(valuetype Microsoft.Singularity.ServiceManager.ServiceStatus,
                                                                                                                                                           bool,
                                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0060:  ldarg.0
      IL_0061:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0066:  ldc.i4.5
      IL_0067:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006c:  br         IL_0087

      IL_0071:  ldstr      "can't send ServiceStatusChanged in state "
      IL_0076:  ldarg.0
      IL_0077:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_007c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0081:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ret
    } // end of method Exp::SendServiceStatusChanged

    .method public instance void  SendOk() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 23 00 00 00 00 00 )                         // ..#.....
      // Code size       768 (0x300)
      .maxstack  45
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24,
               bool V_25,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_26,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_27,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_28,
               bool V_29,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_30,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_31,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_32)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0051

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   29
      IL_0017:  beq        IL_009e

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   16
      IL_001f:  beq        IL_00f2

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   26
      IL_0027:  beq        IL_0146

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   14
      IL_002f:  beq        IL_019a

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   27
      IL_0037:  beq        IL_01ee

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   10
      IL_003f:  beq        IL_0242

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.s   18
      IL_0047:  beq        IL_0295

      IL_004c:  br         IL_02e9

      IL_0051:  ldarg.0
      IL_0052:  ldloca.s   V_1
      IL_0054:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0059:  stloc.2
      IL_005a:  ldloc.2
      IL_005b:  stloc.3
      IL_005c:  ldloc.3
      IL_005d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0062:  stloc.s    V_4
      IL_0064:  ldloc.1
      IL_0065:  brtrue     IL_007a

      IL_006a:  ldloc.3
      IL_006b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0070:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_0075:  br         IL_0086

      IL_007a:  ldloc.3
      IL_007b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0080:  ldarg.0
      IL_0081:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0086:  ldarg.0
      IL_0087:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_008c:  ldarg.0
      IL_008d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0092:  ldc.i4.s   11
      IL_0094:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0099:  br         IL_02ff

      IL_009e:  ldarg.0
      IL_009f:  ldloca.s   V_5
      IL_00a1:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00a6:  stloc.s    V_6
      IL_00a8:  ldloc.s    V_6
      IL_00aa:  stloc.s    V_7
      IL_00ac:  ldloc.s    V_7
      IL_00ae:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00b3:  stloc.s    V_8
      IL_00b5:  ldloc.s    V_5
      IL_00b7:  brtrue     IL_00cd

      IL_00bc:  ldloc.s    V_7
      IL_00be:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00c3:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_00c8:  br         IL_00da

      IL_00cd:  ldloc.s    V_7
      IL_00cf:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00d4:  ldarg.0
      IL_00d5:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00da:  ldarg.0
      IL_00db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00e0:  ldarg.0
      IL_00e1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00e6:  ldc.i4.s   28
      IL_00e8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ed:  br         IL_02ff

      IL_00f2:  ldarg.0
      IL_00f3:  ldloca.s   V_9
      IL_00f5:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00fa:  stloc.s    V_10
      IL_00fc:  ldloc.s    V_10
      IL_00fe:  stloc.s    V_11
      IL_0100:  ldloc.s    V_11
      IL_0102:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0107:  stloc.s    V_12
      IL_0109:  ldloc.s    V_9
      IL_010b:  brtrue     IL_0121

      IL_0110:  ldloc.s    V_11
      IL_0112:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0117:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_011c:  br         IL_012e

      IL_0121:  ldloc.s    V_11
      IL_0123:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0128:  ldarg.0
      IL_0129:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_012e:  ldarg.0
      IL_012f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0134:  ldarg.0
      IL_0135:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_013a:  ldc.i4.s   15
      IL_013c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0141:  br         IL_02ff

      IL_0146:  ldarg.0
      IL_0147:  ldloca.s   V_13
      IL_0149:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_014e:  stloc.s    V_14
      IL_0150:  ldloc.s    V_14
      IL_0152:  stloc.s    V_15
      IL_0154:  ldloc.s    V_15
      IL_0156:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_015b:  stloc.s    V_16
      IL_015d:  ldloc.s    V_13
      IL_015f:  brtrue     IL_0175

      IL_0164:  ldloc.s    V_15
      IL_0166:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_016b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_0170:  br         IL_0182

      IL_0175:  ldloc.s    V_15
      IL_0177:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_017c:  ldarg.0
      IL_017d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0182:  ldarg.0
      IL_0183:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0188:  ldarg.0
      IL_0189:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_018e:  ldc.i4.s   25
      IL_0190:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0195:  br         IL_02ff

      IL_019a:  ldarg.0
      IL_019b:  ldloca.s   V_17
      IL_019d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01a2:  stloc.s    V_18
      IL_01a4:  ldloc.s    V_18
      IL_01a6:  stloc.s    V_19
      IL_01a8:  ldloc.s    V_19
      IL_01aa:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01af:  stloc.s    V_20
      IL_01b1:  ldloc.s    V_17
      IL_01b3:  brtrue     IL_01c9

      IL_01b8:  ldloc.s    V_19
      IL_01ba:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01bf:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_01c4:  br         IL_01d6

      IL_01c9:  ldloc.s    V_19
      IL_01cb:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01d0:  ldarg.0
      IL_01d1:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01d6:  ldarg.0
      IL_01d7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01dc:  ldarg.0
      IL_01dd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01e2:  ldc.i4.s   13
      IL_01e4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01e9:  br         IL_02ff

      IL_01ee:  ldarg.0
      IL_01ef:  ldloca.s   V_21
      IL_01f1:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01f6:  stloc.s    V_22
      IL_01f8:  ldloc.s    V_22
      IL_01fa:  stloc.s    V_23
      IL_01fc:  ldloc.s    V_23
      IL_01fe:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0203:  stloc.s    V_24
      IL_0205:  ldloc.s    V_21
      IL_0207:  brtrue     IL_021d

      IL_020c:  ldloc.s    V_23
      IL_020e:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0213:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_0218:  br         IL_022a

      IL_021d:  ldloc.s    V_23
      IL_021f:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0224:  ldarg.0
      IL_0225:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_022a:  ldarg.0
      IL_022b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0230:  ldarg.0
      IL_0231:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0236:  ldc.i4.s   23
      IL_0238:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_023d:  br         IL_02ff

      IL_0242:  ldarg.0
      IL_0243:  ldloca.s   V_25
      IL_0245:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_024a:  stloc.s    V_26
      IL_024c:  ldloc.s    V_26
      IL_024e:  stloc.s    V_27
      IL_0250:  ldloc.s    V_27
      IL_0252:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0257:  stloc.s    V_28
      IL_0259:  ldloc.s    V_25
      IL_025b:  brtrue     IL_0271

      IL_0260:  ldloc.s    V_27
      IL_0262:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0267:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_026c:  br         IL_027e

      IL_0271:  ldloc.s    V_27
      IL_0273:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0278:  ldarg.0
      IL_0279:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_027e:  ldarg.0
      IL_027f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0284:  ldarg.0
      IL_0285:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_028a:  ldc.i4.5
      IL_028b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0290:  br         IL_02ff

      IL_0295:  ldarg.0
      IL_0296:  ldloca.s   V_29
      IL_0298:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_029d:  stloc.s    V_30
      IL_029f:  ldloc.s    V_30
      IL_02a1:  stloc.s    V_31
      IL_02a3:  ldloc.s    V_31
      IL_02a5:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02aa:  stloc.s    V_32
      IL_02ac:  ldloc.s    V_29
      IL_02ae:  brtrue     IL_02c4

      IL_02b3:  ldloc.s    V_31
      IL_02b5:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02ba:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverOk0$PST06000096()
      IL_02bf:  br         IL_02d1

      IL_02c4:  ldloc.s    V_31
      IL_02c6:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02cb:  ldarg.0
      IL_02cc:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverOk0$PST06000097(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_02d1:  ldarg.0
      IL_02d2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_02d7:  ldarg.0
      IL_02d8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02dd:  ldc.i4.s   17
      IL_02df:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02e4:  br         IL_02ff

      IL_02e9:  ldstr      "can't send Ok in state "
      IL_02ee:  ldarg.0
      IL_02ef:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_02f4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_02f9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_02fe:  throw

      IL_02ff:  ret
    } // end of method Exp::SendOk

    .method public instance void  SendRequestFailed(valuetype Microsoft.Singularity.ServiceManager.ServiceError err) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 24 00 00 00 00 00 )                         // ..$.....
      // Code size       1439 (0x59f)
      .maxstack  80
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24,
               bool V_25,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_26,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_27,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_28,
               bool V_29,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_30,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_31,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_32,
               bool V_33,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_34,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_35,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_36,
               bool V_37,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_38,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_39,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_40,
               bool V_41,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_42,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_43,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_44,
               bool V_45,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_46,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_47,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_48,
               bool V_49,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_50,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_51,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_52,
               bool V_53,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_54,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_55,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_56,
               bool V_57,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_58,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_59,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_60)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0085

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   29
      IL_0017:  beq        IL_00d4

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_012a

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.8
      IL_0025:  beq        IL_0180

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_01d6

      IL_0031:  ldloc.0
      IL_0032:  ldc.i4.s   22
      IL_0034:  beq        IL_022c

      IL_0039:  ldloc.0
      IL_003a:  ldc.i4.s   16
      IL_003c:  beq        IL_0282

      IL_0041:  ldloc.0
      IL_0042:  ldc.i4.s   9
      IL_0044:  beq        IL_02d8

      IL_0049:  ldloc.0
      IL_004a:  ldc.i4.s   20
      IL_004c:  beq        IL_032e

      IL_0051:  ldloc.0
      IL_0052:  ldc.i4.s   14
      IL_0054:  beq        IL_0384

      IL_0059:  ldloc.0
      IL_005a:  ldc.i4.s   10
      IL_005c:  beq        IL_03da

      IL_0061:  ldloc.0
      IL_0062:  ldc.i4.6
      IL_0063:  beq        IL_0430

      IL_0068:  ldloc.0
      IL_0069:  ldc.i4.s   27
      IL_006b:  beq        IL_0486

      IL_0070:  ldloc.0
      IL_0071:  ldc.i4.s   26
      IL_0073:  beq        IL_04dc

      IL_0078:  ldloc.0
      IL_0079:  ldc.i4.s   18
      IL_007b:  beq        IL_0532

      IL_0080:  br         IL_0588

      IL_0085:  ldarg.0
      IL_0086:  ldloca.s   V_1
      IL_0088:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_008d:  stloc.2
      IL_008e:  ldloc.2
      IL_008f:  stloc.3
      IL_0090:  ldloc.3
      IL_0091:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0096:  stloc.s    V_4
      IL_0098:  ldloc.1
      IL_0099:  brtrue     IL_00af

      IL_009e:  ldloc.3
      IL_009f:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00a4:  ldarg.1
      IL_00a5:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_00aa:  br         IL_00bc

      IL_00af:  ldloc.3
      IL_00b0:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00b5:  ldarg.1
      IL_00b6:  ldarg.0
      IL_00b7:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00bc:  ldarg.0
      IL_00bd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.s   11
      IL_00ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cf:  br         IL_059e

      IL_00d4:  ldarg.0
      IL_00d5:  ldloca.s   V_5
      IL_00d7:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00dc:  stloc.s    V_6
      IL_00de:  ldloc.s    V_6
      IL_00e0:  stloc.s    V_7
      IL_00e2:  ldloc.s    V_7
      IL_00e4:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00e9:  stloc.s    V_8
      IL_00eb:  ldloc.s    V_5
      IL_00ed:  brtrue     IL_0104

      IL_00f2:  ldloc.s    V_7
      IL_00f4:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_00f9:  ldarg.1
      IL_00fa:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_00ff:  br         IL_0112

      IL_0104:  ldloc.s    V_7
      IL_0106:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_010b:  ldarg.1
      IL_010c:  ldarg.0
      IL_010d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0112:  ldarg.0
      IL_0113:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0118:  ldarg.0
      IL_0119:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011e:  ldc.i4.s   28
      IL_0120:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0125:  br         IL_059e

      IL_012a:  ldarg.0
      IL_012b:  ldloca.s   V_9
      IL_012d:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0132:  stloc.s    V_10
      IL_0134:  ldloc.s    V_10
      IL_0136:  stloc.s    V_11
      IL_0138:  ldloc.s    V_11
      IL_013a:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_013f:  stloc.s    V_12
      IL_0141:  ldloc.s    V_9
      IL_0143:  brtrue     IL_015a

      IL_0148:  ldloc.s    V_11
      IL_014a:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_014f:  ldarg.1
      IL_0150:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0155:  br         IL_0168

      IL_015a:  ldloc.s    V_11
      IL_015c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0161:  ldarg.1
      IL_0162:  ldarg.0
      IL_0163:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0168:  ldarg.0
      IL_0169:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016e:  ldarg.0
      IL_016f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0174:  ldc.i4.s   30
      IL_0176:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_017b:  br         IL_059e

      IL_0180:  ldarg.0
      IL_0181:  ldloca.s   V_13
      IL_0183:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0188:  stloc.s    V_14
      IL_018a:  ldloc.s    V_14
      IL_018c:  stloc.s    V_15
      IL_018e:  ldloc.s    V_15
      IL_0190:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0195:  stloc.s    V_16
      IL_0197:  ldloc.s    V_13
      IL_0199:  brtrue     IL_01b0

      IL_019e:  ldloc.s    V_15
      IL_01a0:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01a5:  ldarg.1
      IL_01a6:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_01ab:  br         IL_01be

      IL_01b0:  ldloc.s    V_15
      IL_01b2:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01b7:  ldarg.1
      IL_01b8:  ldarg.0
      IL_01b9:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01be:  ldarg.0
      IL_01bf:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01c4:  ldarg.0
      IL_01c5:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01ca:  ldc.i4.s   23
      IL_01cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01d1:  br         IL_059e

      IL_01d6:  ldarg.0
      IL_01d7:  ldloca.s   V_17
      IL_01d9:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01de:  stloc.s    V_18
      IL_01e0:  ldloc.s    V_18
      IL_01e2:  stloc.s    V_19
      IL_01e4:  ldloc.s    V_19
      IL_01e6:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01eb:  stloc.s    V_20
      IL_01ed:  ldloc.s    V_17
      IL_01ef:  brtrue     IL_0206

      IL_01f4:  ldloc.s    V_19
      IL_01f6:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_01fb:  ldarg.1
      IL_01fc:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0201:  br         IL_0214

      IL_0206:  ldloc.s    V_19
      IL_0208:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_020d:  ldarg.1
      IL_020e:  ldarg.0
      IL_020f:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0214:  ldarg.0
      IL_0215:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_021a:  ldarg.0
      IL_021b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0220:  ldc.i4.s   23
      IL_0222:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0227:  br         IL_059e

      IL_022c:  ldarg.0
      IL_022d:  ldloca.s   V_21
      IL_022f:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0234:  stloc.s    V_22
      IL_0236:  ldloc.s    V_22
      IL_0238:  stloc.s    V_23
      IL_023a:  ldloc.s    V_23
      IL_023c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0241:  stloc.s    V_24
      IL_0243:  ldloc.s    V_21
      IL_0245:  brtrue     IL_025c

      IL_024a:  ldloc.s    V_23
      IL_024c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0251:  ldarg.1
      IL_0252:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0257:  br         IL_026a

      IL_025c:  ldloc.s    V_23
      IL_025e:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0263:  ldarg.1
      IL_0264:  ldarg.0
      IL_0265:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_026a:  ldarg.0
      IL_026b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0270:  ldarg.0
      IL_0271:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0276:  ldc.i4.s   21
      IL_0278:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_027d:  br         IL_059e

      IL_0282:  ldarg.0
      IL_0283:  ldloca.s   V_25
      IL_0285:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_028a:  stloc.s    V_26
      IL_028c:  ldloc.s    V_26
      IL_028e:  stloc.s    V_27
      IL_0290:  ldloc.s    V_27
      IL_0292:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0297:  stloc.s    V_28
      IL_0299:  ldloc.s    V_25
      IL_029b:  brtrue     IL_02b2

      IL_02a0:  ldloc.s    V_27
      IL_02a2:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02a7:  ldarg.1
      IL_02a8:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_02ad:  br         IL_02c0

      IL_02b2:  ldloc.s    V_27
      IL_02b4:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02b9:  ldarg.1
      IL_02ba:  ldarg.0
      IL_02bb:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_02c0:  ldarg.0
      IL_02c1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_02c6:  ldarg.0
      IL_02c7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02cc:  ldc.i4.s   15
      IL_02ce:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02d3:  br         IL_059e

      IL_02d8:  ldarg.0
      IL_02d9:  ldloca.s   V_29
      IL_02db:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_02e0:  stloc.s    V_30
      IL_02e2:  ldloc.s    V_30
      IL_02e4:  stloc.s    V_31
      IL_02e6:  ldloc.s    V_31
      IL_02e8:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02ed:  stloc.s    V_32
      IL_02ef:  ldloc.s    V_29
      IL_02f1:  brtrue     IL_0308

      IL_02f6:  ldloc.s    V_31
      IL_02f8:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_02fd:  ldarg.1
      IL_02fe:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0303:  br         IL_0316

      IL_0308:  ldloc.s    V_31
      IL_030a:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_030f:  ldarg.1
      IL_0310:  ldarg.0
      IL_0311:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0316:  ldarg.0
      IL_0317:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_031c:  ldarg.0
      IL_031d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0322:  ldc.i4.s   23
      IL_0324:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0329:  br         IL_059e

      IL_032e:  ldarg.0
      IL_032f:  ldloca.s   V_33
      IL_0331:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0336:  stloc.s    V_34
      IL_0338:  ldloc.s    V_34
      IL_033a:  stloc.s    V_35
      IL_033c:  ldloc.s    V_35
      IL_033e:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0343:  stloc.s    V_36
      IL_0345:  ldloc.s    V_33
      IL_0347:  brtrue     IL_035e

      IL_034c:  ldloc.s    V_35
      IL_034e:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0353:  ldarg.1
      IL_0354:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0359:  br         IL_036c

      IL_035e:  ldloc.s    V_35
      IL_0360:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0365:  ldarg.1
      IL_0366:  ldarg.0
      IL_0367:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_036c:  ldarg.0
      IL_036d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0372:  ldarg.0
      IL_0373:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0378:  ldc.i4.s   19
      IL_037a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_037f:  br         IL_059e

      IL_0384:  ldarg.0
      IL_0385:  ldloca.s   V_37
      IL_0387:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_038c:  stloc.s    V_38
      IL_038e:  ldloc.s    V_38
      IL_0390:  stloc.s    V_39
      IL_0392:  ldloc.s    V_39
      IL_0394:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0399:  stloc.s    V_40
      IL_039b:  ldloc.s    V_37
      IL_039d:  brtrue     IL_03b4

      IL_03a2:  ldloc.s    V_39
      IL_03a4:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_03a9:  ldarg.1
      IL_03aa:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_03af:  br         IL_03c2

      IL_03b4:  ldloc.s    V_39
      IL_03b6:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_03bb:  ldarg.1
      IL_03bc:  ldarg.0
      IL_03bd:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_03c2:  ldarg.0
      IL_03c3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_03c8:  ldarg.0
      IL_03c9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_03ce:  ldc.i4.s   13
      IL_03d0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_03d5:  br         IL_059e

      IL_03da:  ldarg.0
      IL_03db:  ldloca.s   V_41
      IL_03dd:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_03e2:  stloc.s    V_42
      IL_03e4:  ldloc.s    V_42
      IL_03e6:  stloc.s    V_43
      IL_03e8:  ldloc.s    V_43
      IL_03ea:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_03ef:  stloc.s    V_44
      IL_03f1:  ldloc.s    V_41
      IL_03f3:  brtrue     IL_040a

      IL_03f8:  ldloc.s    V_43
      IL_03fa:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_03ff:  ldarg.1
      IL_0400:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0405:  br         IL_0418

      IL_040a:  ldloc.s    V_43
      IL_040c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0411:  ldarg.1
      IL_0412:  ldarg.0
      IL_0413:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0418:  ldarg.0
      IL_0419:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_041e:  ldarg.0
      IL_041f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0424:  ldc.i4.s   30
      IL_0426:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_042b:  br         IL_059e

      IL_0430:  ldarg.0
      IL_0431:  ldloca.s   V_45
      IL_0433:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0438:  stloc.s    V_46
      IL_043a:  ldloc.s    V_46
      IL_043c:  stloc.s    V_47
      IL_043e:  ldloc.s    V_47
      IL_0440:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0445:  stloc.s    V_48
      IL_0447:  ldloc.s    V_45
      IL_0449:  brtrue     IL_0460

      IL_044e:  ldloc.s    V_47
      IL_0450:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0455:  ldarg.1
      IL_0456:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_045b:  br         IL_046e

      IL_0460:  ldloc.s    V_47
      IL_0462:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0467:  ldarg.1
      IL_0468:  ldarg.0
      IL_0469:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_046e:  ldarg.0
      IL_046f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0474:  ldarg.0
      IL_0475:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_047a:  ldc.i4.s   23
      IL_047c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0481:  br         IL_059e

      IL_0486:  ldarg.0
      IL_0487:  ldloca.s   V_49
      IL_0489:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_048e:  stloc.s    V_50
      IL_0490:  ldloc.s    V_50
      IL_0492:  stloc.s    V_51
      IL_0494:  ldloc.s    V_51
      IL_0496:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_049b:  stloc.s    V_52
      IL_049d:  ldloc.s    V_49
      IL_049f:  brtrue     IL_04b6

      IL_04a4:  ldloc.s    V_51
      IL_04a6:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_04ab:  ldarg.1
      IL_04ac:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_04b1:  br         IL_04c4

      IL_04b6:  ldloc.s    V_51
      IL_04b8:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_04bd:  ldarg.1
      IL_04be:  ldarg.0
      IL_04bf:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_04c4:  ldarg.0
      IL_04c5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_04ca:  ldarg.0
      IL_04cb:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_04d0:  ldc.i4.s   30
      IL_04d2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_04d7:  br         IL_059e

      IL_04dc:  ldarg.0
      IL_04dd:  ldloca.s   V_53
      IL_04df:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_04e4:  stloc.s    V_54
      IL_04e6:  ldloc.s    V_54
      IL_04e8:  stloc.s    V_55
      IL_04ea:  ldloc.s    V_55
      IL_04ec:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_04f1:  stloc.s    V_56
      IL_04f3:  ldloc.s    V_53
      IL_04f5:  brtrue     IL_050c

      IL_04fa:  ldloc.s    V_55
      IL_04fc:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0501:  ldarg.1
      IL_0502:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0507:  br         IL_051a

      IL_050c:  ldloc.s    V_55
      IL_050e:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0513:  ldarg.1
      IL_0514:  ldarg.0
      IL_0515:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_051a:  ldarg.0
      IL_051b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0520:  ldarg.0
      IL_0521:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0526:  ldc.i4.s   30
      IL_0528:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_052d:  br         IL_059e

      IL_0532:  ldarg.0
      IL_0533:  ldloca.s   V_57
      IL_0535:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_053a:  stloc.s    V_58
      IL_053c:  ldloc.s    V_58
      IL_053e:  stloc.s    V_59
      IL_0540:  ldloc.s    V_59
      IL_0542:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0547:  stloc.s    V_60
      IL_0549:  ldloc.s    V_57
      IL_054b:  brtrue     IL_0562

      IL_0550:  ldloc.s    V_59
      IL_0552:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0557:  ldarg.1
      IL_0558:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverRequestFailed0$PST06000098(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_055d:  br         IL_0570

      IL_0562:  ldloc.s    V_59
      IL_0564:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0569:  ldarg.1
      IL_056a:  ldarg.0
      IL_056b:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverRequestFailed0$PST06000099(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0570:  ldarg.0
      IL_0571:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0576:  ldarg.0
      IL_0577:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_057c:  ldc.i4.s   17
      IL_057e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0583:  br         IL_059e

      IL_0588:  ldstr      "can't send RequestFailed in state "
      IL_058d:  ldarg.0
      IL_058e:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_0593:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0598:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_059d:  throw

      IL_059e:  ret
    } // end of method Exp::SendRequestFailed

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::DeliverContractNotSupported0$PST0600009A()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::MarshallDeliverContractNotSupported0$PST0600009B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       1860 (0x744)
      .maxstack  26
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               bool V_27,
               int32 V_28,
               bool V_29,
               int32 V_30,
               bool V_31,
               int32 V_32,
               bool V_33,
               int32 V_34,
               bool V_35,
               int32 V_36,
               bool V_37,
               int32 V_38,
               bool V_39,
               int32 V_40,
               bool V_41,
               int32 V_42,
               bool V_43,
               int32 V_44,
               bool V_45,
               int32 V_46,
               bool V_47,
               int32 V_48,
               int32 V_49)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_00c5

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_0105

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_014d

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0195

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_01dd

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.s   9
      IL_0034:  beq        IL_0225

      IL_0039:  ldloc.1
      IL_003a:  ldc.i4.s   10
      IL_003c:  beq        IL_026d

      IL_0041:  ldloc.1
      IL_0042:  ldc.i4.s   12
      IL_0044:  beq        IL_02b5

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.s   14
      IL_004c:  beq        IL_02fd

      IL_0051:  ldloc.1
      IL_0052:  ldc.i4.s   16
      IL_0054:  beq        IL_0345

      IL_0059:  ldloc.1
      IL_005a:  ldc.i4.s   18
      IL_005c:  beq        IL_038d

      IL_0061:  ldloc.1
      IL_0062:  ldc.i4.s   20
      IL_0064:  beq        IL_03d5

      IL_0069:  ldloc.1
      IL_006a:  ldc.i4.s   22
      IL_006c:  beq        IL_041d

      IL_0071:  ldloc.1
      IL_0072:  ldc.i4.s   23
      IL_0074:  beq        IL_0465

      IL_0079:  ldloc.1
      IL_007a:  ldc.i4.s   24
      IL_007c:  beq        IL_04ad

      IL_0081:  ldloc.1
      IL_0082:  ldc.i4.s   25
      IL_0084:  beq        IL_04f5

      IL_0089:  ldloc.1
      IL_008a:  ldc.i4.s   26
      IL_008c:  beq        IL_053d

      IL_0091:  ldloc.1
      IL_0092:  ldc.i4.s   27
      IL_0094:  beq        IL_0585

      IL_0099:  ldloc.1
      IL_009a:  ldc.i4.s   29
      IL_009c:  beq        IL_05cd

      IL_00a1:  ldloc.1
      IL_00a2:  ldc.i4.s   30
      IL_00a4:  beq        IL_0615

      IL_00a9:  ldloc.1
      IL_00aa:  ldc.i4.s   31
      IL_00ac:  beq        IL_065d

      IL_00b1:  ldloc.1
      IL_00b2:  ldc.i4.s   32
      IL_00b4:  beq        IL_06a5

      IL_00b9:  ldloc.1
      IL_00ba:  ldc.i4.3
      IL_00bb:  beq        IL_06ed

      IL_00c0:  br         IL_0735

      IL_00c5:  ldc.i4.0
      IL_00c6:  stloc.2
      IL_00c7:  ldarg.0
      IL_00c8:  volatile.
      IL_00ca:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00cf:  stloc.3
      IL_00d0:  ldloc.3
      IL_00d1:  brtrue     IL_00e6

      IL_00d6:  ldarg.0
      IL_00d7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00dc:  stloc.2
      IL_00dd:  ldarg.0
      IL_00de:  volatile.
      IL_00e0:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e5:  stloc.3
      IL_00e6:  ldloc.3
      IL_00e7:  ldc.i4.0
      IL_00e8:  ceq
      IL_00ea:  brfalse    IL_00fd

      IL_00ef:  ldloc.2
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_073d

      IL_00fd:  ldloc.3
      IL_00fe:  stloc.s    V_4
      IL_0100:  br         IL_073d

      IL_0105:  ldc.i4.0
      IL_0106:  stloc.s    V_5
      IL_0108:  ldarg.0
      IL_0109:  volatile.
      IL_010b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0110:  stloc.s    V_6
      IL_0112:  ldloc.s    V_6
      IL_0114:  brtrue     IL_012b

      IL_0119:  ldarg.0
      IL_011a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_011f:  stloc.s    V_5
      IL_0121:  ldarg.0
      IL_0122:  volatile.
      IL_0124:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0129:  stloc.s    V_6
      IL_012b:  ldloc.s    V_6
      IL_012d:  ldc.i4.0
      IL_012e:  ceq
      IL_0130:  brfalse    IL_0144

      IL_0135:  ldloc.s    V_5
      IL_0137:  brfalse    IL_0144

      IL_013c:  ldc.i4.m1
      IL_013d:  stloc.s    V_4
      IL_013f:  br         IL_073d

      IL_0144:  ldloc.s    V_6
      IL_0146:  stloc.s    V_4
      IL_0148:  br         IL_073d

      IL_014d:  ldc.i4.0
      IL_014e:  stloc.s    V_7
      IL_0150:  ldarg.0
      IL_0151:  volatile.
      IL_0153:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0158:  stloc.s    V_8
      IL_015a:  ldloc.s    V_8
      IL_015c:  brtrue     IL_0173

      IL_0161:  ldarg.0
      IL_0162:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0167:  stloc.s    V_7
      IL_0169:  ldarg.0
      IL_016a:  volatile.
      IL_016c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0171:  stloc.s    V_8
      IL_0173:  ldloc.s    V_8
      IL_0175:  ldc.i4.0
      IL_0176:  ceq
      IL_0178:  brfalse    IL_018c

      IL_017d:  ldloc.s    V_7
      IL_017f:  brfalse    IL_018c

      IL_0184:  ldc.i4.m1
      IL_0185:  stloc.s    V_4
      IL_0187:  br         IL_073d

      IL_018c:  ldloc.s    V_8
      IL_018e:  stloc.s    V_4
      IL_0190:  br         IL_073d

      IL_0195:  ldc.i4.0
      IL_0196:  stloc.s    V_9
      IL_0198:  ldarg.0
      IL_0199:  volatile.
      IL_019b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01a0:  stloc.s    V_10
      IL_01a2:  ldloc.s    V_10
      IL_01a4:  brtrue     IL_01bb

      IL_01a9:  ldarg.0
      IL_01aa:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01af:  stloc.s    V_9
      IL_01b1:  ldarg.0
      IL_01b2:  volatile.
      IL_01b4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01b9:  stloc.s    V_10
      IL_01bb:  ldloc.s    V_10
      IL_01bd:  ldc.i4.0
      IL_01be:  ceq
      IL_01c0:  brfalse    IL_01d4

      IL_01c5:  ldloc.s    V_9
      IL_01c7:  brfalse    IL_01d4

      IL_01cc:  ldc.i4.m1
      IL_01cd:  stloc.s    V_4
      IL_01cf:  br         IL_073d

      IL_01d4:  ldloc.s    V_10
      IL_01d6:  stloc.s    V_4
      IL_01d8:  br         IL_073d

      IL_01dd:  ldc.i4.0
      IL_01de:  stloc.s    V_11
      IL_01e0:  ldarg.0
      IL_01e1:  volatile.
      IL_01e3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01e8:  stloc.s    V_12
      IL_01ea:  ldloc.s    V_12
      IL_01ec:  brtrue     IL_0203

      IL_01f1:  ldarg.0
      IL_01f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01f7:  stloc.s    V_11
      IL_01f9:  ldarg.0
      IL_01fa:  volatile.
      IL_01fc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0201:  stloc.s    V_12
      IL_0203:  ldloc.s    V_12
      IL_0205:  ldc.i4.0
      IL_0206:  ceq
      IL_0208:  brfalse    IL_021c

      IL_020d:  ldloc.s    V_11
      IL_020f:  brfalse    IL_021c

      IL_0214:  ldc.i4.m1
      IL_0215:  stloc.s    V_4
      IL_0217:  br         IL_073d

      IL_021c:  ldloc.s    V_12
      IL_021e:  stloc.s    V_4
      IL_0220:  br         IL_073d

      IL_0225:  ldc.i4.0
      IL_0226:  stloc.s    V_13
      IL_0228:  ldarg.0
      IL_0229:  volatile.
      IL_022b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0230:  stloc.s    V_14
      IL_0232:  ldloc.s    V_14
      IL_0234:  brtrue     IL_024b

      IL_0239:  ldarg.0
      IL_023a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_023f:  stloc.s    V_13
      IL_0241:  ldarg.0
      IL_0242:  volatile.
      IL_0244:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0249:  stloc.s    V_14
      IL_024b:  ldloc.s    V_14
      IL_024d:  ldc.i4.0
      IL_024e:  ceq
      IL_0250:  brfalse    IL_0264

      IL_0255:  ldloc.s    V_13
      IL_0257:  brfalse    IL_0264

      IL_025c:  ldc.i4.m1
      IL_025d:  stloc.s    V_4
      IL_025f:  br         IL_073d

      IL_0264:  ldloc.s    V_14
      IL_0266:  stloc.s    V_4
      IL_0268:  br         IL_073d

      IL_026d:  ldc.i4.0
      IL_026e:  stloc.s    V_15
      IL_0270:  ldarg.0
      IL_0271:  volatile.
      IL_0273:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0278:  stloc.s    V_16
      IL_027a:  ldloc.s    V_16
      IL_027c:  brtrue     IL_0293

      IL_0281:  ldarg.0
      IL_0282:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0287:  stloc.s    V_15
      IL_0289:  ldarg.0
      IL_028a:  volatile.
      IL_028c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0291:  stloc.s    V_16
      IL_0293:  ldloc.s    V_16
      IL_0295:  ldc.i4.0
      IL_0296:  ceq
      IL_0298:  brfalse    IL_02ac

      IL_029d:  ldloc.s    V_15
      IL_029f:  brfalse    IL_02ac

      IL_02a4:  ldc.i4.m1
      IL_02a5:  stloc.s    V_4
      IL_02a7:  br         IL_073d

      IL_02ac:  ldloc.s    V_16
      IL_02ae:  stloc.s    V_4
      IL_02b0:  br         IL_073d

      IL_02b5:  ldc.i4.0
      IL_02b6:  stloc.s    V_17
      IL_02b8:  ldarg.0
      IL_02b9:  volatile.
      IL_02bb:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02c0:  stloc.s    V_18
      IL_02c2:  ldloc.s    V_18
      IL_02c4:  brtrue     IL_02db

      IL_02c9:  ldarg.0
      IL_02ca:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02cf:  stloc.s    V_17
      IL_02d1:  ldarg.0
      IL_02d2:  volatile.
      IL_02d4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02d9:  stloc.s    V_18
      IL_02db:  ldloc.s    V_18
      IL_02dd:  ldc.i4.0
      IL_02de:  ceq
      IL_02e0:  brfalse    IL_02f4

      IL_02e5:  ldloc.s    V_17
      IL_02e7:  brfalse    IL_02f4

      IL_02ec:  ldc.i4.m1
      IL_02ed:  stloc.s    V_4
      IL_02ef:  br         IL_073d

      IL_02f4:  ldloc.s    V_18
      IL_02f6:  stloc.s    V_4
      IL_02f8:  br         IL_073d

      IL_02fd:  ldc.i4.0
      IL_02fe:  stloc.s    V_19
      IL_0300:  ldarg.0
      IL_0301:  volatile.
      IL_0303:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0308:  stloc.s    V_20
      IL_030a:  ldloc.s    V_20
      IL_030c:  brtrue     IL_0323

      IL_0311:  ldarg.0
      IL_0312:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0317:  stloc.s    V_19
      IL_0319:  ldarg.0
      IL_031a:  volatile.
      IL_031c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0321:  stloc.s    V_20
      IL_0323:  ldloc.s    V_20
      IL_0325:  ldc.i4.0
      IL_0326:  ceq
      IL_0328:  brfalse    IL_033c

      IL_032d:  ldloc.s    V_19
      IL_032f:  brfalse    IL_033c

      IL_0334:  ldc.i4.m1
      IL_0335:  stloc.s    V_4
      IL_0337:  br         IL_073d

      IL_033c:  ldloc.s    V_20
      IL_033e:  stloc.s    V_4
      IL_0340:  br         IL_073d

      IL_0345:  ldc.i4.0
      IL_0346:  stloc.s    V_21
      IL_0348:  ldarg.0
      IL_0349:  volatile.
      IL_034b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0350:  stloc.s    V_22
      IL_0352:  ldloc.s    V_22
      IL_0354:  brtrue     IL_036b

      IL_0359:  ldarg.0
      IL_035a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_035f:  stloc.s    V_21
      IL_0361:  ldarg.0
      IL_0362:  volatile.
      IL_0364:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0369:  stloc.s    V_22
      IL_036b:  ldloc.s    V_22
      IL_036d:  ldc.i4.0
      IL_036e:  ceq
      IL_0370:  brfalse    IL_0384

      IL_0375:  ldloc.s    V_21
      IL_0377:  brfalse    IL_0384

      IL_037c:  ldc.i4.m1
      IL_037d:  stloc.s    V_4
      IL_037f:  br         IL_073d

      IL_0384:  ldloc.s    V_22
      IL_0386:  stloc.s    V_4
      IL_0388:  br         IL_073d

      IL_038d:  ldc.i4.0
      IL_038e:  stloc.s    V_23
      IL_0390:  ldarg.0
      IL_0391:  volatile.
      IL_0393:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0398:  stloc.s    V_24
      IL_039a:  ldloc.s    V_24
      IL_039c:  brtrue     IL_03b3

      IL_03a1:  ldarg.0
      IL_03a2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03a7:  stloc.s    V_23
      IL_03a9:  ldarg.0
      IL_03aa:  volatile.
      IL_03ac:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03b1:  stloc.s    V_24
      IL_03b3:  ldloc.s    V_24
      IL_03b5:  ldc.i4.0
      IL_03b6:  ceq
      IL_03b8:  brfalse    IL_03cc

      IL_03bd:  ldloc.s    V_23
      IL_03bf:  brfalse    IL_03cc

      IL_03c4:  ldc.i4.m1
      IL_03c5:  stloc.s    V_4
      IL_03c7:  br         IL_073d

      IL_03cc:  ldloc.s    V_24
      IL_03ce:  stloc.s    V_4
      IL_03d0:  br         IL_073d

      IL_03d5:  ldc.i4.0
      IL_03d6:  stloc.s    V_25
      IL_03d8:  ldarg.0
      IL_03d9:  volatile.
      IL_03db:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03e0:  stloc.s    V_26
      IL_03e2:  ldloc.s    V_26
      IL_03e4:  brtrue     IL_03fb

      IL_03e9:  ldarg.0
      IL_03ea:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03ef:  stloc.s    V_25
      IL_03f1:  ldarg.0
      IL_03f2:  volatile.
      IL_03f4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03f9:  stloc.s    V_26
      IL_03fb:  ldloc.s    V_26
      IL_03fd:  ldc.i4.0
      IL_03fe:  ceq
      IL_0400:  brfalse    IL_0414

      IL_0405:  ldloc.s    V_25
      IL_0407:  brfalse    IL_0414

      IL_040c:  ldc.i4.m1
      IL_040d:  stloc.s    V_4
      IL_040f:  br         IL_073d

      IL_0414:  ldloc.s    V_26
      IL_0416:  stloc.s    V_4
      IL_0418:  br         IL_073d

      IL_041d:  ldc.i4.0
      IL_041e:  stloc.s    V_27
      IL_0420:  ldarg.0
      IL_0421:  volatile.
      IL_0423:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0428:  stloc.s    V_28
      IL_042a:  ldloc.s    V_28
      IL_042c:  brtrue     IL_0443

      IL_0431:  ldarg.0
      IL_0432:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0437:  stloc.s    V_27
      IL_0439:  ldarg.0
      IL_043a:  volatile.
      IL_043c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0441:  stloc.s    V_28
      IL_0443:  ldloc.s    V_28
      IL_0445:  ldc.i4.0
      IL_0446:  ceq
      IL_0448:  brfalse    IL_045c

      IL_044d:  ldloc.s    V_27
      IL_044f:  brfalse    IL_045c

      IL_0454:  ldc.i4.m1
      IL_0455:  stloc.s    V_4
      IL_0457:  br         IL_073d

      IL_045c:  ldloc.s    V_28
      IL_045e:  stloc.s    V_4
      IL_0460:  br         IL_073d

      IL_0465:  ldc.i4.0
      IL_0466:  stloc.s    V_29
      IL_0468:  ldarg.0
      IL_0469:  volatile.
      IL_046b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0470:  stloc.s    V_30
      IL_0472:  ldloc.s    V_30
      IL_0474:  brtrue     IL_048b

      IL_0479:  ldarg.0
      IL_047a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_047f:  stloc.s    V_29
      IL_0481:  ldarg.0
      IL_0482:  volatile.
      IL_0484:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0489:  stloc.s    V_30
      IL_048b:  ldloc.s    V_30
      IL_048d:  ldc.i4.0
      IL_048e:  ceq
      IL_0490:  brfalse    IL_04a4

      IL_0495:  ldloc.s    V_29
      IL_0497:  brfalse    IL_04a4

      IL_049c:  ldc.i4.m1
      IL_049d:  stloc.s    V_4
      IL_049f:  br         IL_073d

      IL_04a4:  ldloc.s    V_30
      IL_04a6:  stloc.s    V_4
      IL_04a8:  br         IL_073d

      IL_04ad:  ldc.i4.0
      IL_04ae:  stloc.s    V_31
      IL_04b0:  ldarg.0
      IL_04b1:  volatile.
      IL_04b3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_04b8:  stloc.s    V_32
      IL_04ba:  ldloc.s    V_32
      IL_04bc:  brtrue     IL_04d3

      IL_04c1:  ldarg.0
      IL_04c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_04c7:  stloc.s    V_31
      IL_04c9:  ldarg.0
      IL_04ca:  volatile.
      IL_04cc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_04d1:  stloc.s    V_32
      IL_04d3:  ldloc.s    V_32
      IL_04d5:  ldc.i4.0
      IL_04d6:  ceq
      IL_04d8:  brfalse    IL_04ec

      IL_04dd:  ldloc.s    V_31
      IL_04df:  brfalse    IL_04ec

      IL_04e4:  ldc.i4.m1
      IL_04e5:  stloc.s    V_4
      IL_04e7:  br         IL_073d

      IL_04ec:  ldloc.s    V_32
      IL_04ee:  stloc.s    V_4
      IL_04f0:  br         IL_073d

      IL_04f5:  ldc.i4.0
      IL_04f6:  stloc.s    V_33
      IL_04f8:  ldarg.0
      IL_04f9:  volatile.
      IL_04fb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0500:  stloc.s    V_34
      IL_0502:  ldloc.s    V_34
      IL_0504:  brtrue     IL_051b

      IL_0509:  ldarg.0
      IL_050a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_050f:  stloc.s    V_33
      IL_0511:  ldarg.0
      IL_0512:  volatile.
      IL_0514:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0519:  stloc.s    V_34
      IL_051b:  ldloc.s    V_34
      IL_051d:  ldc.i4.0
      IL_051e:  ceq
      IL_0520:  brfalse    IL_0534

      IL_0525:  ldloc.s    V_33
      IL_0527:  brfalse    IL_0534

      IL_052c:  ldc.i4.m1
      IL_052d:  stloc.s    V_4
      IL_052f:  br         IL_073d

      IL_0534:  ldloc.s    V_34
      IL_0536:  stloc.s    V_4
      IL_0538:  br         IL_073d

      IL_053d:  ldc.i4.0
      IL_053e:  stloc.s    V_35
      IL_0540:  ldarg.0
      IL_0541:  volatile.
      IL_0543:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0548:  stloc.s    V_36
      IL_054a:  ldloc.s    V_36
      IL_054c:  brtrue     IL_0563

      IL_0551:  ldarg.0
      IL_0552:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0557:  stloc.s    V_35
      IL_0559:  ldarg.0
      IL_055a:  volatile.
      IL_055c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0561:  stloc.s    V_36
      IL_0563:  ldloc.s    V_36
      IL_0565:  ldc.i4.0
      IL_0566:  ceq
      IL_0568:  brfalse    IL_057c

      IL_056d:  ldloc.s    V_35
      IL_056f:  brfalse    IL_057c

      IL_0574:  ldc.i4.m1
      IL_0575:  stloc.s    V_4
      IL_0577:  br         IL_073d

      IL_057c:  ldloc.s    V_36
      IL_057e:  stloc.s    V_4
      IL_0580:  br         IL_073d

      IL_0585:  ldc.i4.0
      IL_0586:  stloc.s    V_37
      IL_0588:  ldarg.0
      IL_0589:  volatile.
      IL_058b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0590:  stloc.s    V_38
      IL_0592:  ldloc.s    V_38
      IL_0594:  brtrue     IL_05ab

      IL_0599:  ldarg.0
      IL_059a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_059f:  stloc.s    V_37
      IL_05a1:  ldarg.0
      IL_05a2:  volatile.
      IL_05a4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_05a9:  stloc.s    V_38
      IL_05ab:  ldloc.s    V_38
      IL_05ad:  ldc.i4.0
      IL_05ae:  ceq
      IL_05b0:  brfalse    IL_05c4

      IL_05b5:  ldloc.s    V_37
      IL_05b7:  brfalse    IL_05c4

      IL_05bc:  ldc.i4.m1
      IL_05bd:  stloc.s    V_4
      IL_05bf:  br         IL_073d

      IL_05c4:  ldloc.s    V_38
      IL_05c6:  stloc.s    V_4
      IL_05c8:  br         IL_073d

      IL_05cd:  ldc.i4.0
      IL_05ce:  stloc.s    V_39
      IL_05d0:  ldarg.0
      IL_05d1:  volatile.
      IL_05d3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_05d8:  stloc.s    V_40
      IL_05da:  ldloc.s    V_40
      IL_05dc:  brtrue     IL_05f3

      IL_05e1:  ldarg.0
      IL_05e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_05e7:  stloc.s    V_39
      IL_05e9:  ldarg.0
      IL_05ea:  volatile.
      IL_05ec:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_05f1:  stloc.s    V_40
      IL_05f3:  ldloc.s    V_40
      IL_05f5:  ldc.i4.0
      IL_05f6:  ceq
      IL_05f8:  brfalse    IL_060c

      IL_05fd:  ldloc.s    V_39
      IL_05ff:  brfalse    IL_060c

      IL_0604:  ldc.i4.m1
      IL_0605:  stloc.s    V_4
      IL_0607:  br         IL_073d

      IL_060c:  ldloc.s    V_40
      IL_060e:  stloc.s    V_4
      IL_0610:  br         IL_073d

      IL_0615:  ldc.i4.0
      IL_0616:  stloc.s    V_41
      IL_0618:  ldarg.0
      IL_0619:  volatile.
      IL_061b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0620:  stloc.s    V_42
      IL_0622:  ldloc.s    V_42
      IL_0624:  brtrue     IL_063b

      IL_0629:  ldarg.0
      IL_062a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_062f:  stloc.s    V_41
      IL_0631:  ldarg.0
      IL_0632:  volatile.
      IL_0634:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0639:  stloc.s    V_42
      IL_063b:  ldloc.s    V_42
      IL_063d:  ldc.i4.0
      IL_063e:  ceq
      IL_0640:  brfalse    IL_0654

      IL_0645:  ldloc.s    V_41
      IL_0647:  brfalse    IL_0654

      IL_064c:  ldc.i4.m1
      IL_064d:  stloc.s    V_4
      IL_064f:  br         IL_073d

      IL_0654:  ldloc.s    V_42
      IL_0656:  stloc.s    V_4
      IL_0658:  br         IL_073d

      IL_065d:  ldc.i4.0
      IL_065e:  stloc.s    V_43
      IL_0660:  ldarg.0
      IL_0661:  volatile.
      IL_0663:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0668:  stloc.s    V_44
      IL_066a:  ldloc.s    V_44
      IL_066c:  brtrue     IL_0683

      IL_0671:  ldarg.0
      IL_0672:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0677:  stloc.s    V_43
      IL_0679:  ldarg.0
      IL_067a:  volatile.
      IL_067c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0681:  stloc.s    V_44
      IL_0683:  ldloc.s    V_44
      IL_0685:  ldc.i4.0
      IL_0686:  ceq
      IL_0688:  brfalse    IL_069c

      IL_068d:  ldloc.s    V_43
      IL_068f:  brfalse    IL_069c

      IL_0694:  ldc.i4.m1
      IL_0695:  stloc.s    V_4
      IL_0697:  br         IL_073d

      IL_069c:  ldloc.s    V_44
      IL_069e:  stloc.s    V_4
      IL_06a0:  br         IL_073d

      IL_06a5:  ldc.i4.0
      IL_06a6:  stloc.s    V_45
      IL_06a8:  ldarg.0
      IL_06a9:  volatile.
      IL_06ab:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_06b0:  stloc.s    V_46
      IL_06b2:  ldloc.s    V_46
      IL_06b4:  brtrue     IL_06cb

      IL_06b9:  ldarg.0
      IL_06ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_06bf:  stloc.s    V_45
      IL_06c1:  ldarg.0
      IL_06c2:  volatile.
      IL_06c4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_06c9:  stloc.s    V_46
      IL_06cb:  ldloc.s    V_46
      IL_06cd:  ldc.i4.0
      IL_06ce:  ceq
      IL_06d0:  brfalse    IL_06e4

      IL_06d5:  ldloc.s    V_45
      IL_06d7:  brfalse    IL_06e4

      IL_06dc:  ldc.i4.m1
      IL_06dd:  stloc.s    V_4
      IL_06df:  br         IL_073d

      IL_06e4:  ldloc.s    V_46
      IL_06e6:  stloc.s    V_4
      IL_06e8:  br         IL_073d

      IL_06ed:  ldc.i4.0
      IL_06ee:  stloc.s    V_47
      IL_06f0:  ldarg.0
      IL_06f1:  volatile.
      IL_06f3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_06f8:  stloc.s    V_48
      IL_06fa:  ldloc.s    V_48
      IL_06fc:  brtrue     IL_0713

      IL_0701:  ldarg.0
      IL_0702:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0707:  stloc.s    V_47
      IL_0709:  ldarg.0
      IL_070a:  volatile.
      IL_070c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0711:  stloc.s    V_48
      IL_0713:  ldloc.s    V_48
      IL_0715:  ldc.i4.0
      IL_0716:  ceq
      IL_0718:  brfalse    IL_072c

      IL_071d:  ldloc.s    V_47
      IL_071f:  brfalse    IL_072c

      IL_0724:  ldc.i4.m1
      IL_0725:  stloc.s    V_4
      IL_0727:  br         IL_073d

      IL_072c:  ldloc.s    V_48
      IL_072e:  stloc.s    V_4
      IL_0730:  br         IL_073d

      IL_0735:  ldc.i4.m1
      IL_0736:  stloc.s    V_4
      IL_0738:  br         IL_073d

      IL_073d:  ldloc.s    V_4
      IL_073f:  stloc.s    V_49
      IL_0741:  ldloc.s    V_4
      IL_0743:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverEndEnumeration1$PST060000CF() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0010:  ret
    } // end of method Exp::DeliverEndEnumeration1

    .method privatescope instance void  MarshallDeliverEndEnumeration1$PST060000D0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEndEnumeration1$PST060000CF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EndEnumerationPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverEndEnumeration1

    .method privatescope instance void  DeliverWatchServiceManager0$PST060000D1(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WatchServiceManagerPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager::mask
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverWatchServiceManager0

    .method privatescope instance void  MarshallDeliverWatchServiceManager0$PST060000D2(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask,
                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWatchServiceManager0$PST060000D1(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WatchServiceManagerPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager::MarshallAll(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverWatchServiceManager0

    .method privatescope instance void  DeliverEnumerateServices1$PST060000D3(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod1
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_001c:  ret
    } // end of method Exp::DeliverEnumerateServices1

    .method privatescope instance void  MarshallDeliverEnumerateServices1$PST060000D4(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEnumerateServices1$PST060000D3(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod1
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverEnumerateServices1

    .method privatescope instance void  DeliverEnumerateServices0$PST060000D5(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverEnumerateServices0

    .method privatescope instance void  MarshallDeliverEnumerateServices0$PST060000D6(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) infos,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEnumerateServices0$PST060000D5(valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnumerateServicesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverEnumerateServices0

    .method privatescope instance void  DeliverCreateService0$PST060000D7(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CreateServicePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::config
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverCreateService0

    .method privatescope instance void  MarshallDeliverCreateService0$PST060000D8(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverCreateService0$PST060000D7(valuetype Microsoft.Singularity.ServiceManager.ServiceConfig)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::CreateServicePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverCreateService0

    .method privatescope instance void  DeliverSelectService0$PST060000D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) serviceName) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::SelectServicePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverSelectService0

    .method privatescope instance void  MarshallDeliverSelectService0$PST060000DA(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) serviceName,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverSelectService0$PST060000D9(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::SelectServicePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverSelectService0

    .method privatescope instance void  DeliverStopWatchingServiceManager1$PST060000DB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   11
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   11
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverStopWatchingServiceManager1

    .method privatescope instance void  MarshallDeliverStopWatchingServiceManager1$PST060000DC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopWatchingServiceManager1$PST060000DB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopWatchingServiceManagerPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager::MarshallAll(uint8*,
                                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStopWatchingServiceManager1

    .method privatescope instance void  DeliverWaitNextServiceManagerChange1$PST060000DD() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverWaitNextServiceManagerChange1

    .method privatescope instance void  MarshallDeliverWaitNextServiceManagerChange1$PST060000DE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWaitNextServiceManagerChange1$PST060000DD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WaitNextServiceManagerChangePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange::MarshallAll(uint8*,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverWaitNextServiceManagerChange1

    .method privatescope instance void  DeliverStartServiceNoWait1$PST060000DF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   14
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   14
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverStartServiceNoWait1

    .method privatescope instance void  MarshallDeliverStartServiceNoWait1$PST060000E0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStartServiceNoWait1$PST060000DF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StartServiceNoWaitPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait::MarshallAll(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStartServiceNoWait1

    .method privatescope instance void  DeliverStartServiceWait1$PST060000E1() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   15
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   15
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverStartServiceWait1

    .method privatescope instance void  MarshallDeliverStartServiceWait1$PST060000E2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStartServiceWait1$PST060000E1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StartServiceWaitPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait::MarshallAll(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStartServiceWait1

    .method privatescope instance void  DeliverStopServiceWait1$PST060000E3() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverStopServiceWait1

    .method privatescope instance void  MarshallDeliverStopServiceWait1$PST060000E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopServiceWait1$PST060000E3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopServiceWaitPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStopServiceWait1

    .method privatescope instance void  DeliverStopServiceNoWait1$PST060000E5() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   17
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   17
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverStopServiceNoWait1

    .method privatescope instance void  MarshallDeliverStopServiceNoWait1$PST060000E6(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopServiceNoWait1$PST060000E5()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopServiceNoWaitPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStopServiceNoWait1

    .method privatescope instance void  DeliverDeleteService1$PST060000E7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   18
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   18
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverDeleteService1

    .method privatescope instance void  MarshallDeliverDeleteService1$PST060000E8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverDeleteService1$PST060000E7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeleteServicePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverDeleteService1

    .method privatescope instance void  DeliverUnselectService1$PST060000E9() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   19
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   19
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverUnselectService1

    .method privatescope instance void  MarshallDeliverUnselectService1$PST060000EA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverUnselectService1$PST060000E9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::UnselectServicePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverUnselectService1

    .method privatescope instance void  DeliverQueryServiceConfig1$PST060000EB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   20
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   20
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverQueryServiceConfig1

    .method privatescope instance void  MarshallDeliverQueryServiceConfig1$PST060000EC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverQueryServiceConfig1$PST060000EB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::QueryServiceConfigPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig::MarshallAll(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverQueryServiceConfig1

    .method privatescope instance void  DeliverQueryServiceStatus1$PST060000ED() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   21
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   21
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverQueryServiceStatus1

    .method privatescope instance void  MarshallDeliverQueryServiceStatus1$PST060000EE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverQueryServiceStatus1$PST060000ED()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::QueryServiceStatusPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus::MarshallAll(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverQueryServiceStatus1

    .method privatescope instance void  DeliverWatchServiceStatus1$PST060000EF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   22
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   22
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverWatchServiceStatus1

    .method privatescope instance void  MarshallDeliverWatchServiceStatus1$PST060000F0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWatchServiceStatus1$PST060000EF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WatchServiceStatusPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus::MarshallAll(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverWatchServiceStatus1

    .method privatescope instance void  DeliverEnableService1$PST060000F1(bool enable) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnableServicePod1
      IL_0006:  ldarg.1
      IL_0007:  stfld      bool Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService::enable
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   23
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   23
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_001e:  ret
    } // end of method Exp::DeliverEnableService1

    .method privatescope instance void  MarshallDeliverEnableService1$PST060000F2(bool enable,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverEnableService1$PST060000F1(bool)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::EnableServicePod1
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverEnableService1

    .method privatescope instance void  DeliverTerminateServiceAllProcesses1$PST060000F3() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   24
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   24
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverTerminateServiceAllProcesses1

    .method privatescope instance void  MarshallDeliverTerminateServiceAllProcesses1$PST060000F4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverTerminateServiceAllProcesses1$PST060000F3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TerminateServiceAllProcessesPod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses::MarshallAll(uint8*,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverTerminateServiceAllProcesses1

    .method privatescope instance void  DeliverTerminateServiceProcess1$PST060000F5(int32 processId) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TerminateServiceProcessPod1
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess::processId
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   25
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   25
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_001e:  ret
    } // end of method Exp::DeliverTerminateServiceProcess1

    .method privatescope instance void  MarshallDeliverTerminateServiceProcess1$PST060000F6(int32 processId,
                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverTerminateServiceProcess1$PST060000F5(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TerminateServiceProcessPod1
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess::MarshallAll(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverTerminateServiceProcess1

    .method privatescope instance void  DeliverWaitServiceChange1$PST060000F7() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   32
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   32
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverWaitServiceChange1

    .method privatescope instance void  MarshallDeliverWaitServiceChange1$PST060000F8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverWaitServiceChange1$PST060000F7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::WaitServiceChangePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverWaitServiceChange1

    .method privatescope instance void  DeliverStopWatchingService1$PST060000F9() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   33
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   33
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0012:  ret
    } // end of method Exp::DeliverStopWatchingService1

    .method privatescope instance void  MarshallDeliverStopWatchingService1$PST060000FA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::DeliverStopWatchingService1$PST060000F9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::StopWatchingServicePod1
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::TagPod1
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService::MarshallAll(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStopWatchingService1

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Success
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Success::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method Success::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Success::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Success::Release

  } // end of class Success

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Success msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class sequential ansi sealed nested public specialname EndEnumeration
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EndEnumeration::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EndEnumeration::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method EndEnumeration::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EndEnumeration::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EndEnumeration::Release

  } // end of class EndEnumeration

  .class sequential ansi sealed nested public specialname EnumerationTerminated
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) infos
    .field public int32 count
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_0007:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method EnumerationTerminated::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerationTerminated::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerationTerminated::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::MarshallContent(uint8*,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                            uint8*,
                                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method EnumerationTerminated::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EnumerationTerminated::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_0008:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceInfo
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_002b:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::MarshallVector(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method EnumerationTerminated::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       71 (0x47)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0046

      IL_000d:  ldloc.0
      IL_000e:  ldlen
      IL_000f:  stloc.1
      IL_0010:  ldc.i4.0
      IL_0011:  stloc.2
      IL_0012:  ldloc.2
      IL_0013:  ldloc.1
      IL_0014:  bge        IL_0039

      IL_0019:  ldloc.0
      IL_001a:  ldloc.2
      IL_001b:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::Expose(void*,
                                                                                                      int32)
      IL_0020:  ldloc.0
      IL_0021:  ldloc.2
      IL_0022:  ldelema    Microsoft.Singularity.ServiceManager.ServiceInfo
      IL_0027:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::Dispose()
      IL_002c:  ldloc.0
      IL_002d:  ldloc.2
      IL_002e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::UnExpose(void*,
                                                                                                        int32)
      IL_0033:  ldloc.2
      IL_0034:  ldc.i4.1
      IL_0035:  add
      IL_0036:  stloc.2
      IL_0037:  br.s       IL_0012

      IL_0039:  ldloc.0
      IL_003a:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003f:  ldarg.0
      IL_0040:  ldnull
      IL_0041:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated::infos
      IL_0046:  ret
    } // end of method EnumerationTerminated::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerationTerminated::Release

  } // end of class EnumerationTerminated

  .class sequential ansi sealed nested public specialname NextServiceInfo
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) infos
    .field public int32 count
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_0007:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method NextServiceInfo::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NextServiceInfo::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NextServiceInfo::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method NextServiceInfo::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NextServiceInfo::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_0008:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceInfo
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_002b:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::MarshallVector(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method NextServiceInfo::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       71 (0x47)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0046

      IL_000d:  ldloc.0
      IL_000e:  ldlen
      IL_000f:  stloc.1
      IL_0010:  ldc.i4.0
      IL_0011:  stloc.2
      IL_0012:  ldloc.2
      IL_0013:  ldloc.1
      IL_0014:  bge        IL_0039

      IL_0019:  ldloc.0
      IL_001a:  ldloc.2
      IL_001b:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::Expose(void*,
                                                                                                      int32)
      IL_0020:  ldloc.0
      IL_0021:  ldloc.2
      IL_0022:  ldelema    Microsoft.Singularity.ServiceManager.ServiceInfo
      IL_0027:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::Dispose()
      IL_002c:  ldloc.0
      IL_002d:  ldloc.2
      IL_002e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::UnExpose(void*,
                                                                                                        int32)
      IL_0033:  ldloc.2
      IL_0034:  ldc.i4.1
      IL_0035:  add
      IL_0036:  stloc.2
      IL_0037:  br.s       IL_0012

      IL_0039:  ldloc.0
      IL_003a:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003f:  ldarg.0
      IL_0040:  ldnull
      IL_0041:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo::infos
      IL_0046:  ret
    } // end of method NextServiceInfo::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NextServiceInfo::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NextServiceInfo::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NextServiceInfo::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NextServiceInfo::Release

  } // end of class NextServiceInfo

  .class abstract auto ansi nested public specialname EnumeratingServices
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000020)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateAck 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/NextServiceInfo msg) cil managed
    {
    } // end of method EnumeratingServices::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerationTerminated msg) cil managed
    {
    } // end of method EnumeratingServices::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method EnumeratingServices::.ctor

  } // end of class EnumeratingServices

  .class abstract auto ansi nested public specialname EnumerateAck
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001F)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumeratingServices 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices msg) cil managed
    {
    } // end of method EnumerateAck::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EndEnumeration msg) cil managed
    {
    } // end of method EnumerateAck::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method EnumerateAck::.ctor

  } // end of class EnumerateAck

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001E)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumeratingServices 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectingService 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready$0 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestingWatchServiceManager 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname Ready$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001D)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready$1 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready$1 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method Ready$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$0::.ctor

  } // end of class Ready$0

  .class abstract auto ansi nested public specialname Ready$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001C)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready$1::.ctor

  } // end of class Ready$1

  .class sequential ansi sealed nested public specialname WatchServiceManager
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WatchServiceManager::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WatchServiceManager::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager::MarshallContent(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          uint8*,
                                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method WatchServiceManager::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceManager* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method WatchServiceManager::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceManager::Release

  } // end of class WatchServiceManager

  .class sequential ansi sealed nested public specialname EnumerateServices
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) infos
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_0007:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                          valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method EnumerateServices::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerateServices::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnumerateServices::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method EnumerateServices::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EnumerateServices::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_0008:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceInfo
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_002b:  call       void Microsoft.Singularity.ServiceManager.ServiceInfo::MarshallVector(uint8*,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                 uint8*,
                                                                                                 valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method EnumerateServices::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       71 (0x47)
      .maxstack  4
      .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0046

      IL_000d:  ldloc.0
      IL_000e:  ldlen
      IL_000f:  stloc.1
      IL_0010:  ldc.i4.0
      IL_0011:  stloc.2
      IL_0012:  ldloc.2
      IL_0013:  ldloc.1
      IL_0014:  bge        IL_0039

      IL_0019:  ldloc.0
      IL_001a:  ldloc.2
      IL_001b:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::Expose(void*,
                                                                                                      int32)
      IL_0020:  ldloc.0
      IL_0021:  ldloc.2
      IL_0022:  ldelema    Microsoft.Singularity.ServiceManager.ServiceInfo
      IL_0027:  call       instance void Microsoft.Singularity.ServiceManager.ServiceInfo::Dispose()
      IL_002c:  ldloc.0
      IL_002d:  ldloc.2
      IL_002e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector::UnExpose(void*,
                                                                                                        int32)
      IL_0033:  ldloc.2
      IL_0034:  ldc.i4.1
      IL_0035:  add
      IL_0036:  stloc.2
      IL_0037:  br.s       IL_0012

      IL_0039:  ldloc.0
      IL_003a:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003f:  ldarg.0
      IL_0040:  ldnull
      IL_0041:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnumerateServices::infos
      IL_0046:  ret
    } // end of method EnumerateServices::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerateServices::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerateServices::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerateServices::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnumerateServices::Release

  } // end of class EnumerateServices

  .class sequential ansi sealed nested public specialname CreateService
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::config
      IL_0006:  ldarg.1
      IL_0007:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_000c:  ret
    } // end of method CreateService::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateService::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CreateService::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method CreateService::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CreateService::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::config
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_000e:  ret
    } // end of method CreateService::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CreateService::config
      IL_0006:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::Dispose()
      IL_000b:  ret
    } // end of method CreateService::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateService::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateService::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateService::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CreateService::Release

  } // end of class CreateService

  .class sequential ansi sealed nested public specialname SelectService
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) serviceName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method SelectService::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SelectService::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method SelectService::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method SelectService::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method SelectService::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method SelectService::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceManagerContract/SelectService::serviceName
      IL_001a:  ret
    } // end of method SelectService::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SelectService::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SelectService::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SelectService::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method SelectService::Release

  } // end of class SelectService

  .class abstract auto ansi nested public specialname SelectingService
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001B)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method SelectingService::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method SelectingService::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method SelectingService::.ctor

  } // end of class SelectingService

  .class abstract auto ansi nested public specialname RequestingWatchServiceManager
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000001A)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ReadyWatchServiceManager 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method RequestingWatchServiceManager::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method RequestingWatchServiceManager::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method RequestingWatchServiceManager::.ctor

  } // end of class RequestingWatchServiceManager

  .class abstract auto ansi nested public specialname ReadyWatchServiceManager
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000019)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitingServiceManagerChange 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange msg) cil managed
    {
    } // end of method ReadyWatchServiceManager::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager msg) cil managed
    {
    } // end of method ReadyWatchServiceManager::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyWatchServiceManager::.ctor

  } // end of class ReadyWatchServiceManager

  .class abstract auto ansi nested public specialname WaitingServiceManagerChange
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000018)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ReadyWatchServiceManager 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged msg) cil managed
    {
    } // end of method WaitingServiceManagerChange::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method WaitingServiceManagerChange::.ctor

  } // end of class WaitingServiceManagerChange

  .class sequential ansi sealed nested public specialname StopWatchingServiceManager
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopWatchingServiceManager::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopWatchingServiceManager::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager::MarshallContent(uint8*,
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                 uint8*,
                                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method StopWatchingServiceManager::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingServiceManager* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StopWatchingServiceManager::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingServiceManager::Release

  } // end of class StopWatchingServiceManager

  .class sequential ansi sealed nested public specialname WaitNextServiceManagerChange
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WaitNextServiceManagerChange::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WaitNextServiceManagerChange::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange::MarshallContent(uint8*,
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                   uint8*,
                                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method WaitNextServiceManagerChange::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitNextServiceManagerChange* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method WaitNextServiceManagerChange::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitNextServiceManagerChange::Release

  } // end of class WaitNextServiceManagerChange

  .class sequential ansi sealed nested public specialname ServiceManagerChanged
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceManagerEventMask mask
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceManagerChanged::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceManagerChanged::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged::MarshallContent(uint8*,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                            uint8*,
                                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method ServiceManagerChanged::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceManagerChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ServiceManagerChanged::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceManagerChanged::Release

  } // end of class ServiceManagerChanged

  .class abstract auto ansi nested public specialname ServiceSelected
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000017)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestingWatchServiceStatus 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartingServiceWait 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartingServiceNoWait 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/StoppingServiceWait 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/StoppingServiceNoWait 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$2 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$4 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$6 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$8 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$10 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$12 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess msg) cil managed
    {
    } // end of method ServiceSelected::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected::.ctor

  } // end of class ServiceSelected

  .class abstract auto ansi nested public specialname ServiceSelected$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000016)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$3 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus msg) cil managed
    {
    } // end of method ServiceSelected$2::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$3 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method ServiceSelected$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$2::.ctor

  } // end of class ServiceSelected$2

  .class abstract auto ansi nested public specialname ServiceSelected$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000015)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Epsilon() cil managed
    {
    } // end of method ServiceSelected$3::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$3::.ctor

  } // end of class ServiceSelected$3

  .class abstract auto ansi nested public specialname ServiceSelected$4
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000014)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$5 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig msg) cil managed
    {
    } // end of method ServiceSelected$4::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$5 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method ServiceSelected$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$4::.ctor

  } // end of class ServiceSelected$4

  .class abstract auto ansi nested public specialname ServiceSelected$5
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000013)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Epsilon() cil managed
    {
    } // end of method ServiceSelected$5::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$5::.ctor

  } // end of class ServiceSelected$5

  .class abstract auto ansi nested public specialname ServiceSelected$6
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000012)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$7 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method ServiceSelected$6::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$7 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method ServiceSelected$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$6::.ctor

  } // end of class ServiceSelected$6

  .class abstract auto ansi nested public specialname ServiceSelected$7
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000011)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$7::.ctor

  } // end of class ServiceSelected$7

  .class abstract auto ansi nested public specialname ServiceSelected$8
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000010)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$9 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method ServiceSelected$8::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$9 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method ServiceSelected$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$8::.ctor

  } // end of class ServiceSelected$8

  .class abstract auto ansi nested public specialname ServiceSelected$9
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$9::.ctor

  } // end of class ServiceSelected$9

  .class abstract auto ansi nested public specialname ServiceSelected$10
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$11 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method ServiceSelected$10::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$11 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method ServiceSelected$10::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$10::.ctor

  } // end of class ServiceSelected$10

  .class abstract auto ansi nested public specialname ServiceSelected$11
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$11::.ctor

  } // end of class ServiceSelected$11

  .class abstract auto ansi nested public specialname ServiceSelected$12
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$13 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method ServiceSelected$12::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected$13 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method ServiceSelected$12::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$12::.ctor

  } // end of class ServiceSelected$12

  .class abstract auto ansi nested public specialname ServiceSelected$13
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ServiceSelected$13::.ctor

  } // end of class ServiceSelected$13

  .class sequential ansi sealed nested public specialname StartServiceNoWait
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartServiceNoWait::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartServiceNoWait::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait::MarshallContent(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         uint8*,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method StartServiceNoWait::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceNoWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StartServiceNoWait::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceNoWait::Release

  } // end of class StartServiceNoWait

  .class sequential ansi sealed nested public specialname StartServiceWait
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartServiceWait::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartServiceWait::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait::MarshallContent(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       uint8*,
                                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method StartServiceWait::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StartServiceWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StartServiceWait::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartServiceWait::Release

  } // end of class StartServiceWait

  .class sequential ansi sealed nested public specialname StopServiceWait
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopServiceWait::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopServiceWait::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method StopServiceWait::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StopServiceWait::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceWait::Release

  } // end of class StopServiceWait

  .class sequential ansi sealed nested public specialname StopServiceNoWait
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopServiceNoWait::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopServiceNoWait::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method StopServiceNoWait::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopServiceNoWait* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StopServiceNoWait::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopServiceNoWait::Release

  } // end of class StopServiceNoWait

  .class sequential ansi sealed nested public specialname DeleteService
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteService::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DeleteService::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method DeleteService::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/DeleteService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DeleteService::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DeleteService::Release

  } // end of class DeleteService

  .class sequential ansi sealed nested public specialname UnselectService
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method UnselectService::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method UnselectService::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method UnselectService::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/UnselectService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method UnselectService::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method UnselectService::Release

  } // end of class UnselectService

  .class sequential ansi sealed nested public specialname QueryServiceConfig
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method QueryServiceConfig::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method QueryServiceConfig::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig::MarshallContent(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         uint8*,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method QueryServiceConfig::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method QueryServiceConfig::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceConfig::Release

  } // end of class QueryServiceConfig

  .class sequential ansi sealed nested public specialname QueryServiceStatus
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method QueryServiceStatus::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method QueryServiceStatus::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus::MarshallContent(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         uint8*,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method QueryServiceStatus::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/QueryServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method QueryServiceStatus::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method QueryServiceStatus::Release

  } // end of class QueryServiceStatus

  .class sequential ansi sealed nested public specialname WatchServiceStatus
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WatchServiceStatus::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WatchServiceStatus::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus::MarshallContent(uint8*,
                                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                         uint8*,
                                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method WatchServiceStatus::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WatchServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method WatchServiceStatus::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WatchServiceStatus::Release

  } // end of class WatchServiceStatus

  .class sequential ansi sealed nested public specialname EnableService
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public bool enable
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnableService::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method EnableService::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method EnableService::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/EnableService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method EnableService::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method EnableService::Release

  } // end of class EnableService

  .class sequential ansi sealed nested public specialname TerminateServiceAllProcesses
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method TerminateServiceAllProcesses::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method TerminateServiceAllProcesses::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses::MarshallContent(uint8*,
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                   uint8*,
                                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method TerminateServiceAllProcesses::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceAllProcesses* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method TerminateServiceAllProcesses::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceAllProcesses::Release

  } // end of class TerminateServiceAllProcesses

  .class sequential ansi sealed nested public specialname TerminateServiceProcess
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 processId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method TerminateServiceProcess::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method TerminateServiceProcess::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess::MarshallContent(uint8*,
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                              uint8*,
                                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method TerminateServiceProcess::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/TerminateServiceProcess* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method TerminateServiceProcess::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TerminateServiceProcess::Release

  } // end of class TerminateServiceProcess

  .class abstract auto ansi nested public specialname RequestingWatchServiceStatus
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ReadyWatchService 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok msg) cil managed
    {
    } // end of method RequestingWatchServiceStatus::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method RequestingWatchServiceStatus::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method RequestingWatchServiceStatus::.ctor

  } // end of class RequestingWatchServiceStatus

  .class abstract auto ansi nested public specialname StartingServiceWait
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted msg) cil managed
    {
    } // end of method StartingServiceWait::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method StartingServiceWait::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method StartingServiceWait::.ctor

  } // end of class StartingServiceWait

  .class abstract auto ansi nested public specialname StartingServiceNoWait
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting msg) cil managed
    {
    } // end of method StartingServiceNoWait::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method StartingServiceNoWait::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method StartingServiceNoWait::.ctor

  } // end of class StartingServiceNoWait

  .class abstract auto ansi nested public specialname StoppingServiceWait
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped msg) cil managed
    {
    } // end of method StoppingServiceWait::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method StoppingServiceWait::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method StoppingServiceWait::.ctor

  } // end of class StoppingServiceWait

  .class abstract auto ansi nested public specialname StoppingServiceNoWait
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping msg) cil managed
    {
    } // end of method StoppingServiceNoWait::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceSelected 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method StoppingServiceNoWait::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method StoppingServiceNoWait::.ctor

  } // end of class StoppingServiceNoWait

  .class sequential ansi sealed nested public specialname CurrentServiceConfig
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceConfig config
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::config
      IL_0006:  ldarg.1
      IL_0007:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_000c:  ret
    } // end of method CurrentServiceConfig::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CurrentServiceConfig::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CurrentServiceConfig::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::MarshallContent(uint8*,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                           uint8*,
                                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method CurrentServiceConfig::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CurrentServiceConfig::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::config
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_000e:  ret
    } // end of method CurrentServiceConfig::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       12 (0xc)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceConfig Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceConfig::config
      IL_0006:  call       instance void Microsoft.Singularity.ServiceManager.ServiceConfig::Dispose()
      IL_000b:  ret
    } // end of method CurrentServiceConfig::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceConfig::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceConfig::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceConfig::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceConfig::Release

  } // end of class CurrentServiceConfig

  .class sequential ansi sealed nested public specialname CurrentServiceStatus
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceStatus::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CurrentServiceStatus::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CurrentServiceStatus::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus::MarshallContent(uint8*,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                           uint8*,
                                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method CurrentServiceStatus::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CurrentServiceStatus::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/CurrentServiceStatus::status
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_000e:  ret
    } // end of method CurrentServiceStatus::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceStatus::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceStatus::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceStatus::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceStatus::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CurrentServiceStatus::Release

  } // end of class CurrentServiceStatus

  .class sequential ansi sealed nested public specialname ServiceStarting
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStarting::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStarting::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method ServiceStarting::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarting* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ServiceStarting::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarting::Release

  } // end of class ServiceStarting

  .class sequential ansi sealed nested public specialname ServiceStarted
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStarted::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStarted::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method ServiceStarted::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStarted* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ServiceStarted::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStarted::Release

  } // end of class ServiceStarted

  .class sequential ansi sealed nested public specialname ServiceStopping
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStopping::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStopping::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method ServiceStopping::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopping* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ServiceStopping::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopping::Release

  } // end of class ServiceStopping

  .class sequential ansi sealed nested public specialname ServiceStopped
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStopped::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStopped::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method ServiceStopped::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStopped* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ServiceStopped::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStopped::Release

  } // end of class ServiceStopped

  .class abstract auto ansi nested public specialname ReadyWatchService
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitingServiceChange 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange msg) cil managed
    {
    } // end of method ReadyWatchService::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService msg) cil managed
    {
    } // end of method ReadyWatchService::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyWatchService::.ctor

  } // end of class ReadyWatchService

  .class abstract auto ansi nested public specialname WaitingServiceChange
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/ReadyWatchService 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged msg) cil managed
    {
    } // end of method WaitingServiceChange::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed msg) cil managed
    {
    } // end of method WaitingServiceChange::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method WaitingServiceChange::.ctor

  } // end of class WaitingServiceChange

  .class sequential ansi sealed nested public specialname WaitServiceChange
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WaitServiceChange::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method WaitServiceChange::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method WaitServiceChange::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/WaitServiceChange* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method WaitServiceChange::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method WaitServiceChange::Release

  } // end of class WaitServiceChange

  .class sequential ansi sealed nested public specialname StopWatchingService
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopWatchingService::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StopWatchingService::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService::MarshallContent(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          uint8*,
                                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method StopWatchingService::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/StopWatchingService* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StopWatchingService::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StopWatchingService::Release

  } // end of class StopWatchingService

  .class sequential ansi sealed nested public specialname ServiceStatusChanged
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceStatus status
    .field public bool missedChanges
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStatusChanged::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStatusChanged::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ServiceStatusChanged::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::MarshallContent(uint8*,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                           uint8*,
                                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method ServiceStatusChanged::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ServiceStatusChanged::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       15 (0xf)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceStatus Microsoft.Singularity.ServiceManager.ServiceManagerContract/ServiceStatusChanged::status
      IL_0006:  ldarg.1
      IL_0007:  ldarg.2
      IL_0008:  ldarg.3
      IL_0009:  call       instance void Microsoft.Singularity.ServiceManager.ServiceStatus::MarshallContent(uint8*,
                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                             uint8*)
      IL_000e:  ret
    } // end of method ServiceStatusChanged::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStatusChanged::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStatusChanged::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStatusChanged::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStatusChanged::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ServiceStatusChanged::Release

  } // end of class ServiceStatusChanged

  .class sequential ansi sealed nested public specialname Ok
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ok::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ok::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*,
                                                                                                                         int32&)
      IL_001d:  ret
    } // end of method Ok::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Ok* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ok::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ok::Release

  } // end of class Ok

  .class sequential ansi sealed nested public specialname RequestFailed
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceError err
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RequestFailed::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method RequestFailed::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method RequestFailed::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/RequestFailed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method RequestFailed::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method RequestFailed::Release

  } // end of class RequestFailed

  .field public static literal string ModuleName = "/service/services"
  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::'.ctor$PST0600004D'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceManagerContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceManagerContract/Imp::'.ctor$PST0600004D'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceManagerContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method ServiceManagerContract::.ctor

  .method privatescope static int32  StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       242 (0xf2)
    .maxstack  13
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.s   21
    IL_000c:  beq        IL_004d

    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.s   13
    IL_0014:  beq        IL_0061

    IL_0019:  ldloc.1
    IL_001a:  ldc.i4.s   17
    IL_001c:  beq        IL_0074

    IL_0021:  ldloc.1
    IL_0022:  ldc.i4.s   19
    IL_0024:  beq        IL_0087

    IL_0029:  ldloc.1
    IL_002a:  ldc.i4.s   28
    IL_002c:  beq        IL_009b

    IL_0031:  ldloc.1
    IL_0032:  ldc.i4.s   11
    IL_0034:  beq        IL_00ae

    IL_0039:  ldloc.1
    IL_003a:  ldc.i4.s   15
    IL_003c:  beq        IL_00c1

    IL_0041:  ldloc.1
    IL_0042:  ldc.i4.2
    IL_0043:  beq        IL_00d4

    IL_0048:  br         IL_00e7

    IL_004d:  ldarg.0
    IL_004e:  ldc.i4.s   23
    IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0055:  ldarg.0
    IL_0056:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_005b:  stloc.2
    IL_005c:  br         IL_00ee

    IL_0061:  ldarg.0
    IL_0062:  ldc.i4.1
    IL_0063:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0068:  ldarg.0
    IL_0069:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_006e:  stloc.2
    IL_006f:  br         IL_00ee

    IL_0074:  ldarg.0
    IL_0075:  ldc.i4.1
    IL_0076:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_007b:  ldarg.0
    IL_007c:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0081:  stloc.2
    IL_0082:  br         IL_00ee

    IL_0087:  ldarg.0
    IL_0088:  ldc.i4.s   23
    IL_008a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_008f:  ldarg.0
    IL_0090:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0095:  stloc.2
    IL_0096:  br         IL_00ee

    IL_009b:  ldarg.0
    IL_009c:  ldc.i4.1
    IL_009d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00a2:  ldarg.0
    IL_00a3:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00a8:  stloc.2
    IL_00a9:  br         IL_00ee

    IL_00ae:  ldarg.0
    IL_00af:  ldc.i4.1
    IL_00b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00b5:  ldarg.0
    IL_00b6:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00bb:  stloc.2
    IL_00bc:  br         IL_00ee

    IL_00c1:  ldarg.0
    IL_00c2:  ldc.i4.1
    IL_00c3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00c8:  ldarg.0
    IL_00c9:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00ce:  stloc.2
    IL_00cf:  br         IL_00ee

    IL_00d4:  ldarg.0
    IL_00d5:  ldc.i4.1
    IL_00d6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00db:  ldarg.0
    IL_00dc:  call       int32 Microsoft.Singularity.ServiceManager.ServiceManagerContract::StableState$PST0600003B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00e1:  stloc.2
    IL_00e2:  br         IL_00ee

    IL_00e7:  ldloc.0
    IL_00e8:  stloc.2
    IL_00e9:  br         IL_00ee

    IL_00ee:  ldloc.2
    IL_00ef:  stloc.3
    IL_00f0:  ldloc.2
    IL_00f1:  ret
  } // end of method ServiceManagerContract::StableState

  .method privatescope static int32  CanonicalState$PST0600003C(int32 state) cil managed
  {
    // Code size       139 (0x8b)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   21
    IL_0005:  beq        IL_0046

    IL_000a:  ldloc.0
    IL_000b:  ldc.i4.s   13
    IL_000d:  beq        IL_004e

    IL_0012:  ldloc.0
    IL_0013:  ldc.i4.s   17
    IL_0015:  beq        IL_0055

    IL_001a:  ldloc.0
    IL_001b:  ldc.i4.s   19
    IL_001d:  beq        IL_005c

    IL_0022:  ldloc.0
    IL_0023:  ldc.i4.s   28
    IL_0025:  beq        IL_0064

    IL_002a:  ldloc.0
    IL_002b:  ldc.i4.s   11
    IL_002d:  beq        IL_006b

    IL_0032:  ldloc.0
    IL_0033:  ldc.i4.s   15
    IL_0035:  beq        IL_0072

    IL_003a:  ldloc.0
    IL_003b:  ldc.i4.2
    IL_003c:  beq        IL_0079

    IL_0041:  br         IL_0080

    IL_0046:  ldc.i4.s   23
    IL_0048:  stloc.1
    IL_0049:  br         IL_0087

    IL_004e:  ldc.i4.1
    IL_004f:  stloc.1
    IL_0050:  br         IL_0087

    IL_0055:  ldc.i4.1
    IL_0056:  stloc.1
    IL_0057:  br         IL_0087

    IL_005c:  ldc.i4.s   23
    IL_005e:  stloc.1
    IL_005f:  br         IL_0087

    IL_0064:  ldc.i4.1
    IL_0065:  stloc.1
    IL_0066:  br         IL_0087

    IL_006b:  ldc.i4.1
    IL_006c:  stloc.1
    IL_006d:  br         IL_0087

    IL_0072:  ldc.i4.1
    IL_0073:  stloc.1
    IL_0074:  br         IL_0087

    IL_0079:  ldc.i4.1
    IL_007a:  stloc.1
    IL_007b:  br         IL_0087

    IL_0080:  ldarg.0
    IL_0081:  stloc.1
    IL_0082:  br         IL_0087

    IL_0087:  ldloc.1
    IL_0088:  stloc.2
    IL_0089:  ldloc.1
    IL_008a:  ret
  } // end of method ServiceManagerContract::CanonicalState

} // end of class Microsoft.Singularity.ServiceManager.ServiceManagerContract

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceError
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname uint32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ChannelClosed = uint32(0x00000001)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ContractNotSupported = uint32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceNotFound = uint32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError PermissionDenied = uint32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError InvalidArguments = uint32(0x00000005)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceExists = uint32(0x00000006)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ErrorLoadingManifest = uint32(0x00000007)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceHasInvalidManifest = uint32(0x00000008)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError CreateProcessFailed = uint32(0x00000009)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError FailedSetChannels = uint32(0x0000000A)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError StartProcessFailed = uint32(0x0000000B)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsAlreadyRunning = uint32(0x0000000C)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsStopping = uint32(0x0000000D)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsNotRunning = uint32(0x0000000E)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsStarting = uint32(0x0000000F)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError InternalError = uint32(0x00000010)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsAdministrativelyDisabled = uint32(0x00000011)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsDeleted = uint32(0x00000012)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsMarkedForDeletion = uint32(0x00000013)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsDefective = uint32(0x00000014)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError ServiceIsAlreadyStarting = uint32(0x00000015)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError CannotStopService = uint32(0x00000016)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError Unknown = uint32(0xFFFFFFFF)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceError None = int32(0x00000000)
} // end of class Microsoft.Singularity.ServiceManager.ServiceError

.class public abstract auto ansi sealed beforefieldinit Microsoft.Singularity.ServiceManager.ServiceEnums
       extends [Corlib]System.Object
{
  .method public hidebysig static string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          ToString(valuetype Microsoft.Singularity.ServiceManager.ServiceState 'value') cil managed
  {
    // Code size       96 (0x60)
    .maxstack  3
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceState V_0,
             [1] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  beq        IL_0023

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_002e

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.3
    IL_0012:  beq        IL_0039

    IL_0017:  ldloc.0
    IL_0018:  ldc.i4.4
    IL_0019:  beq        IL_0044

    IL_001e:  br         IL_004f

    IL_0023:  ldstr      "Stopped"
    IL_0028:  stloc.1
    IL_0029:  br         IL_005c

    IL_002e:  ldstr      "Starting"
    IL_0033:  stloc.1
    IL_0034:  br         IL_005c

    IL_0039:  ldstr      "Running"
    IL_003e:  stloc.1
    IL_003f:  br         IL_005c

    IL_0044:  ldstr      "Stopping"
    IL_0049:  stloc.1
    IL_004a:  br         IL_005c

    IL_004f:  ldarga.s   'value'
    IL_0051:  call       instance string [Corlib]System.Int32::ToString()
    IL_0056:  stloc.1
    IL_0057:  br         IL_005c

    IL_005c:  ldloc.1
    IL_005d:  stloc.2
    IL_005e:  ldloc.1
    IL_005f:  ret
  } // end of method ServiceEnums::ToString

  .method public hidebysig static string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          ToString(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState 'value') cil managed
  {
    // Code size       78 (0x4e)
    .maxstack  3
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessState V_0,
             [1] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  beq        IL_001c

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0027

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.3
    IL_0012:  beq        IL_0032

    IL_0017:  br         IL_003d

    IL_001c:  ldstr      "Starting"
    IL_0021:  stloc.1
    IL_0022:  br         IL_004a

    IL_0027:  ldstr      "Running"
    IL_002c:  stloc.1
    IL_002d:  br         IL_004a

    IL_0032:  ldstr      "Stopping"
    IL_0037:  stloc.1
    IL_0038:  br         IL_004a

    IL_003d:  ldarga.s   'value'
    IL_003f:  call       instance string [Corlib]System.Int32::ToString()
    IL_0044:  stloc.1
    IL_0045:  br         IL_004a

    IL_004a:  ldloc.1
    IL_004b:  stloc.2
    IL_004c:  ldloc.1
    IL_004d:  ret
  } // end of method ServiceEnums::ToString

  .method public hidebysig static string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          ToString(valuetype Microsoft.Singularity.ServiceManager.ServiceActivationMode 'value') cil managed
  {
    // Code size       78 (0x4e)
    .maxstack  3
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceActivationMode V_0,
             [1] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_001c

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.3
    IL_000b:  beq        IL_0027

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.1
    IL_0012:  beq        IL_0032

    IL_0017:  br         IL_003d

    IL_001c:  ldstr      "AlwaysActive"
    IL_0021:  stloc.1
    IL_0022:  br         IL_004a

    IL_0027:  ldstr      "Running"
    IL_002c:  stloc.1
    IL_002d:  br         IL_004a

    IL_0032:  ldstr      "Demand"
    IL_0037:  stloc.1
    IL_0038:  br         IL_004a

    IL_003d:  ldarga.s   'value'
    IL_003f:  call       instance string [Corlib]System.Int32::ToString()
    IL_0044:  stloc.1
    IL_0045:  br         IL_004a

    IL_004a:  ldloc.1
    IL_004b:  stloc.2
    IL_004c:  ldloc.1
    IL_004d:  ret
  } // end of method ServiceEnums::ToString

  .method public hidebysig static string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          ToString(valuetype Microsoft.Singularity.ServiceManager.ServiceError 'value') cil managed
  {
    // Code size       436 (0x1b4)
    .maxstack  3
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceError V_0,
             [1] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] int32 V_2,
             [3] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.0
    IL_0004:  beq        IL_00ae

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.1
    IL_000b:  beq        IL_00b9

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.2
    IL_0012:  beq        IL_00c4

    IL_0017:  ldloc.0
    IL_0018:  ldc.i4.3
    IL_0019:  beq        IL_00cf

    IL_001e:  ldloc.0
    IL_001f:  ldc.i4.4
    IL_0020:  beq        IL_00da

    IL_0025:  ldloc.0
    IL_0026:  ldc.i4.5
    IL_0027:  beq        IL_00e5

    IL_002c:  ldloc.0
    IL_002d:  ldc.i4.6
    IL_002e:  beq        IL_00f0

    IL_0033:  ldloc.0
    IL_0034:  ldc.i4.7
    IL_0035:  beq        IL_00fb

    IL_003a:  ldloc.0
    IL_003b:  ldc.i4.8
    IL_003c:  beq        IL_0106

    IL_0041:  ldloc.0
    IL_0042:  ldc.i4.s   9
    IL_0044:  beq        IL_0111

    IL_0049:  ldloc.0
    IL_004a:  ldc.i4.s   10
    IL_004c:  beq        IL_011c

    IL_0051:  ldloc.0
    IL_0052:  ldc.i4.s   11
    IL_0054:  beq        IL_0127

    IL_0059:  ldloc.0
    IL_005a:  ldc.i4.s   12
    IL_005c:  beq        IL_0132

    IL_0061:  ldloc.0
    IL_0062:  ldc.i4.s   13
    IL_0064:  beq        IL_013d

    IL_0069:  ldloc.0
    IL_006a:  ldc.i4.s   16
    IL_006c:  beq        IL_0148

    IL_0071:  ldloc.0
    IL_0072:  ldc.i4.s   17
    IL_0074:  beq        IL_0153

    IL_0079:  ldloc.0
    IL_007a:  ldc.i4.s   14
    IL_007c:  beq        IL_015e

    IL_0081:  ldloc.0
    IL_0082:  ldc.i4.s   18
    IL_0084:  beq        IL_0169

    IL_0089:  ldloc.0
    IL_008a:  ldc.i4.s   19
    IL_008c:  beq        IL_0174

    IL_0091:  ldloc.0
    IL_0092:  ldc.i4.s   20
    IL_0094:  beq        IL_017f

    IL_0099:  ldloc.0
    IL_009a:  ldc.i4.s   21
    IL_009c:  beq        IL_018a

    IL_00a1:  ldloc.0
    IL_00a2:  ldc.i4.s   22
    IL_00a4:  beq        IL_0195

    IL_00a9:  br         IL_01a0

    IL_00ae:  ldstr      "None"
    IL_00b3:  stloc.1
    IL_00b4:  br         IL_01b0

    IL_00b9:  ldstr      "ChannelClosed"
    IL_00be:  stloc.1
    IL_00bf:  br         IL_01b0

    IL_00c4:  ldstr      "ContractNotSupported"
    IL_00c9:  stloc.1
    IL_00ca:  br         IL_01b0

    IL_00cf:  ldstr      "ServiceNotFound"
    IL_00d4:  stloc.1
    IL_00d5:  br         IL_01b0

    IL_00da:  ldstr      "PermissionDenied"
    IL_00df:  stloc.1
    IL_00e0:  br         IL_01b0

    IL_00e5:  ldstr      "InvalidArguments"
    IL_00ea:  stloc.1
    IL_00eb:  br         IL_01b0

    IL_00f0:  ldstr      "ServiceExists"
    IL_00f5:  stloc.1
    IL_00f6:  br         IL_01b0

    IL_00fb:  ldstr      "ErrorLoadingManifest"
    IL_0100:  stloc.1
    IL_0101:  br         IL_01b0

    IL_0106:  ldstr      "ServiceHasInvalidManifest"
    IL_010b:  stloc.1
    IL_010c:  br         IL_01b0

    IL_0111:  ldstr      "CreateProcessFailed"
    IL_0116:  stloc.1
    IL_0117:  br         IL_01b0

    IL_011c:  ldstr      "FailedSetChannels"
    IL_0121:  stloc.1
    IL_0122:  br         IL_01b0

    IL_0127:  ldstr      "StartProcessFailed"
    IL_012c:  stloc.1
    IL_012d:  br         IL_01b0

    IL_0132:  ldstr      "ServiceIsAlreadyRunning"
    IL_0137:  stloc.1
    IL_0138:  br         IL_01b0

    IL_013d:  ldstr      "ServiceIsStopping"
    IL_0142:  stloc.1
    IL_0143:  br         IL_01b0

    IL_0148:  ldstr      "InternalError"
    IL_014d:  stloc.1
    IL_014e:  br         IL_01b0

    IL_0153:  ldstr      "ServiceIsAdministrativelyDisabled"
    IL_0158:  stloc.1
    IL_0159:  br         IL_01b0

    IL_015e:  ldstr      "ServiceIsNotRunning"
    IL_0163:  stloc.1
    IL_0164:  br         IL_01b0

    IL_0169:  ldstr      "ServiceIsDeleted"
    IL_016e:  stloc.1
    IL_016f:  br         IL_01b0

    IL_0174:  ldstr      "ServiceIsMarkedForDeletion"
    IL_0179:  stloc.1
    IL_017a:  br         IL_01b0

    IL_017f:  ldstr      "ServiceIsDefective"
    IL_0184:  stloc.1
    IL_0185:  br         IL_01b0

    IL_018a:  ldstr      "ServiceIsAlreadyStarting"
    IL_018f:  stloc.1
    IL_0190:  br         IL_01b0

    IL_0195:  ldstr      "CannotStopService"
    IL_019a:  stloc.1
    IL_019b:  br         IL_01b0

    IL_01a0:  ldarg.0
    IL_01a1:  conv.i4
    IL_01a2:  stloc.2
    IL_01a3:  ldloca.s   V_2
    IL_01a5:  call       instance string [Corlib]System.Int32::ToString()
    IL_01aa:  stloc.1
    IL_01ab:  br         IL_01b0

    IL_01b0:  ldloc.1
    IL_01b1:  stloc.3
    IL_01b2:  ldloc.1
    IL_01b3:  ret
  } // end of method ServiceEnums::ToString

  .method public hidebysig static string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          ToString(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad 'value') cil managed
  {
    // Code size       114 (0x72)
    .maxstack  3
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceLoad V_0,
             [1] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  beq        IL_002a

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0035

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.3
    IL_0012:  beq        IL_0040

    IL_0017:  ldloc.0
    IL_0018:  ldc.i4.4
    IL_0019:  beq        IL_004b

    IL_001e:  ldloc.0
    IL_001f:  ldc.i4.5
    IL_0020:  beq        IL_0056

    IL_0025:  br         IL_0061

    IL_002a:  ldstr      "Unknown"
    IL_002f:  stloc.1
    IL_0030:  br         IL_006e

    IL_0035:  ldstr      "Low"
    IL_003a:  stloc.1
    IL_003b:  br         IL_006e

    IL_0040:  ldstr      "Moderate"
    IL_0045:  stloc.1
    IL_0046:  br         IL_006e

    IL_004b:  ldstr      "High"
    IL_0050:  stloc.1
    IL_0051:  br         IL_006e

    IL_0056:  ldstr      "Overloaded"
    IL_005b:  stloc.1
    IL_005c:  br         IL_006e

    IL_0061:  ldarga.s   'value'
    IL_0063:  call       instance string [Corlib]System.Int32::ToString()
    IL_0068:  stloc.1
    IL_0069:  br         IL_006e

    IL_006e:  ldloc.1
    IL_006f:  stloc.2
    IL_0070:  ldloc.1
    IL_0071:  ret
  } // end of method ServiceEnums::ToString

  .method public hidebysig static string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 
          ToString(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth 'value') cil managed
  {
    // Code size       96 (0x60)
    .maxstack  3
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceHealth V_0,
             [1] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'return value',
             [2] string modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.1
    IL_0004:  beq        IL_0023

    IL_0009:  ldloc.0
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_002e

    IL_0010:  ldloc.0
    IL_0011:  ldc.i4.3
    IL_0012:  beq        IL_0039

    IL_0017:  ldloc.0
    IL_0018:  ldc.i4.4
    IL_0019:  beq        IL_0044

    IL_001e:  br         IL_004f

    IL_0023:  ldstr      "Unknown"
    IL_0028:  stloc.1
    IL_0029:  br         IL_005c

    IL_002e:  ldstr      "Normal"
    IL_0033:  stloc.1
    IL_0034:  br         IL_005c

    IL_0039:  ldstr      "UnrecoverableError"
    IL_003e:  stloc.1
    IL_003f:  br         IL_005c

    IL_0044:  ldstr      "RecoverableError"
    IL_0049:  stloc.1
    IL_004a:  br         IL_005c

    IL_004f:  ldarga.s   'value'
    IL_0051:  call       instance string [Corlib]System.Int32::ToString()
    IL_0056:  stloc.1
    IL_0057:  br         IL_005c

    IL_005c:  ldloc.1
    IL_005d:  stloc.2
    IL_005e:  ldloc.1
    IL_005f:  ret
  } // end of method ServiceEnums::ToString

} // end of class Microsoft.Singularity.ServiceManager.ServiceEnums

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceProcessContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x0000000C)
    .field public static literal specialname int32 StartSucceeded = int32(0x00000002)
    .field public static literal specialname int32 StartFailed = int32(0x00000003)
    .field public static literal specialname int32 Busy = int32(0x00000004)
    .field public static literal specialname int32 Knock = int32(0x00000005)
    .field public static literal specialname int32 Alive = int32(0x00000006)
    .field public static literal specialname int32 Stop = int32(0x00000007)
    .field public static literal specialname int32 AckStop = int32(0x00000008)
    .field public static literal specialname int32 Connect = int32(0x00000009)
    .field public static literal specialname int32 AckConnect = int32(0x0000000A)
    .field public static literal specialname int32 NakConnect = int32(0x0000000B)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded StartSucceededPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed StartFailedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy BusyPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive AlivePod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop AckStopPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect AckConnectPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect NakConnectPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060002C9'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::CanonicalState$PST06000047(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::CanonicalState$PST06000047(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Starting"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "Running"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Knocking"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "Stopping"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "Stopped"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "Connecting"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvStartSucceeded() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv StartSucceeded when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::StartSucceededPod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv StartSucceeded in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvStartSucceeded

    .method public instance void  RecvStartFailed([out] valuetype Microsoft.Singularity.ServiceManager.ServiceError& 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bd

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv StartFailed when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::StartFailedPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed::'error'
      IL_0092:  stobj      Microsoft.Singularity.ServiceManager.ServiceError
      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::StartFailedPod0
      IL_00a6:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.3
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv StartFailed in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvStartFailed

    .method public instance void  RecvBusy() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Busy when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::BusyPod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Busy in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvBusy

    .method public instance void  SendKnock() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::DeliverKnock0$PST0600030B()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::MarshallDeliverKnock0$PST0600030C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Knock in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendKnock

    .method public instance void  RecvAlive() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Alive when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::AlivePod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Alive in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAlive

    .method public instance void  SendStop() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::DeliverStop0$PST0600030D()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::MarshallDeliverStop0$PST0600030E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Stop in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendStop

    .method public instance void  RecvAckStop() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.8
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv AckStop when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::AckStopPod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.3
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv AckStop in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvAckStop

    .method public instance void  SendConnect(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path,
                                              valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       216 (0xd8)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_5)
      IL_0000:  ldarg.2
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.2
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.2
      IL_000d:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.2
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.2
      IL_0029:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002e:  call       instance string [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.6
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00c1

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_009c

      IL_006f:  ldarg.1
      IL_0070:  stloc.s    V_5
      IL_0072:  ldloc.s    V_5
      IL_0074:  brfalse    IL_0082

      IL_0079:  ldloc.s    V_4
      IL_007b:  ldloc.s    V_5
      IL_007d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0082:  ldloc.s    V_4
      IL_0084:  ldarg.2
      IL_0085:  call       void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_008a:  ldloc.3
      IL_008b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_0090:  ldarg.1
      IL_0091:  ldarg.2
      IL_0092:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::DeliverConnect0$PST0600030F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0097:  br         IL_00aa

      IL_009c:  ldloc.3
      IL_009d:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_00a2:  ldarg.1
      IL_00a3:  ldarg.2
      IL_00a4:  ldarg.0
      IL_00a5:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::MarshallDeliverConnect0$PST06000310(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                              valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b6:  ldc.i4.2
      IL_00b7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00bc:  br         IL_00d7

      IL_00c1:  ldstr      "can't send Connect in state "
      IL_00c6:  ldarg.0
      IL_00c7:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00cc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d6:  throw

      IL_00d7:  ret
    } // end of method Imp::SendConnect

    .method public instance void  RecvAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ae

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   10
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv AckConnect when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.0
      IL_0089:  ldc.i4.0
      IL_008a:  volatile.
      IL_008c:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0091:  ldarg.0
      IL_0092:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::AckConnectPod0
      IL_0097:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.6
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv AckConnect in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Imp::RecvAckConnect

    .method public instance void  RecvNakConnect([out] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode& 'error',
                                                 [out] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       227 (0xe3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00cc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   11
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv NakConnect when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::NakConnectPod0
      IL_008f:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::'error'
      IL_0094:  stobj      [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode
      IL_0099:  ldarg.2
      IL_009a:  ldarg.0
      IL_009b:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::NakConnectPod0
      IL_00a0:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_00a5:  stind.i
      IL_00a6:  ldarg.0
      IL_00a7:  ldc.i4.0
      IL_00a8:  volatile.
      IL_00aa:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::NakConnectPod0
      IL_00b5:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect
      IL_00bb:  ldarg.0
      IL_00bc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c1:  ldc.i4.6
      IL_00c2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c7:  br         IL_00e2

      IL_00cc:  ldstr      "can't recv NakConnect in state "
      IL_00d1:  ldarg.0
      IL_00d2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::CurrentState()
      IL_00d7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00dc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e1:  throw

      IL_00e2:  ret
    } // end of method Imp::RecvNakConnect

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverStartSucceeded0$PST060002E3() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverStartSucceeded0

    .method privatescope instance void  MarshallDeliverStartSucceeded0$PST060002E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverStartSucceeded0$PST060002E3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::StartSucceededPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverStartSucceeded0

    .method privatescope instance void  DeliverStartFailed0$PST060002E5(valuetype Microsoft.Singularity.ServiceManager.ServiceError 'error') cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::StartFailedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceError Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed::'error'
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.3
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.3
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverStartFailed0

    .method privatescope instance void  MarshallDeliverStartFailed0$PST060002E6(valuetype Microsoft.Singularity.ServiceManager.ServiceError 'error',
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverStartFailed0$PST060002E5(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::StartFailedPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverStartFailed0

    .method privatescope instance void  DeliverBusy0$PST060002E7() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverBusy0

    .method privatescope instance void  MarshallDeliverBusy0$PST060002E8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverBusy0$PST060002E7()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::BusyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverBusy0

    .method privatescope instance void  DeliverAlive0$PST060002E9() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAlive0

    .method privatescope instance void  MarshallDeliverAlive0$PST060002EA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverAlive0$PST060002E9()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::AlivePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAlive0

    .method privatescope instance void  DeliverAckStop0$PST060002EB() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.8
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.8
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAckStop0

    .method privatescope instance void  MarshallDeliverAckStop0$PST060002EC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverAckStop0$PST060002EB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::AckStopPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckStop0

    .method privatescope instance void  DeliverAckConnect0$PST060002ED() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   10
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   10
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverAckConnect0

    .method privatescope instance void  MarshallDeliverAckConnect0$PST060002EE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverAckConnect0$PST060002ED()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::AckConnectPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAckConnect0

    .method privatescope instance void  DeliverNakConnect0$PST060002EF(valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                       valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) exp) cil managed
    {
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::NakConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::'error'
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::NakConnectPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   11
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   11
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverNakConnect0

    .method privatescope instance void  MarshallDeliverNakConnect0$PST060002F0(valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode 'error',
                                                                               valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) exp,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverNakConnect0$PST060002EF(valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                         valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::NakConnectPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverNakConnect0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock KnockPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop StopPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect ConnectPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::CanonicalState$PST06000047(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::CanonicalState$PST06000047(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       140 (0x8c)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_003b

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0046

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.5
      IL_001c:  beq        IL_0051

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.4
      IL_0023:  beq        IL_005c

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.3
      IL_002a:  beq        IL_0067

      IL_002f:  ldloc.0
      IL_0030:  ldc.i4.2
      IL_0031:  beq        IL_0072

      IL_0036:  br         IL_007d

      IL_003b:  ldstr      "Starting"
      IL_0040:  stloc.1
      IL_0041:  br         IL_0088

      IL_0046:  ldstr      "Running"
      IL_004b:  stloc.1
      IL_004c:  br         IL_0088

      IL_0051:  ldstr      "Knocking"
      IL_0056:  stloc.1
      IL_0057:  br         IL_0088

      IL_005c:  ldstr      "Stopping"
      IL_0061:  stloc.1
      IL_0062:  br         IL_0088

      IL_0067:  ldstr      "Stopped"
      IL_006c:  stloc.1
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "Connecting"
      IL_0077:  stloc.1
      IL_0078:  br         IL_0088

      IL_007d:  ldstr      "<protocol terminated>"
      IL_0082:  stloc.1
      IL_0083:  br         IL_0088

      IL_0088:  ldloc.1
      IL_0089:  stloc.2
      IL_008a:  ldloc.1
      IL_008b:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendStartSucceeded() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverStartSucceeded0$PST060002E3()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverStartSucceeded0$PST060002E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send StartSucceeded in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendStartSucceeded

    .method public instance void  SendStartFailed(valuetype Microsoft.Singularity.ServiceManager.ServiceError 'error') cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverStartFailed0$PST060002E5(valuetype Microsoft.Singularity.ServiceManager.ServiceError)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverStartFailed0$PST060002E6(valuetype Microsoft.Singularity.ServiceManager.ServiceError,
                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.3
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send StartFailed in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendStartFailed

    .method public instance void  SendBusy() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverBusy0$PST060002E7()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverBusy0$PST060002E8(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Busy in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendBusy

    .method public instance void  RecvKnock() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Knock when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::KnockPod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Knock in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvKnock

    .method public instance void  SendAlive() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverAlive0$PST060002E9()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverAlive0$PST060002EA(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Alive in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAlive

    .method public instance void  RecvStop() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Stop when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::StopPod0
      IL_0095:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Stop in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvStop

    .method public instance void  SendAckStop() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverAckStop0$PST060002EB()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverAckStop0$PST060002EC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.3
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckStop in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckStop

    .method public instance void  RecvConnect([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector)& path,
                                              [out] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00c8

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   9
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Connect when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::ConnectPod0
      IL_008f:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0094:  stind.i
      IL_0095:  ldarg.2
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::ConnectPod0
      IL_009c:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_00a1:  stind.i
      IL_00a2:  ldarg.0
      IL_00a3:  ldc.i4.0
      IL_00a4:  volatile.
      IL_00a6:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::ConnectPod0
      IL_00b1:  initobj    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect
      IL_00b7:  ldarg.0
      IL_00b8:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bd:  ldc.i4.2
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't recv Connect in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Exp::RecvConnect

    .method public instance void  SendAckConnect() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.2
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverAckConnect0$PST060002ED()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverAckConnect0$PST060002EE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send AckConnect in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendAckConnect

    .method public instance void  SendNakConnect(valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode 'error',
                                                 valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) exp) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.UnbindEndpointAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  12
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.2
      IL_0001:  brfalse    IL_003e

      IL_0006:  ldarg.2
      IL_0007:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_000c:  ldarg.2
      IL_000d:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0012:  ldc.i4.3
      IL_0013:  call       instance bool [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::InState(int32)
      IL_0018:  brtrue     IL_003e

      IL_001d:  ldstr      "can't move endpoint exp in state "
      IL_0022:  ldarg.2
      IL_0023:  call       void [System.Compiler.Runtime]Microsoft.Contracts.NonNullType::AssertNotNull(native uint)
      IL_0028:  ldarg.2
      IL_0029:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002e:  call       instance string [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::CurrentState()
      IL_0033:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0038:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_003d:  throw

      IL_003e:  ldarg.0
      IL_003f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0044:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0049:  stloc.0
      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.2
      IL_004c:  beq        IL_0056

      IL_0051:  br         IL_00ae

      IL_0056:  ldarg.0
      IL_0057:  ldloca.s   V_1
      IL_0059:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_005e:  stloc.2
      IL_005f:  ldloc.2
      IL_0060:  stloc.3
      IL_0061:  ldloc.3
      IL_0062:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_0067:  stloc.s    V_4
      IL_0069:  ldloc.1
      IL_006a:  brtrue     IL_0089

      IL_006f:  ldloc.s    V_4
      IL_0071:  ldarg.2
      IL_0072:  call       void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0077:  ldloc.3
      IL_0078:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_007d:  ldarg.1
      IL_007e:  ldarg.2
      IL_007f:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::DeliverNakConnect0$PST060002EF(valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                         valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start))
      IL_0084:  br         IL_0097

      IL_0089:  ldloc.3
      IL_008a:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.2
      IL_0091:  ldarg.0
      IL_0092:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::MarshallDeliverNakConnect0$PST060002F0(valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode,
                                                                                                                                                 valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start),
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0097:  ldarg.0
      IL_0098:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a3:  ldc.i4.6
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't send NakConnect in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::SendNakConnect

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       421 (0x1a5)
      .maxstack  8
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               int32 V_13)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0036

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.4
      IL_0017:  beq        IL_0076

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.5
      IL_001e:  beq        IL_00be

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.6
      IL_0025:  beq        IL_0106

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.7
      IL_002c:  beq        IL_014e

      IL_0031:  br         IL_0196

      IL_0036:  ldc.i4.0
      IL_0037:  stloc.2
      IL_0038:  ldarg.0
      IL_0039:  volatile.
      IL_003b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0040:  stloc.3
      IL_0041:  ldloc.3
      IL_0042:  brtrue     IL_0057

      IL_0047:  ldarg.0
      IL_0048:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004d:  stloc.2
      IL_004e:  ldarg.0
      IL_004f:  volatile.
      IL_0051:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0056:  stloc.3
      IL_0057:  ldloc.3
      IL_0058:  ldc.i4.0
      IL_0059:  ceq
      IL_005b:  brfalse    IL_006e

      IL_0060:  ldloc.2
      IL_0061:  brfalse    IL_006e

      IL_0066:  ldc.i4.m1
      IL_0067:  stloc.s    V_4
      IL_0069:  br         IL_019e

      IL_006e:  ldloc.3
      IL_006f:  stloc.s    V_4
      IL_0071:  br         IL_019e

      IL_0076:  ldc.i4.0
      IL_0077:  stloc.s    V_5
      IL_0079:  ldarg.0
      IL_007a:  volatile.
      IL_007c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0081:  stloc.s    V_6
      IL_0083:  ldloc.s    V_6
      IL_0085:  brtrue     IL_009c

      IL_008a:  ldarg.0
      IL_008b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0090:  stloc.s    V_5
      IL_0092:  ldarg.0
      IL_0093:  volatile.
      IL_0095:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_009a:  stloc.s    V_6
      IL_009c:  ldloc.s    V_6
      IL_009e:  ldc.i4.0
      IL_009f:  ceq
      IL_00a1:  brfalse    IL_00b5

      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brfalse    IL_00b5

      IL_00ad:  ldc.i4.m1
      IL_00ae:  stloc.s    V_4
      IL_00b0:  br         IL_019e

      IL_00b5:  ldloc.s    V_6
      IL_00b7:  stloc.s    V_4
      IL_00b9:  br         IL_019e

      IL_00be:  ldc.i4.0
      IL_00bf:  stloc.s    V_7
      IL_00c1:  ldarg.0
      IL_00c2:  volatile.
      IL_00c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_00c9:  stloc.s    V_8
      IL_00cb:  ldloc.s    V_8
      IL_00cd:  brtrue     IL_00e4

      IL_00d2:  ldarg.0
      IL_00d3:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d8:  stloc.s    V_7
      IL_00da:  ldarg.0
      IL_00db:  volatile.
      IL_00dd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_00e2:  stloc.s    V_8
      IL_00e4:  ldloc.s    V_8
      IL_00e6:  ldc.i4.0
      IL_00e7:  ceq
      IL_00e9:  brfalse    IL_00fd

      IL_00ee:  ldloc.s    V_7
      IL_00f0:  brfalse    IL_00fd

      IL_00f5:  ldc.i4.m1
      IL_00f6:  stloc.s    V_4
      IL_00f8:  br         IL_019e

      IL_00fd:  ldloc.s    V_8
      IL_00ff:  stloc.s    V_4
      IL_0101:  br         IL_019e

      IL_0106:  ldc.i4.0
      IL_0107:  stloc.s    V_9
      IL_0109:  ldarg.0
      IL_010a:  volatile.
      IL_010c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0111:  stloc.s    V_10
      IL_0113:  ldloc.s    V_10
      IL_0115:  brtrue     IL_012c

      IL_011a:  ldarg.0
      IL_011b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0120:  stloc.s    V_9
      IL_0122:  ldarg.0
      IL_0123:  volatile.
      IL_0125:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_012a:  stloc.s    V_10
      IL_012c:  ldloc.s    V_10
      IL_012e:  ldc.i4.0
      IL_012f:  ceq
      IL_0131:  brfalse    IL_0145

      IL_0136:  ldloc.s    V_9
      IL_0138:  brfalse    IL_0145

      IL_013d:  ldc.i4.m1
      IL_013e:  stloc.s    V_4
      IL_0140:  br         IL_019e

      IL_0145:  ldloc.s    V_10
      IL_0147:  stloc.s    V_4
      IL_0149:  br         IL_019e

      IL_014e:  ldc.i4.0
      IL_014f:  stloc.s    V_11
      IL_0151:  ldarg.0
      IL_0152:  volatile.
      IL_0154:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0159:  stloc.s    V_12
      IL_015b:  ldloc.s    V_12
      IL_015d:  brtrue     IL_0174

      IL_0162:  ldarg.0
      IL_0163:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0168:  stloc.s    V_11
      IL_016a:  ldarg.0
      IL_016b:  volatile.
      IL_016d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0172:  stloc.s    V_12
      IL_0174:  ldloc.s    V_12
      IL_0176:  ldc.i4.0
      IL_0177:  ceq
      IL_0179:  brfalse    IL_018d

      IL_017e:  ldloc.s    V_11
      IL_0180:  brfalse    IL_018d

      IL_0185:  ldc.i4.m1
      IL_0186:  stloc.s    V_4
      IL_0188:  br         IL_019e

      IL_018d:  ldloc.s    V_12
      IL_018f:  stloc.s    V_4
      IL_0191:  br         IL_019e

      IL_0196:  ldc.i4.m1
      IL_0197:  stloc.s    V_4
      IL_0199:  br         IL_019e

      IL_019e:  ldloc.s    V_4
      IL_01a0:  stloc.s    V_13
      IL_01a2:  ldloc.s    V_4
      IL_01a4:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverKnock0$PST0600030B() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverKnock0

    .method privatescope instance void  MarshallDeliverKnock0$PST0600030C(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::DeliverKnock0$PST0600030B()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::KnockPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverKnock0

    .method privatescope instance void  DeliverStop0$PST0600030D() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.7
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.7
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverStop0

    .method privatescope instance void  MarshallDeliverStop0$PST0600030E(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::DeliverStop0$PST0600030D()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::StopPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverStop0

    .method privatescope instance void  DeliverConnect0$PST0600030F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path,
                                                                    valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::ConnectPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::ConnectPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   9
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   9
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_002a:  ret
    } // end of method Exp::DeliverConnect0

    .method privatescope instance void  MarshallDeliverConnect0$PST06000310(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path,
                                                                            valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) exp,
                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      .param [2]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::DeliverConnect0$PST0600030F(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector),
                                                                                                                                      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::ConnectPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::MarshallAll(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          int32&)
      IL_001b:  ret
    } // end of method Exp::MarshallDeliverConnect0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname StartSucceeded
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartSucceeded::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartSucceeded::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method StartSucceeded::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StartSucceeded::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartSucceeded::Release

  } // end of class StartSucceeded

  .class sequential ansi sealed nested public specialname StartFailed
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceError 'error'
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartFailed::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method StartFailed::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method StartFailed::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method StartFailed::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method StartFailed::Release

  } // end of class StartFailed

  .class sequential ansi sealed nested public specialname Busy
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Busy::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Busy::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Busy::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Busy::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Busy::Release

  } // end of class Busy

  .class sequential ansi sealed nested public specialname Knock
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Knock::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Knock::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Knock::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Knock::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Knock::Release

  } // end of class Knock

  .class sequential ansi sealed nested public specialname Alive
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Alive::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Alive::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Alive::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Alive::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Alive::Release

  } // end of class Alive

  .class sequential ansi sealed nested public specialname Stop
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Stop::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Stop::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Stop::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Stop::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Stop::Release

  } // end of class Stop

  .class sequential ansi sealed nested public specialname AckStop
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckStop::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckStop::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method AckStop::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckStop::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckStop::Release

  } // end of class AckStop

  .class sequential ansi sealed nested public specialname Connect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) path
    .field public valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       33 (0x21)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ldarg.1
      IL_0015:  ldarg.0
      IL_0016:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_001b:  call       void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0020:  ret
    } // end of method Connect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Connect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::MarshallContent(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              uint8*,
                                                                                                                              int32&)
      IL_001d:  ret
    } // end of method Connect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Connect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       162 (0xa2)
      .maxstack  10
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2,
               [3] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) V_3)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ldarg.0
      IL_0051:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_0056:  brfalse    IL_00a1

      IL_005b:  ldarg.0
      IL_005c:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_0061:  stloc.3
      IL_0062:  ldarg.2
      IL_0063:  ldarg.1
      IL_0064:  ldarg.0
      IL_0065:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_006a:  ldtoken    valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_006f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0074:  ldarg.3
      IL_0075:  ldarg.0
      IL_0076:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_007b:  conv.i
      IL_007c:  ldarg.3
      IL_007d:  conv.i
      IL_007e:  sub
      IL_007f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0084:  ldarg.0
      IL_0085:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_008a:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_008f:  ldarg.1
      IL_0090:  ldarg.2
      IL_0091:  ldarg.0
      IL_0092:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_0097:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_009c:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*)
      IL_00a1:  ret
    } // end of method Connect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       64 (0x40)
      .maxstack  4
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0,
               [1] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) V_1)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::path
      IL_001a:  ldarg.0
      IL_001b:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_0020:  stloc.1
      IL_0021:  ldloc.1
      IL_0022:  brfalse    IL_003f

      IL_0027:  ldloc.1
      IL_0028:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_002d:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0032:  ldloc.1
      IL_0033:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0038:  ldarg.0
      IL_0039:  ldnull
      IL_003a:  stfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect::exp
      IL_003f:  ret
    } // end of method Connect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Connect::Release

  } // end of class Connect

  .class sequential ansi sealed nested public specialname AckConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method AckConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method AckConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method AckConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method AckConnect::Release

  } // end of class AckConnect

  .class sequential ansi sealed nested public specialname NakConnect
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ErrorCode 'error'
    .field public valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) exp
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0007:  call       void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000c:  ret
    } // end of method NakConnect::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakConnect::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NakConnect::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method NakConnect::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NakConnect::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       82 (0x52)
      .maxstack  9
      .locals init ([0] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0006:  brfalse    IL_0051

      IL_000b:  ldarg.0
      IL_000c:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0011:  stloc.0
      IL_0012:  ldarg.2
      IL_0013:  ldarg.1
      IL_0014:  ldarg.0
      IL_0015:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_001a:  ldtoken    valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start)
      IL_001f:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_002b:  conv.i
      IL_002c:  ldarg.3
      IL_002d:  conv.i
      IL_002e:  sub
      IL_002f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0034:  ldarg.0
      IL_0035:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_003a:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_003f:  ldarg.1
      IL_0040:  ldarg.2
      IL_0041:  ldarg.0
      IL_0042:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0047:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_004c:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*)
      IL_0051:  ret
    } // end of method NakConnect::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       38 (0x26)
      .maxstack  4
      .locals init ([0] valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0025

      IL_000d:  ldloc.0
      IL_000e:  castclass  valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp&
      IL_0013:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0018:  ldloc.0
      IL_0019:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_001e:  ldarg.0
      IL_001f:  ldnull
      IL_0020:  stfld      valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start) Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect::exp
      IL_0025:  ret
    } // end of method NakConnect::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NakConnect::Release

  } // end of class NakConnect

  .class abstract auto ansi nested public specialname Starting
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Running 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartSucceeded msg) cil managed
    {
    } // end of method Starting::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stopped 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/StartFailed msg) cil managed
    {
    } // end of method Starting::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Starting::.ctor

  } // end of class Starting

  .class abstract auto ansi nested public specialname Running
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knocking 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Knock msg) cil managed
    {
    } // end of method Running::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stopping 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stop msg) cil managed
    {
    } // end of method Running::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connecting 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Connect msg) cil managed
    {
    } // end of method Running::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Running::.ctor

  } // end of class Running

  .class abstract auto ansi nested public specialname Knocking
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Running 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Alive msg) cil managed
    {
    } // end of method Knocking::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Knocking::.ctor

  } // end of class Knocking

  .class abstract auto ansi nested public specialname Stopping
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Stopped 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckStop msg) cil managed
    {
    } // end of method Stopping::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Running 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Busy msg) cil managed
    {
    } // end of method Stopping::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Stopping::.ctor

  } // end of class Stopping

  .class abstract auto ansi nested public specialname Stopped
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Stopped::.ctor

  } // end of class Stopped

  .class abstract auto ansi nested public specialname Connecting
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Running 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/NakConnect msg) cil managed
    {
    } // end of method Connecting::Send

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceProcessContract/Running 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/AckConnect msg) cil managed
    {
    } // end of method Connecting::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Connecting::.ctor

  } // end of class Connecting

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
    IL_0017:  ldc.i4.7
    IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
    IL_0036:  ldc.i4.7
    IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::'.ctor$PST060002C9'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceProcessContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceProcessContract/Imp::'.ctor$PST060002C9'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceProcessContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ServiceProcessContract::.ctor

  .method privatescope static int32  StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.3
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.ServiceManager.ServiceProcessContract::StableState$PST06000046(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method ServiceProcessContract::StableState

  .method privatescope static int32  CanonicalState$PST06000047(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.3
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method ServiceProcessContract::CanonicalState

} // end of class Microsoft.Singularity.ServiceManager.ServiceProcessContract

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceHealth
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceHealth Normal = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceHealth UnrecoverableError = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceHealth RecoverableError = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceHealth Unknown = int32(0x00000001)
} // end of class Microsoft.Singularity.ServiceManager.ServiceHealth

.class public auto ansi sealed Microsoft.Singularity.ServiceManager.ServiceLoad
       extends [Corlib]System.Enum
{
  .field public specialname rtspecialname int32 value__
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Low = int32(0x00000002)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Moderate = int32(0x00000003)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceLoad High = int32(0x00000004)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Overloaded = int32(0x00000005)
  .field public static literal valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Unknown = int32(0x00000001)
} // end of class Microsoft.Singularity.ServiceManager.ServiceLoad

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.ServiceManager.ServiceEventContract
       extends [Corlib]System.Object
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000002)
    .field public static literal specialname int32 $NextTag = int32(0x00000005)
    .field public static literal specialname int32 HealthChanged = int32(0x00000002)
    .field public static literal specialname int32 LoadChanged = int32(0x00000003)
    .field public static literal specialname int32 Ack = int32(0x00000004)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack AckPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600038F'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::CanonicalState$PST0600004C(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::CanonicalState$PST0600004C(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "Ready"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "HealthChanging"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "LoadChanging"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Imp::CurrentState

    .method public instance void  SendHealthChanged(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth health) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::DeliverHealthChanged0$PST060003B7(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::MarshallDeliverHealthChanged0$PST060003B8(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth,
                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.3
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send HealthChanged in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendHealthChanged

    .method public instance void  SendLoadChanged(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad load) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::DeliverLoadChanged0$PST060003B9(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::MarshallDeliverLoadChanged0$PST060003BA(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.2
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send LoadChanged in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendLoadChanged

    .method public instance void  RecvAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       355 (0x163)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_00b3

      IL_001a:  br         IL_014c

      IL_001f:  ldc.i4.0
      IL_0020:  stloc.1
      IL_0021:  ldarg.0
      IL_0022:  volatile.
      IL_0024:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  brtrue     IL_0040

      IL_0030:  ldarg.0
      IL_0031:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0036:  stloc.1
      IL_0037:  ldarg.0
      IL_0038:  volatile.
      IL_003a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  ldc.i4.0
      IL_0042:  ceq
      IL_0044:  brfalse    IL_0062

      IL_0049:  ldloc.1
      IL_004a:  brfalse    IL_005a

      IL_004f:  ldstr      "Peer is closed"
      IL_0054:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0059:  throw

      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0060:  br.s       IL_001f

      IL_0062:  ldarg.0
      IL_0063:  ldc.i4.4
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0069:  ldloc.2
      IL_006a:  ldc.i4.4
      IL_006b:  beq        IL_008d

      IL_0070:  ldstr      "can't recv Ack when next message has tag "
      IL_0075:  ldarg.0
      IL_0076:  volatile.
      IL_0078:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_007d:  box        [Corlib]System.Int32
      IL_0082:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0087:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_008c:  throw

      IL_008d:  ldarg.0
      IL_008e:  ldc.i4.0
      IL_008f:  volatile.
      IL_0091:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0096:  ldarg.0
      IL_0097:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::AckPod0
      IL_009c:  initobj    Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack
      IL_00a2:  ldarg.0
      IL_00a3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a8:  ldc.i4.4
      IL_00a9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ae:  br         IL_0162

      IL_00b3:  ldc.i4.0
      IL_00b4:  stloc.3
      IL_00b5:  ldarg.0
      IL_00b6:  volatile.
      IL_00b8:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_00bd:  stloc.s    V_4
      IL_00bf:  ldloc.s    V_4
      IL_00c1:  brtrue     IL_00d7

      IL_00c6:  ldarg.0
      IL_00c7:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00cc:  stloc.3
      IL_00cd:  ldarg.0
      IL_00ce:  volatile.
      IL_00d0:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_00d5:  stloc.s    V_4
      IL_00d7:  ldloc.s    V_4
      IL_00d9:  ldc.i4.0
      IL_00da:  ceq
      IL_00dc:  brfalse    IL_00fa

      IL_00e1:  ldloc.3
      IL_00e2:  brfalse    IL_00f2

      IL_00e7:  ldstr      "Peer is closed"
      IL_00ec:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00f1:  throw

      IL_00f2:  ldarg.0
      IL_00f3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_00f8:  br.s       IL_00b3

      IL_00fa:  ldarg.0
      IL_00fb:  ldc.i4.4
      IL_00fc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0101:  ldloc.s    V_4
      IL_0103:  ldc.i4.4
      IL_0104:  beq        IL_0126

      IL_0109:  ldstr      "can't recv Ack when next message has tag "
      IL_010e:  ldarg.0
      IL_010f:  volatile.
      IL_0111:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0116:  box        [Corlib]System.Int32
      IL_011b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0120:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0125:  throw

      IL_0126:  ldarg.0
      IL_0127:  ldc.i4.0
      IL_0128:  volatile.
      IL_012a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_012f:  ldarg.0
      IL_0130:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::AckPod0
      IL_0135:  initobj    Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack
      IL_013b:  ldarg.0
      IL_013c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0141:  ldc.i4.4
      IL_0142:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0147:  br         IL_0162

      IL_014c:  ldstr      "can't recv Ack in state "
      IL_0151:  ldarg.0
      IL_0152:  call       instance string Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::CurrentState()
      IL_0157:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_015c:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0161:  throw

      IL_0162:  ret
    } // end of method Imp::RecvAck

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverAck0$PST060003A2() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverAck0

    .method privatescope instance void  MarshallDeliverAck0$PST060003A3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::DeliverAck0$PST060003A2()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::AckPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack::MarshallAll(uint8*,
                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                    int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverAck0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged HealthChangedPod0
    .field family valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged LoadChangedPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::CanonicalState$PST0600004C(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::CanonicalState$PST0600004C(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       86 (0x56)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0026

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.3
      IL_0015:  beq        IL_0031

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.2
      IL_001c:  beq        IL_003c

      IL_0021:  br         IL_0047

      IL_0026:  ldstr      "Ready"
      IL_002b:  stloc.1
      IL_002c:  br         IL_0052

      IL_0031:  ldstr      "HealthChanging"
      IL_0036:  stloc.1
      IL_0037:  br         IL_0052

      IL_003c:  ldstr      "LoadChanging"
      IL_0041:  stloc.1
      IL_0042:  br         IL_0052

      IL_0047:  ldstr      "<protocol terminated>"
      IL_004c:  stloc.1
      IL_004d:  br         IL_0052

      IL_0052:  ldloc.1
      IL_0053:  stloc.2
      IL_0054:  ldloc.1
      IL_0055:  ret
    } // end of method Exp::CurrentState

    .method public instance void  RecvHealthChanged([out] valuetype Microsoft.Singularity.ServiceManager.ServiceHealth& health) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bd

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv HealthChanged when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::HealthChangedPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceHealth Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged::health
      IL_0092:  stobj      Microsoft.Singularity.ServiceManager.ServiceHealth
      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::HealthChangedPod0
      IL_00a6:  initobj    Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.3
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv HealthChanged in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvHealthChanged

    .method public instance void  RecvLoadChanged([out] valuetype Microsoft.Singularity.ServiceManager.ServiceLoad& load) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bd

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv LoadChanged when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::LoadChangedPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged::load
      IL_0092:  stobj      Microsoft.Singularity.ServiceManager.ServiceLoad
      IL_0097:  ldarg.0
      IL_0098:  ldc.i4.0
      IL_0099:  volatile.
      IL_009b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_00a0:  ldarg.0
      IL_00a1:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::LoadChangedPod0
      IL_00a6:  initobj    Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged
      IL_00ac:  ldarg.0
      IL_00ad:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b2:  ldc.i4.2
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv LoadChanged in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvLoadChanged

    .method public instance void  SendAck() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       213 (0xd5)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.2
      IL_0015:  beq        IL_006b

      IL_001a:  br         IL_00be

      IL_001f:  ldarg.0
      IL_0020:  ldloca.s   V_1
      IL_0022:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0027:  stloc.2
      IL_0028:  ldloc.2
      IL_0029:  stloc.3
      IL_002a:  ldloc.3
      IL_002b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_0030:  stloc.s    V_4
      IL_0032:  ldloc.1
      IL_0033:  brtrue     IL_0048

      IL_0038:  ldloc.3
      IL_0039:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_003e:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::DeliverAck0$PST060003A2()
      IL_0043:  br         IL_0054

      IL_0048:  ldloc.3
      IL_0049:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_004e:  ldarg.0
      IL_004f:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::MarshallDeliverAck0$PST060003A3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005a:  ldarg.0
      IL_005b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0060:  ldc.i4.4
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0066:  br         IL_00d4

      IL_006b:  ldarg.0
      IL_006c:  ldloca.s   V_5
      IL_006e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  stloc.s    V_7
      IL_0079:  ldloc.s    V_7
      IL_007b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_0080:  stloc.s    V_8
      IL_0082:  ldloc.s    V_5
      IL_0084:  brtrue     IL_009a

      IL_0089:  ldloc.s    V_7
      IL_008b:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_0090:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::DeliverAck0$PST060003A2()
      IL_0095:  br         IL_00a7

      IL_009a:  ldloc.s    V_7
      IL_009c:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
      IL_00a1:  ldarg.0
      IL_00a2:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::MarshallDeliverAck0$PST060003A3(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00a7:  ldarg.0
      IL_00a8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00ad:  ldarg.0
      IL_00ae:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b3:  ldc.i4.4
      IL_00b4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b9:  br         IL_00d4

      IL_00be:  ldstr      "can't send Ack in state "
      IL_00c3:  ldarg.0
      IL_00c4:  call       instance string Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::CurrentState()
      IL_00c9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00ce:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d3:  throw

      IL_00d4:  ret
    } // end of method Exp::SendAck

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       263 (0x107)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               int32 V_9)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.ServiceManager.ServiceEventContract::StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.2
      IL_0010:  beq        IL_0028

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.3
      IL_0017:  beq        IL_0068

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.4
      IL_001e:  beq        IL_00b0

      IL_0023:  br         IL_00f8

      IL_0028:  ldc.i4.0
      IL_0029:  stloc.2
      IL_002a:  ldarg.0
      IL_002b:  volatile.
      IL_002d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0032:  stloc.3
      IL_0033:  ldloc.3
      IL_0034:  brtrue     IL_0049

      IL_0039:  ldarg.0
      IL_003a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_003f:  stloc.2
      IL_0040:  ldarg.0
      IL_0041:  volatile.
      IL_0043:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0048:  stloc.3
      IL_0049:  ldloc.3
      IL_004a:  ldc.i4.0
      IL_004b:  ceq
      IL_004d:  brfalse    IL_0060

      IL_0052:  ldloc.2
      IL_0053:  brfalse    IL_0060

      IL_0058:  ldc.i4.m1
      IL_0059:  stloc.s    V_4
      IL_005b:  br         IL_0100

      IL_0060:  ldloc.3
      IL_0061:  stloc.s    V_4
      IL_0063:  br         IL_0100

      IL_0068:  ldc.i4.0
      IL_0069:  stloc.s    V_5
      IL_006b:  ldarg.0
      IL_006c:  volatile.
      IL_006e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0073:  stloc.s    V_6
      IL_0075:  ldloc.s    V_6
      IL_0077:  brtrue     IL_008e

      IL_007c:  ldarg.0
      IL_007d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0082:  stloc.s    V_5
      IL_0084:  ldarg.0
      IL_0085:  volatile.
      IL_0087:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  ldc.i4.0
      IL_0091:  ceq
      IL_0093:  brfalse    IL_00a7

      IL_0098:  ldloc.s    V_5
      IL_009a:  brfalse    IL_00a7

      IL_009f:  ldc.i4.m1
      IL_00a0:  stloc.s    V_4
      IL_00a2:  br         IL_0100

      IL_00a7:  ldloc.s    V_6
      IL_00a9:  stloc.s    V_4
      IL_00ab:  br         IL_0100

      IL_00b0:  ldc.i4.0
      IL_00b1:  stloc.s    V_7
      IL_00b3:  ldarg.0
      IL_00b4:  volatile.
      IL_00b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_00bb:  stloc.s    V_8
      IL_00bd:  ldloc.s    V_8
      IL_00bf:  brtrue     IL_00d6

      IL_00c4:  ldarg.0
      IL_00c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00ca:  stloc.s    V_7
      IL_00cc:  ldarg.0
      IL_00cd:  volatile.
      IL_00cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_00d4:  stloc.s    V_8
      IL_00d6:  ldloc.s    V_8
      IL_00d8:  ldc.i4.0
      IL_00d9:  ceq
      IL_00db:  brfalse    IL_00ef

      IL_00e0:  ldloc.s    V_7
      IL_00e2:  brfalse    IL_00ef

      IL_00e7:  ldc.i4.m1
      IL_00e8:  stloc.s    V_4
      IL_00ea:  br         IL_0100

      IL_00ef:  ldloc.s    V_8
      IL_00f1:  stloc.s    V_4
      IL_00f3:  br         IL_0100

      IL_00f8:  ldc.i4.m1
      IL_00f9:  stloc.s    V_4
      IL_00fb:  br         IL_0100

      IL_0100:  ldloc.s    V_4
      IL_0102:  stloc.s    V_9
      IL_0104:  ldloc.s    V_4
      IL_0106:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverHealthChanged0$PST060003B7(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth health) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::HealthChangedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceHealth Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged::health
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.2
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.2
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverHealthChanged0

    .method privatescope instance void  MarshallDeliverHealthChanged0$PST060003B8(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth health,
                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::DeliverHealthChanged0$PST060003B7(valuetype Microsoft.Singularity.ServiceManager.ServiceHealth)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::HealthChangedPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverHealthChanged0

    .method privatescope instance void  DeliverLoadChanged0$PST060003B9(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad load) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::LoadChangedPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.ServiceManager.ServiceLoad Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged::load
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.3
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.3
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverLoadChanged0

    .method privatescope instance void  MarshallDeliverLoadChanged0$PST060003BA(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad load,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::DeliverLoadChanged0$PST060003B9(valuetype Microsoft.Singularity.ServiceManager.ServiceLoad)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::LoadChangedPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged::MarshallAll(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverLoadChanged0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname HealthChanged
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceHealth health
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method HealthChanged::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method HealthChanged::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method HealthChanged::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method HealthChanged::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method HealthChanged::Release

  } // end of class HealthChanged

  .class sequential ansi sealed nested public specialname LoadChanged
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.ServiceManager.ServiceLoad load
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method LoadChanged::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method LoadChanged::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged::MarshallContent(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                uint8*,
                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method LoadChanged::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method LoadChanged::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method LoadChanged::Release

  } // end of class LoadChanged

  .class sequential ansi sealed nested public specialname Ack
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ack::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack::MarshallContent(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        uint8*,
                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method Ack::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ack::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ack::Release

  } // end of class Ack

  .class abstract auto ansi nested public specialname Ready
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ProtocolStartStateAttribute::.ctor() = ( 01 00 00 00 ) 
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanging 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/HealthChanged msg) cil managed
    {
    } // end of method Ready::Recv

    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanging 
            Recv(valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/LoadChanged msg) cil managed
    {
    } // end of method Ready::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method Ready::.ctor

  } // end of class Ready

  .class abstract auto ansi nested public specialname HealthChanging
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceEventContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack msg) cil managed
    {
    } // end of method HealthChanging::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method HealthChanging::.ctor

  } // end of class HealthChanging

  .class abstract auto ansi nested public specialname LoadChanging
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000002)
    .method family abstract virtual instance class Microsoft.Singularity.ServiceManager.ServiceEventContract/Ready 
            Send(valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Ack msg) cil managed
    {
    } // end of method LoadChanging::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method LoadChanging::.ctor

  } // end of class LoadChanging

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
    IL_0017:  ldc.i4.4
    IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
    IL_0036:  ldc.i4.4
    IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::'.ctor$PST0600038F'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceEventContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.ServiceManager.ServiceEventContract/Imp::'.ctor$PST0600038F'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ServiceEventContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Corlib]System.Object::.ctor()
    IL_0006:  ret
  } // end of method ServiceEventContract::.ctor

  .method privatescope static int32  StableState$PST0600004B(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       25 (0x19)
    .maxstack  4
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.0
    IL_000f:  stloc.2
    IL_0010:  br         IL_0015

    IL_0015:  ldloc.2
    IL_0016:  stloc.3
    IL_0017:  ldloc.2
    IL_0018:  ret
  } // end of method ServiceEventContract::StableState

  .method privatescope static int32  CanonicalState$PST0600004C(int32 state) cil managed
  {
    // Code size       18 (0x12)
    .maxstack  1
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  br         IL_0007

    IL_0007:  ldarg.0
    IL_0008:  stloc.1
    IL_0009:  br         IL_000e

    IL_000e:  ldloc.1
    IL_000f:  stloc.2
    IL_0010:  ldloc.1
    IL_0011:  ret
  } // end of method ServiceEventContract::CanonicalState

} // end of class Microsoft.Singularity.ServiceManager.ServiceEventContract


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
