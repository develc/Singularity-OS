
//  Microsoft (R) .NET Framework IL Disassembler.  Version 2.0.50727.42
//  Copyright (c) Microsoft Corporation.  All rights reserved.



// Metadata version: v1.1.9999
.assembly extern Corlib
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly extern Microsoft.SingSharp.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:3555:0
}
.assembly extern Directory.Contracts
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:0:0
}
.assembly extern System.Compiler.Runtime
{
  .publickeytoken = (73 64 40 C9 B4 14 EA 16 )                         // sd@.....
  .ver 1:0:5031:5
}
.assembly Diagnostics.Contracts
{
  .custom instance void [Corlib]System.Reflection.AssemblyTitleAttribute::.ctor(string) = ( 01 00 2B 4D 69 63 72 6F 73 6F 66 74 2E 53 69 6E   // ..+Microsoft.Sin
                                                                                            67 75 6C 61 72 69 74 79 2E 44 69 61 67 6E 6F 73   // gularity.Diagnos
                                                                                            74 69 63 73 2E 43 6F 6E 74 72 61 63 74 73 00 00 ) // tics.Contracts..
  .custom instance void [Corlib]System.Reflection.AssemblyProductAttribute::.ctor(string) = ( 01 00 2F 4D 69 63 72 6F 73 6F 66 74 20 52 65 73   // ../Microsoft Res
                                                                                              65 61 72 63 68 20 53 69 6E 67 75 6C 61 72 69 74   // earch Singularit
                                                                                              79 20 4F 70 65 72 61 74 69 6E 67 20 53 79 73 74   // y Operating Syst
                                                                                              65 6D 00 00 )                                     // em..
  .custom instance void [Corlib]System.Reflection.AssemblyCompanyAttribute::.ctor(string) = ( 01 00 15 4D 69 63 72 6F 73 6F 66 74 20 43 6F 72   // ...Microsoft Cor
                                                                                              70 6F 72 61 74 69 6F 6E 00 00 )                   // poration..
  .custom instance void [Corlib]System.Reflection.AssemblyKeyFileAttribute::.ctor(string) = ( 01 00 0A 70 75 62 6C 69 63 2E 73 6E 6B 00 00 )    // ...public.snk..
  .custom instance void [Corlib]System.Reflection.AssemblyDelaySignAttribute::.ctor(bool) = ( 01 00 01 00 00 ) 

  // --- The following custom attribute is added automatically, do not uncomment -------
  //  .custom instance void [Corlib]System.Diagnostics.DebuggableAttribute::.ctor(bool,
  //                                                                              bool) = ( 01 00 01 01 00 00 ) 

  .publickey = (00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00   // .$..............
                00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00   // .$..RSA1........
                2B 96 12 82 73 B1 F0 B2 89 A1 53 81 A7 A1 1A BF   // +...s.....S.....
                07 40 A0 08 21 51 DE DF 0D 8C 66 0D 61 9A 97 19   // .@..!Q....f.a...
                07 08 76 E4 94 44 5A AB 22 BC B3 97 D7 B4 FF 97   // ..v..DZ.".......
                CA 80 ED 49 B3 FC 2B 87 BB 76 7B 60 CA FB F9 49   // ...I..+..v{`...I
                AA 43 5F CF 17 DE B3 19 01 BE 16 49 3C 87 DF E6   // .C_........I<...
                1D 71 F5 18 5F 06 97 A7 0A B5 E0 F1 E0 5C 70 46   // .q.._........\pF
                DB 0D 28 C1 BE 6D 83 DA 3F AC 58 16 1C 56 3C A5   // ..(..m..?.X..V<.
                9D C2 EF 9C E3 02 30 D9 37 7A A6 3D D2 76 CD BF ) // ......0.7z.=.v..
  .hash algorithm 0x00008004
  .ver 1:0:0:0
}
.module Diagnostics.Contracts.dll
// MVID: {FF6D62FF-B816-494A-8DF4-27BC9F691826}
.imagebase 0x00400000
.file alignment 0x00000200
.stackreserve 0x00100000
.subsystem 0x0003       // WINDOWS_CUI
.corflags 0x00010001    //  ILONLY TRACKDEBUGDATA
// Image base: 0x02790000


// =============== CLASS MEMBERS DECLARATION ===================

.class public sequential ansi beforefieldinit Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo
       extends [Corlib]System.ValueType
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
{
  .field public int32 ChannelId
  .field public int32 ImpProcessId
  .field public int32 ExpProcessId
  .field public int32 MessagesDeliveredToImp
  .field public int32 MessagesDeliveredToExp
  .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::TransferContentsOwnership

  .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ChannelInfo::TransferOwnership

  .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
  {
    // Code size       14 (0xe)
    .maxstack  8
    IL_0000:  ldarg.1
    IL_0001:  brfalse    IL_000d

    IL_0006:  ldarg.0
    IL_0007:  ldarg.1
    IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
    IL_000d:  ret
  } // end of method ChannelInfo::TransferVectorOwnership

  .method public instance void  MarshallAll(uint8* basep,
                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
  {
    // Code size       10 (0xa)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  ldarg.1
    IL_0002:  ldarg.2
    IL_0003:  ldarg.0
    IL_0004:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*)
    IL_0009:  ret
  } // end of method ChannelInfo::MarshallAll

  .method public static void  MarshallVector(uint8* basep,
                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                             uint8* parent,
                                             valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
  {
    // Code size       46 (0x2e)
    .maxstack  6
    .locals init (int32 V_0,
             int32 V_1)
    IL_0000:  ldarg.3
    IL_0001:  brfalse    IL_002d

    IL_0006:  ldarg.3
    IL_0007:  ldlen
    IL_0008:  stloc.0
    IL_0009:  ldc.i4.0
    IL_000a:  stloc.1
    IL_000b:  ldloc.1
    IL_000c:  ldloc.0
    IL_000d:  bge        IL_002d

    IL_0012:  ldarg.3
    IL_0013:  ldloc.1
    IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo
    IL_0019:  ldarg.0
    IL_001a:  ldarg.1
    IL_001b:  ldarg.3
    IL_001c:  ldc.i4.0
    IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo
    IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo::MarshallContent(uint8*,
                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                uint8*)
    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.1
    IL_0029:  add
    IL_002a:  stloc.1
    IL_002b:  br.s       IL_000b

    IL_002d:  ret
  } // end of method ChannelInfo::MarshallVector

  .method public instance void  MarshallContent(uint8* basep,
                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                uint8* parent) cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::MarshallContent

  .method public virtual instance void  Dispose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::Dispose

  .method public virtual instance void  Expose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::Expose

  .method public virtual instance void  UnExpose() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::UnExpose

  .method public virtual instance void  Acquire() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::Acquire

  .method public virtual instance void  Release() cil managed
  {
    // Code size       1 (0x1)
    .maxstack  8
    IL_0000:  ret
  } // end of method ChannelInfo::Release

} // end of class Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Diagnostics.Contracts.ChannelContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000008)
    .field public static literal specialname int32 Ready = int32(0x00000003)
    .field public static literal specialname int32 GetChannels = int32(0x00000004)
    .field public static literal specialname int32 Channels = int32(0x00000005)
    .field public static literal specialname int32 GetChannelStats = int32(0x00000006)
    .field public static literal specialname int32 ChannelStats = int32(0x00000007)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready ReadyPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels ChannelsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats ChannelStatsPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST0600001B'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::CanonicalState$PST06000010(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::CanonicalState$PST06000010(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       122 (0x7a)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0034

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_003f

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_004a

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.3
      IL_0023:  beq        IL_0055

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.2
      IL_002a:  beq        IL_0060

      IL_002f:  br         IL_006b

      IL_0034:  ldstr      "ReadyState"
      IL_0039:  stloc.1
      IL_003a:  br         IL_0076

      IL_003f:  ldstr      "ReadyState$0"
      IL_0044:  stloc.1
      IL_0045:  br         IL_0076

      IL_004a:  ldstr      "ReadyState$1"
      IL_004f:  stloc.1
      IL_0050:  br         IL_0076

      IL_0055:  ldstr      "Start"
      IL_005a:  stloc.1
      IL_005b:  br         IL_0076

      IL_0060:  ldstr      "DoneState"
      IL_0065:  stloc.1
      IL_0066:  br         IL_0076

      IL_006b:  ldstr      "<protocol terminated>"
      IL_0070:  stloc.1
      IL_0071:  br         IL_0076

      IL_0076:  ldloc.1
      IL_0077:  stloc.2
      IL_0078:  ldloc.1
      IL_0079:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ReadyPod0
      IL_0095:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.6
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv Ready in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendGetChannels() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::DeliverGetChannels0$PST0600004F()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::MarshallDeliverGetChannels0$PST06000050(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.5
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send GetChannels in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendGetChannels

    .method public instance void  RecvChannels([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& channels) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.5
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Channels when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelsPod0
      IL_008d:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelsPod0
      IL_00a2:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.6
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv Channels in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvChannels

    .method public instance void  SendGetChannelStats() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::DeliverGetChannelStats0$PST06000051()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::MarshallDeliverGetChannelStats0$PST06000052(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.4
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send GetChannelStats in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Imp::SendGetChannelStats

    .method public instance void  RecvChannelStats([out] int64& msgsSent,
                                                   [out] int64& bytesSent,
                                                   [out] int64& channelsCreated) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       234 (0xea)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00d3

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ChannelStats when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_008d:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::msgsSent
      IL_0092:  stind.i8
      IL_0093:  ldarg.2
      IL_0094:  ldarg.0
      IL_0095:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_009a:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::bytesSent
      IL_009f:  stind.i8
      IL_00a0:  ldarg.3
      IL_00a1:  ldarg.0
      IL_00a2:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_00a7:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::channelsCreated
      IL_00ac:  stind.i8
      IL_00ad:  ldarg.0
      IL_00ae:  ldc.i4.0
      IL_00af:  volatile.
      IL_00b1:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_00bc:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats
      IL_00c2:  ldarg.0
      IL_00c3:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c8:  ldc.i4.6
      IL_00c9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00ce:  br         IL_00e9

      IL_00d3:  ldstr      "can't recv ChannelStats in state "
      IL_00d8:  ldarg.0
      IL_00d9:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::CurrentState()
      IL_00de:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e3:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00e8:  throw

      IL_00e9:  ret
    } // end of method Imp::RecvChannelStats

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       342 (0x156)
      .maxstack  7
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               int32 V_11)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_002f

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_006f

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00b7

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.3
      IL_0025:  beq        IL_00ff

      IL_002a:  br         IL_0147

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.2
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.2
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0067

      IL_0059:  ldloc.2
      IL_005a:  brfalse    IL_0067

      IL_005f:  ldc.i4.m1
      IL_0060:  stloc.s    V_4
      IL_0062:  br         IL_014f

      IL_0067:  ldloc.3
      IL_0068:  stloc.s    V_4
      IL_006a:  br         IL_014f

      IL_006f:  ldc.i4.0
      IL_0070:  stloc.s    V_5
      IL_0072:  ldarg.0
      IL_0073:  volatile.
      IL_0075:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  brtrue     IL_0095

      IL_0083:  ldarg.0
      IL_0084:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  ldc.i4.0
      IL_0098:  ceq
      IL_009a:  brfalse    IL_00ae

      IL_009f:  ldloc.s    V_5
      IL_00a1:  brfalse    IL_00ae

      IL_00a6:  ldc.i4.m1
      IL_00a7:  stloc.s    V_4
      IL_00a9:  br         IL_014f

      IL_00ae:  ldloc.s    V_6
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_014f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_7
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_00c2:  stloc.s    V_8
      IL_00c4:  ldloc.s    V_8
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_7
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_014f

      IL_00f6:  ldloc.s    V_8
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_014f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_9
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_010a:  stloc.s    V_10
      IL_010c:  ldloc.s    V_10
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_9
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_014f

      IL_013e:  ldloc.s    V_10
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_014f

      IL_0147:  ldc.i4.m1
      IL_0148:  stloc.s    V_4
      IL_014a:  br         IL_014f

      IL_014f:  ldloc.s    V_4
      IL_0151:  stloc.s    V_11
      IL_0153:  ldloc.s    V_4
      IL_0155:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST06000031() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST06000032(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverReady0$PST06000031()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverChannels0$PST06000033(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) channels) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverChannels0

    .method privatescope instance void  MarshallDeliverChannels0$PST06000034(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) channels,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverChannels0$PST06000033(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelsPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverChannels0

    .method privatescope instance void  DeliverChannelStats0$PST06000035(int64 msgsSent,
                                                                         int64 bytesSent,
                                                                         int64 channelsCreated) cil managed
    {
      // Code size       53 (0x35)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::msgsSent
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::bytesSent
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::channelsCreated
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.7
      IL_0026:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002b:  ldarg.0
      IL_002c:  ldc.i4.7
      IL_002d:  volatile.
      IL_002f:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0034:  ret
    } // end of method Imp::DeliverChannelStats0

    .method privatescope instance void  MarshallDeliverChannelStats0$PST06000036(int64 msgsSent,
                                                                                 int64 bytesSent,
                                                                                 int64 channelsCreated,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverChannelStats0$PST06000035(int64,
                                                                                                                                           int64,
                                                                                                                                           int64)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ChannelStatsPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverChannelStats0

    .method privatescope instance void  DeliverContractNotSupported0$PST06000037() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST06000038(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverContractNotSupported0$PST06000037()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels GetChannelsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats GetChannelStatsPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::CanonicalState$PST06000010(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::CanonicalState$PST06000010(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       122 (0x7a)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0034

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.5
      IL_0015:  beq        IL_003f

      IL_001a:  ldloc.0
      IL_001b:  ldc.i4.4
      IL_001c:  beq        IL_004a

      IL_0021:  ldloc.0
      IL_0022:  ldc.i4.3
      IL_0023:  beq        IL_0055

      IL_0028:  ldloc.0
      IL_0029:  ldc.i4.2
      IL_002a:  beq        IL_0060

      IL_002f:  br         IL_006b

      IL_0034:  ldstr      "ReadyState"
      IL_0039:  stloc.1
      IL_003a:  br         IL_0076

      IL_003f:  ldstr      "ReadyState$0"
      IL_0044:  stloc.1
      IL_0045:  br         IL_0076

      IL_004a:  ldstr      "ReadyState$1"
      IL_004f:  stloc.1
      IL_0050:  br         IL_0076

      IL_0055:  ldstr      "Start"
      IL_005a:  stloc.1
      IL_005b:  br         IL_0076

      IL_0060:  ldstr      "DoneState"
      IL_0065:  stloc.1
      IL_0066:  br         IL_0076

      IL_006b:  ldstr      "<protocol terminated>"
      IL_0070:  stloc.1
      IL_0071:  br         IL_0076

      IL_0076:  ldloc.1
      IL_0077:  stloc.2
      IL_0078:  ldloc.1
      IL_0079:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverReady0$PST06000031()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::MarshallDeliverReady0$PST06000032(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.6
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send Ready in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvGetChannels() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.4
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.4
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetChannels when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::GetChannelsPod0
      IL_0095:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.5
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv GetChannels in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvGetChannels

    .method public instance void  SendChannels(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) channels) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       133 (0x85)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_006e

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004a

      IL_0031:  ldloc.s    V_4
      IL_0033:  ldarg.1
      IL_0034:  call       void Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0039:  ldloc.3
      IL_003a:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_003f:  ldarg.1
      IL_0040:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverChannels0$PST06000033(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0045:  br         IL_0057

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.0
      IL_0052:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::MarshallDeliverChannels0$PST06000034(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0057:  ldarg.0
      IL_0058:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005d:  ldarg.0
      IL_005e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0063:  ldc.i4.6
      IL_0064:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0069:  br         IL_0084

      IL_006e:  ldstr      "can't send Channels in state "
      IL_0073:  ldarg.0
      IL_0074:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::CurrentState()
      IL_0079:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007e:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0083:  throw

      IL_0084:  ret
    } // end of method Exp::SendChannels

    .method public instance void  RecvGetChannelStats() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.6
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.6
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv GetChannelStats when next message has t"
      + "ag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::GetChannelStatsPod0
      IL_0095:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.4
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv GetChannelStats in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Exp::RecvGetChannelStats

    .method public instance void  SendChannelStats(int64 msgsSent,
                                                   int64 bytesSent,
                                                   int64 channelsCreated) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       129 (0x81)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.4
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_006a

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0044

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  ldarg.2
      IL_0039:  ldarg.3
      IL_003a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverChannelStats0$PST06000035(int64,
                                                                                                                                           int64,
                                                                                                                                           int64)
      IL_003f:  br         IL_0053

      IL_0044:  ldloc.3
      IL_0045:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_004a:  ldarg.1
      IL_004b:  ldarg.2
      IL_004c:  ldarg.3
      IL_004d:  ldarg.0
      IL_004e:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::MarshallDeliverChannelStats0$PST06000036(int64,
                                                                                                                                                   int64,
                                                                                                                                                   int64,
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0059:  ldarg.0
      IL_005a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005f:  ldc.i4.6
      IL_0060:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0065:  br         IL_0080

      IL_006a:  ldstr      "can't send ChannelStats in state "
      IL_006f:  ldarg.0
      IL_0070:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::CurrentState()
      IL_0075:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007a:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007f:  throw

      IL_0080:  ret
    } // end of method Exp::SendChannelStats

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::DeliverContractNotSupported0$PST06000037()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::MarshallDeliverContractNotSupported0$PST06000038(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       342 (0x156)
      .maxstack  7
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               int32 V_11)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_002f

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_006f

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00b7

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.3
      IL_0025:  beq        IL_00ff

      IL_002a:  br         IL_0147

      IL_002f:  ldc.i4.0
      IL_0030:  stloc.2
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.3
      IL_003a:  ldloc.3
      IL_003b:  brtrue     IL_0050

      IL_0040:  ldarg.0
      IL_0041:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0046:  stloc.2
      IL_0047:  ldarg.0
      IL_0048:  volatile.
      IL_004a:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_004f:  stloc.3
      IL_0050:  ldloc.3
      IL_0051:  ldc.i4.0
      IL_0052:  ceq
      IL_0054:  brfalse    IL_0067

      IL_0059:  ldloc.2
      IL_005a:  brfalse    IL_0067

      IL_005f:  ldc.i4.m1
      IL_0060:  stloc.s    V_4
      IL_0062:  br         IL_014f

      IL_0067:  ldloc.3
      IL_0068:  stloc.s    V_4
      IL_006a:  br         IL_014f

      IL_006f:  ldc.i4.0
      IL_0070:  stloc.s    V_5
      IL_0072:  ldarg.0
      IL_0073:  volatile.
      IL_0075:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_007a:  stloc.s    V_6
      IL_007c:  ldloc.s    V_6
      IL_007e:  brtrue     IL_0095

      IL_0083:  ldarg.0
      IL_0084:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0089:  stloc.s    V_5
      IL_008b:  ldarg.0
      IL_008c:  volatile.
      IL_008e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0093:  stloc.s    V_6
      IL_0095:  ldloc.s    V_6
      IL_0097:  ldc.i4.0
      IL_0098:  ceq
      IL_009a:  brfalse    IL_00ae

      IL_009f:  ldloc.s    V_5
      IL_00a1:  brfalse    IL_00ae

      IL_00a6:  ldc.i4.m1
      IL_00a7:  stloc.s    V_4
      IL_00a9:  br         IL_014f

      IL_00ae:  ldloc.s    V_6
      IL_00b0:  stloc.s    V_4
      IL_00b2:  br         IL_014f

      IL_00b7:  ldc.i4.0
      IL_00b8:  stloc.s    V_7
      IL_00ba:  ldarg.0
      IL_00bb:  volatile.
      IL_00bd:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00c2:  stloc.s    V_8
      IL_00c4:  ldloc.s    V_8
      IL_00c6:  brtrue     IL_00dd

      IL_00cb:  ldarg.0
      IL_00cc:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00d1:  stloc.s    V_7
      IL_00d3:  ldarg.0
      IL_00d4:  volatile.
      IL_00d6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00db:  stloc.s    V_8
      IL_00dd:  ldloc.s    V_8
      IL_00df:  ldc.i4.0
      IL_00e0:  ceq
      IL_00e2:  brfalse    IL_00f6

      IL_00e7:  ldloc.s    V_7
      IL_00e9:  brfalse    IL_00f6

      IL_00ee:  ldc.i4.m1
      IL_00ef:  stloc.s    V_4
      IL_00f1:  br         IL_014f

      IL_00f6:  ldloc.s    V_8
      IL_00f8:  stloc.s    V_4
      IL_00fa:  br         IL_014f

      IL_00ff:  ldc.i4.0
      IL_0100:  stloc.s    V_9
      IL_0102:  ldarg.0
      IL_0103:  volatile.
      IL_0105:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_010a:  stloc.s    V_10
      IL_010c:  ldloc.s    V_10
      IL_010e:  brtrue     IL_0125

      IL_0113:  ldarg.0
      IL_0114:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0119:  stloc.s    V_9
      IL_011b:  ldarg.0
      IL_011c:  volatile.
      IL_011e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0123:  stloc.s    V_10
      IL_0125:  ldloc.s    V_10
      IL_0127:  ldc.i4.0
      IL_0128:  ceq
      IL_012a:  brfalse    IL_013e

      IL_012f:  ldloc.s    V_9
      IL_0131:  brfalse    IL_013e

      IL_0136:  ldc.i4.m1
      IL_0137:  stloc.s    V_4
      IL_0139:  br         IL_014f

      IL_013e:  ldloc.s    V_10
      IL_0140:  stloc.s    V_4
      IL_0142:  br         IL_014f

      IL_0147:  ldc.i4.m1
      IL_0148:  stloc.s    V_4
      IL_014a:  br         IL_014f

      IL_014f:  ldloc.s    V_4
      IL_0151:  stloc.s    V_11
      IL_0153:  ldloc.s    V_4
      IL_0155:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetChannels0$PST0600004F() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetChannels0

    .method privatescope instance void  MarshallDeliverGetChannels0$PST06000050(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::DeliverGetChannels0$PST0600004F()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::GetChannelsPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetChannels0

    .method privatescope instance void  DeliverGetChannelStats0$PST06000051() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetChannelStats0

    .method privatescope instance void  MarshallDeliverGetChannelStats0$PST06000052(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::DeliverGetChannelStats0$PST06000051()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::GetChannelStatsPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetChannelStats0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Ready
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class sequential ansi sealed nested public specialname GetChannels
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetChannels::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetChannels::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method GetChannels::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetChannels::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannels::Release

  } // end of class GetChannels

  .class sequential ansi sealed nested public specialname Channels
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) channels
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_0007:  call       void Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                 valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method Channels::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Channels::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Channels::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Channels::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Channels::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_0008:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_002b:  call       void Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo::MarshallVector(uint8*,
                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                        uint8*,
                                                                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method Channels::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels::channels
      IL_001a:  ret
    } // end of method Channels::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Channels::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Channels::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Channels::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Channels::Release

  } // end of class Channels

  .class sequential ansi sealed nested public specialname GetChannelStats
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetChannelStats::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetChannelStats::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method GetChannelStats::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetChannelStats::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetChannelStats::Release

  } // end of class GetChannelStats

  .class sequential ansi sealed nested public specialname ChannelStats
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int64 msgsSent
    .field public int64 bytesSent
    .field public int64 channelsCreated
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ChannelStats::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ChannelStats::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method ChannelStats::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ChannelStats::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ChannelStats::Release

  } // end of class ChannelStats

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ReadyState$0 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannels msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ReadyState$1 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/GetChannelStats msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Channels msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/ChannelStats msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .field public static literal string ModuleName = "/status/channels"
  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::'.ctor$PST0600001B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ChannelContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ChannelContract/Imp::'.ctor$PST0600001B'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ChannelContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method ChannelContract::.ctor

  .method privatescope static int32  StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ChannelContract::StableState$PST0600000F(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method ChannelContract::StableState

  .method privatescope static int32  CanonicalState$PST06000010(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method ChannelContract::CanonicalState

} // end of class Microsoft.Singularity.Diagnostics.Contracts.ChannelContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Diagnostics.Contracts.MemoryContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000012)
    .field public static literal specialname int32 Ready = int32(0x00000003)
    .field public static literal specialname int32 GetUsedMemory = int32(0x00000004)
    .field public static literal specialname int32 GetFreeMemory = int32(0x00000005)
    .field public static literal specialname int32 GetMaxMemory = int32(0x00000006)
    .field public static literal specialname int32 Memory = int32(0x00000007)
    .field public static literal specialname int32 GetProcessUsedMemory = int32(0x00000008)
    .field public static literal specialname int32 GetProcessPeakMemory = int32(0x00000009)
    .field public static literal specialname int32 GetProcessHandlePages = int32(0x0000000A)
    .field public static literal specialname int32 Pages = int32(0x0000000B)
    .field public static literal specialname int32 TotalUsedCommunicationHeap = int32(0x0000000C)
    .field public static literal specialname int32 ProcessUsedCommunicationHeap = int32(0x0000000D)
    .field public static literal specialname int32 BlocksAndTotal = int32(0x0000000E)
    .field public static literal specialname int32 DumpExHeap = int32(0x0000000F)
    .field public static literal specialname int32 ExHeapDump = int32(0x00000010)
    .field public static literal specialname int32 CollectGarbage = int32(0x00000011)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready ReadyPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory MemoryPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages PagesPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal BlocksAndTotalPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump ExHeapDumpPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST06000093'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::CanonicalState$PST06000015(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::CanonicalState$PST06000015(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       272 (0x110)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0072

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   12
      IL_001f:  beq        IL_0088

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0093

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   10
      IL_002f:  beq        IL_009e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   9
      IL_0037:  beq        IL_00a9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.8
      IL_003e:  beq        IL_00b4

      IL_0043:  ldloc.0
      IL_0044:  ldc.i4.7
      IL_0045:  beq        IL_00bf

      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.6
      IL_004c:  beq        IL_00ca

      IL_0051:  ldloc.0
      IL_0052:  ldc.i4.5
      IL_0053:  beq        IL_00d5

      IL_0058:  ldloc.0
      IL_0059:  ldc.i4.4
      IL_005a:  beq        IL_00e0

      IL_005f:  ldloc.0
      IL_0060:  ldc.i4.3
      IL_0061:  beq        IL_00eb

      IL_0066:  ldloc.0
      IL_0067:  ldc.i4.2
      IL_0068:  beq        IL_00f6

      IL_006d:  br         IL_0101

      IL_0072:  ldstr      "ReadyState"
      IL_0077:  stloc.1
      IL_0078:  br         IL_010c

      IL_007d:  ldstr      "ReadyState$0"
      IL_0082:  stloc.1
      IL_0083:  br         IL_010c

      IL_0088:  ldstr      "ReadyState$1"
      IL_008d:  stloc.1
      IL_008e:  br         IL_010c

      IL_0093:  ldstr      "ReadyState$2"
      IL_0098:  stloc.1
      IL_0099:  br         IL_010c

      IL_009e:  ldstr      "ReadyState$3"
      IL_00a3:  stloc.1
      IL_00a4:  br         IL_010c

      IL_00a9:  ldstr      "ReadyState$4"
      IL_00ae:  stloc.1
      IL_00af:  br         IL_010c

      IL_00b4:  ldstr      "ReadyState$5"
      IL_00b9:  stloc.1
      IL_00ba:  br         IL_010c

      IL_00bf:  ldstr      "ReadyState$6"
      IL_00c4:  stloc.1
      IL_00c5:  br         IL_010c

      IL_00ca:  ldstr      "ReadyState$7"
      IL_00cf:  stloc.1
      IL_00d0:  br         IL_010c

      IL_00d5:  ldstr      "ReadyState$8"
      IL_00da:  stloc.1
      IL_00db:  br         IL_010c

      IL_00e0:  ldstr      "ReadyState$9"
      IL_00e5:  stloc.1
      IL_00e6:  br         IL_010c

      IL_00eb:  ldstr      "Start"
      IL_00f0:  stloc.1
      IL_00f1:  br         IL_010c

      IL_00f6:  ldstr      "DoneState"
      IL_00fb:  stloc.1
      IL_00fc:  br         IL_010c

      IL_0101:  ldstr      "<protocol terminated>"
      IL_0106:  stloc.1
      IL_0107:  br         IL_010c

      IL_010c:  ldloc.1
      IL_010d:  stloc.2
      IL_010e:  ldloc.1
      IL_010f:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       196 (0xc4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ad

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ReadyPod0
      IL_0095:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.s   14
      IL_00a3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a8:  br         IL_00c3

      IL_00ad:  ldstr      "can't recv Ready in state "
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_00b8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c2:  throw

      IL_00c3:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendGetUsedMemory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetUsedMemory0$PST060000DF()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverGetUsedMemory0$PST060000E0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   13
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetUsedMemory in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetUsedMemory

    .method public instance void  SendGetFreeMemory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetFreeMemory0$PST060000E1()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverGetFreeMemory0$PST060000E2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   12
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetFreeMemory in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetFreeMemory

    .method public instance void  SendGetMaxMemory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetMaxMemory0$PST060000E3()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverGetMaxMemory0$PST060000E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   11
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetMaxMemory in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetMaxMemory

    .method public instance void  RecvMemory([out] int64& bytes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       1096 (0x448)
      .maxstack  29
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0040

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  beq        IL_00e2

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   10
      IL_001f:  beq        IL_0189

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  beq        IL_0233

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.4
      IL_002e:  beq        IL_02dd

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   13
      IL_0036:  beq        IL_0387

      IL_003b:  br         IL_0431

      IL_0040:  ldc.i4.0
      IL_0041:  stloc.1
      IL_0042:  ldarg.0
      IL_0043:  volatile.
      IL_0045:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_004a:  stloc.2
      IL_004b:  ldloc.2
      IL_004c:  brtrue     IL_0061

      IL_0051:  ldarg.0
      IL_0052:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0057:  stloc.1
      IL_0058:  ldarg.0
      IL_0059:  volatile.
      IL_005b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0060:  stloc.2
      IL_0061:  ldloc.2
      IL_0062:  ldc.i4.0
      IL_0063:  ceq
      IL_0065:  brfalse    IL_0083

      IL_006a:  ldloc.1
      IL_006b:  brfalse    IL_007b

      IL_0070:  ldstr      "Peer is closed"
      IL_0075:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ldarg.0
      IL_007c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0081:  br.s       IL_0040

      IL_0083:  ldarg.0
      IL_0084:  ldc.i4.7
      IL_0085:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_008a:  ldloc.2
      IL_008b:  ldc.i4.7
      IL_008c:  beq        IL_00ae

      IL_0091:  ldstr      "can't recv Memory when next message has tag "
      IL_0096:  ldarg.0
      IL_0097:  volatile.
      IL_0099:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_009e:  box        [Corlib]System.Int32
      IL_00a3:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_00a8:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00ad:  throw

      IL_00ae:  ldarg.1
      IL_00af:  ldarg.0
      IL_00b0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_00b5:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_00ba:  stind.i8
      IL_00bb:  ldarg.0
      IL_00bc:  ldc.i4.0
      IL_00bd:  volatile.
      IL_00bf:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00c4:  ldarg.0
      IL_00c5:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_00ca:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_00d0:  ldarg.0
      IL_00d1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d6:  ldc.i4.s   14
      IL_00d8:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00dd:  br         IL_0447

      IL_00e2:  ldc.i4.0
      IL_00e3:  stloc.3
      IL_00e4:  ldarg.0
      IL_00e5:  volatile.
      IL_00e7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00ec:  stloc.s    V_4
      IL_00ee:  ldloc.s    V_4
      IL_00f0:  brtrue     IL_0106

      IL_00f5:  ldarg.0
      IL_00f6:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00fb:  stloc.3
      IL_00fc:  ldarg.0
      IL_00fd:  volatile.
      IL_00ff:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0104:  stloc.s    V_4
      IL_0106:  ldloc.s    V_4
      IL_0108:  ldc.i4.0
      IL_0109:  ceq
      IL_010b:  brfalse    IL_0129

      IL_0110:  ldloc.3
      IL_0111:  brfalse    IL_0121

      IL_0116:  ldstr      "Peer is closed"
      IL_011b:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0120:  throw

      IL_0121:  ldarg.0
      IL_0122:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0127:  br.s       IL_00e2

      IL_0129:  ldarg.0
      IL_012a:  ldc.i4.7
      IL_012b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0130:  ldloc.s    V_4
      IL_0132:  ldc.i4.7
      IL_0133:  beq        IL_0155

      IL_0138:  ldstr      "can't recv Memory when next message has tag "
      IL_013d:  ldarg.0
      IL_013e:  volatile.
      IL_0140:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0145:  box        [Corlib]System.Int32
      IL_014a:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_014f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0154:  throw

      IL_0155:  ldarg.1
      IL_0156:  ldarg.0
      IL_0157:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_015c:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_0161:  stind.i8
      IL_0162:  ldarg.0
      IL_0163:  ldc.i4.0
      IL_0164:  volatile.
      IL_0166:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_016b:  ldarg.0
      IL_016c:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_0171:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_0177:  ldarg.0
      IL_0178:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_017d:  ldc.i4.s   14
      IL_017f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0184:  br         IL_0447

      IL_0189:  ldc.i4.0
      IL_018a:  stloc.s    V_5
      IL_018c:  ldarg.0
      IL_018d:  volatile.
      IL_018f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0194:  stloc.s    V_6
      IL_0196:  ldloc.s    V_6
      IL_0198:  brtrue     IL_01af

      IL_019d:  ldarg.0
      IL_019e:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01a3:  stloc.s    V_5
      IL_01a5:  ldarg.0
      IL_01a6:  volatile.
      IL_01a8:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_01ad:  stloc.s    V_6
      IL_01af:  ldloc.s    V_6
      IL_01b1:  ldc.i4.0
      IL_01b2:  ceq
      IL_01b4:  brfalse    IL_01d3

      IL_01b9:  ldloc.s    V_5
      IL_01bb:  brfalse    IL_01cb

      IL_01c0:  ldstr      "Peer is closed"
      IL_01c5:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01ca:  throw

      IL_01cb:  ldarg.0
      IL_01cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01d1:  br.s       IL_0189

      IL_01d3:  ldarg.0
      IL_01d4:  ldc.i4.7
      IL_01d5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01da:  ldloc.s    V_6
      IL_01dc:  ldc.i4.7
      IL_01dd:  beq        IL_01ff

      IL_01e2:  ldstr      "can't recv Memory when next message has tag "
      IL_01e7:  ldarg.0
      IL_01e8:  volatile.
      IL_01ea:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_01ef:  box        [Corlib]System.Int32
      IL_01f4:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_01f9:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01fe:  throw

      IL_01ff:  ldarg.1
      IL_0200:  ldarg.0
      IL_0201:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_0206:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_020b:  stind.i8
      IL_020c:  ldarg.0
      IL_020d:  ldc.i4.0
      IL_020e:  volatile.
      IL_0210:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0215:  ldarg.0
      IL_0216:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_021b:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_0221:  ldarg.0
      IL_0222:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0227:  ldc.i4.s   14
      IL_0229:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_022e:  br         IL_0447

      IL_0233:  ldc.i4.0
      IL_0234:  stloc.s    V_7
      IL_0236:  ldarg.0
      IL_0237:  volatile.
      IL_0239:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_023e:  stloc.s    V_8
      IL_0240:  ldloc.s    V_8
      IL_0242:  brtrue     IL_0259

      IL_0247:  ldarg.0
      IL_0248:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_024d:  stloc.s    V_7
      IL_024f:  ldarg.0
      IL_0250:  volatile.
      IL_0252:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0257:  stloc.s    V_8
      IL_0259:  ldloc.s    V_8
      IL_025b:  ldc.i4.0
      IL_025c:  ceq
      IL_025e:  brfalse    IL_027d

      IL_0263:  ldloc.s    V_7
      IL_0265:  brfalse    IL_0275

      IL_026a:  ldstr      "Peer is closed"
      IL_026f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0274:  throw

      IL_0275:  ldarg.0
      IL_0276:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_027b:  br.s       IL_0233

      IL_027d:  ldarg.0
      IL_027e:  ldc.i4.7
      IL_027f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0284:  ldloc.s    V_8
      IL_0286:  ldc.i4.7
      IL_0287:  beq        IL_02a9

      IL_028c:  ldstr      "can't recv Memory when next message has tag "
      IL_0291:  ldarg.0
      IL_0292:  volatile.
      IL_0294:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0299:  box        [Corlib]System.Int32
      IL_029e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_02a3:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_02a8:  throw

      IL_02a9:  ldarg.1
      IL_02aa:  ldarg.0
      IL_02ab:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_02b0:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_02b5:  stind.i8
      IL_02b6:  ldarg.0
      IL_02b7:  ldc.i4.0
      IL_02b8:  volatile.
      IL_02ba:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_02bf:  ldarg.0
      IL_02c0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_02c5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_02cb:  ldarg.0
      IL_02cc:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_02d1:  ldc.i4.s   14
      IL_02d3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02d8:  br         IL_0447

      IL_02dd:  ldc.i4.0
      IL_02de:  stloc.s    V_9
      IL_02e0:  ldarg.0
      IL_02e1:  volatile.
      IL_02e3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_02e8:  stloc.s    V_10
      IL_02ea:  ldloc.s    V_10
      IL_02ec:  brtrue     IL_0303

      IL_02f1:  ldarg.0
      IL_02f2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02f7:  stloc.s    V_9
      IL_02f9:  ldarg.0
      IL_02fa:  volatile.
      IL_02fc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0301:  stloc.s    V_10
      IL_0303:  ldloc.s    V_10
      IL_0305:  ldc.i4.0
      IL_0306:  ceq
      IL_0308:  brfalse    IL_0327

      IL_030d:  ldloc.s    V_9
      IL_030f:  brfalse    IL_031f

      IL_0314:  ldstr      "Peer is closed"
      IL_0319:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_031e:  throw

      IL_031f:  ldarg.0
      IL_0320:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0325:  br.s       IL_02dd

      IL_0327:  ldarg.0
      IL_0328:  ldc.i4.7
      IL_0329:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_032e:  ldloc.s    V_10
      IL_0330:  ldc.i4.7
      IL_0331:  beq        IL_0353

      IL_0336:  ldstr      "can't recv Memory when next message has tag "
      IL_033b:  ldarg.0
      IL_033c:  volatile.
      IL_033e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0343:  box        [Corlib]System.Int32
      IL_0348:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_034d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0352:  throw

      IL_0353:  ldarg.1
      IL_0354:  ldarg.0
      IL_0355:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_035a:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_035f:  stind.i8
      IL_0360:  ldarg.0
      IL_0361:  ldc.i4.0
      IL_0362:  volatile.
      IL_0364:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0369:  ldarg.0
      IL_036a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_036f:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_0375:  ldarg.0
      IL_0376:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_037b:  ldc.i4.s   14
      IL_037d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0382:  br         IL_0447

      IL_0387:  ldc.i4.0
      IL_0388:  stloc.s    V_11
      IL_038a:  ldarg.0
      IL_038b:  volatile.
      IL_038d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0392:  stloc.s    V_12
      IL_0394:  ldloc.s    V_12
      IL_0396:  brtrue     IL_03ad

      IL_039b:  ldarg.0
      IL_039c:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_03a1:  stloc.s    V_11
      IL_03a3:  ldarg.0
      IL_03a4:  volatile.
      IL_03a6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_03ab:  stloc.s    V_12
      IL_03ad:  ldloc.s    V_12
      IL_03af:  ldc.i4.0
      IL_03b0:  ceq
      IL_03b2:  brfalse    IL_03d1

      IL_03b7:  ldloc.s    V_11
      IL_03b9:  brfalse    IL_03c9

      IL_03be:  ldstr      "Peer is closed"
      IL_03c3:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_03c8:  throw

      IL_03c9:  ldarg.0
      IL_03ca:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_03cf:  br.s       IL_0387

      IL_03d1:  ldarg.0
      IL_03d2:  ldc.i4.7
      IL_03d3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_03d8:  ldloc.s    V_12
      IL_03da:  ldc.i4.7
      IL_03db:  beq        IL_03fd

      IL_03e0:  ldstr      "can't recv Memory when next message has tag "
      IL_03e5:  ldarg.0
      IL_03e6:  volatile.
      IL_03e8:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_03ed:  box        [Corlib]System.Int32
      IL_03f2:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_03f7:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_03fc:  throw

      IL_03fd:  ldarg.1
      IL_03fe:  ldarg.0
      IL_03ff:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_0404:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_0409:  stind.i8
      IL_040a:  ldarg.0
      IL_040b:  ldc.i4.0
      IL_040c:  volatile.
      IL_040e:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0413:  ldarg.0
      IL_0414:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_0419:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_041f:  ldarg.0
      IL_0420:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0425:  ldc.i4.s   14
      IL_0427:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_042c:  br         IL_0447

      IL_0431:  ldstr      "can't recv Memory in state "
      IL_0436:  ldarg.0
      IL_0437:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_043c:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0441:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0446:  throw

      IL_0447:  ret
    } // end of method Imp::RecvMemory

    .method public instance void  SendGetProcessUsedMemory(int32 processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetProcessUsedMemory0$PST060000E5(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverGetProcessUsedMemory0$PST060000E6(int32,
                                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   10
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send GetProcessUsedMemory in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendGetProcessUsedMemory

    .method public instance void  SendGetProcessPeakMemory(int32 processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetProcessPeakMemory0$PST060000E7(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverGetProcessPeakMemory0$PST060000E8(int32,
                                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send GetProcessPeakMemory in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendGetProcessPeakMemory

    .method public instance void  SendGetProcessHandlePages(int32 processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0067

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetProcessHandlePages0$PST060000E9(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverGetProcessHandlePages0$PST060000EA(int32,
                                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.8
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send GetProcessHandlePages in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Imp::SendGetProcessHandlePages

    .method public instance void  RecvPages([out] int64& pages) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   11
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv Pages when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::PagesPod0
      IL_008f:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages::pages
      IL_0094:  stind.i8
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::PagesPod0
      IL_00a4:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   14
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv Pages in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvPages

    .method public instance void  SendTotalUsedCommunicationHeap() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverTotalUsedCommunicationHeap0$PST060000EB()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverTotalUsedCommunicationHeap0$PST060000EC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.7
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send TotalUsedCommunicationHeap in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendTotalUsedCommunicationHeap

    .method public instance void  SendProcessUsedCommunicationHeap(int32 processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0067

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverProcessUsedCommunicationHeap0$PST060000ED(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverProcessUsedCommunicationHeap0$PST060000EE(int32,
                                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.6
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send ProcessUsedCommunicationHeap in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Imp::SendProcessUsedCommunicationHeap

    .method public instance void  RecvBlocksAndTotal([out] int64& blocks,
                                                     [out] int64& bytes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       413 (0x19d)
      .maxstack  13
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_00d0

      IL_001a:  br         IL_0186

      IL_001f:  ldc.i4.0
      IL_0020:  stloc.1
      IL_0021:  ldarg.0
      IL_0022:  volatile.
      IL_0024:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0029:  stloc.2
      IL_002a:  ldloc.2
      IL_002b:  brtrue     IL_0040

      IL_0030:  ldarg.0
      IL_0031:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0036:  stloc.1
      IL_0037:  ldarg.0
      IL_0038:  volatile.
      IL_003a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  ldc.i4.0
      IL_0042:  ceq
      IL_0044:  brfalse    IL_0062

      IL_0049:  ldloc.1
      IL_004a:  brfalse    IL_005a

      IL_004f:  ldstr      "Peer is closed"
      IL_0054:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0059:  throw

      IL_005a:  ldarg.0
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0060:  br.s       IL_001f

      IL_0062:  ldarg.0
      IL_0063:  ldc.i4.s   14
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_006a:  ldloc.2
      IL_006b:  ldc.i4.s   14
      IL_006d:  beq        IL_008f

      IL_0072:  ldstr      "can't recv BlocksAndTotal when next message has tag "
      IL_0077:  ldarg.0
      IL_0078:  volatile.
      IL_007a:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_007f:  box        [Corlib]System.Int32
      IL_0084:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0089:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_008e:  throw

      IL_008f:  ldarg.1
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_0096:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::blocks
      IL_009b:  stind.i8
      IL_009c:  ldarg.2
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_00a3:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::bytes
      IL_00a8:  stind.i8
      IL_00a9:  ldarg.0
      IL_00aa:  ldc.i4.0
      IL_00ab:  volatile.
      IL_00ad:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00b2:  ldarg.0
      IL_00b3:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_00b8:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal
      IL_00be:  ldarg.0
      IL_00bf:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c4:  ldc.i4.s   14
      IL_00c6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00cb:  br         IL_019c

      IL_00d0:  ldc.i4.0
      IL_00d1:  stloc.3
      IL_00d2:  ldarg.0
      IL_00d3:  volatile.
      IL_00d5:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00da:  stloc.s    V_4
      IL_00dc:  ldloc.s    V_4
      IL_00de:  brtrue     IL_00f4

      IL_00e3:  ldarg.0
      IL_00e4:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e9:  stloc.3
      IL_00ea:  ldarg.0
      IL_00eb:  volatile.
      IL_00ed:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00f2:  stloc.s    V_4
      IL_00f4:  ldloc.s    V_4
      IL_00f6:  ldc.i4.0
      IL_00f7:  ceq
      IL_00f9:  brfalse    IL_0117

      IL_00fe:  ldloc.3
      IL_00ff:  brfalse    IL_010f

      IL_0104:  ldstr      "Peer is closed"
      IL_0109:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_010e:  throw

      IL_010f:  ldarg.0
      IL_0110:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0115:  br.s       IL_00d0

      IL_0117:  ldarg.0
      IL_0118:  ldc.i4.s   14
      IL_011a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011f:  ldloc.s    V_4
      IL_0121:  ldc.i4.s   14
      IL_0123:  beq        IL_0145

      IL_0128:  ldstr      "can't recv BlocksAndTotal when next message has tag "
      IL_012d:  ldarg.0
      IL_012e:  volatile.
      IL_0130:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0135:  box        [Corlib]System.Int32
      IL_013a:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_013f:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0144:  throw

      IL_0145:  ldarg.1
      IL_0146:  ldarg.0
      IL_0147:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_014c:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::blocks
      IL_0151:  stind.i8
      IL_0152:  ldarg.2
      IL_0153:  ldarg.0
      IL_0154:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_0159:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::bytes
      IL_015e:  stind.i8
      IL_015f:  ldarg.0
      IL_0160:  ldc.i4.0
      IL_0161:  volatile.
      IL_0163:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0168:  ldarg.0
      IL_0169:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_016e:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal
      IL_0174:  ldarg.0
      IL_0175:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_017a:  ldc.i4.s   14
      IL_017c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0181:  br         IL_019c

      IL_0186:  ldstr      "can't recv BlocksAndTotal in state "
      IL_018b:  ldarg.0
      IL_018c:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0191:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0196:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_019b:  throw

      IL_019c:  ret
    } // end of method Imp::RecvBlocksAndTotal

    .method public instance void  SendDumpExHeap() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverDumpExHeap0$PST060000EF()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverDumpExHeap0$PST060000F0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.5
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send DumpExHeap in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendDumpExHeap

    .method public instance void  RecvExHeapDump([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& dump) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bc

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   16
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   16
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv ExHeapDump when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ExHeapDumpPod0
      IL_008f:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_0094:  stind.i
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ExHeapDumpPod0
      IL_00a4:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.s   14
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv ExHeapDump in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Imp::RecvExHeapDump

    .method public instance void  SendCollectGarbage() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0065

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverCollectGarbage0$PST060000F1()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallDeliverCollectGarbage0$PST060000F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.4
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send CollectGarbage in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Imp::SendCollectGarbage

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       980 (0x3d4)
      .maxstack  15
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               int32 V_27)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_006d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_00ad

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00f5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_013d

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_0185

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.s   9
      IL_0034:  beq        IL_01cd

      IL_0039:  ldloc.1
      IL_003a:  ldc.i4.s   10
      IL_003c:  beq        IL_0215

      IL_0041:  ldloc.1
      IL_0042:  ldc.i4.s   11
      IL_0044:  beq        IL_025d

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.s   12
      IL_004c:  beq        IL_02a5

      IL_0051:  ldloc.1
      IL_0052:  ldc.i4.s   13
      IL_0054:  beq        IL_02ed

      IL_0059:  ldloc.1
      IL_005a:  ldc.i4.s   14
      IL_005c:  beq        IL_0335

      IL_0061:  ldloc.1
      IL_0062:  ldc.i4.3
      IL_0063:  beq        IL_037d

      IL_0068:  br         IL_03c5

      IL_006d:  ldc.i4.0
      IL_006e:  stloc.2
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0077:  stloc.3
      IL_0078:  ldloc.3
      IL_0079:  brtrue     IL_008e

      IL_007e:  ldarg.0
      IL_007f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0084:  stloc.2
      IL_0085:  ldarg.0
      IL_0086:  volatile.
      IL_0088:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_008d:  stloc.3
      IL_008e:  ldloc.3
      IL_008f:  ldc.i4.0
      IL_0090:  ceq
      IL_0092:  brfalse    IL_00a5

      IL_0097:  ldloc.2
      IL_0098:  brfalse    IL_00a5

      IL_009d:  ldc.i4.m1
      IL_009e:  stloc.s    V_4
      IL_00a0:  br         IL_03cd

      IL_00a5:  ldloc.3
      IL_00a6:  stloc.s    V_4
      IL_00a8:  br         IL_03cd

      IL_00ad:  ldc.i4.0
      IL_00ae:  stloc.s    V_5
      IL_00b0:  ldarg.0
      IL_00b1:  volatile.
      IL_00b3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00b8:  stloc.s    V_6
      IL_00ba:  ldloc.s    V_6
      IL_00bc:  brtrue     IL_00d3

      IL_00c1:  ldarg.0
      IL_00c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00c7:  stloc.s    V_5
      IL_00c9:  ldarg.0
      IL_00ca:  volatile.
      IL_00cc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_00d1:  stloc.s    V_6
      IL_00d3:  ldloc.s    V_6
      IL_00d5:  ldc.i4.0
      IL_00d6:  ceq
      IL_00d8:  brfalse    IL_00ec

      IL_00dd:  ldloc.s    V_5
      IL_00df:  brfalse    IL_00ec

      IL_00e4:  ldc.i4.m1
      IL_00e5:  stloc.s    V_4
      IL_00e7:  br         IL_03cd

      IL_00ec:  ldloc.s    V_6
      IL_00ee:  stloc.s    V_4
      IL_00f0:  br         IL_03cd

      IL_00f5:  ldc.i4.0
      IL_00f6:  stloc.s    V_7
      IL_00f8:  ldarg.0
      IL_00f9:  volatile.
      IL_00fb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0100:  stloc.s    V_8
      IL_0102:  ldloc.s    V_8
      IL_0104:  brtrue     IL_011b

      IL_0109:  ldarg.0
      IL_010a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_010f:  stloc.s    V_7
      IL_0111:  ldarg.0
      IL_0112:  volatile.
      IL_0114:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0119:  stloc.s    V_8
      IL_011b:  ldloc.s    V_8
      IL_011d:  ldc.i4.0
      IL_011e:  ceq
      IL_0120:  brfalse    IL_0134

      IL_0125:  ldloc.s    V_7
      IL_0127:  brfalse    IL_0134

      IL_012c:  ldc.i4.m1
      IL_012d:  stloc.s    V_4
      IL_012f:  br         IL_03cd

      IL_0134:  ldloc.s    V_8
      IL_0136:  stloc.s    V_4
      IL_0138:  br         IL_03cd

      IL_013d:  ldc.i4.0
      IL_013e:  stloc.s    V_9
      IL_0140:  ldarg.0
      IL_0141:  volatile.
      IL_0143:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0148:  stloc.s    V_10
      IL_014a:  ldloc.s    V_10
      IL_014c:  brtrue     IL_0163

      IL_0151:  ldarg.0
      IL_0152:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0157:  stloc.s    V_9
      IL_0159:  ldarg.0
      IL_015a:  volatile.
      IL_015c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0161:  stloc.s    V_10
      IL_0163:  ldloc.s    V_10
      IL_0165:  ldc.i4.0
      IL_0166:  ceq
      IL_0168:  brfalse    IL_017c

      IL_016d:  ldloc.s    V_9
      IL_016f:  brfalse    IL_017c

      IL_0174:  ldc.i4.m1
      IL_0175:  stloc.s    V_4
      IL_0177:  br         IL_03cd

      IL_017c:  ldloc.s    V_10
      IL_017e:  stloc.s    V_4
      IL_0180:  br         IL_03cd

      IL_0185:  ldc.i4.0
      IL_0186:  stloc.s    V_11
      IL_0188:  ldarg.0
      IL_0189:  volatile.
      IL_018b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0190:  stloc.s    V_12
      IL_0192:  ldloc.s    V_12
      IL_0194:  brtrue     IL_01ab

      IL_0199:  ldarg.0
      IL_019a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_019f:  stloc.s    V_11
      IL_01a1:  ldarg.0
      IL_01a2:  volatile.
      IL_01a4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_01a9:  stloc.s    V_12
      IL_01ab:  ldloc.s    V_12
      IL_01ad:  ldc.i4.0
      IL_01ae:  ceq
      IL_01b0:  brfalse    IL_01c4

      IL_01b5:  ldloc.s    V_11
      IL_01b7:  brfalse    IL_01c4

      IL_01bc:  ldc.i4.m1
      IL_01bd:  stloc.s    V_4
      IL_01bf:  br         IL_03cd

      IL_01c4:  ldloc.s    V_12
      IL_01c6:  stloc.s    V_4
      IL_01c8:  br         IL_03cd

      IL_01cd:  ldc.i4.0
      IL_01ce:  stloc.s    V_13
      IL_01d0:  ldarg.0
      IL_01d1:  volatile.
      IL_01d3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_01d8:  stloc.s    V_14
      IL_01da:  ldloc.s    V_14
      IL_01dc:  brtrue     IL_01f3

      IL_01e1:  ldarg.0
      IL_01e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01e7:  stloc.s    V_13
      IL_01e9:  ldarg.0
      IL_01ea:  volatile.
      IL_01ec:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_01f1:  stloc.s    V_14
      IL_01f3:  ldloc.s    V_14
      IL_01f5:  ldc.i4.0
      IL_01f6:  ceq
      IL_01f8:  brfalse    IL_020c

      IL_01fd:  ldloc.s    V_13
      IL_01ff:  brfalse    IL_020c

      IL_0204:  ldc.i4.m1
      IL_0205:  stloc.s    V_4
      IL_0207:  br         IL_03cd

      IL_020c:  ldloc.s    V_14
      IL_020e:  stloc.s    V_4
      IL_0210:  br         IL_03cd

      IL_0215:  ldc.i4.0
      IL_0216:  stloc.s    V_15
      IL_0218:  ldarg.0
      IL_0219:  volatile.
      IL_021b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0220:  stloc.s    V_16
      IL_0222:  ldloc.s    V_16
      IL_0224:  brtrue     IL_023b

      IL_0229:  ldarg.0
      IL_022a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_022f:  stloc.s    V_15
      IL_0231:  ldarg.0
      IL_0232:  volatile.
      IL_0234:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0239:  stloc.s    V_16
      IL_023b:  ldloc.s    V_16
      IL_023d:  ldc.i4.0
      IL_023e:  ceq
      IL_0240:  brfalse    IL_0254

      IL_0245:  ldloc.s    V_15
      IL_0247:  brfalse    IL_0254

      IL_024c:  ldc.i4.m1
      IL_024d:  stloc.s    V_4
      IL_024f:  br         IL_03cd

      IL_0254:  ldloc.s    V_16
      IL_0256:  stloc.s    V_4
      IL_0258:  br         IL_03cd

      IL_025d:  ldc.i4.0
      IL_025e:  stloc.s    V_17
      IL_0260:  ldarg.0
      IL_0261:  volatile.
      IL_0263:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0268:  stloc.s    V_18
      IL_026a:  ldloc.s    V_18
      IL_026c:  brtrue     IL_0283

      IL_0271:  ldarg.0
      IL_0272:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0277:  stloc.s    V_17
      IL_0279:  ldarg.0
      IL_027a:  volatile.
      IL_027c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0281:  stloc.s    V_18
      IL_0283:  ldloc.s    V_18
      IL_0285:  ldc.i4.0
      IL_0286:  ceq
      IL_0288:  brfalse    IL_029c

      IL_028d:  ldloc.s    V_17
      IL_028f:  brfalse    IL_029c

      IL_0294:  ldc.i4.m1
      IL_0295:  stloc.s    V_4
      IL_0297:  br         IL_03cd

      IL_029c:  ldloc.s    V_18
      IL_029e:  stloc.s    V_4
      IL_02a0:  br         IL_03cd

      IL_02a5:  ldc.i4.0
      IL_02a6:  stloc.s    V_19
      IL_02a8:  ldarg.0
      IL_02a9:  volatile.
      IL_02ab:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_02b0:  stloc.s    V_20
      IL_02b2:  ldloc.s    V_20
      IL_02b4:  brtrue     IL_02cb

      IL_02b9:  ldarg.0
      IL_02ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02bf:  stloc.s    V_19
      IL_02c1:  ldarg.0
      IL_02c2:  volatile.
      IL_02c4:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_02c9:  stloc.s    V_20
      IL_02cb:  ldloc.s    V_20
      IL_02cd:  ldc.i4.0
      IL_02ce:  ceq
      IL_02d0:  brfalse    IL_02e4

      IL_02d5:  ldloc.s    V_19
      IL_02d7:  brfalse    IL_02e4

      IL_02dc:  ldc.i4.m1
      IL_02dd:  stloc.s    V_4
      IL_02df:  br         IL_03cd

      IL_02e4:  ldloc.s    V_20
      IL_02e6:  stloc.s    V_4
      IL_02e8:  br         IL_03cd

      IL_02ed:  ldc.i4.0
      IL_02ee:  stloc.s    V_21
      IL_02f0:  ldarg.0
      IL_02f1:  volatile.
      IL_02f3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_02f8:  stloc.s    V_22
      IL_02fa:  ldloc.s    V_22
      IL_02fc:  brtrue     IL_0313

      IL_0301:  ldarg.0
      IL_0302:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0307:  stloc.s    V_21
      IL_0309:  ldarg.0
      IL_030a:  volatile.
      IL_030c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0311:  stloc.s    V_22
      IL_0313:  ldloc.s    V_22
      IL_0315:  ldc.i4.0
      IL_0316:  ceq
      IL_0318:  brfalse    IL_032c

      IL_031d:  ldloc.s    V_21
      IL_031f:  brfalse    IL_032c

      IL_0324:  ldc.i4.m1
      IL_0325:  stloc.s    V_4
      IL_0327:  br         IL_03cd

      IL_032c:  ldloc.s    V_22
      IL_032e:  stloc.s    V_4
      IL_0330:  br         IL_03cd

      IL_0335:  ldc.i4.0
      IL_0336:  stloc.s    V_23
      IL_0338:  ldarg.0
      IL_0339:  volatile.
      IL_033b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0340:  stloc.s    V_24
      IL_0342:  ldloc.s    V_24
      IL_0344:  brtrue     IL_035b

      IL_0349:  ldarg.0
      IL_034a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_034f:  stloc.s    V_23
      IL_0351:  ldarg.0
      IL_0352:  volatile.
      IL_0354:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0359:  stloc.s    V_24
      IL_035b:  ldloc.s    V_24
      IL_035d:  ldc.i4.0
      IL_035e:  ceq
      IL_0360:  brfalse    IL_0374

      IL_0365:  ldloc.s    V_23
      IL_0367:  brfalse    IL_0374

      IL_036c:  ldc.i4.m1
      IL_036d:  stloc.s    V_4
      IL_036f:  br         IL_03cd

      IL_0374:  ldloc.s    V_24
      IL_0376:  stloc.s    V_4
      IL_0378:  br         IL_03cd

      IL_037d:  ldc.i4.0
      IL_037e:  stloc.s    V_25
      IL_0380:  ldarg.0
      IL_0381:  volatile.
      IL_0383:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0388:  stloc.s    V_26
      IL_038a:  ldloc.s    V_26
      IL_038c:  brtrue     IL_03a3

      IL_0391:  ldarg.0
      IL_0392:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0397:  stloc.s    V_25
      IL_0399:  ldarg.0
      IL_039a:  volatile.
      IL_039c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_03a1:  stloc.s    V_26
      IL_03a3:  ldloc.s    V_26
      IL_03a5:  ldc.i4.0
      IL_03a6:  ceq
      IL_03a8:  brfalse    IL_03bc

      IL_03ad:  ldloc.s    V_25
      IL_03af:  brfalse    IL_03bc

      IL_03b4:  ldc.i4.m1
      IL_03b5:  stloc.s    V_4
      IL_03b7:  br         IL_03cd

      IL_03bc:  ldloc.s    V_26
      IL_03be:  stloc.s    V_4
      IL_03c0:  br         IL_03cd

      IL_03c5:  ldc.i4.m1
      IL_03c6:  stloc.s    V_4
      IL_03c8:  br         IL_03cd

      IL_03cd:  ldloc.s    V_4
      IL_03cf:  stloc.s    V_27
      IL_03d1:  ldloc.s    V_4
      IL_03d3:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST060000B3() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST060000B4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverReady0$PST060000B3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverMemory0$PST060000B5(int64 bytes) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::bytes
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverMemory0

    .method privatescope instance void  MarshallDeliverMemory0$PST060000B6(int64 bytes,
                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MemoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverMemory0

    .method privatescope instance void  DeliverPages0$PST060000B7(int64 pages) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::PagesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages::pages
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverPages0

    .method privatescope instance void  MarshallDeliverPages0$PST060000B8(int64 pages,
                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverPages0$PST060000B7(int64)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::PagesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages::MarshallAll(uint8*,
                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                       int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverPages0

    .method privatescope instance void  DeliverBlocksAndTotal0$PST060000B9(int64 blocks,
                                                                           int64 bytes) cil managed
    {
      // Code size       43 (0x2b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::blocks
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::bytes
      IL_0018:  ldarg.0
      IL_0019:  ldc.i4.s   14
      IL_001b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0020:  ldarg.0
      IL_0021:  ldc.i4.s   14
      IL_0023:  volatile.
      IL_0025:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_002a:  ret
    } // end of method Imp::DeliverBlocksAndTotal0

    .method privatescope instance void  MarshallDeliverBlocksAndTotal0$PST060000BA(int64 blocks,
                                                                                   int64 bytes,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       28 (0x1c)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverBlocksAndTotal0$PST060000B9(int64,
                                                                                                                                            int64)
      IL_0008:  ldarg.0
      IL_0009:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::BlocksAndTotalPod0
      IL_000e:  ldarg.0
      IL_000f:  ldarg.3
      IL_0010:  ldarg.0
      IL_0011:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0016:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_001b:  ret
    } // end of method Imp::MarshallDeliverBlocksAndTotal0

    .method privatescope instance void  DeliverExHeapDump0$PST060000BB(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dump) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ExHeapDumpPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   16
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   16
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverExHeapDump0

    .method privatescope instance void  MarshallDeliverExHeapDump0$PST060000BC(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dump,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverExHeapDump0$PST060000BB(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ExHeapDumpPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::MarshallAll(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverExHeapDump0

    .method privatescope instance void  DeliverContractNotSupported0$PST060000BD() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060000BE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverContractNotSupported0$PST060000BD()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory GetUsedMemoryPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory GetFreeMemoryPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory GetMaxMemoryPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory GetProcessUsedMemoryPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory GetProcessPeakMemoryPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages GetProcessHandlePagesPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap TotalUsedCommunicationHeapPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap ProcessUsedCommunicationHeapPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap DumpExHeapPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage CollectGarbagePod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::CanonicalState$PST06000015(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::CanonicalState$PST06000015(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       272 (0x110)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0072

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  beq        IL_007d

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   12
      IL_001f:  beq        IL_0088

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0093

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   10
      IL_002f:  beq        IL_009e

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   9
      IL_0037:  beq        IL_00a9

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.8
      IL_003e:  beq        IL_00b4

      IL_0043:  ldloc.0
      IL_0044:  ldc.i4.7
      IL_0045:  beq        IL_00bf

      IL_004a:  ldloc.0
      IL_004b:  ldc.i4.6
      IL_004c:  beq        IL_00ca

      IL_0051:  ldloc.0
      IL_0052:  ldc.i4.5
      IL_0053:  beq        IL_00d5

      IL_0058:  ldloc.0
      IL_0059:  ldc.i4.4
      IL_005a:  beq        IL_00e0

      IL_005f:  ldloc.0
      IL_0060:  ldc.i4.3
      IL_0061:  beq        IL_00eb

      IL_0066:  ldloc.0
      IL_0067:  ldc.i4.2
      IL_0068:  beq        IL_00f6

      IL_006d:  br         IL_0101

      IL_0072:  ldstr      "ReadyState"
      IL_0077:  stloc.1
      IL_0078:  br         IL_010c

      IL_007d:  ldstr      "ReadyState$0"
      IL_0082:  stloc.1
      IL_0083:  br         IL_010c

      IL_0088:  ldstr      "ReadyState$1"
      IL_008d:  stloc.1
      IL_008e:  br         IL_010c

      IL_0093:  ldstr      "ReadyState$2"
      IL_0098:  stloc.1
      IL_0099:  br         IL_010c

      IL_009e:  ldstr      "ReadyState$3"
      IL_00a3:  stloc.1
      IL_00a4:  br         IL_010c

      IL_00a9:  ldstr      "ReadyState$4"
      IL_00ae:  stloc.1
      IL_00af:  br         IL_010c

      IL_00b4:  ldstr      "ReadyState$5"
      IL_00b9:  stloc.1
      IL_00ba:  br         IL_010c

      IL_00bf:  ldstr      "ReadyState$6"
      IL_00c4:  stloc.1
      IL_00c5:  br         IL_010c

      IL_00ca:  ldstr      "ReadyState$7"
      IL_00cf:  stloc.1
      IL_00d0:  br         IL_010c

      IL_00d5:  ldstr      "ReadyState$8"
      IL_00da:  stloc.1
      IL_00db:  br         IL_010c

      IL_00e0:  ldstr      "ReadyState$9"
      IL_00e5:  stloc.1
      IL_00e6:  br         IL_010c

      IL_00eb:  ldstr      "Start"
      IL_00f0:  stloc.1
      IL_00f1:  br         IL_010c

      IL_00f6:  ldstr      "DoneState"
      IL_00fb:  stloc.1
      IL_00fc:  br         IL_010c

      IL_0101:  ldstr      "<protocol terminated>"
      IL_0106:  stloc.1
      IL_0107:  br         IL_010c

      IL_010c:  ldloc.1
      IL_010d:  stloc.2
      IL_010e:  ldloc.1
      IL_010f:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverReady0$PST060000B3()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverReady0$PST060000B4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   14
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Ready in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvGetUsedMemory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetUsedMemory when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetUsedMemoryPod0
      IL_0096:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   13
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetUsedMemory in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetUsedMemory

    .method public instance void  RecvGetFreeMemory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetFreeMemory when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetFreeMemoryPod0
      IL_0096:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   12
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetFreeMemory in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetFreeMemory

    .method public instance void  RecvGetMaxMemory() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetMaxMemory when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetMaxMemoryPod0
      IL_0096:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   11
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetMaxMemory in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetMaxMemory

    .method public instance void  SendMemory(int64 bytes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       596 (0x254)
      .maxstack  35
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20,
               bool V_21,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_22,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_23,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_24)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  beq        IL_0040

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   11
      IL_0017:  beq        IL_008f

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   10
      IL_001f:  beq        IL_00e5

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   9
      IL_0027:  beq        IL_013b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.4
      IL_002e:  beq        IL_0191

      IL_0033:  ldloc.0
      IL_0034:  ldc.i4.s   13
      IL_0036:  beq        IL_01e7

      IL_003b:  br         IL_023d

      IL_0040:  ldarg.0
      IL_0041:  ldloca.s   V_1
      IL_0043:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0048:  stloc.2
      IL_0049:  ldloc.2
      IL_004a:  stloc.3
      IL_004b:  ldloc.3
      IL_004c:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0051:  stloc.s    V_4
      IL_0053:  ldloc.1
      IL_0054:  brtrue     IL_006a

      IL_0059:  ldloc.3
      IL_005a:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_005f:  ldarg.1
      IL_0060:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_0065:  br         IL_0077

      IL_006a:  ldloc.3
      IL_006b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0070:  ldarg.1
      IL_0071:  ldarg.0
      IL_0072:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverMemory0$PST060000B6(int64,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0077:  ldarg.0
      IL_0078:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_007d:  ldarg.0
      IL_007e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0083:  ldc.i4.s   14
      IL_0085:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_008a:  br         IL_0253

      IL_008f:  ldarg.0
      IL_0090:  ldloca.s   V_5
      IL_0092:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0097:  stloc.s    V_6
      IL_0099:  ldloc.s    V_6
      IL_009b:  stloc.s    V_7
      IL_009d:  ldloc.s    V_7
      IL_009f:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_00a4:  stloc.s    V_8
      IL_00a6:  ldloc.s    V_5
      IL_00a8:  brtrue     IL_00bf

      IL_00ad:  ldloc.s    V_7
      IL_00af:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_00b4:  ldarg.1
      IL_00b5:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_00ba:  br         IL_00cd

      IL_00bf:  ldloc.s    V_7
      IL_00c1:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_00c6:  ldarg.1
      IL_00c7:  ldarg.0
      IL_00c8:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverMemory0$PST060000B6(int64,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00d3:  ldarg.0
      IL_00d4:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00d9:  ldc.i4.s   14
      IL_00db:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00e0:  br         IL_0253

      IL_00e5:  ldarg.0
      IL_00e6:  ldloca.s   V_9
      IL_00e8:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00ed:  stloc.s    V_10
      IL_00ef:  ldloc.s    V_10
      IL_00f1:  stloc.s    V_11
      IL_00f3:  ldloc.s    V_11
      IL_00f5:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_00fa:  stloc.s    V_12
      IL_00fc:  ldloc.s    V_9
      IL_00fe:  brtrue     IL_0115

      IL_0103:  ldloc.s    V_11
      IL_0105:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_010a:  ldarg.1
      IL_010b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_0110:  br         IL_0123

      IL_0115:  ldloc.s    V_11
      IL_0117:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_011c:  ldarg.1
      IL_011d:  ldarg.0
      IL_011e:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverMemory0$PST060000B6(int64,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0123:  ldarg.0
      IL_0124:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0129:  ldarg.0
      IL_012a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_012f:  ldc.i4.s   14
      IL_0131:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0136:  br         IL_0253

      IL_013b:  ldarg.0
      IL_013c:  ldloca.s   V_13
      IL_013e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0143:  stloc.s    V_14
      IL_0145:  ldloc.s    V_14
      IL_0147:  stloc.s    V_15
      IL_0149:  ldloc.s    V_15
      IL_014b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0150:  stloc.s    V_16
      IL_0152:  ldloc.s    V_13
      IL_0154:  brtrue     IL_016b

      IL_0159:  ldloc.s    V_15
      IL_015b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0160:  ldarg.1
      IL_0161:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_0166:  br         IL_0179

      IL_016b:  ldloc.s    V_15
      IL_016d:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0172:  ldarg.1
      IL_0173:  ldarg.0
      IL_0174:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverMemory0$PST060000B6(int64,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0179:  ldarg.0
      IL_017a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_017f:  ldarg.0
      IL_0180:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0185:  ldc.i4.s   14
      IL_0187:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_018c:  br         IL_0253

      IL_0191:  ldarg.0
      IL_0192:  ldloca.s   V_17
      IL_0194:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0199:  stloc.s    V_18
      IL_019b:  ldloc.s    V_18
      IL_019d:  stloc.s    V_19
      IL_019f:  ldloc.s    V_19
      IL_01a1:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_01a6:  stloc.s    V_20
      IL_01a8:  ldloc.s    V_17
      IL_01aa:  brtrue     IL_01c1

      IL_01af:  ldloc.s    V_19
      IL_01b1:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_01b6:  ldarg.1
      IL_01b7:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_01bc:  br         IL_01cf

      IL_01c1:  ldloc.s    V_19
      IL_01c3:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_01c8:  ldarg.1
      IL_01c9:  ldarg.0
      IL_01ca:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverMemory0$PST060000B6(int64,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01cf:  ldarg.0
      IL_01d0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01d5:  ldarg.0
      IL_01d6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01db:  ldc.i4.s   14
      IL_01dd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01e2:  br         IL_0253

      IL_01e7:  ldarg.0
      IL_01e8:  ldloca.s   V_21
      IL_01ea:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_01ef:  stloc.s    V_22
      IL_01f1:  ldloc.s    V_22
      IL_01f3:  stloc.s    V_23
      IL_01f5:  ldloc.s    V_23
      IL_01f7:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_01fc:  stloc.s    V_24
      IL_01fe:  ldloc.s    V_21
      IL_0200:  brtrue     IL_0217

      IL_0205:  ldloc.s    V_23
      IL_0207:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_020c:  ldarg.1
      IL_020d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverMemory0$PST060000B5(int64)
      IL_0212:  br         IL_0225

      IL_0217:  ldloc.s    V_23
      IL_0219:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_021e:  ldarg.1
      IL_021f:  ldarg.0
      IL_0220:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverMemory0$PST060000B6(int64,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0225:  ldarg.0
      IL_0226:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_022b:  ldarg.0
      IL_022c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0231:  ldc.i4.s   14
      IL_0233:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0238:  br         IL_0253

      IL_023d:  ldstr      "can't send Memory in state "
      IL_0242:  ldarg.0
      IL_0243:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_0248:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_024d:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0252:  throw

      IL_0253:  ret
    } // end of method Exp::SendMemory

    .method public instance void  RecvGetProcessUsedMemory([out] int32& processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetProcessUsedMemory when next message "
      + "has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessUsedMemoryPod0
      IL_008e:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory::processId
      IL_0093:  stind.i4
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessUsedMemoryPod0
      IL_00a3:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   10
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv GetProcessUsedMemory in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Exp::RecvGetProcessUsedMemory

    .method public instance void  RecvGetProcessPeakMemory([out] int32& processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetProcessPeakMemory when next message "
      + "has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessPeakMemoryPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory::processId
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessPeakMemoryPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   9
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv GetProcessPeakMemory in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvGetProcessPeakMemory

    .method public instance void  RecvGetProcessHandlePages([out] int32& processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetProcessHandlePages when next message"
      + " has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessHandlePagesPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages::processId
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessHandlePagesPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.8
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv GetProcessHandlePages in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvGetProcessHandlePages

    .method public instance void  SendPages(int64 pages) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.8
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0067

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverPages0$PST060000B7(int64)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverPages0$PST060000B8(int64,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.s   14
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send Pages in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Exp::SendPages

    .method public instance void  RecvTotalUsedCommunicationHeap() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv TotalUsedCommunicationHeap when next me"
      + "ssage has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::TotalUsedCommunicationHeapPod0
      IL_0098:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.7
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv TotalUsedCommunicationHeap in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvTotalUsedCommunicationHeap

    .method public instance void  RecvProcessUsedCommunicationHeap([out] int32& processId) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ProcessUsedCommunicationHeap when next "
      + "message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::ProcessUsedCommunicationHeapPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap::processId
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::ProcessUsedCommunicationHeapPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.6
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv ProcessUsedCommunicationHeap in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvProcessUsedCommunicationHeap

    .method public instance void  SendBlocksAndTotal(int64 blocks,
                                                     int64 bytes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       223 (0xdf)
      .maxstack  15
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_001f

      IL_0013:  ldloc.0
      IL_0014:  ldc.i4.6
      IL_0015:  beq        IL_0070

      IL_001a:  br         IL_00c8

      IL_001f:  ldarg.0
      IL_0020:  ldloca.s   V_1
      IL_0022:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0027:  stloc.2
      IL_0028:  ldloc.2
      IL_0029:  stloc.3
      IL_002a:  ldloc.3
      IL_002b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0030:  stloc.s    V_4
      IL_0032:  ldloc.1
      IL_0033:  brtrue     IL_004a

      IL_0038:  ldloc.3
      IL_0039:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_003e:  ldarg.1
      IL_003f:  ldarg.2
      IL_0040:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverBlocksAndTotal0$PST060000B9(int64,
                                                                                                                                            int64)
      IL_0045:  br         IL_0058

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.2
      IL_0052:  ldarg.0
      IL_0053:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverBlocksAndTotal0$PST060000BA(int64,
                                                                                                                                                    int64,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0058:  ldarg.0
      IL_0059:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005e:  ldarg.0
      IL_005f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0064:  ldc.i4.s   14
      IL_0066:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006b:  br         IL_00de

      IL_0070:  ldarg.0
      IL_0071:  ldloca.s   V_5
      IL_0073:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0078:  stloc.s    V_6
      IL_007a:  ldloc.s    V_6
      IL_007c:  stloc.s    V_7
      IL_007e:  ldloc.s    V_7
      IL_0080:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0085:  stloc.s    V_8
      IL_0087:  ldloc.s    V_5
      IL_0089:  brtrue     IL_00a1

      IL_008e:  ldloc.s    V_7
      IL_0090:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0095:  ldarg.1
      IL_0096:  ldarg.2
      IL_0097:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverBlocksAndTotal0$PST060000B9(int64,
                                                                                                                                            int64)
      IL_009c:  br         IL_00b0

      IL_00a1:  ldloc.s    V_7
      IL_00a3:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_00a8:  ldarg.1
      IL_00a9:  ldarg.2
      IL_00aa:  ldarg.0
      IL_00ab:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverBlocksAndTotal0$PST060000BA(int64,
                                                                                                                                                    int64,
                                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00b0:  ldarg.0
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00b6:  ldarg.0
      IL_00b7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00bc:  ldc.i4.s   14
      IL_00be:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c3:  br         IL_00de

      IL_00c8:  ldstr      "can't send BlocksAndTotal in state "
      IL_00cd:  ldarg.0
      IL_00ce:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00d3:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00d8:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00dd:  throw

      IL_00de:  ret
    } // end of method Exp::SendBlocksAndTotal

    .method public instance void  RecvDumpExHeap() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   15
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   15
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv DumpExHeap when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DumpExHeapPod0
      IL_0098:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.5
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv DumpExHeap in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvDumpExHeap

    .method public instance void  SendExHeapDump(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) dump) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       134 (0x86)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_006f

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004a

      IL_0031:  ldloc.s    V_4
      IL_0033:  ldarg.1
      IL_0034:  call       void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0039:  ldloc.3
      IL_003a:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_003f:  ldarg.1
      IL_0040:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverExHeapDump0$PST060000BB(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0045:  br         IL_0057

      IL_004a:  ldloc.3
      IL_004b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0050:  ldarg.1
      IL_0051:  ldarg.0
      IL_0052:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverExHeapDump0$PST060000BC(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0057:  ldarg.0
      IL_0058:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005d:  ldarg.0
      IL_005e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0063:  ldc.i4.s   14
      IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006a:  br         IL_0085

      IL_006f:  ldstr      "can't send ExHeapDump in state "
      IL_0074:  ldarg.0
      IL_0075:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_007a:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007f:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0084:  throw

      IL_0085:  ret
    } // end of method Exp::SendExHeapDump

    .method public instance void  RecvCollectGarbage() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 11 00 00 00 00 00 ) 
      // Code size       198 (0xc6)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00af

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   17
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   17
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv CollectGarbage when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.0
      IL_008a:  ldc.i4.0
      IL_008b:  volatile.
      IL_008d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0092:  ldarg.0
      IL_0093:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CollectGarbagePod0
      IL_0098:  initobj    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a4:  ldc.i4.4
      IL_00a5:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00aa:  br         IL_00c5

      IL_00af:  ldstr      "can't recv CollectGarbage in state "
      IL_00b4:  ldarg.0
      IL_00b5:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_00ba:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bf:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c4:  throw

      IL_00c5:  ret
    } // end of method Exp::RecvCollectGarbage

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::DeliverContractNotSupported0$PST060000BD()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::MarshallDeliverContractNotSupported0$PST060000BE(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::MarshallContent(uint8*,
                                                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                         uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       980 (0x3d4)
      .maxstack  15
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               bool V_19,
               int32 V_20,
               bool V_21,
               int32 V_22,
               bool V_23,
               int32 V_24,
               bool V_25,
               int32 V_26,
               int32 V_27)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.4
      IL_0010:  beq        IL_006d

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.5
      IL_0017:  beq        IL_00ad

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.6
      IL_001e:  beq        IL_00f5

      IL_0023:  ldloc.1
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_013d

      IL_002a:  ldloc.1
      IL_002b:  ldc.i4.8
      IL_002c:  beq        IL_0185

      IL_0031:  ldloc.1
      IL_0032:  ldc.i4.s   9
      IL_0034:  beq        IL_01cd

      IL_0039:  ldloc.1
      IL_003a:  ldc.i4.s   10
      IL_003c:  beq        IL_0215

      IL_0041:  ldloc.1
      IL_0042:  ldc.i4.s   11
      IL_0044:  beq        IL_025d

      IL_0049:  ldloc.1
      IL_004a:  ldc.i4.s   12
      IL_004c:  beq        IL_02a5

      IL_0051:  ldloc.1
      IL_0052:  ldc.i4.s   13
      IL_0054:  beq        IL_02ed

      IL_0059:  ldloc.1
      IL_005a:  ldc.i4.s   14
      IL_005c:  beq        IL_0335

      IL_0061:  ldloc.1
      IL_0062:  ldc.i4.3
      IL_0063:  beq        IL_037d

      IL_0068:  br         IL_03c5

      IL_006d:  ldc.i4.0
      IL_006e:  stloc.2
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  stloc.3
      IL_0078:  ldloc.3
      IL_0079:  brtrue     IL_008e

      IL_007e:  ldarg.0
      IL_007f:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0084:  stloc.2
      IL_0085:  ldarg.0
      IL_0086:  volatile.
      IL_0088:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_008d:  stloc.3
      IL_008e:  ldloc.3
      IL_008f:  ldc.i4.0
      IL_0090:  ceq
      IL_0092:  brfalse    IL_00a5

      IL_0097:  ldloc.2
      IL_0098:  brfalse    IL_00a5

      IL_009d:  ldc.i4.m1
      IL_009e:  stloc.s    V_4
      IL_00a0:  br         IL_03cd

      IL_00a5:  ldloc.3
      IL_00a6:  stloc.s    V_4
      IL_00a8:  br         IL_03cd

      IL_00ad:  ldc.i4.0
      IL_00ae:  stloc.s    V_5
      IL_00b0:  ldarg.0
      IL_00b1:  volatile.
      IL_00b3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b8:  stloc.s    V_6
      IL_00ba:  ldloc.s    V_6
      IL_00bc:  brtrue     IL_00d3

      IL_00c1:  ldarg.0
      IL_00c2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00c7:  stloc.s    V_5
      IL_00c9:  ldarg.0
      IL_00ca:  volatile.
      IL_00cc:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00d1:  stloc.s    V_6
      IL_00d3:  ldloc.s    V_6
      IL_00d5:  ldc.i4.0
      IL_00d6:  ceq
      IL_00d8:  brfalse    IL_00ec

      IL_00dd:  ldloc.s    V_5
      IL_00df:  brfalse    IL_00ec

      IL_00e4:  ldc.i4.m1
      IL_00e5:  stloc.s    V_4
      IL_00e7:  br         IL_03cd

      IL_00ec:  ldloc.s    V_6
      IL_00ee:  stloc.s    V_4
      IL_00f0:  br         IL_03cd

      IL_00f5:  ldc.i4.0
      IL_00f6:  stloc.s    V_7
      IL_00f8:  ldarg.0
      IL_00f9:  volatile.
      IL_00fb:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0100:  stloc.s    V_8
      IL_0102:  ldloc.s    V_8
      IL_0104:  brtrue     IL_011b

      IL_0109:  ldarg.0
      IL_010a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_010f:  stloc.s    V_7
      IL_0111:  ldarg.0
      IL_0112:  volatile.
      IL_0114:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0119:  stloc.s    V_8
      IL_011b:  ldloc.s    V_8
      IL_011d:  ldc.i4.0
      IL_011e:  ceq
      IL_0120:  brfalse    IL_0134

      IL_0125:  ldloc.s    V_7
      IL_0127:  brfalse    IL_0134

      IL_012c:  ldc.i4.m1
      IL_012d:  stloc.s    V_4
      IL_012f:  br         IL_03cd

      IL_0134:  ldloc.s    V_8
      IL_0136:  stloc.s    V_4
      IL_0138:  br         IL_03cd

      IL_013d:  ldc.i4.0
      IL_013e:  stloc.s    V_9
      IL_0140:  ldarg.0
      IL_0141:  volatile.
      IL_0143:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0148:  stloc.s    V_10
      IL_014a:  ldloc.s    V_10
      IL_014c:  brtrue     IL_0163

      IL_0151:  ldarg.0
      IL_0152:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0157:  stloc.s    V_9
      IL_0159:  ldarg.0
      IL_015a:  volatile.
      IL_015c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0161:  stloc.s    V_10
      IL_0163:  ldloc.s    V_10
      IL_0165:  ldc.i4.0
      IL_0166:  ceq
      IL_0168:  brfalse    IL_017c

      IL_016d:  ldloc.s    V_9
      IL_016f:  brfalse    IL_017c

      IL_0174:  ldc.i4.m1
      IL_0175:  stloc.s    V_4
      IL_0177:  br         IL_03cd

      IL_017c:  ldloc.s    V_10
      IL_017e:  stloc.s    V_4
      IL_0180:  br         IL_03cd

      IL_0185:  ldc.i4.0
      IL_0186:  stloc.s    V_11
      IL_0188:  ldarg.0
      IL_0189:  volatile.
      IL_018b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0190:  stloc.s    V_12
      IL_0192:  ldloc.s    V_12
      IL_0194:  brtrue     IL_01ab

      IL_0199:  ldarg.0
      IL_019a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_019f:  stloc.s    V_11
      IL_01a1:  ldarg.0
      IL_01a2:  volatile.
      IL_01a4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01a9:  stloc.s    V_12
      IL_01ab:  ldloc.s    V_12
      IL_01ad:  ldc.i4.0
      IL_01ae:  ceq
      IL_01b0:  brfalse    IL_01c4

      IL_01b5:  ldloc.s    V_11
      IL_01b7:  brfalse    IL_01c4

      IL_01bc:  ldc.i4.m1
      IL_01bd:  stloc.s    V_4
      IL_01bf:  br         IL_03cd

      IL_01c4:  ldloc.s    V_12
      IL_01c6:  stloc.s    V_4
      IL_01c8:  br         IL_03cd

      IL_01cd:  ldc.i4.0
      IL_01ce:  stloc.s    V_13
      IL_01d0:  ldarg.0
      IL_01d1:  volatile.
      IL_01d3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01d8:  stloc.s    V_14
      IL_01da:  ldloc.s    V_14
      IL_01dc:  brtrue     IL_01f3

      IL_01e1:  ldarg.0
      IL_01e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01e7:  stloc.s    V_13
      IL_01e9:  ldarg.0
      IL_01ea:  volatile.
      IL_01ec:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01f1:  stloc.s    V_14
      IL_01f3:  ldloc.s    V_14
      IL_01f5:  ldc.i4.0
      IL_01f6:  ceq
      IL_01f8:  brfalse    IL_020c

      IL_01fd:  ldloc.s    V_13
      IL_01ff:  brfalse    IL_020c

      IL_0204:  ldc.i4.m1
      IL_0205:  stloc.s    V_4
      IL_0207:  br         IL_03cd

      IL_020c:  ldloc.s    V_14
      IL_020e:  stloc.s    V_4
      IL_0210:  br         IL_03cd

      IL_0215:  ldc.i4.0
      IL_0216:  stloc.s    V_15
      IL_0218:  ldarg.0
      IL_0219:  volatile.
      IL_021b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0220:  stloc.s    V_16
      IL_0222:  ldloc.s    V_16
      IL_0224:  brtrue     IL_023b

      IL_0229:  ldarg.0
      IL_022a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_022f:  stloc.s    V_15
      IL_0231:  ldarg.0
      IL_0232:  volatile.
      IL_0234:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0239:  stloc.s    V_16
      IL_023b:  ldloc.s    V_16
      IL_023d:  ldc.i4.0
      IL_023e:  ceq
      IL_0240:  brfalse    IL_0254

      IL_0245:  ldloc.s    V_15
      IL_0247:  brfalse    IL_0254

      IL_024c:  ldc.i4.m1
      IL_024d:  stloc.s    V_4
      IL_024f:  br         IL_03cd

      IL_0254:  ldloc.s    V_16
      IL_0256:  stloc.s    V_4
      IL_0258:  br         IL_03cd

      IL_025d:  ldc.i4.0
      IL_025e:  stloc.s    V_17
      IL_0260:  ldarg.0
      IL_0261:  volatile.
      IL_0263:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0268:  stloc.s    V_18
      IL_026a:  ldloc.s    V_18
      IL_026c:  brtrue     IL_0283

      IL_0271:  ldarg.0
      IL_0272:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0277:  stloc.s    V_17
      IL_0279:  ldarg.0
      IL_027a:  volatile.
      IL_027c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0281:  stloc.s    V_18
      IL_0283:  ldloc.s    V_18
      IL_0285:  ldc.i4.0
      IL_0286:  ceq
      IL_0288:  brfalse    IL_029c

      IL_028d:  ldloc.s    V_17
      IL_028f:  brfalse    IL_029c

      IL_0294:  ldc.i4.m1
      IL_0295:  stloc.s    V_4
      IL_0297:  br         IL_03cd

      IL_029c:  ldloc.s    V_18
      IL_029e:  stloc.s    V_4
      IL_02a0:  br         IL_03cd

      IL_02a5:  ldc.i4.0
      IL_02a6:  stloc.s    V_19
      IL_02a8:  ldarg.0
      IL_02a9:  volatile.
      IL_02ab:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02b0:  stloc.s    V_20
      IL_02b2:  ldloc.s    V_20
      IL_02b4:  brtrue     IL_02cb

      IL_02b9:  ldarg.0
      IL_02ba:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02bf:  stloc.s    V_19
      IL_02c1:  ldarg.0
      IL_02c2:  volatile.
      IL_02c4:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02c9:  stloc.s    V_20
      IL_02cb:  ldloc.s    V_20
      IL_02cd:  ldc.i4.0
      IL_02ce:  ceq
      IL_02d0:  brfalse    IL_02e4

      IL_02d5:  ldloc.s    V_19
      IL_02d7:  brfalse    IL_02e4

      IL_02dc:  ldc.i4.m1
      IL_02dd:  stloc.s    V_4
      IL_02df:  br         IL_03cd

      IL_02e4:  ldloc.s    V_20
      IL_02e6:  stloc.s    V_4
      IL_02e8:  br         IL_03cd

      IL_02ed:  ldc.i4.0
      IL_02ee:  stloc.s    V_21
      IL_02f0:  ldarg.0
      IL_02f1:  volatile.
      IL_02f3:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_02f8:  stloc.s    V_22
      IL_02fa:  ldloc.s    V_22
      IL_02fc:  brtrue     IL_0313

      IL_0301:  ldarg.0
      IL_0302:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0307:  stloc.s    V_21
      IL_0309:  ldarg.0
      IL_030a:  volatile.
      IL_030c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0311:  stloc.s    V_22
      IL_0313:  ldloc.s    V_22
      IL_0315:  ldc.i4.0
      IL_0316:  ceq
      IL_0318:  brfalse    IL_032c

      IL_031d:  ldloc.s    V_21
      IL_031f:  brfalse    IL_032c

      IL_0324:  ldc.i4.m1
      IL_0325:  stloc.s    V_4
      IL_0327:  br         IL_03cd

      IL_032c:  ldloc.s    V_22
      IL_032e:  stloc.s    V_4
      IL_0330:  br         IL_03cd

      IL_0335:  ldc.i4.0
      IL_0336:  stloc.s    V_23
      IL_0338:  ldarg.0
      IL_0339:  volatile.
      IL_033b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0340:  stloc.s    V_24
      IL_0342:  ldloc.s    V_24
      IL_0344:  brtrue     IL_035b

      IL_0349:  ldarg.0
      IL_034a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_034f:  stloc.s    V_23
      IL_0351:  ldarg.0
      IL_0352:  volatile.
      IL_0354:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0359:  stloc.s    V_24
      IL_035b:  ldloc.s    V_24
      IL_035d:  ldc.i4.0
      IL_035e:  ceq
      IL_0360:  brfalse    IL_0374

      IL_0365:  ldloc.s    V_23
      IL_0367:  brfalse    IL_0374

      IL_036c:  ldc.i4.m1
      IL_036d:  stloc.s    V_4
      IL_036f:  br         IL_03cd

      IL_0374:  ldloc.s    V_24
      IL_0376:  stloc.s    V_4
      IL_0378:  br         IL_03cd

      IL_037d:  ldc.i4.0
      IL_037e:  stloc.s    V_25
      IL_0380:  ldarg.0
      IL_0381:  volatile.
      IL_0383:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0388:  stloc.s    V_26
      IL_038a:  ldloc.s    V_26
      IL_038c:  brtrue     IL_03a3

      IL_0391:  ldarg.0
      IL_0392:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0397:  stloc.s    V_25
      IL_0399:  ldarg.0
      IL_039a:  volatile.
      IL_039c:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_03a1:  stloc.s    V_26
      IL_03a3:  ldloc.s    V_26
      IL_03a5:  ldc.i4.0
      IL_03a6:  ceq
      IL_03a8:  brfalse    IL_03bc

      IL_03ad:  ldloc.s    V_25
      IL_03af:  brfalse    IL_03bc

      IL_03b4:  ldc.i4.m1
      IL_03b5:  stloc.s    V_4
      IL_03b7:  br         IL_03cd

      IL_03bc:  ldloc.s    V_26
      IL_03be:  stloc.s    V_4
      IL_03c0:  br         IL_03cd

      IL_03c5:  ldc.i4.m1
      IL_03c6:  stloc.s    V_4
      IL_03c8:  br         IL_03cd

      IL_03cd:  ldloc.s    V_4
      IL_03cf:  stloc.s    V_27
      IL_03d1:  ldloc.s    V_4
      IL_03d3:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetUsedMemory0$PST060000DF() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetUsedMemory0

    .method privatescope instance void  MarshallDeliverGetUsedMemory0$PST060000E0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetUsedMemory0$PST060000DF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetUsedMemoryPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetUsedMemory0

    .method privatescope instance void  DeliverGetFreeMemory0$PST060000E1() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.5
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.5
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetFreeMemory0

    .method privatescope instance void  MarshallDeliverGetFreeMemory0$PST060000E2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetFreeMemory0$PST060000E1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetFreeMemoryPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetFreeMemory0

    .method privatescope instance void  DeliverGetMaxMemory0$PST060000E3() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.6
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.6
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetMaxMemory0

    .method privatescope instance void  MarshallDeliverGetMaxMemory0$PST060000E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetMaxMemory0$PST060000E3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetMaxMemoryPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetMaxMemory0

    .method privatescope instance void  DeliverGetProcessUsedMemory0$PST060000E5(int32 processId) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessUsedMemoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory::processId
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverGetProcessUsedMemory0

    .method privatescope instance void  MarshallDeliverGetProcessUsedMemory0$PST060000E6(int32 processId,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetProcessUsedMemory0$PST060000E5(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessUsedMemoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory::MarshallAll(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessUsedMemory0

    .method privatescope instance void  DeliverGetProcessPeakMemory0$PST060000E7(int32 processId) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessPeakMemoryPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory::processId
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetProcessPeakMemory0

    .method privatescope instance void  MarshallDeliverGetProcessPeakMemory0$PST060000E8(int32 processId,
                                                                                         valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetProcessPeakMemory0$PST060000E7(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessPeakMemoryPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory::MarshallAll(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessPeakMemory0

    .method privatescope instance void  DeliverGetProcessHandlePages0$PST060000E9(int32 processId) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessHandlePagesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages::processId
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetProcessHandlePages0

    .method privatescope instance void  MarshallDeliverGetProcessHandlePages0$PST060000EA(int32 processId,
                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverGetProcessHandlePages0$PST060000E9(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::GetProcessHandlePagesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages::MarshallAll(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessHandlePages0

    .method privatescope instance void  DeliverTotalUsedCommunicationHeap0$PST060000EB() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   12
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   12
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverTotalUsedCommunicationHeap0

    .method privatescope instance void  MarshallDeliverTotalUsedCommunicationHeap0$PST060000EC(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverTotalUsedCommunicationHeap0$PST060000EB()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::TotalUsedCommunicationHeapPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap::MarshallAll(uint8*,
                                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverTotalUsedCommunicationHeap0

    .method privatescope instance void  DeliverProcessUsedCommunicationHeap0$PST060000ED(int32 processId) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::ProcessUsedCommunicationHeapPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap::processId
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   13
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverProcessUsedCommunicationHeap0

    .method privatescope instance void  MarshallDeliverProcessUsedCommunicationHeap0$PST060000EE(int32 processId,
                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverProcessUsedCommunicationHeap0$PST060000ED(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::ProcessUsedCommunicationHeapPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap::MarshallAll(uint8*,
                                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverProcessUsedCommunicationHeap0

    .method privatescope instance void  DeliverDumpExHeap0$PST060000EF() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   15
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   15
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverDumpExHeap0

    .method privatescope instance void  MarshallDeliverDumpExHeap0$PST060000F0(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverDumpExHeap0$PST060000EF()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DumpExHeapPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap::MarshallAll(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverDumpExHeap0

    .method privatescope instance void  DeliverCollectGarbage0$PST060000F1() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   17
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   17
      IL_000b:  volatile.
      IL_000d:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0012:  ret
    } // end of method Exp::DeliverCollectGarbage0

    .method privatescope instance void  MarshallDeliverCollectGarbage0$PST060000F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::DeliverCollectGarbage0$PST060000F1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::CollectGarbagePod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverCollectGarbage0

  } // end of class Exp

  .class sequential ansi nested public beforefieldinit BlockInfo
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field public int64 ptrVal
    .field public int64 size
    .field public int64 'type'
    .field public int32 ownerProcID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BlockInfo::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BlockInfo::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       10 (0xa)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.0
      IL_0004:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*)
      IL_0009:  ret
    } // end of method BlockInfo::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method BlockInfo::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlockInfo::Release

  } // end of class BlockInfo

  .class sequential ansi sealed nested public specialname Ready
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class sequential ansi sealed nested public specialname GetUsedMemory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetUsedMemory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetUsedMemory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method GetUsedMemory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetUsedMemory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetUsedMemory::Release

  } // end of class GetUsedMemory

  .class sequential ansi sealed nested public specialname GetFreeMemory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetFreeMemory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetFreeMemory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method GetFreeMemory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetFreeMemory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetFreeMemory::Release

  } // end of class GetFreeMemory

  .class sequential ansi sealed nested public specialname GetMaxMemory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetMaxMemory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetMaxMemory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method GetMaxMemory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetMaxMemory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetMaxMemory::Release

  } // end of class GetMaxMemory

  .class sequential ansi sealed nested public specialname Memory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int64 bytes
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Memory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Memory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Memory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Memory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Memory::Release

  } // end of class Memory

  .class sequential ansi sealed nested public specialname GetProcessUsedMemory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 processId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessUsedMemory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessUsedMemory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory::MarshallContent(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          uint8*,
                                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method GetProcessUsedMemory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessUsedMemory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessUsedMemory::Release

  } // end of class GetProcessUsedMemory

  .class sequential ansi sealed nested public specialname GetProcessPeakMemory
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 processId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessPeakMemory::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessPeakMemory::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory::MarshallContent(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          uint8*,
                                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method GetProcessPeakMemory::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessPeakMemory::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessPeakMemory::Release

  } // end of class GetProcessPeakMemory

  .class sequential ansi sealed nested public specialname GetProcessHandlePages
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 processId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessHandlePages::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessHandlePages::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages::MarshallContent(uint8*,
                                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                           uint8*,
                                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method GetProcessHandlePages::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessHandlePages::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessHandlePages::Release

  } // end of class GetProcessHandlePages

  .class sequential ansi sealed nested public specialname Pages
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int64 pages
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Pages::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Pages::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages::MarshallContent(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           uint8*,
                                                                                                                           int32&)
      IL_001d:  ret
    } // end of method Pages::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Pages::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Pages::Release

  } // end of class Pages

  .class sequential ansi sealed nested public specialname TotalUsedCommunicationHeap
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method TotalUsedCommunicationHeap::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method TotalUsedCommunicationHeap::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap::MarshallContent(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                uint8*,
                                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method TotalUsedCommunicationHeap::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method TotalUsedCommunicationHeap::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method TotalUsedCommunicationHeap::Release

  } // end of class TotalUsedCommunicationHeap

  .class sequential ansi sealed nested public specialname ProcessUsedCommunicationHeap
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 processId
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessUsedCommunicationHeap::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessUsedCommunicationHeap::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap::MarshallContent(uint8*,
                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                  uint8*,
                                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method ProcessUsedCommunicationHeap::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ProcessUsedCommunicationHeap::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessUsedCommunicationHeap::Release

  } // end of class ProcessUsedCommunicationHeap

  .class sequential ansi sealed nested public specialname BlocksAndTotal
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int64 blocks
    .field public int64 bytes
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BlocksAndTotal::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method BlocksAndTotal::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method BlocksAndTotal::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method BlocksAndTotal::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method BlocksAndTotal::Release

  } // end of class BlocksAndTotal

  .class sequential ansi sealed nested public specialname DumpExHeap
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DumpExHeap::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method DumpExHeap::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap::MarshallContent(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                uint8*,
                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method DumpExHeap::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method DumpExHeap::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method DumpExHeap::Release

  } // end of class DumpExHeap

  .class sequential ansi sealed nested public specialname ExHeapDump
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) dump
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       13 (0xd)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  ldarg.0
      IL_0002:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_0007:  call       void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo::TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_000c:  ret
    } // end of method ExHeapDump::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ExHeapDump::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ExHeapDump::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::MarshallContent(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                uint8*,
                                                                                                                                int32&)
      IL_001d:  ret
    } // end of method ExHeapDump::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ExHeapDump::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       49 (0x31)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_0008:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.1
      IL_0023:  ldarg.2
      IL_0024:  ldarg.3
      IL_0025:  ldarg.0
      IL_0026:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_002b:  call       void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo::MarshallVector(uint8*,
                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                     uint8*,
                                                                                                                     valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector))
      IL_0030:  ret
    } // end of method ExHeapDump::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlockInfo* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump::dump
      IL_001a:  ret
    } // end of method ExHeapDump::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ExHeapDump::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ExHeapDump::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ExHeapDump::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ExHeapDump::Release

  } // end of class ExHeapDump

  .class sequential ansi sealed nested public specialname CollectGarbage
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CollectGarbage::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method CollectGarbage::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method CollectGarbage::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method CollectGarbage::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method CollectGarbage::Release

  } // end of class CollectGarbage

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$0 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetUsedMemory msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$1 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetFreeMemory msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$2 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetMaxMemory msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$3 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessUsedMemory msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$4 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessPeakMemory msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$5 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/GetProcessHandlePages msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$6 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/TotalUsedCommunicationHeap msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$7 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ProcessUsedCommunicationHeap msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$8 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/DumpExHeap msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState$9 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/CollectGarbage msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory msg) cil managed
    {
    } // end of method ReadyState$2::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .class abstract auto ansi nested public specialname ReadyState$4
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory msg) cil managed
    {
    } // end of method ReadyState$4::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$4::.ctor

  } // end of class ReadyState$4

  .class abstract auto ansi nested public specialname ReadyState$5
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Pages msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$5::.ctor

  } // end of class ReadyState$5

  .class abstract auto ansi nested public specialname ReadyState$6
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal msg) cil managed
    {
    } // end of method ReadyState$6::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$6::.ctor

  } // end of class ReadyState$6

  .class abstract auto ansi nested public specialname ReadyState$7
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/BlocksAndTotal msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$7::.ctor

  } // end of class ReadyState$7

  .class abstract auto ansi nested public specialname ReadyState$8
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ExHeapDump msg) cil managed
    {
    } // end of method ReadyState$8::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$8::.ctor

  } // end of class ReadyState$8

  .class abstract auto ansi nested public specialname ReadyState$9
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Memory msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$9::.ctor

  } // end of class ReadyState$9

  .field public static literal string ModuleName = "/status/memory"
  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::'.ctor$PST06000093'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method MemoryContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.MemoryContract/Imp::'.ctor$PST06000093'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method MemoryContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method MemoryContract::.ctor

  .method privatescope static int32  StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       51 (0x33)
    .maxstack  6
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.2
    IL_000b:  beq        IL_0015

    IL_0010:  br         IL_0028

    IL_0015:  ldarg.0
    IL_0016:  ldc.i4.1
    IL_0017:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_001c:  ldarg.0
    IL_001d:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.MemoryContract::StableState$PST06000014(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0022:  stloc.2
    IL_0023:  br         IL_002f

    IL_0028:  ldloc.0
    IL_0029:  stloc.2
    IL_002a:  br         IL_002f

    IL_002f:  ldloc.2
    IL_0030:  stloc.3
    IL_0031:  ldloc.2
    IL_0032:  ret
  } // end of method MemoryContract::StableState

  .method privatescope static int32  CanonicalState$PST06000015(int32 state) cil managed
  {
    // Code size       32 (0x20)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.2
    IL_0004:  beq        IL_000e

    IL_0009:  br         IL_0015

    IL_000e:  ldc.i4.1
    IL_000f:  stloc.1
    IL_0010:  br         IL_001c

    IL_0015:  ldarg.0
    IL_0016:  stloc.1
    IL_0017:  br         IL_001c

    IL_001c:  ldloc.1
    IL_001d:  stloc.2
    IL_001e:  ldloc.1
    IL_001f:  ret
  } // end of method MemoryContract::CanonicalState

} // end of class Microsoft.Singularity.Diagnostics.Contracts.MemoryContract

.class public abstract auto ansi beforefieldinit Microsoft.Singularity.Diagnostics.Contracts.ProcessContract
       extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract
       implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IChannelContract
{
  .class auto ansi sealed nested public Tags
         extends [Corlib]System.Enum
  {
    .field public specialname rtspecialname int32 value__
    .field public static literal specialname int32 Any = int32(0x00000001)
    .field public static literal specialname int32 $TagBase = int32(0x00000003)
    .field public static literal specialname int32 $NextTag = int32(0x00000011)
    .field public static literal specialname int32 Ready = int32(0x00000003)
    .field public static literal specialname int32 GetProcessIDs = int32(0x00000004)
    .field public static literal specialname int32 ProcessIDs = int32(0x00000005)
    .field public static literal specialname int32 GetProcessName = int32(0x00000006)
    .field public static literal specialname int32 ProcessName = int32(0x00000007)
    .field public static literal specialname int32 GetProcessThreadIDs = int32(0x00000008)
    .field public static literal specialname int32 ProcessThreadIDs = int32(0x00000009)
    .field public static literal specialname int32 GetProcessTimes = int32(0x0000000A)
    .field public static literal specialname int32 ProcessTimes = int32(0x0000000B)
    .field public static literal specialname int32 GetProcessGcStats = int32(0x0000000C)
    .field public static literal specialname int32 ProcessGcStats = int32(0x0000000D)
    .field public static literal specialname int32 GetParentID = int32(0x0000000E)
    .field public static literal specialname int32 ParentID = int32(0x0000000F)
    .field public static literal specialname int32 NotFound = int32(0x00000010)
  } // end of class Tags

  .class sequential ansi nested public Imp
         extends [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) TagPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready ReadyPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs ProcessIDsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName ProcessNamePod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs ProcessThreadIDsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes ProcessTimesPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats ProcessGcStatsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID ParentIDPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound NotFoundPod0
    .field family valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported ContractNotSupportedPod0
    .method privatescope specialname rtspecialname 
            instance void  '.ctor$PST060001C4'(int32 impInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::.ctor(int32)
      IL_0007:  ret
    } // end of method Imp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::CanonicalState$PST0600001A(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::CanonicalState$PST0600001A(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Imp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       291 (0x123)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_007a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0085

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   13
      IL_001f:  beq        IL_0090

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   12
      IL_0027:  beq        IL_009b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   11
      IL_002f:  beq        IL_00a6

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   10
      IL_0037:  beq        IL_00b1

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   9
      IL_003f:  beq        IL_00bc

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.8
      IL_0046:  beq        IL_00c7

      IL_004b:  ldloc.0
      IL_004c:  ldc.i4.7
      IL_004d:  beq        IL_00d2

      IL_0052:  ldloc.0
      IL_0053:  ldc.i4.6
      IL_0054:  beq        IL_00dd

      IL_0059:  ldloc.0
      IL_005a:  ldc.i4.5
      IL_005b:  beq        IL_00e8

      IL_0060:  ldloc.0
      IL_0061:  ldc.i4.4
      IL_0062:  beq        IL_00f3

      IL_0067:  ldloc.0
      IL_0068:  ldc.i4.3
      IL_0069:  beq        IL_00fe

      IL_006e:  ldloc.0
      IL_006f:  ldc.i4.2
      IL_0070:  beq        IL_0109

      IL_0075:  br         IL_0114

      IL_007a:  ldstr      "ReadyState"
      IL_007f:  stloc.1
      IL_0080:  br         IL_011f

      IL_0085:  ldstr      "ReadyState$0"
      IL_008a:  stloc.1
      IL_008b:  br         IL_011f

      IL_0090:  ldstr      "ReadyState$1"
      IL_0095:  stloc.1
      IL_0096:  br         IL_011f

      IL_009b:  ldstr      "ReadyState$2"
      IL_00a0:  stloc.1
      IL_00a1:  br         IL_011f

      IL_00a6:  ldstr      "ReadyState$3"
      IL_00ab:  stloc.1
      IL_00ac:  br         IL_011f

      IL_00b1:  ldstr      "ReadyState$4"
      IL_00b6:  stloc.1
      IL_00b7:  br         IL_011f

      IL_00bc:  ldstr      "ReadyState$5"
      IL_00c1:  stloc.1
      IL_00c2:  br         IL_011f

      IL_00c7:  ldstr      "ReadyState$6"
      IL_00cc:  stloc.1
      IL_00cd:  br         IL_011f

      IL_00d2:  ldstr      "ReadyState$7"
      IL_00d7:  stloc.1
      IL_00d8:  br         IL_011f

      IL_00dd:  ldstr      "ReadyState$8"
      IL_00e2:  stloc.1
      IL_00e3:  br         IL_011f

      IL_00e8:  ldstr      "ReadyState$9"
      IL_00ed:  stloc.1
      IL_00ee:  br         IL_011f

      IL_00f3:  ldstr      "ReadyState$10"
      IL_00f8:  stloc.1
      IL_00f9:  br         IL_011f

      IL_00fe:  ldstr      "Start"
      IL_0103:  stloc.1
      IL_0104:  br         IL_011f

      IL_0109:  ldstr      "DoneState"
      IL_010e:  stloc.1
      IL_010f:  br         IL_011f

      IL_0114:  ldstr      "<protocol terminated>"
      IL_0119:  stloc.1
      IL_011a:  br         IL_011f

      IL_011f:  ldloc.1
      IL_0120:  stloc.2
      IL_0121:  ldloc.1
      IL_0122:  ret
    } // end of method Imp::CurrentState

    .method public instance void  RecvReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       196 (0xc4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ad

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.3
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.3
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv Ready when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ReadyPod0
      IL_0095:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.s   15
      IL_00a3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a8:  br         IL_00c3

      IL_00ad:  ldstr      "can't recv Ready in state "
      IL_00b2:  ldarg.0
      IL_00b3:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00b8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c2:  throw

      IL_00c3:  ret
    } // end of method Imp::RecvReady

    .method public instance void  SendGetProcessIDs() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0066

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0042

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessIDs0$PST06000214()
      IL_003d:  br         IL_004e

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0048:  ldarg.0
      IL_0049:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallDeliverGetProcessIDs0$PST06000215(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004e:  ldarg.0
      IL_004f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0054:  ldarg.0
      IL_0055:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005a:  ldc.i4.s   14
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send GetProcessIDs in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Imp::SendGetProcessIDs

    .method public instance void  RecvProcessIDs([out] int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& IDs) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.5
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.5
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv ProcessIDs when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessIDsPod0
      IL_008e:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0093:  stind.i
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessIDsPod0
      IL_00a3:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   15
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv ProcessIDs in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvProcessIDs

    .method public instance void  SendGetProcessName(int32 procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0067

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessName0$PST06000216(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallDeliverGetProcessName0$PST06000217(int32,
                                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send GetProcessName in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Imp::SendGetProcessName

    .method public instance void  RecvProcessName([out] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& procName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      // Code size       208 (0xd0)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00b9

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.7
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.7
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ProcessName when next message has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.1
      IL_0087:  ldarg.0
      IL_0088:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessNamePod0
      IL_008d:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0092:  stind.i
      IL_0093:  ldarg.0
      IL_0094:  ldc.i4.0
      IL_0095:  volatile.
      IL_0097:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessNamePod0
      IL_00a2:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName
      IL_00a8:  ldarg.0
      IL_00a9:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00ae:  ldc.i4.6
      IL_00af:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b4:  br         IL_00cf

      IL_00b9:  ldstr      "can't recv ProcessName in state "
      IL_00be:  ldarg.0
      IL_00bf:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00c4:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00c9:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ce:  throw

      IL_00cf:  ret
    } // end of method Imp::RecvProcessName

    .method public instance void  SendGetProcessThreadIDs(int32 procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessThreadIDs0$PST06000218(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallDeliverGetProcessThreadIDs0$PST06000219(int32,
                                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   13
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send GetProcessThreadIDs in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendGetProcessThreadIDs

    .method public instance void  RecvProcessThreadIDs([out] int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& tids) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   9
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   9
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ProcessThreadIDs when next message has "
      + "tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessThreadIDsPod0
      IL_0090:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0095:  stind.i
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessThreadIDsPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   12
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv ProcessThreadIDs in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Imp::RecvProcessThreadIDs

    .method public instance void  SendGetProcessTimes(int32 procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessTimes0$PST0600021A(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallDeliverGetProcessTimes0$PST0600021B(int32,
                                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   11
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send GetProcessTimes in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendGetProcessTimes

    .method public instance void  RecvProcessTimes([out] int64& totalTime,
                                                   [out] int64& deadThreadTime,
                                                   [out] int64& deadThreadCount) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       238 (0xee)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d7

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   11
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   11
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ProcessTimes when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_0090:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::totalTime
      IL_0095:  stind.i8
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_009d:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::deadThreadTime
      IL_00a2:  stind.i8
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_00aa:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::deadThreadCount
      IL_00af:  stind.i8
      IL_00b0:  ldarg.0
      IL_00b1:  ldc.i4.0
      IL_00b2:  volatile.
      IL_00b4:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_00bf:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes
      IL_00c5:  ldarg.0
      IL_00c6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cb:  ldc.i4.s   10
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d2:  br         IL_00ed

      IL_00d7:  ldstr      "can't recv ProcessTimes in state "
      IL_00dc:  ldarg.0
      IL_00dd:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00e2:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e7:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00ec:  throw

      IL_00ed:  ret
    } // end of method Imp::RecvProcessTimes

    .method public instance void  SendGetProcessGcStats(int32 procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       127 (0x7f)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0068

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessGcStats0$PST0600021C(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallDeliverGetProcessGcStats0$PST0600021D(int32,
                                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.s   9
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0063:  br         IL_007e

      IL_0068:  ldstr      "can't send GetProcessGcStats in state "
      IL_006d:  ldarg.0
      IL_006e:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_0073:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0078:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007d:  throw

      IL_007e:  ret
    } // end of method Imp::SendGetProcessGcStats

    .method public instance void  RecvProcessGcStats([out] int32& count,
                                                     [out] int64& time,
                                                     [out] int64& bytes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       237 (0xed)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00d6

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   13
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   13
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv ProcessGcStats when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::count
      IL_0095:  stind.i4
      IL_0096:  ldarg.2
      IL_0097:  ldarg.0
      IL_0098:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_009d:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::time
      IL_00a2:  stind.i8
      IL_00a3:  ldarg.3
      IL_00a4:  ldarg.0
      IL_00a5:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_00aa:  ldfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::bytes
      IL_00af:  stind.i8
      IL_00b0:  ldarg.0
      IL_00b1:  ldc.i4.0
      IL_00b2:  volatile.
      IL_00b4:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00b9:  ldarg.0
      IL_00ba:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_00bf:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats
      IL_00c5:  ldarg.0
      IL_00c6:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cb:  ldc.i4.8
      IL_00cc:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d1:  br         IL_00ec

      IL_00d6:  ldstr      "can't recv ProcessGcStats in state "
      IL_00db:  ldarg.0
      IL_00dc:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00e1:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00e6:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00eb:  throw

      IL_00ec:  ret
    } // end of method Imp::RecvProcessGcStats

    .method public instance void  SendGetParentID(int32 procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       126 (0x7e)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0067

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0043

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0038:  ldarg.1
      IL_0039:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetParentID0$PST0600021E(int32)
      IL_003e:  br         IL_0050

      IL_0043:  ldloc.3
      IL_0044:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_0049:  ldarg.1
      IL_004a:  ldarg.0
      IL_004b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallDeliverGetParentID0$PST0600021F(int32,
                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0050:  ldarg.0
      IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0056:  ldarg.0
      IL_0057:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005c:  ldc.i4.5
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0062:  br         IL_007d

      IL_0067:  ldstr      "can't send GetParentID in state "
      IL_006c:  ldarg.0
      IL_006d:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_0072:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0077:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007c:  throw

      IL_007d:  ret
    } // end of method Imp::SendGetParentID

    .method public instance void  RecvParentID([out] int32& parentID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00bb

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.s   15
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.s   15
      IL_0066:  beq        IL_0088

      IL_006b:  ldstr      "can't recv ParentID when next message has tag "
      IL_0070:  ldarg.0
      IL_0071:  volatile.
      IL_0073:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0078:  box        [Corlib]System.Int32
      IL_007d:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0082:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ldarg.1
      IL_0089:  ldarg.0
      IL_008a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ParentIDPod0
      IL_008f:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID::parentID
      IL_0094:  stind.i4
      IL_0095:  ldarg.0
      IL_0096:  ldc.i4.0
      IL_0097:  volatile.
      IL_0099:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_009e:  ldarg.0
      IL_009f:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ParentIDPod0
      IL_00a4:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID
      IL_00aa:  ldarg.0
      IL_00ab:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b0:  ldc.i4.4
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv ParentID in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Imp::RecvParentID

    .method public instance void  RecvNotFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       859 (0x35b)
      .maxstack  25
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2,
               bool V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0037

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_00ce

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   13
      IL_001e:  beq        IL_0169

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_0208

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   9
      IL_002d:  beq        IL_02a6

      IL_0032:  br         IL_0344

      IL_0037:  ldc.i4.0
      IL_0038:  stloc.1
      IL_0039:  ldarg.0
      IL_003a:  volatile.
      IL_003c:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0041:  stloc.2
      IL_0042:  ldloc.2
      IL_0043:  brtrue     IL_0058

      IL_0048:  ldarg.0
      IL_0049:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_004e:  stloc.1
      IL_004f:  ldarg.0
      IL_0050:  volatile.
      IL_0052:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0057:  stloc.2
      IL_0058:  ldloc.2
      IL_0059:  ldc.i4.0
      IL_005a:  ceq
      IL_005c:  brfalse    IL_007a

      IL_0061:  ldloc.1
      IL_0062:  brfalse    IL_0072

      IL_0067:  ldstr      "Peer is closed"
      IL_006c:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0071:  throw

      IL_0072:  ldarg.0
      IL_0073:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0078:  br.s       IL_0037

      IL_007a:  ldarg.0
      IL_007b:  ldc.i4.s   16
      IL_007d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0082:  ldloc.2
      IL_0083:  ldc.i4.s   16
      IL_0085:  beq        IL_00a7

      IL_008a:  ldstr      "can't recv NotFound when next message has tag "
      IL_008f:  ldarg.0
      IL_0090:  volatile.
      IL_0092:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0097:  box        [Corlib]System.Int32
      IL_009c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_00a1:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_00a6:  throw

      IL_00a7:  ldarg.0
      IL_00a8:  ldc.i4.0
      IL_00a9:  volatile.
      IL_00ab:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00b0:  ldarg.0
      IL_00b1:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::NotFoundPod0
      IL_00b6:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound
      IL_00bc:  ldarg.0
      IL_00bd:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00c2:  ldc.i4.s   10
      IL_00c4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00c9:  br         IL_035a

      IL_00ce:  ldc.i4.0
      IL_00cf:  stloc.3
      IL_00d0:  ldarg.0
      IL_00d1:  volatile.
      IL_00d3:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00d8:  stloc.s    V_4
      IL_00da:  ldloc.s    V_4
      IL_00dc:  brtrue     IL_00f2

      IL_00e1:  ldarg.0
      IL_00e2:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00e7:  stloc.3
      IL_00e8:  ldarg.0
      IL_00e9:  volatile.
      IL_00eb:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00f0:  stloc.s    V_4
      IL_00f2:  ldloc.s    V_4
      IL_00f4:  ldc.i4.0
      IL_00f5:  ceq
      IL_00f7:  brfalse    IL_0115

      IL_00fc:  ldloc.3
      IL_00fd:  brfalse    IL_010d

      IL_0102:  ldstr      "Peer is closed"
      IL_0107:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_010c:  throw

      IL_010d:  ldarg.0
      IL_010e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0113:  br.s       IL_00ce

      IL_0115:  ldarg.0
      IL_0116:  ldc.i4.s   16
      IL_0118:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_011d:  ldloc.s    V_4
      IL_011f:  ldc.i4.s   16
      IL_0121:  beq        IL_0143

      IL_0126:  ldstr      "can't recv NotFound when next message has tag "
      IL_012b:  ldarg.0
      IL_012c:  volatile.
      IL_012e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0133:  box        [Corlib]System.Int32
      IL_0138:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_013d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0142:  throw

      IL_0143:  ldarg.0
      IL_0144:  ldc.i4.0
      IL_0145:  volatile.
      IL_0147:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_014c:  ldarg.0
      IL_014d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::NotFoundPod0
      IL_0152:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound
      IL_0158:  ldarg.0
      IL_0159:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_015e:  ldc.i4.4
      IL_015f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0164:  br         IL_035a

      IL_0169:  ldc.i4.0
      IL_016a:  stloc.s    V_5
      IL_016c:  ldarg.0
      IL_016d:  volatile.
      IL_016f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0174:  stloc.s    V_6
      IL_0176:  ldloc.s    V_6
      IL_0178:  brtrue     IL_018f

      IL_017d:  ldarg.0
      IL_017e:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0183:  stloc.s    V_5
      IL_0185:  ldarg.0
      IL_0186:  volatile.
      IL_0188:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_018d:  stloc.s    V_6
      IL_018f:  ldloc.s    V_6
      IL_0191:  ldc.i4.0
      IL_0192:  ceq
      IL_0194:  brfalse    IL_01b3

      IL_0199:  ldloc.s    V_5
      IL_019b:  brfalse    IL_01ab

      IL_01a0:  ldstr      "Peer is closed"
      IL_01a5:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01aa:  throw

      IL_01ab:  ldarg.0
      IL_01ac:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_01b1:  br.s       IL_0169

      IL_01b3:  ldarg.0
      IL_01b4:  ldc.i4.s   16
      IL_01b6:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_01bb:  ldloc.s    V_6
      IL_01bd:  ldc.i4.s   16
      IL_01bf:  beq        IL_01e1

      IL_01c4:  ldstr      "can't recv NotFound when next message has tag "
      IL_01c9:  ldarg.0
      IL_01ca:  volatile.
      IL_01cc:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_01d1:  box        [Corlib]System.Int32
      IL_01d6:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_01db:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_01e0:  throw

      IL_01e1:  ldarg.0
      IL_01e2:  ldc.i4.0
      IL_01e3:  volatile.
      IL_01e5:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_01ea:  ldarg.0
      IL_01eb:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::NotFoundPod0
      IL_01f0:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound
      IL_01f6:  ldarg.0
      IL_01f7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01fc:  ldc.i4.s   12
      IL_01fe:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0203:  br         IL_035a

      IL_0208:  ldc.i4.0
      IL_0209:  stloc.s    V_7
      IL_020b:  ldarg.0
      IL_020c:  volatile.
      IL_020e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0213:  stloc.s    V_8
      IL_0215:  ldloc.s    V_8
      IL_0217:  brtrue     IL_022e

      IL_021c:  ldarg.0
      IL_021d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0222:  stloc.s    V_7
      IL_0224:  ldarg.0
      IL_0225:  volatile.
      IL_0227:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_022c:  stloc.s    V_8
      IL_022e:  ldloc.s    V_8
      IL_0230:  ldc.i4.0
      IL_0231:  ceq
      IL_0233:  brfalse    IL_0252

      IL_0238:  ldloc.s    V_7
      IL_023a:  brfalse    IL_024a

      IL_023f:  ldstr      "Peer is closed"
      IL_0244:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0249:  throw

      IL_024a:  ldarg.0
      IL_024b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0250:  br.s       IL_0208

      IL_0252:  ldarg.0
      IL_0253:  ldc.i4.s   16
      IL_0255:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_025a:  ldloc.s    V_8
      IL_025c:  ldc.i4.s   16
      IL_025e:  beq        IL_0280

      IL_0263:  ldstr      "can't recv NotFound when next message has tag "
      IL_0268:  ldarg.0
      IL_0269:  volatile.
      IL_026b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0270:  box        [Corlib]System.Int32
      IL_0275:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_027a:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_027f:  throw

      IL_0280:  ldarg.0
      IL_0281:  ldc.i4.0
      IL_0282:  volatile.
      IL_0284:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0289:  ldarg.0
      IL_028a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::NotFoundPod0
      IL_028f:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound
      IL_0295:  ldarg.0
      IL_0296:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_029b:  ldc.i4.6
      IL_029c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_02a1:  br         IL_035a

      IL_02a6:  ldc.i4.0
      IL_02a7:  stloc.s    V_9
      IL_02a9:  ldarg.0
      IL_02aa:  volatile.
      IL_02ac:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_02b1:  stloc.s    V_10
      IL_02b3:  ldloc.s    V_10
      IL_02b5:  brtrue     IL_02cc

      IL_02ba:  ldarg.0
      IL_02bb:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_02c0:  stloc.s    V_9
      IL_02c2:  ldarg.0
      IL_02c3:  volatile.
      IL_02c5:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_02ca:  stloc.s    V_10
      IL_02cc:  ldloc.s    V_10
      IL_02ce:  ldc.i4.0
      IL_02cf:  ceq
      IL_02d1:  brfalse    IL_02f0

      IL_02d6:  ldloc.s    V_9
      IL_02d8:  brfalse    IL_02e8

      IL_02dd:  ldstr      "Peer is closed"
      IL_02e2:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_02e7:  throw

      IL_02e8:  ldarg.0
      IL_02e9:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_02ee:  br.s       IL_02a6

      IL_02f0:  ldarg.0
      IL_02f1:  ldc.i4.s   16
      IL_02f3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_02f8:  ldloc.s    V_10
      IL_02fa:  ldc.i4.s   16
      IL_02fc:  beq        IL_031e

      IL_0301:  ldstr      "can't recv NotFound when next message has tag "
      IL_0306:  ldarg.0
      IL_0307:  volatile.
      IL_0309:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_030e:  box        [Corlib]System.Int32
      IL_0313:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0318:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_031d:  throw

      IL_031e:  ldarg.0
      IL_031f:  ldc.i4.0
      IL_0320:  volatile.
      IL_0322:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0327:  ldarg.0
      IL_0328:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::NotFoundPod0
      IL_032d:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound
      IL_0333:  ldarg.0
      IL_0334:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0339:  ldc.i4.8
      IL_033a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_033f:  br         IL_035a

      IL_0344:  ldstr      "can't recv NotFound in state "
      IL_0349:  ldarg.0
      IL_034a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_034f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0354:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0359:  throw

      IL_035a:  ret
    } // end of method Imp::RecvNotFound

    .method public instance void  RecvContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       195 (0xc3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_00ac

      IL_0018:  ldc.i4.0
      IL_0019:  stloc.1
      IL_001a:  ldarg.0
      IL_001b:  volatile.
      IL_001d:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0022:  stloc.2
      IL_0023:  ldloc.2
      IL_0024:  brtrue     IL_0039

      IL_0029:  ldarg.0
      IL_002a:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_002f:  stloc.1
      IL_0030:  ldarg.0
      IL_0031:  volatile.
      IL_0033:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0038:  stloc.2
      IL_0039:  ldloc.2
      IL_003a:  ldc.i4.0
      IL_003b:  ceq
      IL_003d:  brfalse    IL_005b

      IL_0042:  ldloc.1
      IL_0043:  brfalse    IL_0053

      IL_0048:  ldstr      "Peer is closed"
      IL_004d:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0052:  throw

      IL_0053:  ldarg.0
      IL_0054:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_0059:  br.s       IL_0018

      IL_005b:  ldarg.0
      IL_005c:  ldc.i4.2
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0062:  ldloc.2
      IL_0063:  ldc.i4.2
      IL_0064:  beq        IL_0086

      IL_0069:  ldstr      "can't recv ContractNotSupported when next message "
      + "has tag "
      IL_006e:  ldarg.0
      IL_006f:  volatile.
      IL_0071:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0076:  box        [Corlib]System.Int32
      IL_007b:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0080:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0085:  throw

      IL_0086:  ldarg.0
      IL_0087:  ldc.i4.0
      IL_0088:  volatile.
      IL_008a:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_008f:  ldarg.0
      IL_0090:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ContractNotSupportedPod0
      IL_0095:  initobj    [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported
      IL_009b:  ldarg.0
      IL_009c:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a1:  ldc.i4.2
      IL_00a2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a7:  br         IL_00c2

      IL_00ac:  ldstr      "can't recv ContractNotSupported in state "
      IL_00b1:  ldarg.0
      IL_00b2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::CurrentState()
      IL_00b7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00bc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c1:  throw

      IL_00c2:  ret
    } // end of method Imp::RecvContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Imp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Imp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Imp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Imp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Imp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Dispose()
      IL_0006:  ret
    } // end of method Imp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Imp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       663 (0x297)
      .maxstack  11
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               int32 V_19)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0050

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_0090

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00d8

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0120

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_0168

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   14
      IL_0037:  beq        IL_01b0

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   15
      IL_003f:  beq        IL_01f8

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.3
      IL_0046:  beq        IL_0240

      IL_004b:  br         IL_0288

      IL_0050:  ldc.i4.0
      IL_0051:  stloc.2
      IL_0052:  ldarg.0
      IL_0053:  volatile.
      IL_0055:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_005a:  stloc.3
      IL_005b:  ldloc.3
      IL_005c:  brtrue     IL_0071

      IL_0061:  ldarg.0
      IL_0062:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0067:  stloc.2
      IL_0068:  ldarg.0
      IL_0069:  volatile.
      IL_006b:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0070:  stloc.3
      IL_0071:  ldloc.3
      IL_0072:  ldc.i4.0
      IL_0073:  ceq
      IL_0075:  brfalse    IL_0088

      IL_007a:  ldloc.2
      IL_007b:  brfalse    IL_0088

      IL_0080:  ldc.i4.m1
      IL_0081:  stloc.s    V_4
      IL_0083:  br         IL_0290

      IL_0088:  ldloc.3
      IL_0089:  stloc.s    V_4
      IL_008b:  br         IL_0290

      IL_0090:  ldc.i4.0
      IL_0091:  stloc.s    V_5
      IL_0093:  ldarg.0
      IL_0094:  volatile.
      IL_0096:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_009b:  stloc.s    V_6
      IL_009d:  ldloc.s    V_6
      IL_009f:  brtrue     IL_00b6

      IL_00a4:  ldarg.0
      IL_00a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00aa:  stloc.s    V_5
      IL_00ac:  ldarg.0
      IL_00ad:  volatile.
      IL_00af:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00b4:  stloc.s    V_6
      IL_00b6:  ldloc.s    V_6
      IL_00b8:  ldc.i4.0
      IL_00b9:  ceq
      IL_00bb:  brfalse    IL_00cf

      IL_00c0:  ldloc.s    V_5
      IL_00c2:  brfalse    IL_00cf

      IL_00c7:  ldc.i4.m1
      IL_00c8:  stloc.s    V_4
      IL_00ca:  br         IL_0290

      IL_00cf:  ldloc.s    V_6
      IL_00d1:  stloc.s    V_4
      IL_00d3:  br         IL_0290

      IL_00d8:  ldc.i4.0
      IL_00d9:  stloc.s    V_7
      IL_00db:  ldarg.0
      IL_00dc:  volatile.
      IL_00de:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00e3:  stloc.s    V_8
      IL_00e5:  ldloc.s    V_8
      IL_00e7:  brtrue     IL_00fe

      IL_00ec:  ldarg.0
      IL_00ed:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00f2:  stloc.s    V_7
      IL_00f4:  ldarg.0
      IL_00f5:  volatile.
      IL_00f7:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_00fc:  stloc.s    V_8
      IL_00fe:  ldloc.s    V_8
      IL_0100:  ldc.i4.0
      IL_0101:  ceq
      IL_0103:  brfalse    IL_0117

      IL_0108:  ldloc.s    V_7
      IL_010a:  brfalse    IL_0117

      IL_010f:  ldc.i4.m1
      IL_0110:  stloc.s    V_4
      IL_0112:  br         IL_0290

      IL_0117:  ldloc.s    V_8
      IL_0119:  stloc.s    V_4
      IL_011b:  br         IL_0290

      IL_0120:  ldc.i4.0
      IL_0121:  stloc.s    V_9
      IL_0123:  ldarg.0
      IL_0124:  volatile.
      IL_0126:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_012b:  stloc.s    V_10
      IL_012d:  ldloc.s    V_10
      IL_012f:  brtrue     IL_0146

      IL_0134:  ldarg.0
      IL_0135:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_013a:  stloc.s    V_9
      IL_013c:  ldarg.0
      IL_013d:  volatile.
      IL_013f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0144:  stloc.s    V_10
      IL_0146:  ldloc.s    V_10
      IL_0148:  ldc.i4.0
      IL_0149:  ceq
      IL_014b:  brfalse    IL_015f

      IL_0150:  ldloc.s    V_9
      IL_0152:  brfalse    IL_015f

      IL_0157:  ldc.i4.m1
      IL_0158:  stloc.s    V_4
      IL_015a:  br         IL_0290

      IL_015f:  ldloc.s    V_10
      IL_0161:  stloc.s    V_4
      IL_0163:  br         IL_0290

      IL_0168:  ldc.i4.0
      IL_0169:  stloc.s    V_11
      IL_016b:  ldarg.0
      IL_016c:  volatile.
      IL_016e:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0173:  stloc.s    V_12
      IL_0175:  ldloc.s    V_12
      IL_0177:  brtrue     IL_018e

      IL_017c:  ldarg.0
      IL_017d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0182:  stloc.s    V_11
      IL_0184:  ldarg.0
      IL_0185:  volatile.
      IL_0187:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_018c:  stloc.s    V_12
      IL_018e:  ldloc.s    V_12
      IL_0190:  ldc.i4.0
      IL_0191:  ceq
      IL_0193:  brfalse    IL_01a7

      IL_0198:  ldloc.s    V_11
      IL_019a:  brfalse    IL_01a7

      IL_019f:  ldc.i4.m1
      IL_01a0:  stloc.s    V_4
      IL_01a2:  br         IL_0290

      IL_01a7:  ldloc.s    V_12
      IL_01a9:  stloc.s    V_4
      IL_01ab:  br         IL_0290

      IL_01b0:  ldc.i4.0
      IL_01b1:  stloc.s    V_13
      IL_01b3:  ldarg.0
      IL_01b4:  volatile.
      IL_01b6:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_01bb:  stloc.s    V_14
      IL_01bd:  ldloc.s    V_14
      IL_01bf:  brtrue     IL_01d6

      IL_01c4:  ldarg.0
      IL_01c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01ca:  stloc.s    V_13
      IL_01cc:  ldarg.0
      IL_01cd:  volatile.
      IL_01cf:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_01d4:  stloc.s    V_14
      IL_01d6:  ldloc.s    V_14
      IL_01d8:  ldc.i4.0
      IL_01d9:  ceq
      IL_01db:  brfalse    IL_01ef

      IL_01e0:  ldloc.s    V_13
      IL_01e2:  brfalse    IL_01ef

      IL_01e7:  ldc.i4.m1
      IL_01e8:  stloc.s    V_4
      IL_01ea:  br         IL_0290

      IL_01ef:  ldloc.s    V_14
      IL_01f1:  stloc.s    V_4
      IL_01f3:  br         IL_0290

      IL_01f8:  ldc.i4.0
      IL_01f9:  stloc.s    V_15
      IL_01fb:  ldarg.0
      IL_01fc:  volatile.
      IL_01fe:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0203:  stloc.s    V_16
      IL_0205:  ldloc.s    V_16
      IL_0207:  brtrue     IL_021e

      IL_020c:  ldarg.0
      IL_020d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0212:  stloc.s    V_15
      IL_0214:  ldarg.0
      IL_0215:  volatile.
      IL_0217:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_021c:  stloc.s    V_16
      IL_021e:  ldloc.s    V_16
      IL_0220:  ldc.i4.0
      IL_0221:  ceq
      IL_0223:  brfalse    IL_0237

      IL_0228:  ldloc.s    V_15
      IL_022a:  brfalse    IL_0237

      IL_022f:  ldc.i4.m1
      IL_0230:  stloc.s    V_4
      IL_0232:  br         IL_0290

      IL_0237:  ldloc.s    V_16
      IL_0239:  stloc.s    V_4
      IL_023b:  br         IL_0290

      IL_0240:  ldc.i4.0
      IL_0241:  stloc.s    V_17
      IL_0243:  ldarg.0
      IL_0244:  volatile.
      IL_0246:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_024b:  stloc.s    V_18
      IL_024d:  ldloc.s    V_18
      IL_024f:  brtrue     IL_0266

      IL_0254:  ldarg.0
      IL_0255:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025a:  stloc.s    V_17
      IL_025c:  ldarg.0
      IL_025d:  volatile.
      IL_025f:  ldfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0264:  stloc.s    V_18
      IL_0266:  ldloc.s    V_18
      IL_0268:  ldc.i4.0
      IL_0269:  ceq
      IL_026b:  brfalse    IL_027f

      IL_0270:  ldloc.s    V_17
      IL_0272:  brfalse    IL_027f

      IL_0277:  ldc.i4.m1
      IL_0278:  stloc.s    V_4
      IL_027a:  br         IL_0290

      IL_027f:  ldloc.s    V_18
      IL_0281:  stloc.s    V_4
      IL_0283:  br         IL_0290

      IL_0288:  ldc.i4.m1
      IL_0289:  stloc.s    V_4
      IL_028b:  br         IL_0290

      IL_0290:  ldloc.s    V_4
      IL_0292:  stloc.s    V_19
      IL_0294:  ldloc.s    V_4
      IL_0296:  ret
    } // end of method Imp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Imp::HeadMatches

    .method privatescope instance void  DeliverReady0$PST060001E3() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.3
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.3
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverReady0

    .method privatescope instance void  MarshallDeliverReady0$PST060001E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverReady0$PST060001E3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ReadyPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready::MarshallAll(uint8*,
                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                        int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverReady0

    .method privatescope instance void  DeliverProcessIDs0$PST060001E5(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) IDs) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessIDsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.5
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.5
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverProcessIDs0

    .method privatescope instance void  MarshallDeliverProcessIDs0$PST060001E6(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) IDs,
                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessIDs0$PST060001E5(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessIDsPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::MarshallAll(uint8*,
                                                                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                             int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverProcessIDs0

    .method privatescope instance void  DeliverProcessName0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) procName) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.7
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.7
      IL_0015:  volatile.
      IL_0017:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_001c:  ret
    } // end of method Imp::DeliverProcessName0

    .method privatescope instance void  MarshallDeliverProcessName0$PST060001E8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) procName,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessName0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverProcessName0

    .method privatescope instance void  DeliverProcessThreadIDs0$PST060001E9(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) tids) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessThreadIDsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   9
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverProcessThreadIDs0

    .method privatescope instance void  MarshallDeliverProcessThreadIDs0$PST060001EA(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) tids,
                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessThreadIDs0$PST060001E9(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessThreadIDsPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::MarshallAll(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverProcessThreadIDs0

    .method privatescope instance void  DeliverProcessTimes0$PST060001EB(int64 totalTime,
                                                                         int64 deadThreadTime,
                                                                         int64 deadThreadCount) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::totalTime
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::deadThreadTime
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::deadThreadCount
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   11
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   11
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverProcessTimes0

    .method privatescope instance void  MarshallDeliverProcessTimes0$PST060001EC(int64 totalTime,
                                                                                 int64 deadThreadTime,
                                                                                 int64 deadThreadCount,
                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessTimes0$PST060001EB(int64,
                                                                                                                                           int64,
                                                                                                                                           int64)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessTimesPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverProcessTimes0

    .method privatescope instance void  DeliverProcessGcStats0$PST060001ED(int32 count,
                                                                           int64 time,
                                                                           int64 bytes) cil managed
    {
      // Code size       55 (0x37)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::count
      IL_000c:  ldarg.0
      IL_000d:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_0012:  ldarg.2
      IL_0013:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::time
      IL_0018:  ldarg.0
      IL_0019:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_001e:  ldarg.3
      IL_001f:  stfld      int64 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::bytes
      IL_0024:  ldarg.0
      IL_0025:  ldc.i4.s   13
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_002c:  ldarg.0
      IL_002d:  ldc.i4.s   13
      IL_002f:  volatile.
      IL_0031:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0036:  ret
    } // end of method Imp::DeliverProcessGcStats0

    .method privatescope instance void  MarshallDeliverProcessGcStats0$PST060001EE(int32 count,
                                                                                   int64 time,
                                                                                   int64 bytes,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  ldarg.3
      IL_0004:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessGcStats0$PST060001ED(int32,
                                                                                                                                             int64,
                                                                                                                                             int64)
      IL_0009:  ldarg.0
      IL_000a:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ProcessGcStatsPod0
      IL_000f:  ldarg.0
      IL_0010:  ldarg.s    endpoint
      IL_0012:  ldarg.0
      IL_0013:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method Imp::MarshallDeliverProcessGcStats0

    .method privatescope instance void  DeliverParentID0$PST060001EF(int32 parentID) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ParentIDPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID::parentID
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   15
      IL_0017:  volatile.
      IL_0019:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_001e:  ret
    } // end of method Imp::DeliverParentID0

    .method privatescope instance void  MarshallDeliverParentID0$PST060001F0(int32 parentID,
                                                                             valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverParentID0$PST060001EF(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ParentIDPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_001a:  ret
    } // end of method Imp::MarshallDeliverParentID0

    .method privatescope instance void  DeliverNotFound0$PST060001F1() cil managed
    {
      // Code size       19 (0x13)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.s   16
      IL_0003:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0008:  ldarg.0
      IL_0009:  ldc.i4.s   16
      IL_000b:  volatile.
      IL_000d:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0012:  ret
    } // end of method Imp::DeliverNotFound0

    .method privatescope instance void  MarshallDeliverNotFound0$PST060001F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverNotFound0$PST060001F1()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::NotFoundPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound::MarshallAll(uint8*,
                                                                                                                           valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                           int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverNotFound0

    .method privatescope instance void  DeliverContractNotSupported0$PST060001F3() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.2
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.2
      IL_0009:  volatile.
      IL_000b:  stfld      int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0010:  ret
    } // end of method Imp::DeliverContractNotSupported0

    .method privatescope instance void  MarshallDeliverContractNotSupported0$PST060001F4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverContractNotSupported0$PST060001F3()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::ContractNotSupportedPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 modreq([Corlib]System.Runtime.CompilerServices.IsVolatile) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::TagPod0
      IL_0014:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/ContractNotSupported::MarshallAll(uint8*,
                                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Imp::MarshallDeliverContractNotSupported0

  } // end of class Imp

  .class sequential ansi nested public Exp
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp
         implements [Corlib]Microsoft.SingSharp.ITracked,
                    [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IRepStruct
  {
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs GetProcessIDsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName GetProcessNamePod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs GetProcessThreadIDsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes GetProcessTimesPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats GetProcessGcStatsPod0
    .field family valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID GetParentIDPod0
    .method famorassem specialname rtspecialname 
            instance void  .ctor(int32 expInitialState) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::.ctor(int32)
      IL_0007:  ret
    } // end of method Exp::.ctor

    .method public instance bool  InState(int32 state) cil managed
    {
      .custom instance void [System.Compiler.Runtime]Microsoft.Contracts.PureAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       70 (0x46)
      .maxstack  4
      .locals init (int32 V_0,
               bool V_1,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack V_2,
               bool V_3)
      IL_0000:  ldarg.1
      IL_0001:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::CanonicalState$PST0600001A(int32)
      IL_0006:  stloc.0
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_000d:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_0012:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::CanonicalState$PST0600001A(int32)
      IL_0017:  ldloc.0
      IL_0018:  ceq
      IL_001a:  brfalse    IL_0026

      IL_001f:  ldc.i4.1
      IL_0020:  stloc.1
      IL_0021:  br         IL_0042

      IL_0026:  ldarg.0
      IL_0027:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_002c:  ldobj      [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack
      IL_0031:  stloc.2
      IL_0032:  ldloca.s   V_2
      IL_0034:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_0039:  ldloc.0
      IL_003a:  ceq
      IL_003c:  stloc.1
      IL_003d:  br         IL_0042

      IL_0042:  ldloc.1
      IL_0043:  stloc.3
      IL_0044:  ldloc.1
      IL_0045:  ret
    } // end of method Exp::InState

    .method public instance string  CurrentState() cil managed
    {
      // Code size       291 (0x123)
      .maxstack  4
      .locals init (int32 V_0,
               string V_1,
               string V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_007a

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  beq        IL_0085

      IL_001c:  ldloc.0
      IL_001d:  ldc.i4.s   13
      IL_001f:  beq        IL_0090

      IL_0024:  ldloc.0
      IL_0025:  ldc.i4.s   12
      IL_0027:  beq        IL_009b

      IL_002c:  ldloc.0
      IL_002d:  ldc.i4.s   11
      IL_002f:  beq        IL_00a6

      IL_0034:  ldloc.0
      IL_0035:  ldc.i4.s   10
      IL_0037:  beq        IL_00b1

      IL_003c:  ldloc.0
      IL_003d:  ldc.i4.s   9
      IL_003f:  beq        IL_00bc

      IL_0044:  ldloc.0
      IL_0045:  ldc.i4.8
      IL_0046:  beq        IL_00c7

      IL_004b:  ldloc.0
      IL_004c:  ldc.i4.7
      IL_004d:  beq        IL_00d2

      IL_0052:  ldloc.0
      IL_0053:  ldc.i4.6
      IL_0054:  beq        IL_00dd

      IL_0059:  ldloc.0
      IL_005a:  ldc.i4.5
      IL_005b:  beq        IL_00e8

      IL_0060:  ldloc.0
      IL_0061:  ldc.i4.4
      IL_0062:  beq        IL_00f3

      IL_0067:  ldloc.0
      IL_0068:  ldc.i4.3
      IL_0069:  beq        IL_00fe

      IL_006e:  ldloc.0
      IL_006f:  ldc.i4.2
      IL_0070:  beq        IL_0109

      IL_0075:  br         IL_0114

      IL_007a:  ldstr      "ReadyState"
      IL_007f:  stloc.1
      IL_0080:  br         IL_011f

      IL_0085:  ldstr      "ReadyState$0"
      IL_008a:  stloc.1
      IL_008b:  br         IL_011f

      IL_0090:  ldstr      "ReadyState$1"
      IL_0095:  stloc.1
      IL_0096:  br         IL_011f

      IL_009b:  ldstr      "ReadyState$2"
      IL_00a0:  stloc.1
      IL_00a1:  br         IL_011f

      IL_00a6:  ldstr      "ReadyState$3"
      IL_00ab:  stloc.1
      IL_00ac:  br         IL_011f

      IL_00b1:  ldstr      "ReadyState$4"
      IL_00b6:  stloc.1
      IL_00b7:  br         IL_011f

      IL_00bc:  ldstr      "ReadyState$5"
      IL_00c1:  stloc.1
      IL_00c2:  br         IL_011f

      IL_00c7:  ldstr      "ReadyState$6"
      IL_00cc:  stloc.1
      IL_00cd:  br         IL_011f

      IL_00d2:  ldstr      "ReadyState$7"
      IL_00d7:  stloc.1
      IL_00d8:  br         IL_011f

      IL_00dd:  ldstr      "ReadyState$8"
      IL_00e2:  stloc.1
      IL_00e3:  br         IL_011f

      IL_00e8:  ldstr      "ReadyState$9"
      IL_00ed:  stloc.1
      IL_00ee:  br         IL_011f

      IL_00f3:  ldstr      "ReadyState$10"
      IL_00f8:  stloc.1
      IL_00f9:  br         IL_011f

      IL_00fe:  ldstr      "Start"
      IL_0103:  stloc.1
      IL_0104:  br         IL_011f

      IL_0109:  ldstr      "DoneState"
      IL_010e:  stloc.1
      IL_010f:  br         IL_011f

      IL_0114:  ldstr      "<protocol terminated>"
      IL_0119:  stloc.1
      IL_011a:  br         IL_011f

      IL_011f:  ldloc.1
      IL_0120:  stloc.2
      IL_0121:  ldloc.1
      IL_0122:  ret
    } // end of method Exp::CurrentState

    .method public instance void  SendReady() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 03 00 00 00 00 00 ) 
      // Code size       124 (0x7c)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0065

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverReady0$PST060001E3()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverReady0$PST060001E4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.s   15
      IL_005b:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0060:  br         IL_007b

      IL_0065:  ldstr      "can't send Ready in state "
      IL_006a:  ldarg.0
      IL_006b:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_0070:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0075:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007a:  throw

      IL_007b:  ret
    } // end of method Exp::SendReady

    .method public instance void  RecvGetProcessIDs() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 04 00 00 00 00 00 ) 
      // Code size       197 (0xc5)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ae

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.4
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.4
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetProcessIDs when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.0
      IL_0088:  ldc.i4.0
      IL_0089:  volatile.
      IL_008b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0090:  ldarg.0
      IL_0091:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessIDsPod0
      IL_0096:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs
      IL_009c:  ldarg.0
      IL_009d:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00a2:  ldc.i4.s   14
      IL_00a4:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00a9:  br         IL_00c4

      IL_00ae:  ldstr      "can't recv GetProcessIDs in state "
      IL_00b3:  ldarg.0
      IL_00b4:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_00b9:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00be:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00c3:  throw

      IL_00c4:  ret
    } // end of method Exp::RecvGetProcessIDs

    .method public instance void  SendProcessIDs(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) IDs) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 05 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessIDs0$PST060001E5(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverProcessIDs0$PST060001E6(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   15
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send ProcessIDs in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendProcessIDs

    .method public instance void  RecvGetProcessName([out] int32& procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 06 00 00 00 00 00 ) 
      // Code size       209 (0xd1)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00ba

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.6
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.6
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetProcessName when next message has tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessNamePod0
      IL_008e:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName::procID
      IL_0093:  stind.i4
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessNamePod0
      IL_00a3:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.7
      IL_00b0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b5:  br         IL_00d0

      IL_00ba:  ldstr      "can't recv GetProcessName in state "
      IL_00bf:  ldarg.0
      IL_00c0:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_00c5:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00ca:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00cf:  throw

      IL_00d0:  ret
    } // end of method Exp::RecvGetProcessName

    .method public instance void  SendProcessName(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) procName) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 07 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       137 (0x89)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.7
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0072

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_004e

      IL_0031:  ldarg.1
      IL_0032:  stloc.s    V_5
      IL_0034:  ldloc.s    V_4
      IL_0036:  ldloc.s    V_5
      IL_0038:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003d:  ldloc.3
      IL_003e:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0043:  ldarg.1
      IL_0044:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessName0$PST060001E7(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0049:  br         IL_005b

      IL_004e:  ldloc.3
      IL_004f:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0054:  ldarg.1
      IL_0055:  ldarg.0
      IL_0056:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverProcessName0$PST060001E8(char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005b:  ldarg.0
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0061:  ldarg.0
      IL_0062:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0067:  ldc.i4.6
      IL_0068:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006d:  br         IL_0088

      IL_0072:  ldstr      "can't send ProcessName in state "
      IL_0077:  ldarg.0
      IL_0078:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_007d:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0082:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0087:  throw

      IL_0088:  ret
    } // end of method Exp::SendProcessName

    .method public instance void  RecvGetProcessThreadIDs([out] int32& procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 08 00 00 00 00 00 ) 
      // Code size       210 (0xd2)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bb

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.8
      IL_005e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0063:  ldloc.2
      IL_0064:  ldc.i4.8
      IL_0065:  beq        IL_0087

      IL_006a:  ldstr      "can't recv GetProcessThreadIDs when next message h"
      + "as tag "
      IL_006f:  ldarg.0
      IL_0070:  volatile.
      IL_0072:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0077:  box        [Corlib]System.Int32
      IL_007c:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0081:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0086:  throw

      IL_0087:  ldarg.1
      IL_0088:  ldarg.0
      IL_0089:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessThreadIDsPod0
      IL_008e:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs::procID
      IL_0093:  stind.i4
      IL_0094:  ldarg.0
      IL_0095:  ldc.i4.0
      IL_0096:  volatile.
      IL_0098:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009d:  ldarg.0
      IL_009e:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessThreadIDsPod0
      IL_00a3:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs
      IL_00a9:  ldarg.0
      IL_00aa:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00af:  ldc.i4.s   13
      IL_00b1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b6:  br         IL_00d1

      IL_00bb:  ldstr      "can't recv GetProcessThreadIDs in state "
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_00c6:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cb:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d0:  throw

      IL_00d1:  ret
    } // end of method Exp::RecvGetProcessThreadIDs

    .method public instance void  SendProcessThreadIDs(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) tids) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 09 00 00 00 00 00 ) 
      .param [1]
      .custom instance void [Corlib]Microsoft.SingSharp.ClaimsAttribute::.ctor() = ( 01 00 00 00 ) 
      // Code size       139 (0x8b)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) V_5)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   13
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_0074

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_004f

      IL_0032:  ldarg.1
      IL_0033:  stloc.s    V_5
      IL_0035:  ldloc.s    V_4
      IL_0037:  ldloc.s    V_5
      IL_0039:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_003e:  ldloc.3
      IL_003f:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0044:  ldarg.1
      IL_0045:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessThreadIDs0$PST060001E9(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_004a:  br         IL_005c

      IL_004f:  ldloc.3
      IL_0050:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0055:  ldarg.1
      IL_0056:  ldarg.0
      IL_0057:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverProcessThreadIDs0$PST060001EA(int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_005c:  ldarg.0
      IL_005d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0062:  ldarg.0
      IL_0063:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0068:  ldc.i4.s   12
      IL_006a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_006f:  br         IL_008a

      IL_0074:  ldstr      "can't send ProcessThreadIDs in state "
      IL_0079:  ldarg.0
      IL_007a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_007f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0084:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0089:  throw

      IL_008a:  ret
    } // end of method Exp::SendProcessThreadIDs

    .method public instance void  RecvGetProcessTimes([out] int32& procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0A 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   10
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   10
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetProcessTimes when next message has t"
      + "ag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessTimesPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes::procID
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessTimesPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   11
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv GetProcessTimes in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvGetProcessTimes

    .method public instance void  SendProcessTimes(int64 totalTime,
                                                   int64 deadThreadTime,
                                                   int64 deadThreadCount) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0B 00 00 00 00 00 ) 
      // Code size       131 (0x83)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006c

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0045

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  ldarg.3
      IL_003b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessTimes0$PST060001EB(int64,
                                                                                                                                           int64,
                                                                                                                                           int64)
      IL_0040:  br         IL_0054

      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_004b:  ldarg.1
      IL_004c:  ldarg.2
      IL_004d:  ldarg.3
      IL_004e:  ldarg.0
      IL_004f:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverProcessTimes0$PST060001EC(int64,
                                                                                                                                                   int64,
                                                                                                                                                   int64,
                                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005a:  ldarg.0
      IL_005b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0060:  ldc.i4.s   10
      IL_0062:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0067:  br         IL_0082

      IL_006c:  ldstr      "can't send ProcessTimes in state "
      IL_0071:  ldarg.0
      IL_0072:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_0077:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007c:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0081:  throw

      IL_0082:  ret
    } // end of method Exp::SendProcessTimes

    .method public instance void  RecvGetProcessGcStats([out] int32& procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0C 00 00 00 00 00 ) 
      // Code size       212 (0xd4)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bd

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   12
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   12
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetProcessGcStats when next message has"
      + " tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessGcStatsPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats::procID
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessGcStatsPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.s   9
      IL_00b3:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b8:  br         IL_00d3

      IL_00bd:  ldstr      "can't recv GetProcessGcStats in state "
      IL_00c2:  ldarg.0
      IL_00c3:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_00c8:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cd:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d2:  throw

      IL_00d3:  ret
    } // end of method Exp::RecvGetProcessGcStats

    .method public instance void  SendProcessGcStats(int32 count,
                                                     int64 time,
                                                     int64 bytes) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0D 00 00 00 00 00 ) 
      // Code size       130 (0x82)
      .maxstack  11
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   9
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_006b

      IL_0019:  ldarg.0
      IL_001a:  ldloca.s   V_1
      IL_001c:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0021:  stloc.2
      IL_0022:  ldloc.2
      IL_0023:  stloc.3
      IL_0024:  ldloc.3
      IL_0025:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_002a:  stloc.s    V_4
      IL_002c:  ldloc.1
      IL_002d:  brtrue     IL_0045

      IL_0032:  ldloc.3
      IL_0033:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0038:  ldarg.1
      IL_0039:  ldarg.2
      IL_003a:  ldarg.3
      IL_003b:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverProcessGcStats0$PST060001ED(int32,
                                                                                                                                             int64,
                                                                                                                                             int64)
      IL_0040:  br         IL_0054

      IL_0045:  ldloc.3
      IL_0046:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_004b:  ldarg.1
      IL_004c:  ldarg.2
      IL_004d:  ldarg.3
      IL_004e:  ldarg.0
      IL_004f:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverProcessGcStats0$PST060001EE(int32,
                                                                                                                                                     int64,
                                                                                                                                                     int64,
                                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_005a:  ldarg.0
      IL_005b:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0060:  ldc.i4.8
      IL_0061:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0066:  br         IL_0081

      IL_006b:  ldstr      "can't send ProcessGcStats in state "
      IL_0070:  ldarg.0
      IL_0071:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_0076:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_007b:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0080:  throw

      IL_0081:  ret
    } // end of method Exp::SendProcessGcStats

    .method public instance void  RecvGetParentID([out] int32& procID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.ReceiveAttribute::.ctor(int32) = ( 01 00 0E 00 00 00 00 00 ) 
      // Code size       211 (0xd3)
      .maxstack  9
      .locals init (int32 V_0,
               bool V_1,
               int32 V_2)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   15
      IL_000f:  beq        IL_0019

      IL_0014:  br         IL_00bc

      IL_0019:  ldc.i4.0
      IL_001a:  stloc.1
      IL_001b:  ldarg.0
      IL_001c:  volatile.
      IL_001e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0023:  stloc.2
      IL_0024:  ldloc.2
      IL_0025:  brtrue     IL_003a

      IL_002a:  ldarg.0
      IL_002b:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0030:  stloc.1
      IL_0031:  ldarg.0
      IL_0032:  volatile.
      IL_0034:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0039:  stloc.2
      IL_003a:  ldloc.2
      IL_003b:  ldc.i4.0
      IL_003c:  ceq
      IL_003e:  brfalse    IL_005c

      IL_0043:  ldloc.1
      IL_0044:  brfalse    IL_0054

      IL_0049:  ldstr      "Peer is closed"
      IL_004e:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0053:  throw

      IL_0054:  ldarg.0
      IL_0055:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Wait()
      IL_005a:  br.s       IL_0019

      IL_005c:  ldarg.0
      IL_005d:  ldc.i4.s   14
      IL_005f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::RetrieveHookInternal(int32)
      IL_0064:  ldloc.2
      IL_0065:  ldc.i4.s   14
      IL_0067:  beq        IL_0089

      IL_006c:  ldstr      "can't recv GetParentID when next message has tag "
      IL_0071:  ldarg.0
      IL_0072:  volatile.
      IL_0074:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0079:  box        [Corlib]System.Int32
      IL_007e:  call       string [Corlib]System.String::Concat(object,
                                                                object)
      IL_0083:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0088:  throw

      IL_0089:  ldarg.1
      IL_008a:  ldarg.0
      IL_008b:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetParentIDPod0
      IL_0090:  ldfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID::procID
      IL_0095:  stind.i4
      IL_0096:  ldarg.0
      IL_0097:  ldc.i4.0
      IL_0098:  volatile.
      IL_009a:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009f:  ldarg.0
      IL_00a0:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetParentIDPod0
      IL_00a5:  initobj    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID
      IL_00ab:  ldarg.0
      IL_00ac:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00b1:  ldc.i4.5
      IL_00b2:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00b7:  br         IL_00d2

      IL_00bc:  ldstr      "can't recv GetParentID in state "
      IL_00c1:  ldarg.0
      IL_00c2:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_00c7:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_00cc:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_00d1:  throw

      IL_00d2:  ret
    } // end of method Exp::RecvGetParentID

    .method public instance void  SendParentID(int32 parentID) cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 0F 00 00 00 00 00 ) 
      // Code size       125 (0x7d)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.5
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0066

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0042

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0037:  ldarg.1
      IL_0038:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverParentID0$PST060001EF(int32)
      IL_003d:  br         IL_004f

      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0048:  ldarg.1
      IL_0049:  ldarg.0
      IL_004a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverParentID0$PST060001F0(int32,
                                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004f:  ldarg.0
      IL_0050:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0055:  ldarg.0
      IL_0056:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_005b:  ldc.i4.4
      IL_005c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0061:  br         IL_007c

      IL_0066:  ldstr      "can't send ParentID in state "
      IL_006b:  ldarg.0
      IL_006c:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_0071:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0076:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_007b:  throw

      IL_007c:  ret
    } // end of method Exp::SendParentID

    .method public instance void  SendNotFound() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 10 00 00 00 00 00 ) 
      // Code size       488 (0x1e8)
      .maxstack  30
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4,
               bool V_5,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_6,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_7,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_8,
               bool V_9,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_10,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_11,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_12,
               bool V_13,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_14,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_15,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_16,
               bool V_17,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_18,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_19,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_20)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.s   11
      IL_000f:  beq        IL_0037

      IL_0014:  ldloc.0
      IL_0015:  ldc.i4.5
      IL_0016:  beq        IL_0084

      IL_001b:  ldloc.0
      IL_001c:  ldc.i4.s   13
      IL_001e:  beq        IL_00d7

      IL_0023:  ldloc.0
      IL_0024:  ldc.i4.7
      IL_0025:  beq        IL_012b

      IL_002a:  ldloc.0
      IL_002b:  ldc.i4.s   9
      IL_002d:  beq        IL_017e

      IL_0032:  br         IL_01d1

      IL_0037:  ldarg.0
      IL_0038:  ldloca.s   V_1
      IL_003a:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_003f:  stloc.2
      IL_0040:  ldloc.2
      IL_0041:  stloc.3
      IL_0042:  ldloc.3
      IL_0043:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0048:  stloc.s    V_4
      IL_004a:  ldloc.1
      IL_004b:  brtrue     IL_0060

      IL_0050:  ldloc.3
      IL_0051:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0056:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverNotFound0$PST060001F1()
      IL_005b:  br         IL_006c

      IL_0060:  ldloc.3
      IL_0061:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0066:  ldarg.0
      IL_0067:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverNotFound0$PST060001F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_006c:  ldarg.0
      IL_006d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0072:  ldarg.0
      IL_0073:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0078:  ldc.i4.s   10
      IL_007a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_007f:  br         IL_01e7

      IL_0084:  ldarg.0
      IL_0085:  ldloca.s   V_5
      IL_0087:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_008c:  stloc.s    V_6
      IL_008e:  ldloc.s    V_6
      IL_0090:  stloc.s    V_7
      IL_0092:  ldloc.s    V_7
      IL_0094:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0099:  stloc.s    V_8
      IL_009b:  ldloc.s    V_5
      IL_009d:  brtrue     IL_00b3

      IL_00a2:  ldloc.s    V_7
      IL_00a4:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_00a9:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverNotFound0$PST060001F1()
      IL_00ae:  br         IL_00c0

      IL_00b3:  ldloc.s    V_7
      IL_00b5:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_00ba:  ldarg.0
      IL_00bb:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverNotFound0$PST060001F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_00c0:  ldarg.0
      IL_00c1:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_00c6:  ldarg.0
      IL_00c7:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_00cc:  ldc.i4.4
      IL_00cd:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_00d2:  br         IL_01e7

      IL_00d7:  ldarg.0
      IL_00d8:  ldloca.s   V_9
      IL_00da:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_00df:  stloc.s    V_10
      IL_00e1:  ldloc.s    V_10
      IL_00e3:  stloc.s    V_11
      IL_00e5:  ldloc.s    V_11
      IL_00e7:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_00ec:  stloc.s    V_12
      IL_00ee:  ldloc.s    V_9
      IL_00f0:  brtrue     IL_0106

      IL_00f5:  ldloc.s    V_11
      IL_00f7:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_00fc:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverNotFound0$PST060001F1()
      IL_0101:  br         IL_0113

      IL_0106:  ldloc.s    V_11
      IL_0108:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_010d:  ldarg.0
      IL_010e:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverNotFound0$PST060001F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0113:  ldarg.0
      IL_0114:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0119:  ldarg.0
      IL_011a:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_011f:  ldc.i4.s   12
      IL_0121:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0126:  br         IL_01e7

      IL_012b:  ldarg.0
      IL_012c:  ldloca.s   V_13
      IL_012e:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0133:  stloc.s    V_14
      IL_0135:  ldloc.s    V_14
      IL_0137:  stloc.s    V_15
      IL_0139:  ldloc.s    V_15
      IL_013b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0140:  stloc.s    V_16
      IL_0142:  ldloc.s    V_13
      IL_0144:  brtrue     IL_015a

      IL_0149:  ldloc.s    V_15
      IL_014b:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0150:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverNotFound0$PST060001F1()
      IL_0155:  br         IL_0167

      IL_015a:  ldloc.s    V_15
      IL_015c:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0161:  ldarg.0
      IL_0162:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverNotFound0$PST060001F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0167:  ldarg.0
      IL_0168:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_016d:  ldarg.0
      IL_016e:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0173:  ldc.i4.6
      IL_0174:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_0179:  br         IL_01e7

      IL_017e:  ldarg.0
      IL_017f:  ldloca.s   V_17
      IL_0181:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0186:  stloc.s    V_18
      IL_0188:  ldloc.s    V_18
      IL_018a:  stloc.s    V_19
      IL_018c:  ldloc.s    V_19
      IL_018e:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0193:  stloc.s    V_20
      IL_0195:  ldloc.s    V_17
      IL_0197:  brtrue     IL_01ad

      IL_019c:  ldloc.s    V_19
      IL_019e:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_01a3:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverNotFound0$PST060001F1()
      IL_01a8:  br         IL_01ba

      IL_01ad:  ldloc.s    V_19
      IL_01af:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_01b4:  ldarg.0
      IL_01b5:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverNotFound0$PST060001F2(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_01ba:  ldarg.0
      IL_01bb:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_01c0:  ldarg.0
      IL_01c1:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_01c6:  ldc.i4.8
      IL_01c7:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_01cc:  br         IL_01e7

      IL_01d1:  ldstr      "can't send NotFound in state "
      IL_01d6:  ldarg.0
      IL_01d7:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_01dc:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_01e1:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_01e6:  throw

      IL_01e7:  ret
    } // end of method Exp::SendNotFound

    .method public instance void  SendContractNotSupported() cil managed
    {
      .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.SendAttribute::.ctor(int32) = ( 01 00 02 00 00 00 00 00 ) 
      // Code size       123 (0x7b)
      .maxstack  10
      .locals init (int32 V_0,
               bool V_1,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_2,
               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_3,
               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& V_4)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  ldc.i4.3
      IL_000e:  beq        IL_0018

      IL_0013:  br         IL_0064

      IL_0018:  ldarg.0
      IL_0019:  ldloca.s   V_1
      IL_001b:  call       instance valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::GetPeer(bool&)
      IL_0020:  stloc.2
      IL_0021:  ldloc.2
      IL_0022:  stloc.3
      IL_0023:  ldloc.3
      IL_0024:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0029:  stloc.s    V_4
      IL_002b:  ldloc.1
      IL_002c:  brtrue     IL_0041

      IL_0031:  ldloc.3
      IL_0032:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::DeliverContractNotSupported0$PST060001F3()
      IL_003c:  br         IL_004d

      IL_0041:  ldloc.3
      IL_0042:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
      IL_0047:  ldarg.0
      IL_0048:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::MarshallDeliverContractNotSupported0$PST060001F4(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_004d:  ldarg.0
      IL_004e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::NotifyPeer()
      IL_0053:  ldarg.0
      IL_0054:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0059:  ldc.i4.2
      IL_005a:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
      IL_005f:  br         IL_007a

      IL_0064:  ldstr      "can't send ContractNotSupported in state "
      IL_0069:  ldarg.0
      IL_006a:  call       instance string Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::CurrentState()
      IL_006f:  call       string [Corlib]System.String::Concat(string,
                                                                string)
      IL_0074:  newobj     instance void [Corlib]System.ArgumentException::.ctor(string)
      IL_0079:  throw

      IL_007a:  ret
    } // end of method Exp::SendContractNotSupported

    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       8 (0x8)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0007:  ret
    } // end of method Exp::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_0019

      IL_0006:  ldarg.1
      IL_0007:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
      IL_000c:  ldarg.0
      IL_000d:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0012:  ldarg.0
      IL_0013:  ldarg.1
      IL_0014:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0019:  ret
    } // end of method Exp::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       45 (0x2d)
      .maxstack  5
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_002c

      IL_0006:  ldarg.1
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0025

      IL_0012:  ldarg.1
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_001f:  ldloc.1
      IL_0020:  ldc.i4.1
      IL_0021:  add
      IL_0022:  stloc.1
      IL_0023:  br.s       IL_000b

      IL_0025:  ldarg.0
      IL_0026:  ldarg.1
      IL_0027:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_002c:  ret
    } // end of method Exp::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from) cil managed
    {
      // Code size       18 (0x12)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  ldarg.2
      IL_0003:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::MarshallAll(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&)
      IL_0008:  ldarg.0
      IL_0009:  ldarg.1
      IL_000a:  ldarg.2
      IL_000b:  ldarg.0
      IL_000c:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0011:  ret
    } // end of method Exp::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       46 (0x2e)
      .maxstack  6
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_002d

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_002d

      IL_0012:  ldarg.3
      IL_0013:  ldloc.1
      IL_0014:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp
      IL_0019:  ldarg.0
      IL_001a:  ldarg.1
      IL_001b:  ldarg.3
      IL_001c:  ldc.i4.0
      IL_001d:  ldelema    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp
      IL_0022:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::MarshallContent(uint8*,
                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                          uint8*)
      IL_0027:  ldloc.1
      IL_0028:  ldc.i4.1
      IL_0029:  add
      IL_002a:  stloc.1
      IL_002b:  br.s       IL_000b

      IL_002d:  ret
    } // end of method Exp::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::Dispose()
      IL_0006:  ret
    } // end of method Exp::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Exp::Release

    .method family instance int32  Peek() cil managed
    {
      // Code size       663 (0x297)
      .maxstack  11
      .locals init (int32 V_0,
               int32 V_1,
               bool V_2,
               int32 V_3,
               int32 V_4,
               bool V_5,
               int32 V_6,
               bool V_7,
               int32 V_8,
               bool V_9,
               int32 V_10,
               bool V_11,
               int32 V_12,
               bool V_13,
               int32 V_14,
               bool V_15,
               int32 V_16,
               bool V_17,
               int32 V_18,
               int32 V_19)
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::stateStack
      IL_0006:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
      IL_000b:  stloc.0
      IL_000c:  ldloc.0
      IL_000d:  stloc.1
      IL_000e:  ldloc.1
      IL_000f:  ldc.i4.5
      IL_0010:  beq        IL_0050

      IL_0015:  ldloc.1
      IL_0016:  ldc.i4.7
      IL_0017:  beq        IL_0090

      IL_001c:  ldloc.1
      IL_001d:  ldc.i4.s   9
      IL_001f:  beq        IL_00d8

      IL_0024:  ldloc.1
      IL_0025:  ldc.i4.s   11
      IL_0027:  beq        IL_0120

      IL_002c:  ldloc.1
      IL_002d:  ldc.i4.s   13
      IL_002f:  beq        IL_0168

      IL_0034:  ldloc.1
      IL_0035:  ldc.i4.s   14
      IL_0037:  beq        IL_01b0

      IL_003c:  ldloc.1
      IL_003d:  ldc.i4.s   15
      IL_003f:  beq        IL_01f8

      IL_0044:  ldloc.1
      IL_0045:  ldc.i4.3
      IL_0046:  beq        IL_0240

      IL_004b:  br         IL_0288

      IL_0050:  ldc.i4.0
      IL_0051:  stloc.2
      IL_0052:  ldarg.0
      IL_0053:  volatile.
      IL_0055:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_005a:  stloc.3
      IL_005b:  ldloc.3
      IL_005c:  brtrue     IL_0071

      IL_0061:  ldarg.0
      IL_0062:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0067:  stloc.2
      IL_0068:  ldarg.0
      IL_0069:  volatile.
      IL_006b:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0070:  stloc.3
      IL_0071:  ldloc.3
      IL_0072:  ldc.i4.0
      IL_0073:  ceq
      IL_0075:  brfalse    IL_0088

      IL_007a:  ldloc.2
      IL_007b:  brfalse    IL_0088

      IL_0080:  ldc.i4.m1
      IL_0081:  stloc.s    V_4
      IL_0083:  br         IL_0290

      IL_0088:  ldloc.3
      IL_0089:  stloc.s    V_4
      IL_008b:  br         IL_0290

      IL_0090:  ldc.i4.0
      IL_0091:  stloc.s    V_5
      IL_0093:  ldarg.0
      IL_0094:  volatile.
      IL_0096:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_009b:  stloc.s    V_6
      IL_009d:  ldloc.s    V_6
      IL_009f:  brtrue     IL_00b6

      IL_00a4:  ldarg.0
      IL_00a5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00aa:  stloc.s    V_5
      IL_00ac:  ldarg.0
      IL_00ad:  volatile.
      IL_00af:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00b4:  stloc.s    V_6
      IL_00b6:  ldloc.s    V_6
      IL_00b8:  ldc.i4.0
      IL_00b9:  ceq
      IL_00bb:  brfalse    IL_00cf

      IL_00c0:  ldloc.s    V_5
      IL_00c2:  brfalse    IL_00cf

      IL_00c7:  ldc.i4.m1
      IL_00c8:  stloc.s    V_4
      IL_00ca:  br         IL_0290

      IL_00cf:  ldloc.s    V_6
      IL_00d1:  stloc.s    V_4
      IL_00d3:  br         IL_0290

      IL_00d8:  ldc.i4.0
      IL_00d9:  stloc.s    V_7
      IL_00db:  ldarg.0
      IL_00dc:  volatile.
      IL_00de:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00e3:  stloc.s    V_8
      IL_00e5:  ldloc.s    V_8
      IL_00e7:  brtrue     IL_00fe

      IL_00ec:  ldarg.0
      IL_00ed:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_00f2:  stloc.s    V_7
      IL_00f4:  ldarg.0
      IL_00f5:  volatile.
      IL_00f7:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_00fc:  stloc.s    V_8
      IL_00fe:  ldloc.s    V_8
      IL_0100:  ldc.i4.0
      IL_0101:  ceq
      IL_0103:  brfalse    IL_0117

      IL_0108:  ldloc.s    V_7
      IL_010a:  brfalse    IL_0117

      IL_010f:  ldc.i4.m1
      IL_0110:  stloc.s    V_4
      IL_0112:  br         IL_0290

      IL_0117:  ldloc.s    V_8
      IL_0119:  stloc.s    V_4
      IL_011b:  br         IL_0290

      IL_0120:  ldc.i4.0
      IL_0121:  stloc.s    V_9
      IL_0123:  ldarg.0
      IL_0124:  volatile.
      IL_0126:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_012b:  stloc.s    V_10
      IL_012d:  ldloc.s    V_10
      IL_012f:  brtrue     IL_0146

      IL_0134:  ldarg.0
      IL_0135:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_013a:  stloc.s    V_9
      IL_013c:  ldarg.0
      IL_013d:  volatile.
      IL_013f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0144:  stloc.s    V_10
      IL_0146:  ldloc.s    V_10
      IL_0148:  ldc.i4.0
      IL_0149:  ceq
      IL_014b:  brfalse    IL_015f

      IL_0150:  ldloc.s    V_9
      IL_0152:  brfalse    IL_015f

      IL_0157:  ldc.i4.m1
      IL_0158:  stloc.s    V_4
      IL_015a:  br         IL_0290

      IL_015f:  ldloc.s    V_10
      IL_0161:  stloc.s    V_4
      IL_0163:  br         IL_0290

      IL_0168:  ldc.i4.0
      IL_0169:  stloc.s    V_11
      IL_016b:  ldarg.0
      IL_016c:  volatile.
      IL_016e:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0173:  stloc.s    V_12
      IL_0175:  ldloc.s    V_12
      IL_0177:  brtrue     IL_018e

      IL_017c:  ldarg.0
      IL_017d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0182:  stloc.s    V_11
      IL_0184:  ldarg.0
      IL_0185:  volatile.
      IL_0187:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_018c:  stloc.s    V_12
      IL_018e:  ldloc.s    V_12
      IL_0190:  ldc.i4.0
      IL_0191:  ceq
      IL_0193:  brfalse    IL_01a7

      IL_0198:  ldloc.s    V_11
      IL_019a:  brfalse    IL_01a7

      IL_019f:  ldc.i4.m1
      IL_01a0:  stloc.s    V_4
      IL_01a2:  br         IL_0290

      IL_01a7:  ldloc.s    V_12
      IL_01a9:  stloc.s    V_4
      IL_01ab:  br         IL_0290

      IL_01b0:  ldc.i4.0
      IL_01b1:  stloc.s    V_13
      IL_01b3:  ldarg.0
      IL_01b4:  volatile.
      IL_01b6:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01bb:  stloc.s    V_14
      IL_01bd:  ldloc.s    V_14
      IL_01bf:  brtrue     IL_01d6

      IL_01c4:  ldarg.0
      IL_01c5:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_01ca:  stloc.s    V_13
      IL_01cc:  ldarg.0
      IL_01cd:  volatile.
      IL_01cf:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_01d4:  stloc.s    V_14
      IL_01d6:  ldloc.s    V_14
      IL_01d8:  ldc.i4.0
      IL_01d9:  ceq
      IL_01db:  brfalse    IL_01ef

      IL_01e0:  ldloc.s    V_13
      IL_01e2:  brfalse    IL_01ef

      IL_01e7:  ldc.i4.m1
      IL_01e8:  stloc.s    V_4
      IL_01ea:  br         IL_0290

      IL_01ef:  ldloc.s    V_14
      IL_01f1:  stloc.s    V_4
      IL_01f3:  br         IL_0290

      IL_01f8:  ldc.i4.0
      IL_01f9:  stloc.s    V_15
      IL_01fb:  ldarg.0
      IL_01fc:  volatile.
      IL_01fe:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0203:  stloc.s    V_16
      IL_0205:  ldloc.s    V_16
      IL_0207:  brtrue     IL_021e

      IL_020c:  ldarg.0
      IL_020d:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_0212:  stloc.s    V_15
      IL_0214:  ldarg.0
      IL_0215:  volatile.
      IL_0217:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_021c:  stloc.s    V_16
      IL_021e:  ldloc.s    V_16
      IL_0220:  ldc.i4.0
      IL_0221:  ceq
      IL_0223:  brfalse    IL_0237

      IL_0228:  ldloc.s    V_15
      IL_022a:  brfalse    IL_0237

      IL_022f:  ldc.i4.m1
      IL_0230:  stloc.s    V_4
      IL_0232:  br         IL_0290

      IL_0237:  ldloc.s    V_16
      IL_0239:  stloc.s    V_4
      IL_023b:  br         IL_0290

      IL_0240:  ldc.i4.0
      IL_0241:  stloc.s    V_17
      IL_0243:  ldarg.0
      IL_0244:  volatile.
      IL_0246:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_024b:  stloc.s    V_18
      IL_024d:  ldloc.s    V_18
      IL_024f:  brtrue     IL_0266

      IL_0254:  ldarg.0
      IL_0255:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_PeerClosed()
      IL_025a:  stloc.s    V_17
      IL_025c:  ldarg.0
      IL_025d:  volatile.
      IL_025f:  ldfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0264:  stloc.s    V_18
      IL_0266:  ldloc.s    V_18
      IL_0268:  ldc.i4.0
      IL_0269:  ceq
      IL_026b:  brfalse    IL_027f

      IL_0270:  ldloc.s    V_17
      IL_0272:  brfalse    IL_027f

      IL_0277:  ldc.i4.m1
      IL_0278:  stloc.s    V_4
      IL_027a:  br         IL_0290

      IL_027f:  ldloc.s    V_18
      IL_0281:  stloc.s    V_4
      IL_0283:  br         IL_0290

      IL_0288:  ldc.i4.m1
      IL_0289:  stloc.s    V_4
      IL_028b:  br         IL_0290

      IL_0290:  ldloc.s    V_4
      IL_0292:  stloc.s    V_19
      IL_0294:  ldloc.s    V_4
      IL_0296:  ret
    } // end of method Exp::Peek

    .method public virtual instance bool 
            HeadMatches(int32 tag,
                        bool& possible,
                        object& elemMatch) cil managed
    {
      // Code size       102 (0x66)
      .maxstack  6
      .locals init ([0] int32 V_0,
               [1] bool V_1,
               [2] bool 'SS$Display Return Local')
      IL_0000:  ldarg.0
      IL_0001:  call       instance bool [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::get_Closed()
      IL_0006:  brfalse    IL_0016

      IL_000b:  ldstr      "endpoint is closed"
      IL_0010:  newobj     instance void [Corlib]System.ApplicationException::.ctor(string)
      IL_0015:  throw

      IL_0016:  ldarg.0
      IL_0017:  call       instance int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::Peek()
      IL_001c:  stloc.0
      IL_001d:  ldloc.0
      IL_001e:  ldc.i4.0
      IL_001f:  ceq
      IL_0021:  brfalse    IL_002d

      IL_0026:  ldc.i4.0
      IL_0027:  stloc.1
      IL_0028:  br         IL_0062

      IL_002d:  ldloc.0
      IL_002e:  ldarg.1
      IL_002f:  ceq
      IL_0031:  brfalse    IL_003d

      IL_0036:  ldc.i4.1
      IL_0037:  stloc.1
      IL_0038:  br         IL_0062

      IL_003d:  ldc.i4.1
      IL_003e:  ldarg.1
      IL_003f:  ceq
      IL_0041:  brfalse    IL_0054

      IL_0046:  ldloc.0
      IL_0047:  ldc.i4.0
      IL_0048:  ble        IL_0054

      IL_004d:  ldc.i4.1
      IL_004e:  stloc.1
      IL_004f:  br         IL_0062

      IL_0054:  ldarg.2
      IL_0055:  ldc.i4.0
      IL_0056:  stobj      [Corlib]System.Boolean
      IL_005b:  ldc.i4.0
      IL_005c:  stloc.1
      IL_005d:  br         IL_0062

      IL_0062:  ldloc.1
      IL_0063:  stloc.2
      IL_0064:  ldloc.1
      IL_0065:  ret
    } // end of method Exp::HeadMatches

    .method privatescope instance void  DeliverGetProcessIDs0$PST06000214() cil managed
    {
      // Code size       17 (0x11)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldc.i4.4
      IL_0002:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldc.i4.4
      IL_0009:  volatile.
      IL_000b:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0010:  ret
    } // end of method Exp::DeliverGetProcessIDs0

    .method privatescope instance void  MarshallDeliverGetProcessIDs0$PST06000215(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       26 (0x1a)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessIDs0$PST06000214()
      IL_0006:  ldarg.0
      IL_0007:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessIDsPod0
      IL_000c:  ldarg.0
      IL_000d:  ldarg.1
      IL_000e:  ldarg.0
      IL_000f:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0014:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs::MarshallAll(uint8*,
                                                                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                int32&)
      IL_0019:  ret
    } // end of method Exp::MarshallDeliverGetProcessIDs0

    .method privatescope instance void  DeliverGetProcessName0$PST06000216(int32 procID) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessNamePod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName::procID
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.6
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.6
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverGetProcessName0

    .method privatescope instance void  MarshallDeliverGetProcessName0$PST06000217(int32 procID,
                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessName0$PST06000216(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessNamePod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName::MarshallAll(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessName0

    .method privatescope instance void  DeliverGetProcessThreadIDs0$PST06000218(int32 procID) cil managed
    {
      // Code size       29 (0x1d)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessThreadIDsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs::procID
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.8
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0013:  ldarg.0
      IL_0014:  ldc.i4.8
      IL_0015:  volatile.
      IL_0017:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001c:  ret
    } // end of method Exp::DeliverGetProcessThreadIDs0

    .method privatescope instance void  MarshallDeliverGetProcessThreadIDs0$PST06000219(int32 procID,
                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessThreadIDs0$PST06000218(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessThreadIDsPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs::MarshallAll(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessThreadIDs0

    .method privatescope instance void  DeliverGetProcessTimes0$PST0600021A(int32 procID) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessTimesPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes::procID
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   10
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   10
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetProcessTimes0

    .method privatescope instance void  MarshallDeliverGetProcessTimes0$PST0600021B(int32 procID,
                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessTimes0$PST0600021A(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessTimesPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes::MarshallAll(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessTimes0

    .method privatescope instance void  DeliverGetProcessGcStats0$PST0600021C(int32 procID) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessGcStatsPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats::procID
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   12
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   12
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetProcessGcStats0

    .method privatescope instance void  MarshallDeliverGetProcessGcStats0$PST0600021D(int32 procID,
                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetProcessGcStats0$PST0600021C(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetProcessGcStatsPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats::MarshallAll(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetProcessGcStats0

    .method privatescope instance void  DeliverGetParentID0$PST0600021E(int32 procID) cil managed
    {
      // Code size       31 (0x1f)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetParentIDPod0
      IL_0006:  ldarg.1
      IL_0007:  stfld      int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID::procID
      IL_000c:  ldarg.0
      IL_000d:  ldc.i4.s   14
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::DeliverHookInternal(int32)
      IL_0014:  ldarg.0
      IL_0015:  ldc.i4.s   14
      IL_0017:  volatile.
      IL_0019:  stfld      int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_001e:  ret
    } // end of method Exp::DeliverGetParentID0

    .method privatescope instance void  MarshallDeliverGetParentID0$PST0600021F(int32 procID,
                                                                                valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& endpoint) cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  ldarg.1
      IL_0002:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::DeliverGetParentID0$PST0600021E(int32)
      IL_0007:  ldarg.0
      IL_0008:  ldflda     valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::GetParentIDPod0
      IL_000d:  ldarg.0
      IL_000e:  ldarg.2
      IL_000f:  ldarg.0
      IL_0010:  ldflda     int32 [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Exp::TagPod0
      IL_0015:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID::MarshallAll(uint8*,
                                                                                                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                              int32&)
      IL_001a:  ret
    } // end of method Exp::MarshallDeliverGetParentID0

  } // end of class Exp

  .class sequential ansi sealed nested public specialname Ready
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method Ready::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready::MarshallContent(uint8*,
                                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                            uint8*,
                                                                                                                            int32&)
      IL_001d:  ret
    } // end of method Ready::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method Ready::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method Ready::Release

  } // end of class Ready

  .class sequential ansi sealed nested public specialname GetProcessIDs
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessIDs::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessIDs::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs::MarshallContent(uint8*,
                                                                                                                                    valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                    uint8*,
                                                                                                                                    int32&)
      IL_001d:  ret
    } // end of method GetProcessIDs::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessIDs::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessIDs::Release

  } // end of class GetProcessIDs

  .class sequential ansi sealed nested public specialname ProcessIDs
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) IDs
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method ProcessIDs::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessIDs::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessIDs::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::MarshallContent(uint8*,
                                                                                                                                 valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                 uint8*,
                                                                                                                                 int32&)
      IL_001d:  ret
    } // end of method ProcessIDs::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ProcessIDs::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] int32& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0008:  ldtoken    [Corlib]System.Int32
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0033:  castclass  int32&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method ProcessIDs::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs::IDs
      IL_001a:  ret
    } // end of method ProcessIDs::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessIDs::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessIDs::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessIDs::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessIDs::Release

  } // end of class ProcessIDs

  .class sequential ansi sealed nested public specialname GetProcessName
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 procID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method GetProcessName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessName::Release

  } // end of class GetProcessName

  .class sequential ansi sealed nested public specialname ProcessName
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) procName
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method ProcessName::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessName::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessName::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method ProcessName::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ProcessName::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] char& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0008:  ldtoken    [Corlib]System.Char
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0033:  castclass  char&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method ProcessName::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      char* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName::procName
      IL_001a:  ret
    } // end of method ProcessName::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessName::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessName::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessName::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessName::Release

  } // end of class ProcessName

  .class sequential ansi sealed nested public specialname GetProcessThreadIDs
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 procID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessThreadIDs::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessThreadIDs::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs::MarshallContent(uint8*,
                                                                                                                                          valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                          uint8*,
                                                                                                                                          int32&)
      IL_001d:  ret
    } // end of method GetProcessThreadIDs::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessThreadIDs::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessThreadIDs::Release

  } // end of class GetProcessThreadIDs

  .class sequential ansi sealed nested public specialname ProcessThreadIDs
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) tids
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       21 (0x15)
      .maxstack  3
      .locals init ([0] int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_0014

      IL_000d:  ldarg.1
      IL_000e:  ldloc.0
      IL_000f:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0014:  ret
    } // end of method ProcessThreadIDs::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessThreadIDs::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessThreadIDs::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::MarshallContent(uint8*,
                                                                                                                                       valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                       uint8*,
                                                                                                                                       int32&)
      IL_001d:  ret
    } // end of method ProcessThreadIDs::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init ([0] int32 V_0,
               [1] int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ProcessThreadIDs::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       81 (0x51)
      .maxstack  8
      .locals init ([0] int32& V_0,
               [1] int32 V_1,
               [2] int32 V_2)
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldflda     int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0008:  ldtoken    [Corlib]System.Int32
      IL_000d:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_0012:  ldarg.3
      IL_0013:  ldarg.0
      IL_0014:  ldflda     int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0019:  conv.i
      IL_001a:  ldarg.3
      IL_001b:  conv.i
      IL_001c:  sub
      IL_001d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallPointer(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               void** modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8*,
                                                                                                                               int32)
      IL_0022:  ldarg.0
      IL_0023:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0028:  brfalse    IL_0050

      IL_002d:  ldarg.0
      IL_002e:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0033:  castclass  int32&
      IL_0038:  stloc.0
      IL_0039:  ldarg.0
      IL_003a:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_003f:  ldlen
      IL_0040:  stloc.1
      IL_0041:  ldc.i4.0
      IL_0042:  stloc.2
      IL_0043:  ldloc.2
      IL_0044:  ldloc.1
      IL_0045:  bge        IL_0050

      IL_004a:  ldloc.2
      IL_004b:  ldc.i4.1
      IL_004c:  add
      IL_004d:  stloc.2
      IL_004e:  br.s       IL_0043

      IL_0050:  ret
    } // end of method ProcessThreadIDs::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       27 (0x1b)
      .maxstack  2
      .locals init ([0] int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) V_0)
      IL_0000:  ldarg.0
      IL_0001:  ldfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_0006:  stloc.0
      IL_0007:  ldloc.0
      IL_0008:  brfalse    IL_001a

      IL_000d:  ldloc.0
      IL_000e:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap::Free(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_0013:  ldarg.0
      IL_0014:  ldnull
      IL_0015:  stfld      int32* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs::tids
      IL_001a:  ret
    } // end of method ProcessThreadIDs::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessThreadIDs::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessThreadIDs::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessThreadIDs::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessThreadIDs::Release

  } // end of class ProcessThreadIDs

  .class sequential ansi sealed nested public specialname GetProcessTimes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 procID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessTimes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessTimes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes::MarshallContent(uint8*,
                                                                                                                                      valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                      uint8*,
                                                                                                                                      int32&)
      IL_001d:  ret
    } // end of method GetProcessTimes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessTimes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessTimes::Release

  } // end of class GetProcessTimes

  .class sequential ansi sealed nested public specialname ProcessTimes
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int64 totalTime
    .field public int64 deadThreadTime
    .field public int64 deadThreadCount
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessTimes::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessTimes::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes::MarshallContent(uint8*,
                                                                                                                                   valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                   uint8*,
                                                                                                                                   int32&)
      IL_001d:  ret
    } // end of method ProcessTimes::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ProcessTimes::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessTimes::Release

  } // end of class ProcessTimes

  .class sequential ansi sealed nested public specialname GetProcessGcStats
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 procID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessGcStats::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetProcessGcStats::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats::MarshallContent(uint8*,
                                                                                                                                        valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                        uint8*,
                                                                                                                                        int32&)
      IL_001d:  ret
    } // end of method GetProcessGcStats::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetProcessGcStats::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetProcessGcStats::Release

  } // end of class GetProcessGcStats

  .class sequential ansi sealed nested public specialname ProcessGcStats
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int32 count
    .field public int64 time
    .field public int64 bytes
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessGcStats::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ProcessGcStats::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats::MarshallContent(uint8*,
                                                                                                                                     valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                     uint8*,
                                                                                                                                     int32&)
      IL_001d:  ret
    } // end of method ProcessGcStats::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ProcessGcStats::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ProcessGcStats::Release

  } // end of class ProcessGcStats

  .class sequential ansi sealed nested public specialname GetParentID
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 00 00 00 00 00 00 ) 
    .field public int32 procID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetParentID::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method GetParentID::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID::MarshallContent(uint8*,
                                                                                                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                                  uint8*,
                                                                                                                                  int32&)
      IL_001d:  ret
    } // end of method GetParentID::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method GetParentID::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method GetParentID::Release

  } // end of class GetParentID

  .class sequential ansi sealed nested public specialname ParentID
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .field public int32 parentID
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ParentID::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method ParentID::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method ParentID::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method ParentID::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method ParentID::Release

  } // end of class ParentID

  .class sequential ansi sealed nested public specialname NotFound
         extends [Corlib]System.ValueType
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IMessage
  {
    .pack 0
    .size 1
    .custom instance void [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute::.ctor(valuetype [Microsoft.SingSharp.Runtime]Microsoft.SingSharp.MessageAttribute/Direction) = ( 01 00 01 00 00 00 00 00 ) 
    .method public instance void  TransferContentsOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::TransferContentsOwnership

    .method public static void  TransferOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NotFound::TransferOwnership

    .method public static void  TransferVectorOwnership(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& target,
                                                        valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) pointer) cil managed
    {
      // Code size       14 (0xe)
      .maxstack  8
      IL_0000:  ldarg.1
      IL_0001:  brfalse    IL_000d

      IL_0006:  ldarg.0
      IL_0007:  ldarg.1
      IL_0008:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::TransferBlockOwnership(void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap))
      IL_000d:  ret
    } // end of method NotFound::TransferVectorOwnership

    .method public instance void  MarshallAll(uint8* basep,
                                              valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                              int32& tagLocation) cil managed
    {
      // Code size       30 (0x1e)
      .maxstack  8
      IL_0000:  ldarg.2
      IL_0001:  ldarg.1
      IL_0002:  ldarg.0
      IL_0003:  ldarg.3
      IL_0004:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound
      IL_0009:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
      IL_000e:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::MarshallMessage(uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               uint8* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               int32* modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                                               class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
      IL_0013:  ldarg.0
      IL_0014:  ldarg.1
      IL_0015:  ldarg.2
      IL_0016:  ldarg.0
      IL_0017:  ldarg.3
      IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound::MarshallContent(uint8*,
                                                                                                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint&,
                                                                                                                               uint8*,
                                                                                                                               int32&)
      IL_001d:  ret
    } // end of method NotFound::MarshallAll

    .method public static void  MarshallVector(uint8* basep,
                                               valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                               uint8* parent,
                                               valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([Microsoft.SingSharp.Runtime]Microsoft.SingSharp.CustomVector) 'vector') cil managed
    {
      // Code size       25 (0x19)
      .maxstack  2
      .locals init (int32 V_0,
               int32 V_1)
      IL_0000:  ldarg.3
      IL_0001:  brfalse    IL_0018

      IL_0006:  ldarg.3
      IL_0007:  ldlen
      IL_0008:  stloc.0
      IL_0009:  ldc.i4.0
      IL_000a:  stloc.1
      IL_000b:  ldloc.1
      IL_000c:  ldloc.0
      IL_000d:  bge        IL_0018

      IL_0012:  ldloc.1
      IL_0013:  ldc.i4.1
      IL_0014:  add
      IL_0015:  stloc.1
      IL_0016:  br.s       IL_000b

      IL_0018:  ret
    } // end of method NotFound::MarshallVector

    .method public instance void  MarshallContent(uint8* basep,
                                                  valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint& from,
                                                  uint8* parent,
                                                  int32& tagLocation) cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::MarshallContent

    .method public virtual instance void 
            Dispose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Dispose

    .method public virtual instance void 
            Expose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Expose

    .method public virtual instance void 
            UnExpose() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::UnExpose

    .method public virtual instance void 
            Acquire() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Acquire

    .method public virtual instance void 
            Release() cil managed
    {
      // Code size       1 (0x1)
      .maxstack  8
      IL_0000:  ret
    } // end of method NotFound::Release

  } // end of class NotFound

  .class abstract auto ansi nested public specialname Start
         extends [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000003)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Ready msg) cil managed
    {
    } // end of method Start::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract/Start::.ctor()
      IL_0006:  ret
    } // end of method Start::.ctor

  } // end of class Start

  .class abstract auto ansi nested public specialname ReadyState
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000F)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$0 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessIDs msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$1 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessThreadIDs msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$3 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessTimes msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$5 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessGcStats msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$7 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetProcessName msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$9 
            Recv(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/GetParentID msg) cil managed
    {
    } // end of method ReadyState::Recv

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState::.ctor

  } // end of class ReadyState

  .class abstract auto ansi nested public specialname ReadyState$0
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000E)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessIDs msg) cil managed
    {
    } // end of method ReadyState$0::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$0::.ctor

  } // end of class ReadyState$0

  .class abstract auto ansi nested public specialname ReadyState$1
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000D)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$2 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessThreadIDs msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$2 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound msg) cil managed
    {
    } // end of method ReadyState$1::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$1::.ctor

  } // end of class ReadyState$1

  .class abstract auto ansi nested public specialname ReadyState$2
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000C)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$2::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$2::.ctor

  } // end of class ReadyState$2

  .class abstract auto ansi nested public specialname ReadyState$3
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000B)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$4 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessTimes msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$4 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound msg) cil managed
    {
    } // end of method ReadyState$3::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$3::.ctor

  } // end of class ReadyState$3

  .class abstract auto ansi nested public specialname ReadyState$4
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x0000000A)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$4::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$4::.ctor

  } // end of class ReadyState$4

  .class abstract auto ansi nested public specialname ReadyState$5
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000009)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$6 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessGcStats msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$6 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound msg) cil managed
    {
    } // end of method ReadyState$5::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$5::.ctor

  } // end of class ReadyState$5

  .class abstract auto ansi nested public specialname ReadyState$6
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000008)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$6::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$6::.ctor

  } // end of class ReadyState$6

  .class abstract auto ansi nested public specialname ReadyState$7
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000007)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$8 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ProcessName msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$8 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound msg) cil managed
    {
    } // end of method ReadyState$7::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$7::.ctor

  } // end of class ReadyState$7

  .class abstract auto ansi nested public specialname ReadyState$8
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000006)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$8::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$8::.ctor

  } // end of class ReadyState$8

  .class abstract auto ansi nested public specialname ReadyState$9
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000005)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$10 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ParentID msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState$10 
            Send(valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/NotFound msg) cil managed
    {
    } // end of method ReadyState$9::Send

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$9::.ctor

  } // end of class ReadyState$9

  .class abstract auto ansi nested public specialname ReadyState$10
         extends [Corlib]System.Object
         implements [Microsoft.SingSharp.Runtime]System.Compiler.TypeExtensions.IProtocolState
  {
    .field public static literal int32 Value = int32(0x00000004)
    .method family abstract virtual instance class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/ReadyState 
            Epsilon() cil managed
    {
    } // end of method ReadyState$10::Epsilon

    .method family hidebysig specialname rtspecialname 
            instance void  .ctor() cil managed
    {
      // Code size       7 (0x7)
      .maxstack  8
      IL_0000:  ldarg.0
      IL_0001:  call       instance void [Corlib]System.Object::.ctor()
      IL_0006:  ret
    } // end of method ReadyState$10::.ctor

  } // end of class ReadyState$10

  .field public static literal string ModuleName = "/status/process"
  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
    IL_0017:  ldc.i4.3
    IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
    IL_0036:  ldc.i4.3
    IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::'.ctor$PST060001C4'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.1
    IL_003f:  ldind.i
    IL_0040:  ldarg.0
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ProcessContract::NewChannel

  .method public static void  NewChannel([out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& imp,
                                         [out] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType)& exp,
                                         int32 initialState) cil managed
  {
    // Code size       72 (0x48)
    .maxstack  7
    .locals init ([0] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_0,
             [1] valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) V_1)
    IL_0000:  ldarg.1
    IL_0001:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp
    IL_0006:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_000b:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0010:  stloc.0
    IL_0011:  ldloc.0
    IL_0012:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp&
    IL_0017:  ldarg.2
    IL_0018:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Exp::.ctor(int32)
    IL_001d:  ldloc.0
    IL_001e:  stind.i
    IL_001f:  ldarg.0
    IL_0020:  ldtoken    Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp
    IL_0025:  call       class [Corlib]System.Type [Corlib]System.Type::GetTypeFromHandle(valuetype [Corlib]System.RuntimeTypeHandle)
    IL_002a:  call       void* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType) [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ChannelHeap::Allocate(class [Corlib]System.Type modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_002f:  stloc.1
    IL_0030:  ldloc.1
    IL_0031:  castclass  valuetype Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp&
    IL_0036:  ldarg.2
    IL_0037:  call       instance void Microsoft.Singularity.Diagnostics.Contracts.ProcessContract/Imp::'.ctor$PST060001C4'(int32)
    IL_003c:  ldloc.1
    IL_003d:  stind.i
    IL_003e:  ldarg.0
    IL_003f:  ldind.i
    IL_0040:  ldarg.1
    IL_0041:  ldind.i
    IL_0042:  call       void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint::Connect(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType),
                                                                                                            valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.Endpoint* modopt([Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.ExHeap) modopt([System.Compiler.Runtime]Microsoft.Contracts.NonNullType))
    IL_0047:  ret
  } // end of method ProcessContract::NewChannel

  .method family hidebysig specialname rtspecialname 
          instance void  .ctor() cil managed
  {
    // Code size       7 (0x7)
    .maxstack  8
    IL_0000:  ldarg.0
    IL_0001:  call       instance void [Directory.Contracts]Microsoft.Singularity.Directory.ServiceContract::.ctor()
    IL_0006:  ret
  } // end of method ProcessContract::.ctor

  .method privatescope static int32  StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack& stateStack) cil managed
  {
    // Code size       188 (0xbc)
    .maxstack  11
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 V_2,
             [3] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  call       instance int32 [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Top()
    IL_0006:  stloc.0
    IL_0007:  ldloc.0
    IL_0008:  stloc.1
    IL_0009:  ldloc.1
    IL_000a:  ldc.i4.s   10
    IL_000c:  beq        IL_003a

    IL_0011:  ldloc.1
    IL_0012:  ldc.i4.6
    IL_0013:  beq        IL_004e

    IL_0018:  ldloc.1
    IL_0019:  ldc.i4.8
    IL_001a:  beq        IL_0062

    IL_001f:  ldloc.1
    IL_0020:  ldc.i4.s   12
    IL_0022:  beq        IL_0076

    IL_0027:  ldloc.1
    IL_0028:  ldc.i4.2
    IL_0029:  beq        IL_008a

    IL_002e:  ldloc.1
    IL_002f:  ldc.i4.4
    IL_0030:  beq        IL_009d

    IL_0035:  br         IL_00b1

    IL_003a:  ldarg.0
    IL_003b:  ldc.i4.s   15
    IL_003d:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0042:  ldarg.0
    IL_0043:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0048:  stloc.2
    IL_0049:  br         IL_00b8

    IL_004e:  ldarg.0
    IL_004f:  ldc.i4.s   15
    IL_0051:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0056:  ldarg.0
    IL_0057:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_005c:  stloc.2
    IL_005d:  br         IL_00b8

    IL_0062:  ldarg.0
    IL_0063:  ldc.i4.s   15
    IL_0065:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_006a:  ldarg.0
    IL_006b:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0070:  stloc.2
    IL_0071:  br         IL_00b8

    IL_0076:  ldarg.0
    IL_0077:  ldc.i4.s   15
    IL_0079:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_007e:  ldarg.0
    IL_007f:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0084:  stloc.2
    IL_0085:  br         IL_00b8

    IL_008a:  ldarg.0
    IL_008b:  ldc.i4.1
    IL_008c:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_0091:  ldarg.0
    IL_0092:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_0097:  stloc.2
    IL_0098:  br         IL_00b8

    IL_009d:  ldarg.0
    IL_009e:  ldc.i4.s   15
    IL_00a0:  call       instance void [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack::Set(int32)
    IL_00a5:  ldarg.0
    IL_00a6:  call       int32 Microsoft.Singularity.Diagnostics.Contracts.ProcessContract::StableState$PST06000019(valuetype [Microsoft.SingSharp.Runtime]Microsoft.Singularity.Channels.StateStack&)
    IL_00ab:  stloc.2
    IL_00ac:  br         IL_00b8

    IL_00b1:  ldloc.0
    IL_00b2:  stloc.2
    IL_00b3:  br         IL_00b8

    IL_00b8:  ldloc.2
    IL_00b9:  stloc.3
    IL_00ba:  ldloc.2
    IL_00bb:  ret
  } // end of method ProcessContract::StableState

  .method privatescope static int32  CanonicalState$PST0600001A(int32 state) cil managed
  {
    // Code size       109 (0x6d)
    .maxstack  2
    .locals init ([0] int32 V_0,
             [1] int32 V_1,
             [2] int32 'SS$Display Return Local')
    IL_0000:  ldarg.0
    IL_0001:  stloc.0
    IL_0002:  ldloc.0
    IL_0003:  ldc.i4.s   10
    IL_0005:  beq        IL_0033

    IL_000a:  ldloc.0
    IL_000b:  ldc.i4.6
    IL_000c:  beq        IL_003b

    IL_0011:  ldloc.0
    IL_0012:  ldc.i4.8
    IL_0013:  beq        IL_0043

    IL_0018:  ldloc.0
    IL_0019:  ldc.i4.s   12
    IL_001b:  beq        IL_004b

    IL_0020:  ldloc.0
    IL_0021:  ldc.i4.2
    IL_0022:  beq        IL_0053

    IL_0027:  ldloc.0
    IL_0028:  ldc.i4.4
    IL_0029:  beq        IL_005a

    IL_002e:  br         IL_0062

    IL_0033:  ldc.i4.s   15
    IL_0035:  stloc.1
    IL_0036:  br         IL_0069

    IL_003b:  ldc.i4.s   15
    IL_003d:  stloc.1
    IL_003e:  br         IL_0069

    IL_0043:  ldc.i4.s   15
    IL_0045:  stloc.1
    IL_0046:  br         IL_0069

    IL_004b:  ldc.i4.s   15
    IL_004d:  stloc.1
    IL_004e:  br         IL_0069

    IL_0053:  ldc.i4.1
    IL_0054:  stloc.1
    IL_0055:  br         IL_0069

    IL_005a:  ldc.i4.s   15
    IL_005c:  stloc.1
    IL_005d:  br         IL_0069

    IL_0062:  ldarg.0
    IL_0063:  stloc.1
    IL_0064:  br         IL_0069

    IL_0069:  ldloc.1
    IL_006a:  stloc.2
    IL_006b:  ldloc.1
    IL_006c:  ret
  } // end of method ProcessContract::CanonicalState

} // end of class Microsoft.Singularity.Diagnostics.Contracts.ProcessContract


// =============================================================

// *********** DISASSEMBLY COMPLETE ***********************
