; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Boot\SingLdrPc\blvideo.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlVideoCursorPosition@@3GA			; BlVideoCursorPosition
PUBLIC	?BlVideoBuffer@@3PAGA				; BlVideoBuffer
PUBLIC	?BlVideoDefaultAttribute@@3GA			; BlVideoDefaultAttribute
_BSS	SEGMENT
?BlVideoCursorPosition@@3GA DW 01H DUP (?)		; BlVideoCursorPosition
_BSS	ENDS
_DATA	SEGMENT
?BlVideoBuffer@@3PAGA DD 0b8000H			; BlVideoBuffer
?BlVideoDefaultAttribute@@3GA DW 01f00H			; BlVideoDefaultAttribute
_DATA	ENDS
PUBLIC	?BlVideoSetCursorPosition@@YIXGG@Z		; BlVideoSetCursorPosition
EXTRN	?BlRtlWritePort8@@YIXGE@Z:PROC			; BlRtlWritePort8
; Function compile flags: /Odsp
; File c:\users\cc\source\repos\singularity-os\base\boot\singldrpc\blvideo.cpp
;	COMDAT ?BlVideoSetCursorPosition@@YIXGG@Z
_TEXT	SEGMENT
_Y$ = -8						; size = 2
_X$ = -4						; size = 2
?BlVideoSetCursorPosition@@YIXGG@Z PROC			; BlVideoSetCursorPosition, COMDAT
; _X$ = cx
; _Y$ = dx

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	66 89 55 f8	 mov	 WORD PTR _Y$[ebp], dx
  00009	66 89 4d fc	 mov	 WORD PTR _X$[ebp], cx

; 54   :     BlVideoCursorPosition = (Y * BL_VIDEO_COL_COUNT) + X;

  0000d	0f b7 45 f8	 movzx	 eax, WORD PTR _Y$[ebp]
  00011	6b c0 50	 imul	 eax, 80			; 00000050H
  00014	0f b7 4d fc	 movzx	 ecx, WORD PTR _X$[ebp]
  00018	03 c1		 add	 eax, ecx
  0001a	66 a3 00 00 00
	00		 mov	 WORD PTR ?BlVideoCursorPosition@@3GA, ax ; BlVideoCursorPosition

; 55   : 
; 56   :     BlRtlWritePort8(BL_VIDEO_REGISTER_INDEX_PORT, BL_VIDEO_REGISTER_CURSOR_HIGH);

  00020	b2 0e		 mov	 dl, 14			; 0000000eH
  00022	66 b9 d4 03	 mov	 cx, 980			; 000003d4H
  00026	e8 00 00 00 00	 call	 ?BlRtlWritePort8@@YIXGE@Z ; BlRtlWritePort8

; 57   :     BlRtlWritePort8(BL_VIDEO_REGISTER_DATA_PORT, (UINT8) (BlVideoCursorPosition >> 8));

  0002b	0f b7 15 00 00
	00 00		 movzx	 edx, WORD PTR ?BlVideoCursorPosition@@3GA ; BlVideoCursorPosition
  00032	c1 fa 08	 sar	 edx, 8
  00035	66 b9 d5 03	 mov	 cx, 981			; 000003d5H
  00039	e8 00 00 00 00	 call	 ?BlRtlWritePort8@@YIXGE@Z ; BlRtlWritePort8

; 58   : 
; 59   :     BlRtlWritePort8(BL_VIDEO_REGISTER_INDEX_PORT, BL_VIDEO_REGISTER_CURSOR_LOW);

  0003e	b2 0f		 mov	 dl, 15			; 0000000fH
  00040	66 b9 d4 03	 mov	 cx, 980			; 000003d4H
  00044	e8 00 00 00 00	 call	 ?BlRtlWritePort8@@YIXGE@Z ; BlRtlWritePort8

; 60   :     BlRtlWritePort8(BL_VIDEO_REGISTER_DATA_PORT, (UINT8) (BlVideoCursorPosition & 0xFF));

  00049	0f b7 15 00 00
	00 00		 movzx	 edx, WORD PTR ?BlVideoCursorPosition@@3GA ; BlVideoCursorPosition
  00050	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00056	66 b9 d5 03	 mov	 cx, 981			; 000003d5H
  0005a	e8 00 00 00 00	 call	 ?BlRtlWritePort8@@YIXGE@Z ; BlRtlWritePort8

; 61   : }

  0005f	c9		 leave
  00060	c3		 ret	 0
?BlVideoSetCursorPosition@@YIXGG@Z ENDP			; BlVideoSetCursorPosition
_TEXT	ENDS
PUBLIC	?BlVideoGetCursorPosition@@YIXPAG0@Z		; BlVideoGetCursorPosition
; Function compile flags: /Odsp
;	COMDAT ?BlVideoGetCursorPosition@@YIXPAG0@Z
_TEXT	SEGMENT
_Y$ = -8						; size = 4
_X$ = -4						; size = 4
?BlVideoGetCursorPosition@@YIXPAG0@Z PROC		; BlVideoGetCursorPosition, COMDAT
; _X$ = ecx
; _Y$ = edx

; 83   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 55 f8	 mov	 DWORD PTR _Y$[ebp], edx
  00008	89 4d fc	 mov	 DWORD PTR _X$[ebp], ecx

; 84   :     *X = BlVideoCursorPosition % BL_VIDEO_COL_COUNT;

  0000b	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlVideoCursorPosition@@3GA ; BlVideoCursorPosition
  00012	99		 cdq
  00013	6a 50		 push	 80			; 00000050H
  00015	59		 pop	 ecx
  00016	f7 f9		 idiv	 ecx
  00018	8b 45 fc	 mov	 eax, DWORD PTR _X$[ebp]
  0001b	66 89 10	 mov	 WORD PTR [eax], dx

; 85   :     *Y = BlVideoCursorPosition / BL_VIDEO_COL_COUNT;

  0001e	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlVideoCursorPosition@@3GA ; BlVideoCursorPosition
  00025	99		 cdq
  00026	6a 50		 push	 80			; 00000050H
  00028	59		 pop	 ecx
  00029	f7 f9		 idiv	 ecx
  0002b	8b 4d f8	 mov	 ecx, DWORD PTR _Y$[ebp]
  0002e	66 89 01	 mov	 WORD PTR [ecx], ax

; 86   : }

  00031	c9		 leave
  00032	c3		 ret	 0
?BlVideoGetCursorPosition@@YIXPAG0@Z ENDP		; BlVideoGetCursorPosition
_TEXT	ENDS
PUBLIC	?BlVideoWriteCurrentCharacter@@YIXE@Z		; BlVideoWriteCurrentCharacter
; Function compile flags: /Odsp
;	COMDAT ?BlVideoWriteCurrentCharacter@@YIXE@Z
_TEXT	SEGMENT
_Character$ = -12					; size = 1
_X$ = -8						; size = 2
_Y$ = -4						; size = 2
?BlVideoWriteCurrentCharacter@@YIXE@Z PROC		; BlVideoWriteCurrentCharacter, COMDAT
; _Character$ = cl

; 105  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	88 4d f4	 mov	 BYTE PTR _Character$[ebp], cl

; 106  :     UINT16 X;
; 107  :     UINT16 Y;
; 108  : 
; 109  :     BlVideoGetCursorPosition(&X, &Y);

  00009	8d 55 fc	 lea	 edx, DWORD PTR _Y$[ebp]
  0000c	8d 4d f8	 lea	 ecx, DWORD PTR _X$[ebp]
  0000f	e8 00 00 00 00	 call	 ?BlVideoGetCursorPosition@@YIXPAG0@Z ; BlVideoGetCursorPosition

; 110  : 
; 111  :     BlVideoBuffer[(Y * BL_VIDEO_COL_COUNT) + X] = BlVideoDefaultAttribute | Character;

  00014	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlVideoDefaultAttribute@@3GA ; BlVideoDefaultAttribute
  0001b	0f b6 4d f4	 movzx	 ecx, BYTE PTR _Character$[ebp]
  0001f	0b c1		 or	 eax, ecx
  00021	0f b7 4d fc	 movzx	 ecx, WORD PTR _Y$[ebp]
  00025	6b c9 50	 imul	 ecx, 80			; 00000050H
  00028	0f b7 55 f8	 movzx	 edx, WORD PTR _X$[ebp]
  0002c	03 ca		 add	 ecx, edx
  0002e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlVideoBuffer@@3PAGA ; BlVideoBuffer
  00034	66 89 04 4a	 mov	 WORD PTR [edx+ecx*2], ax

; 112  : }

  00038	c9		 leave
  00039	c3		 ret	 0
?BlVideoWriteCurrentCharacter@@YIXE@Z ENDP		; BlVideoWriteCurrentCharacter
_TEXT	ENDS
PUBLIC	?BlVideoScrollUpWindow@@YIXE@Z			; BlVideoScrollUpWindow
; Function compile flags: /Odsp
;	COMDAT ?BlVideoScrollUpWindow@@YIXE@Z
_TEXT	SEGMENT
_NumberOfLines$ = -16					; size = 1
_Delta$ = -12						; size = 2
_Limit$ = -8						; size = 2
_Index$ = -4						; size = 2
?BlVideoScrollUpWindow@@YIXE@Z PROC			; BlVideoScrollUpWindow, COMDAT
; _NumberOfLines$ = cl

; 131  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	88 4d f0	 mov	 BYTE PTR _NumberOfLines$[ebp], cl

; 132  :     UINT16 Delta;
; 133  :     UINT16 Index;
; 134  :     UINT16 Limit;
; 135  : 
; 136  :     Limit = BL_VIDEO_COL_COUNT * BL_VIDEO_ROW_COUNT;

  0000a	66 c7 45 f8 a0
	0f		 mov	 WORD PTR _Limit$[ebp], 4000 ; 00000fa0H

; 137  : 
; 138  :     Delta = NumberOfLines * BL_VIDEO_COL_COUNT;

  00010	0f b6 45 f0	 movzx	 eax, BYTE PTR _NumberOfLines$[ebp]
  00014	6b c0 50	 imul	 eax, 80			; 00000050H
  00017	66 89 45 f4	 mov	 WORD PTR _Delta$[ebp], ax

; 139  : 
; 140  :     if (Delta > Limit) {

  0001b	0f b7 45 f4	 movzx	 eax, WORD PTR _Delta$[ebp]
  0001f	0f b7 4d f8	 movzx	 ecx, WORD PTR _Limit$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	7e 08		 jle	 SHORT $LN7@BlVideoScr

; 141  : 
; 142  :         Delta = Limit;

  00027	66 8b 45 f8	 mov	 ax, WORD PTR _Limit$[ebp]
  0002b	66 89 45 f4	 mov	 WORD PTR _Delta$[ebp], ax
$LN7@BlVideoScr:

; 143  :     }
; 144  : 
; 145  :     for (Index = Delta; Index < Limit; Index += 1) {

  0002f	66 8b 45 f4	 mov	 ax, WORD PTR _Delta$[ebp]
  00033	66 89 45 fc	 mov	 WORD PTR _Index$[ebp], ax
  00037	eb 09		 jmp	 SHORT $LN6@BlVideoScr
$LN5@BlVideoScr:
  00039	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  0003d	40		 inc	 eax
  0003e	66 89 45 fc	 mov	 WORD PTR _Index$[ebp], ax
$LN6@BlVideoScr:
  00042	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  00046	0f b7 4d f8	 movzx	 ecx, WORD PTR _Limit$[ebp]
  0004a	3b c1		 cmp	 eax, ecx
  0004c	7d 24		 jge	 SHORT $LN4@BlVideoScr

; 146  : 
; 147  :         BlVideoBuffer[Index - Delta] = BlVideoBuffer[Index];

  0004e	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  00052	0f b7 4d fc	 movzx	 ecx, WORD PTR _Index$[ebp]
  00056	0f b7 55 f4	 movzx	 edx, WORD PTR _Delta$[ebp]
  0005a	2b ca		 sub	 ecx, edx
  0005c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlVideoBuffer@@3PAGA ; BlVideoBuffer
  00062	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BlVideoBuffer@@3PAGA ; BlVideoBuffer
  00068	66 8b 04 46	 mov	 ax, WORD PTR [esi+eax*2]
  0006c	66 89 04 4a	 mov	 WORD PTR [edx+ecx*2], ax

; 148  :     }

  00070	eb c7		 jmp	 SHORT $LN5@BlVideoScr
$LN4@BlVideoScr:

; 149  : 
; 150  :     for (Index = Limit - Delta; Index < Limit; Index += 1) {

  00072	0f b7 45 f8	 movzx	 eax, WORD PTR _Limit$[ebp]
  00076	0f b7 4d f4	 movzx	 ecx, WORD PTR _Delta$[ebp]
  0007a	2b c1		 sub	 eax, ecx
  0007c	66 89 45 fc	 mov	 WORD PTR _Index$[ebp], ax
  00080	eb 09		 jmp	 SHORT $LN3@BlVideoScr
$LN2@BlVideoScr:
  00082	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  00086	40		 inc	 eax
  00087	66 89 45 fc	 mov	 WORD PTR _Index$[ebp], ax
$LN3@BlVideoScr:
  0008b	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  0008f	0f b7 4d f8	 movzx	 ecx, WORD PTR _Limit$[ebp]
  00093	3b c1		 cmp	 eax, ecx
  00095	7d 1a		 jge	 SHORT $LN8@BlVideoScr

; 151  : 
; 152  :         BlVideoBuffer[Index] = BlVideoDefaultAttribute | ' ';

  00097	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlVideoDefaultAttribute@@3GA ; BlVideoDefaultAttribute
  0009e	83 c8 20	 or	 eax, 32			; 00000020H
  000a1	0f b7 4d fc	 movzx	 ecx, WORD PTR _Index$[ebp]
  000a5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlVideoBuffer@@3PAGA ; BlVideoBuffer
  000ab	66 89 04 4a	 mov	 WORD PTR [edx+ecx*2], ax
  000af	eb d1		 jmp	 SHORT $LN2@BlVideoScr
$LN8@BlVideoScr:

; 153  :     }
; 154  : }

  000b1	5e		 pop	 esi
  000b2	c9		 leave
  000b3	c3		 ret	 0
?BlVideoScrollUpWindow@@YIXE@Z ENDP			; BlVideoScrollUpWindow
_TEXT	ENDS
PUBLIC	?BlVideoInitialize@@YIXXZ			; BlVideoInitialize
PUBLIC	?BlVideoPrintCharacter@@YIXE@Z			; BlVideoPrintCharacter
; Function compile flags: /Odsp
;	COMDAT ?BlVideoPrintCharacter@@YIXE@Z
_TEXT	SEGMENT
tv67 = -16						; size = 4
_Character$ = -12					; size = 1
_X$ = -8						; size = 2
_Y$ = -4						; size = 2
?BlVideoPrintCharacter@@YIXE@Z PROC			; BlVideoPrintCharacter, COMDAT
; _Character$ = cl

; 173  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	88 4d f4	 mov	 BYTE PTR _Character$[ebp], cl

; 174  :     UINT16 X;
; 175  :     UINT16 Y;
; 176  : 
; 177  :     BlVideoGetCursorPosition(&X, &Y);

  00009	8d 55 fc	 lea	 edx, DWORD PTR _Y$[ebp]
  0000c	8d 4d f8	 lea	 ecx, DWORD PTR _X$[ebp]
  0000f	e8 00 00 00 00	 call	 ?BlVideoGetCursorPosition@@YIXPAG0@Z ; BlVideoGetCursorPosition

; 178  : 
; 179  :     switch (Character) {

  00014	8a 45 f4	 mov	 al, BYTE PTR _Character$[ebp]
  00017	88 45 f0	 mov	 BYTE PTR tv67[ebp], al
  0001a	80 7d f0 0a	 cmp	 BYTE PTR tv67[ebp], 10	; 0000000aH
  0001e	74 26		 je	 SHORT $LN4@BlVideoPri
  00020	80 7d f0 0c	 cmp	 BYTE PTR tv67[ebp], 12	; 0000000cH
  00024	74 08		 je	 SHORT $LN6@BlVideoPri
  00026	80 7d f0 0d	 cmp	 BYTE PTR tv67[ebp], 13	; 0000000dH
  0002a	74 13		 je	 SHORT $LN5@BlVideoPri
  0002c	eb 20		 jmp	 SHORT $LN3@BlVideoPri
$LN6@BlVideoPri:

; 180  : 
; 181  :         case '\f': {
; 182  : 
; 183  :             X = 0;

  0002e	66 83 65 f8 00	 and	 WORD PTR _X$[ebp], 0

; 184  :             Y = 0;

  00033	66 83 65 fc 00	 and	 WORD PTR _Y$[ebp], 0

; 185  :             BlVideoInitialize();

  00038	e8 00 00 00 00	 call	 ?BlVideoInitialize@@YIXXZ ; BlVideoInitialize

; 186  :             break;

  0003d	eb 20		 jmp	 SHORT $LN7@BlVideoPri
$LN5@BlVideoPri:

; 187  :         }
; 188  : 
; 189  :         case '\r': {
; 190  : 
; 191  :             X = 0;

  0003f	66 83 65 f8 00	 and	 WORD PTR _X$[ebp], 0

; 192  :             break;

  00044	eb 19		 jmp	 SHORT $LN7@BlVideoPri
$LN4@BlVideoPri:

; 193  :         }
; 194  : 
; 195  :         case '\n': {
; 196  : 
; 197  :             X = BL_VIDEO_COL_COUNT;

  00046	66 c7 45 f8 50
	00		 mov	 WORD PTR _X$[ebp], 80	; 00000050H

; 198  :             break;

  0004c	eb 11		 jmp	 SHORT $LN7@BlVideoPri
$LN3@BlVideoPri:

; 199  :         }
; 200  : 
; 201  :         default: {
; 202  : 
; 203  :             BlVideoWriteCurrentCharacter(Character);

  0004e	8a 4d f4	 mov	 cl, BYTE PTR _Character$[ebp]
  00051	e8 00 00 00 00	 call	 ?BlVideoWriteCurrentCharacter@@YIXE@Z ; BlVideoWriteCurrentCharacter

; 204  :             X += 1;

  00056	0f b7 45 f8	 movzx	 eax, WORD PTR _X$[ebp]
  0005a	40		 inc	 eax
  0005b	66 89 45 f8	 mov	 WORD PTR _X$[ebp], ax
$LN7@BlVideoPri:

; 205  :         }
; 206  :     }
; 207  : 
; 208  : 
; 209  : 
; 210  :     if (X == BL_VIDEO_COL_COUNT) {

  0005f	0f b7 45 f8	 movzx	 eax, WORD PTR _X$[ebp]
  00063	83 f8 50	 cmp	 eax, 80			; 00000050H
  00066	75 0e		 jne	 SHORT $LN2@BlVideoPri

; 211  : 
; 212  :         X = 0;

  00068	66 83 65 f8 00	 and	 WORD PTR _X$[ebp], 0

; 213  :         Y += 1;

  0006d	0f b7 45 fc	 movzx	 eax, WORD PTR _Y$[ebp]
  00071	40		 inc	 eax
  00072	66 89 45 fc	 mov	 WORD PTR _Y$[ebp], ax
$LN2@BlVideoPri:

; 214  :     }
; 215  : 
; 216  :     if (Y == BL_VIDEO_ROW_COUNT) {

  00076	0f b7 45 fc	 movzx	 eax, WORD PTR _Y$[ebp]
  0007a	83 f8 32	 cmp	 eax, 50			; 00000032H
  0007d	75 0d		 jne	 SHORT $LN1@BlVideoPri

; 217  : 
; 218  :         BlVideoScrollUpWindow(1);

  0007f	b1 01		 mov	 cl, 1
  00081	e8 00 00 00 00	 call	 ?BlVideoScrollUpWindow@@YIXE@Z ; BlVideoScrollUpWindow

; 219  : 
; 220  :         Y = BL_VIDEO_ROW_COUNT - 1;

  00086	66 c7 45 fc 31
	00		 mov	 WORD PTR _Y$[ebp], 49	; 00000031H
$LN1@BlVideoPri:

; 221  :     }
; 222  : 
; 223  :     BlVideoSetCursorPosition(X, Y);

  0008c	8b 55 fc	 mov	 edx, DWORD PTR _Y$[ebp]
  0008f	8b 4d f8	 mov	 ecx, DWORD PTR _X$[ebp]
  00092	e8 00 00 00 00	 call	 ?BlVideoSetCursorPosition@@YIXGG@Z ; BlVideoSetCursorPosition

; 224  : }

  00097	c9		 leave
  00098	c3		 ret	 0
?BlVideoPrintCharacter@@YIXE@Z ENDP			; BlVideoPrintCharacter
_TEXT	ENDS
PUBLIC	?BlVideoPrintString@@YIXPBD@Z			; BlVideoPrintString
; Function compile flags: /Odsp
;	COMDAT ?BlVideoPrintString@@YIXPBD@Z
_TEXT	SEGMENT
_String$ = -8						; size = 4
_Next$ = -4						; size = 4
?BlVideoPrintString@@YIXPBD@Z PROC			; BlVideoPrintString, COMDAT
; _String$ = ecx

; 243  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	89 4d f8	 mov	 DWORD PTR _String$[ebp], ecx

; 244  :     PCSTR Next;
; 245  : 
; 246  :     Next = String;

  00008	8b 45 f8	 mov	 eax, DWORD PTR _String$[ebp]
  0000b	89 45 fc	 mov	 DWORD PTR _Next$[ebp], eax
$LN2@BlVideoPri@2:

; 247  : 
; 248  :     while (*Next != 0) {

  0000e	8b 45 fc	 mov	 eax, DWORD PTR _Next$[ebp]
  00011	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00014	85 c0		 test	 eax, eax
  00016	74 13		 je	 SHORT $LN3@BlVideoPri@2

; 249  : 
; 250  :         BlVideoPrintCharacter(*Next);

  00018	8b 45 fc	 mov	 eax, DWORD PTR _Next$[ebp]
  0001b	8a 08		 mov	 cl, BYTE PTR [eax]
  0001d	e8 00 00 00 00	 call	 ?BlVideoPrintCharacter@@YIXE@Z ; BlVideoPrintCharacter

; 251  :         Next += 1;

  00022	8b 45 fc	 mov	 eax, DWORD PTR _Next$[ebp]
  00025	40		 inc	 eax
  00026	89 45 fc	 mov	 DWORD PTR _Next$[ebp], eax

; 252  :     }

  00029	eb e3		 jmp	 SHORT $LN2@BlVideoPri@2
$LN3@BlVideoPri@2:

; 253  : }

  0002b	c9		 leave
  0002c	c3		 ret	 0
?BlVideoPrintString@@YIXPBD@Z ENDP			; BlVideoPrintString
_TEXT	ENDS
PUBLIC	?BlVideoPrintf@@YAEPBDZZ			; BlVideoPrintf
EXTRN	?BlRtlFormatString@@YIEPADKPBD0@Z:PROC		; BlRtlFormatString
; Function compile flags: /Odsp
;	COMDAT ?BlVideoPrintf@@YAEPBDZZ
_TEXT	SEGMENT
_Buffer$ = -4104					; size = 4096
_ArgumentList$ = -4					; size = 4
_Format$ = 8						; size = 4
?BlVideoPrintf@@YAEPBDZZ PROC				; BlVideoPrintf, COMDAT

; 280  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 10 00
	00		 sub	 esp, 4104		; 00001008H

; 281  :     va_list ArgumentList;
; 282  :     CHAR Buffer[4096];
; 283  : 
; 284  :     va_start(ArgumentList, Format);

  00009	8d 45 0c	 lea	 eax, DWORD PTR _Format$[ebp+4]
  0000c	89 45 fc	 mov	 DWORD PTR _ArgumentList$[ebp], eax

; 285  : 
; 286  :     if (BlRtlFormatString(Buffer,
; 287  :                           sizeof(Buffer),
; 288  :                           Format,
; 289  :                           ArgumentList) == FALSE) {

  0000f	ff 75 fc	 push	 DWORD PTR _ArgumentList$[ebp]
  00012	ff 75 08	 push	 DWORD PTR _Format$[ebp]
  00015	ba 00 10 00 00	 mov	 edx, 4096		; 00001000H
  0001a	8d 8d f8 ef ff
	ff		 lea	 ecx, DWORD PTR _Buffer$[ebp]
  00020	e8 00 00 00 00	 call	 ?BlRtlFormatString@@YIEPADKPBD0@Z ; BlRtlFormatString
  00025	0f b6 c0	 movzx	 eax, al
  00028	85 c0		 test	 eax, eax
  0002a	75 04		 jne	 SHORT $LN1@BlVideoPri@3

; 290  : 
; 291  :         return FALSE;

  0002c	32 c0		 xor	 al, al
  0002e	eb 0d		 jmp	 SHORT $LN2@BlVideoPri@3
$LN1@BlVideoPri@3:

; 292  :     }
; 293  : 
; 294  :     BlVideoPrintString(Buffer);

  00030	8d 8d f8 ef ff
	ff		 lea	 ecx, DWORD PTR _Buffer$[ebp]
  00036	e8 00 00 00 00	 call	 ?BlVideoPrintString@@YIXPBD@Z ; BlVideoPrintString

; 295  : 
; 296  :     return TRUE;

  0003b	b0 01		 mov	 al, 1
$LN2@BlVideoPri@3:

; 297  : }

  0003d	c9		 leave
  0003e	c3		 ret	 0
?BlVideoPrintf@@YAEPBDZZ ENDP				; BlVideoPrintf
; Function compile flags: /Odsp
_TEXT	ENDS
;	COMDAT ?BlVideoInitialize@@YIXXZ
_TEXT	SEGMENT
_Limit$ = -8						; size = 2
_Index$ = -4						; size = 2
?BlVideoInitialize@@YIXXZ PROC				; BlVideoInitialize, COMDAT

; 312  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx

; 313  :     UINT16 Index;
; 314  :     UINT16 Limit;
; 315  : 
; 316  :     Limit = BL_VIDEO_COL_COUNT * BL_VIDEO_ROW_COUNT;

  00005	66 c7 45 f8 a0
	0f		 mov	 WORD PTR _Limit$[ebp], 4000 ; 00000fa0H

; 317  : 
; 318  :     for (Index = 0; Index < Limit; Index += 1) {

  0000b	66 83 65 fc 00	 and	 WORD PTR _Index$[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN3@BlVideoIni
$LN2@BlVideoIni:
  00012	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  00016	40		 inc	 eax
  00017	66 89 45 fc	 mov	 WORD PTR _Index$[ebp], ax
$LN3@BlVideoIni:
  0001b	0f b7 45 fc	 movzx	 eax, WORD PTR _Index$[ebp]
  0001f	0f b7 4d f8	 movzx	 ecx, WORD PTR _Limit$[ebp]
  00023	3b c1		 cmp	 eax, ecx
  00025	7d 1a		 jge	 SHORT $LN1@BlVideoIni

; 319  : 
; 320  :         BlVideoBuffer[Index] = BlVideoDefaultAttribute | ' ';

  00027	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlVideoDefaultAttribute@@3GA ; BlVideoDefaultAttribute
  0002e	83 c8 20	 or	 eax, 32			; 00000020H
  00031	0f b7 4d fc	 movzx	 ecx, WORD PTR _Index$[ebp]
  00035	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BlVideoBuffer@@3PAGA ; BlVideoBuffer
  0003b	66 89 04 4a	 mov	 WORD PTR [edx+ecx*2], ax

; 321  :     }

  0003f	eb d1		 jmp	 SHORT $LN2@BlVideoIni
$LN1@BlVideoIni:

; 322  : 
; 323  :     BlVideoSetCursorPosition(0, 0);

  00041	66 33 d2	 xor	 dx, dx
  00044	66 33 c9	 xor	 cx, cx
  00047	e8 00 00 00 00	 call	 ?BlVideoSetCursorPosition@@YIXGG@Z ; BlVideoSetCursorPosition

; 324  : }

  0004c	c9		 leave
  0004d	c3		 ret	 0
?BlVideoInitialize@@YIXXZ ENDP				; BlVideoInitialize
_TEXT	ENDS
END
