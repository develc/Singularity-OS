; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Boot\SingLdrPc\bltrap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlIdtr@@3U_IDTR@@A				; BlIdtr
PUBLIC	?BlIdt@@3PAU_IDTE@@A				; BlIdt
_BSS	SEGMENT
?BlIdtr@@3U_IDTR@@A DT 01H DUP (?)			; BlIdtr
	ALIGN	8

?BlIdt@@3PAU_IDTE@@A DQ 020H DUP (?)			; BlIdt
_BSS	ENDS
PUBLIC	?BlTrapEnable@@YIXXZ				; BlTrapEnable
EXTRN	?BlTrapSetIdtr@@YIXPAU_IDTR@@@Z:PROC		; BlTrapSetIdtr
EXTRN	?BlTrapEnter@@YIXXZ:PROC			; BlTrapEnter
EXTRN	__aullshr:PROC
; Function compile flags: /Odsp
; File c:\users\cc\source\repos\singularity-os\base\boot\singldrpc\bltrap.cpp
;	COMDAT ?BlTrapEnable@@YIXXZ
_TEXT	SEGMENT
_Enter$3281 = -16					; size = 8
_i$3277 = -4						; size = 4
?BlTrapEnable@@YIXXZ PROC				; BlTrapEnable, COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 30   :     for (UINT32 i = 0; i < ARRAY_SIZE(BlIdt); i++) {

  00007	83 65 fc 00	 and	 DWORD PTR _i$3277[ebp], 0
  0000b	eb 07		 jmp	 SHORT $LN3@BlTrapEnab
$LN2@BlTrapEnab:
  0000d	8b 45 fc	 mov	 eax, DWORD PTR _i$3277[ebp]
  00010	40		 inc	 eax
  00011	89 45 fc	 mov	 DWORD PTR _i$3277[ebp], eax
$LN3@BlTrapEnab:
  00014	83 7d fc 20	 cmp	 DWORD PTR _i$3277[ebp], 32 ; 00000020H
  00018	73 79		 jae	 SHORT $LN1@BlTrapEnab

; 31   : 
; 32   :         UINT64 Enter = ((UINT64)BlTrapEnter) + i * 8;

  0001a	b8 00 00 00 00	 mov	 eax, OFFSET ?BlTrapEnter@@YIXXZ ; BlTrapEnter
  0001f	99		 cdq
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _i$3277[ebp]
  00023	c1 e1 03	 shl	 ecx, 3
  00026	33 f6		 xor	 esi, esi
  00028	03 c1		 add	 eax, ecx
  0002a	13 d6		 adc	 edx, esi
  0002c	89 45 f0	 mov	 DWORD PTR _Enter$3281[ebp], eax
  0002f	89 55 f4	 mov	 DWORD PTR _Enter$3281[ebp+4], edx

; 33   : 
; 34   :         BlIdt[i].Offset0To15  =(UINT16)((Enter >>  0) & 0xffff);

  00032	8b 45 f0	 mov	 eax, DWORD PTR _Enter$3281[ebp]
  00035	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0003a	8b 4d f4	 mov	 ecx, DWORD PTR _Enter$3281[ebp+4]
  0003d	83 e1 00	 and	 ecx, 0
  00040	8b 4d fc	 mov	 ecx, DWORD PTR _i$3277[ebp]
  00043	66 89 04 cd 00
	00 00 00	 mov	 WORD PTR ?BlIdt@@3PAU_IDTE@@A[ecx*8], ax

; 35   :         BlIdt[i].Offset16To31 = (UINT16)((Enter >> 16) & 0xffff);

  0004b	8b 45 f0	 mov	 eax, DWORD PTR _Enter$3281[ebp]
  0004e	8b 55 f4	 mov	 edx, DWORD PTR _Enter$3281[ebp+4]
  00051	b1 10		 mov	 cl, 16			; 00000010H
  00053	e8 00 00 00 00	 call	 __aullshr
  00058	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0005d	83 e2 00	 and	 edx, 0
  00060	8b 4d fc	 mov	 ecx, DWORD PTR _i$3277[ebp]
  00063	66 89 04 cd 06
	00 00 00	 mov	 WORD PTR ?BlIdt@@3PAU_IDTE@@A[ecx*8+6], ax

; 36   : #if defined(BOOT_X64)
; 37   :         BlIdt[i].Selector = LM_CODE_SELECTOR;
; 38   : #else
; 39   :         BlIdt[i].Selector = PM_CODE_SELECTOR;

  0006b	8b 45 fc	 mov	 eax, DWORD PTR _i$3277[ebp]
  0006e	66 c7 04 c5 02
	00 00 00 20 00	 mov	 WORD PTR ?BlIdt@@3PAU_IDTE@@A[eax*8+2], 32 ; 00000020H

; 40   : #endif
; 41   :         BlIdt[i].Flags = 0;

  00078	8b 45 fc	 mov	 eax, DWORD PTR _i$3277[ebp]
  0007b	c6 04 c5 04 00
	00 00 00	 mov	 BYTE PTR ?BlIdt@@3PAU_IDTE@@A[eax*8+4], 0

; 42   :         BlIdt[i].Access = 0x8e;

  00083	8b 45 fc	 mov	 eax, DWORD PTR _i$3277[ebp]
  00086	c6 04 c5 05 00
	00 00 8e	 mov	 BYTE PTR ?BlIdt@@3PAU_IDTE@@A[eax*8+5], 142 ; 0000008eH

; 43   : 
; 44   : #if defined(BOOT_X64)
; 45   :         BlIdt[i].Offset32To63 = (UINT32)((Enter >> 32) & 0xffffffff);
; 46   : #endif
; 47   : 
; 48   :     }

  0008e	e9 7a ff ff ff	 jmp	 $LN2@BlTrapEnab
$LN1@BlTrapEnab:

; 49   :     BlIdtr.Limit = 32 * 8;

  00093	66 c7 05 00 00
	00 00 00 01	 mov	 WORD PTR ?BlIdtr@@3U_IDTR@@A, 256 ; 00000100H

; 50   :     BlIdtr.Base = (UINT64)BlIdt;

  0009c	b8 00 00 00 00	 mov	 eax, OFFSET ?BlIdt@@3PAU_IDTE@@A ; BlIdt
  000a1	99		 cdq
  000a2	a3 02 00 00 00	 mov	 DWORD PTR ?BlIdtr@@3U_IDTR@@A+2, eax
  000a7	89 15 06 00 00
	00		 mov	 DWORD PTR ?BlIdtr@@3U_IDTR@@A+6, edx

; 51   : 
; 52   :     BlTrapSetIdtr(&BlIdtr);

  000ad	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlIdtr@@3U_IDTR@@A ; BlIdtr
  000b2	e8 00 00 00 00	 call	 ?BlTrapSetIdtr@@YIXPAU_IDTR@@@Z ; BlTrapSetIdtr

; 53   : }

  000b7	5e		 pop	 esi
  000b8	c9		 leave
  000b9	c3		 ret	 0
?BlTrapEnable@@YIXXZ ENDP				; BlTrapEnable
_TEXT	ENDS
PUBLIC	??_C@_05HAJCMBLP@?5?$CF02x?$AA@			; `string'
PUBLIC	??_C@_05GOOEJNEL@?5?5?$CFp?3?$AA@		; `string'
PUBLIC	??_C@_0BA@MJDKEIPF@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?6?$AA@ ; `string'
PUBLIC	??_C@_0BD@PPCAEFDO@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?5?$CFp?6?$AA@ ; `string'
PUBLIC	??_C@_03GPDAHCCA@?5?$CFp?$AA@			; `string'
PUBLIC	??_C@_0M@IHNIDGFO@?5?5?$CFp?3?5?$CFp?5?$CFp?$AA@ ; `string'
PUBLIC	??_C@_07BHLOBMCB@?5?5?$CF8x?3?6?$AA@		; `string'
PUBLIC	??_C@_0ED@OFJMDAEI@?5?5?5?5?5Frame?3?5?5?5?5?5next?5?5?5return?5?5?5@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_0BP@FGJNIPMP@?5?5esp?$DN?$CFp?5ebp?$DN?$CFp?5esi?$DN?$CFp?5edi?$DN?$CFp?6?$AA@ ; `string'
PUBLIC	??_C@_0BP@NGFJDGBA@?5?5eax?$DN?$CFp?5ebx?$DN?$CFp?5ecx?$DN?$CFp?5edx?$DN?$CFp?6?$AA@ ; `string'
PUBLIC	??_C@_0CI@CGBDFPHM@?5?5eip?$DN?$CFp?5efl?$DN?$CFp?5cr2?$DN?$CFp?5cs?$DN?$CF2x?5nu@ ; `string'
PUBLIC	??_C@_0CE@DFHPAAJD@?6?$CK?$CK?$CK?5Fatal?5Trap?3?50x?$CF2x?3?$CFp?5?$FLerr?$DN?$CF@ ; `string'
PUBLIC	?BlTrapFatal@@YIXKPAU_BL_TRAP_CONTEXT@@@Z	; BlTrapFatal
EXTRN	?BlVideoPrintf@@YAEPBDZZ:PROC			; BlVideoPrintf
;	COMDAT ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
CONST	SEGMENT
??_C@_05HAJCMBLP@?5?$CF02x?$AA@ DB ' %02x', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GOOEJNEL@?5?5?$CFp?3?$AA@
CONST	SEGMENT
??_C@_05GOOEJNEL@?5?5?$CFp?3?$AA@ DB '  %p:', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MJDKEIPF@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?6?$AA@
CONST	SEGMENT
??_C@_0BA@MJDKEIPF@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?6?$AA@ DB '  %p: %p %'
	DB	'p %p', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PPCAEFDO@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?5?$CFp?6?$AA@
CONST	SEGMENT
??_C@_0BD@PPCAEFDO@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?5?$CFp?6?$AA@ DB '  %'
	DB	'p: %p %p %p %p', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPDAHCCA@?5?$CFp?$AA@
CONST	SEGMENT
??_C@_03GPDAHCCA@?5?$CFp?$AA@ DB ' %p', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IHNIDGFO@?5?5?$CFp?3?5?$CFp?5?$CFp?$AA@
CONST	SEGMENT
??_C@_0M@IHNIDGFO@?5?5?$CFp?3?5?$CFp?5?$CFp?$AA@ DB '  %p: %p %p', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BHLOBMCB@?5?5?$CF8x?3?6?$AA@
CONST	SEGMENT
??_C@_07BHLOBMCB@?5?5?$CF8x?3?6?$AA@ DB '  %8x:', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@OFJMDAEI@?5?5?5?5?5Frame?3?5?5?5?5?5next?5?5?5return?5?5?5@
CONST	SEGMENT
??_C@_0ED@OFJMDAEI@?5?5?5?5?5Frame?3?5?5?5?5?5next?5?5?5return?5?5?5@ DB ' '
	DB	'    Frame:     next   return     arg0     arg1     arg2     a'
	DB	'rg3', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FGJNIPMP@?5?5esp?$DN?$CFp?5ebp?$DN?$CFp?5esi?$DN?$CFp?5edi?$DN?$CFp?6?$AA@
CONST	SEGMENT
??_C@_0BP@FGJNIPMP@?5?5esp?$DN?$CFp?5ebp?$DN?$CFp?5esi?$DN?$CFp?5edi?$DN?$CFp?6?$AA@ DB ' '
	DB	' esp=%p ebp=%p esi=%p edi=%p', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NGFJDGBA@?5?5eax?$DN?$CFp?5ebx?$DN?$CFp?5ecx?$DN?$CFp?5edx?$DN?$CFp?6?$AA@
CONST	SEGMENT
??_C@_0BP@NGFJDGBA@?5?5eax?$DN?$CFp?5ebx?$DN?$CFp?5ecx?$DN?$CFp?5edx?$DN?$CFp?6?$AA@ DB ' '
	DB	' eax=%p ebx=%p ecx=%p edx=%p', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CGBDFPHM@?5?5eip?$DN?$CFp?5efl?$DN?$CFp?5cr2?$DN?$CFp?5cs?$DN?$CF2x?5nu@
CONST	SEGMENT
??_C@_0CI@CGBDFPHM@?5?5eip?$DN?$CFp?5efl?$DN?$CFp?5cr2?$DN?$CFp?5cs?$DN?$CF2x?5nu@ DB ' '
	DB	' eip=%p efl=%p cr2=%p cs=%2x num=%02x', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DFHPAAJD@?6?$CK?$CK?$CK?5Fatal?5Trap?3?50x?$CF2x?3?$CFp?5?$FLerr?$DN?$CF@
CONST	SEGMENT
??_C@_0CE@DFHPAAJD@?6?$CK?$CK?$CK?5Fatal?5Trap?3?50x?$CF2x?3?$CFp?5?$FLerr?$DN?$CF@ DB 0aH
	DB	'*** Fatal Trap: 0x%2x:%p [err=%p]', 0aH, 00H ; `string'
; Function compile flags: /Odsp
CONST	ENDS
;	COMDAT ?BlTrapFatal@@YIXKPAU_BL_TRAP_CONTEXT@@@Z
_TEXT	SEGMENT
_Context$ = -44						; size = 4
_Trap$ = -40						; size = 4
_i$3337 = -36						; size = 4
_i$3329 = -32						; size = 4
_i$3323 = -28						; size = 4
_i$3315 = -24						; size = 4
_end$3310 = -20						; size = 4
_i$3300 = -16						; size = 4
_eip$ = -12						; size = 4
_esp$ = -8						; size = 4
_ebp$ = -4						; size = 4
?BlTrapFatal@@YIXKPAU_BL_TRAP_CONTEXT@@@Z PROC		; BlTrapFatal, COMDAT
; _Trap$ = ecx
; _Context$ = edx

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 55 d4	 mov	 DWORD PTR _Context$[ebp], edx
  00009	89 4d d8	 mov	 DWORD PTR _Trap$[ebp], ecx

; 74   :     BlVideoPrintf("\n*** Fatal Trap: 0x%2x:%p [err=%p]\n",
; 75   :                   Trap, Context, Context->Err);

  0000c	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0000f	ff 70 28	 push	 DWORD PTR [eax+40]
  00012	ff 75 d4	 push	 DWORD PTR _Context$[ebp]
  00015	ff 75 d8	 push	 DWORD PTR _Trap$[ebp]
  00018	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@DFHPAAJD@?6?$CK?$CK?$CK?5Fatal?5Trap?3?50x?$CF2x?3?$CFp?5?$FLerr?$DN?$CF@
  0001d	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00022	83 c4 10	 add	 esp, 16			; 00000010H

; 76   : 
; 77   : #if defined(BOOT_X86)
; 78   : 
; 79   :     BlVideoPrintf("  eip=%p efl=%p cr2=%p cs=%2x num=%02x\n",
; 80   :                   Context->Eip, Context->Efl, Context->Cr2,
; 81   :                   (UINT32)Context->Cs0, (UINT32)Context->Num);

  00025	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00028	ff 70 24	 push	 DWORD PTR [eax+36]
  0002b	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0002e	ff 70 30	 push	 DWORD PTR [eax+48]
  00031	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00034	ff 30		 push	 DWORD PTR [eax]
  00036	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00039	ff 70 34	 push	 DWORD PTR [eax+52]
  0003c	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0003f	ff 70 2c	 push	 DWORD PTR [eax+44]
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@CGBDFPHM@?5?5eip?$DN?$CFp?5efl?$DN?$CFp?5cr2?$DN?$CFp?5cs?$DN?$CF2x?5nu@
  00047	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  0004c	83 c4 18	 add	 esp, 24			; 00000018H

; 82   :     BlVideoPrintf("  eax=%p ebx=%p ecx=%p edx=%p\n",
; 83   :                   Context->Eax, Context->Ebx, Context->Ecx, Context->Edx);

  0004f	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00052	ff 70 14	 push	 DWORD PTR [eax+20]
  00055	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00058	ff 70 18	 push	 DWORD PTR [eax+24]
  0005b	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0005e	ff 70 1c	 push	 DWORD PTR [eax+28]
  00061	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00064	ff 70 20	 push	 DWORD PTR [eax+32]
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@NGFJDGBA@?5?5eax?$DN?$CFp?5ebx?$DN?$CFp?5ecx?$DN?$CFp?5edx?$DN?$CFp?6?$AA@
  0006c	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00071	83 c4 14	 add	 esp, 20			; 00000014H

; 84   :     BlVideoPrintf("  esp=%p ebp=%p esi=%p edi=%p\n",
; 85   :                   Context->Esp, Context->Ebp, Context->Esi, Context->Edi);

  00074	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00077	ff 70 0c	 push	 DWORD PTR [eax+12]
  0007a	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0007d	ff 70 10	 push	 DWORD PTR [eax+16]
  00080	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00083	ff 70 08	 push	 DWORD PTR [eax+8]
  00086	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00089	ff 70 04	 push	 DWORD PTR [eax+4]
  0008c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@FGJNIPMP@?5?5esp?$DN?$CFp?5ebp?$DN?$CFp?5esi?$DN?$CFp?5edi?$DN?$CFp?6?$AA@
  00091	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00096	83 c4 14	 add	 esp, 20			; 00000014H

; 86   : 
; 87   :     ULONG_PTR * ebp = (ULONG_PTR *)Context->Ebp;

  00099	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0009c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0009f	89 45 fc	 mov	 DWORD PTR _ebp$[ebp], eax

; 88   :     BlVideoPrintf("\n");

  000a2	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  000a7	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  000ac	59		 pop	 ecx

; 89   :     BlVideoPrintf("     Frame:     next   return     arg0     arg1     arg2     arg3\n");

  000ad	68 00 00 00 00	 push	 OFFSET ??_C@_0ED@OFJMDAEI@?5?5?5?5?5Frame?3?5?5?5?5?5next?5?5?5return?5?5?5@
  000b2	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  000b7	59		 pop	 ecx

; 90   :     for (int i = 0; i < 10; i++) {

  000b8	83 65 f0 00	 and	 DWORD PTR _i$3300[ebp], 0
  000bc	eb 07		 jmp	 SHORT $LN20@BlTrapFata
$LN19@BlTrapFata:
  000be	8b 45 f0	 mov	 eax, DWORD PTR _i$3300[ebp]
  000c1	40		 inc	 eax
  000c2	89 45 f0	 mov	 DWORD PTR _i$3300[ebp], eax
$LN20@BlTrapFata:
  000c5	83 7d f0 0a	 cmp	 DWORD PTR _i$3300[ebp], 10 ; 0000000aH
  000c9	0f 8d ad 00 00
	00		 jge	 $LN18@BlTrapFata

; 91   :         if (ebp < (ULONG_PTR*)0x10000 || ebp > (ULONG_PTR*)0x7fffffff) {

  000cf	81 7d fc 00 00
	01 00		 cmp	 DWORD PTR _ebp$[ebp], 65536 ; 00010000H
  000d6	72 09		 jb	 SHORT $LN16@BlTrapFata
  000d8	81 7d fc ff ff
	ff 7f		 cmp	 DWORD PTR _ebp$[ebp], 2147483647 ; 7fffffffH
  000df	76 14		 jbe	 SHORT $LN17@BlTrapFata
$LN16@BlTrapFata:

; 92   :             BlVideoPrintf("  %8x:\n", (ULONG_PTR)ebp);

  000e1	ff 75 fc	 push	 DWORD PTR _ebp$[ebp]
  000e4	68 00 00 00 00	 push	 OFFSET ??_C@_07BHLOBMCB@?5?5?$CF8x?3?6?$AA@
  000e9	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  000ee	59		 pop	 ecx
  000ef	59		 pop	 ecx

; 93   :             break;

  000f0	e9 87 00 00 00	 jmp	 $LN18@BlTrapFata
$LN17@BlTrapFata:

; 94   :         }
; 95   :         ULONG_PTR *end = (ULONG_PTR *)ebp[0];

  000f5	8b 45 fc	 mov	 eax, DWORD PTR _ebp$[ebp]
  000f8	8b 00		 mov	 eax, DWORD PTR [eax]
  000fa	89 45 ec	 mov	 DWORD PTR _end$3310[ebp], eax

; 96   :         if (end < ebp) {

  000fd	8b 45 ec	 mov	 eax, DWORD PTR _end$3310[ebp]
  00100	3b 45 fc	 cmp	 eax, DWORD PTR _ebp$[ebp]
  00103	73 09		 jae	 SHORT $LN15@BlTrapFata

; 97   :             end = ebp + 6;

  00105	8b 45 fc	 mov	 eax, DWORD PTR _ebp$[ebp]
  00108	83 c0 18	 add	 eax, 24			; 00000018H
  0010b	89 45 ec	 mov	 DWORD PTR _end$3310[ebp], eax
$LN15@BlTrapFata:

; 98   :         }
; 99   : 
; 100  :         BlVideoPrintf("  %p: %p %p",
; 101  :                       (ULONG_PTR)ebp, ebp[0], ebp[1]);

  0010e	8b 45 fc	 mov	 eax, DWORD PTR _ebp$[ebp]
  00111	ff 70 04	 push	 DWORD PTR [eax+4]
  00114	8b 45 fc	 mov	 eax, DWORD PTR _ebp$[ebp]
  00117	ff 30		 push	 DWORD PTR [eax]
  00119	ff 75 fc	 push	 DWORD PTR _ebp$[ebp]
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IHNIDGFO@?5?5?$CFp?3?5?$CFp?5?$CFp?$AA@
  00121	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00126	83 c4 10	 add	 esp, 16			; 00000010H

; 102  :         for (int i = 2; i < 6 && ebp + i < end; i++) {

  00129	c7 45 e8 02 00
	00 00		 mov	 DWORD PTR _i$3315[ebp], 2
  00130	eb 07		 jmp	 SHORT $LN14@BlTrapFata
$LN13@BlTrapFata:
  00132	8b 45 e8	 mov	 eax, DWORD PTR _i$3315[ebp]
  00135	40		 inc	 eax
  00136	89 45 e8	 mov	 DWORD PTR _i$3315[ebp], eax
$LN14@BlTrapFata:
  00139	83 7d e8 06	 cmp	 DWORD PTR _i$3315[ebp], 6
  0013d	7d 25		 jge	 SHORT $LN12@BlTrapFata
  0013f	8b 45 e8	 mov	 eax, DWORD PTR _i$3315[ebp]
  00142	8b 4d fc	 mov	 ecx, DWORD PTR _ebp$[ebp]
  00145	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  00148	3b 45 ec	 cmp	 eax, DWORD PTR _end$3310[ebp]
  0014b	73 17		 jae	 SHORT $LN12@BlTrapFata

; 103  :             BlVideoPrintf(" %p", ebp[i]);

  0014d	8b 45 e8	 mov	 eax, DWORD PTR _i$3315[ebp]
  00150	8b 4d fc	 mov	 ecx, DWORD PTR _ebp$[ebp]
  00153	ff 34 81	 push	 DWORD PTR [ecx+eax*4]
  00156	68 00 00 00 00	 push	 OFFSET ??_C@_03GPDAHCCA@?5?$CFp?$AA@
  0015b	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00160	59		 pop	 ecx
  00161	59		 pop	 ecx

; 104  :         }

  00162	eb ce		 jmp	 SHORT $LN13@BlTrapFata
$LN12@BlTrapFata:

; 105  :         BlVideoPrintf("\n");

  00164	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  00169	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  0016e	59		 pop	 ecx

; 106  : 
; 107  :         ebp = (ULONG_PTR *)ebp[0];

  0016f	8b 45 fc	 mov	 eax, DWORD PTR _ebp$[ebp]
  00172	8b 00		 mov	 eax, DWORD PTR [eax]
  00174	89 45 fc	 mov	 DWORD PTR _ebp$[ebp], eax

; 108  :     }

  00177	e9 42 ff ff ff	 jmp	 $LN19@BlTrapFata
$LN18@BlTrapFata:

; 109  : 
; 110  :     BlVideoPrintf("\n");

  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  00181	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00186	59		 pop	 ecx

; 111  :     ULONG_PTR * esp = (ULONG_PTR *)(Context->Esp);

  00187	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  0018a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0018d	89 45 f8	 mov	 DWORD PTR _esp$[ebp], eax

; 112  :     for (int i = 0; i < 6; i++) {

  00190	83 65 e4 00	 and	 DWORD PTR _i$3323[ebp], 0
  00194	eb 07		 jmp	 SHORT $LN11@BlTrapFata
$LN10@BlTrapFata:
  00196	8b 45 e4	 mov	 eax, DWORD PTR _i$3323[ebp]
  00199	40		 inc	 eax
  0019a	89 45 e4	 mov	 DWORD PTR _i$3323[ebp], eax
$LN11@BlTrapFata:
  0019d	83 7d e4 06	 cmp	 DWORD PTR _i$3323[ebp], 6
  001a1	7d 32		 jge	 SHORT $LN9@BlTrapFata

; 113  :         BlVideoPrintf("  %p: %p %p %p %p\n", esp, esp[0], esp[1], esp[2], esp[3]);

  001a3	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  001a6	ff 70 0c	 push	 DWORD PTR [eax+12]
  001a9	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  001ac	ff 70 08	 push	 DWORD PTR [eax+8]
  001af	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  001b2	ff 70 04	 push	 DWORD PTR [eax+4]
  001b5	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  001b8	ff 30		 push	 DWORD PTR [eax]
  001ba	ff 75 f8	 push	 DWORD PTR _esp$[ebp]
  001bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PPCAEFDO@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?5?$CFp?6?$AA@
  001c2	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  001c7	83 c4 18	 add	 esp, 24			; 00000018H

; 114  :         esp += 4;

  001ca	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  001cd	83 c0 10	 add	 eax, 16			; 00000010H
  001d0	89 45 f8	 mov	 DWORD PTR _esp$[ebp], eax

; 115  :     }

  001d3	eb c1		 jmp	 SHORT $LN10@BlTrapFata
$LN9@BlTrapFata:

; 116  :     BlVideoPrintf("\n");

  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  001da	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  001df	59		 pop	 ecx

; 117  : 
; 118  :     esp = (ULONG_PTR *)(Context);

  001e0	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  001e3	89 45 f8	 mov	 DWORD PTR _esp$[ebp], eax

; 119  :     for (int i = 0; i < 6; i++) {

  001e6	83 65 e0 00	 and	 DWORD PTR _i$3329[ebp], 0
  001ea	eb 07		 jmp	 SHORT $LN8@BlTrapFata
$LN7@BlTrapFata:
  001ec	8b 45 e0	 mov	 eax, DWORD PTR _i$3329[ebp]
  001ef	40		 inc	 eax
  001f0	89 45 e0	 mov	 DWORD PTR _i$3329[ebp], eax
$LN8@BlTrapFata:
  001f3	83 7d e0 06	 cmp	 DWORD PTR _i$3329[ebp], 6
  001f7	7d 32		 jge	 SHORT $LN6@BlTrapFata

; 120  :         BlVideoPrintf("  %p: %p %p %p\n", esp, esp[0], esp[1], esp[2], esp[3]);

  001f9	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  001fc	ff 70 0c	 push	 DWORD PTR [eax+12]
  001ff	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  00202	ff 70 08	 push	 DWORD PTR [eax+8]
  00205	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  00208	ff 70 04	 push	 DWORD PTR [eax+4]
  0020b	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  0020e	ff 30		 push	 DWORD PTR [eax]
  00210	ff 75 f8	 push	 DWORD PTR _esp$[ebp]
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@MJDKEIPF@?5?5?$CFp?3?5?$CFp?5?$CFp?5?$CFp?6?$AA@
  00218	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  0021d	83 c4 18	 add	 esp, 24			; 00000018H

; 121  :         esp += 4;

  00220	8b 45 f8	 mov	 eax, DWORD PTR _esp$[ebp]
  00223	83 c0 10	 add	 eax, 16			; 00000010H
  00226	89 45 f8	 mov	 DWORD PTR _esp$[ebp], eax

; 122  :     }

  00229	eb c1		 jmp	 SHORT $LN7@BlTrapFata
$LN6@BlTrapFata:

; 123  : 
; 124  :     BlVideoPrintf("\n");

  0022b	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  00230	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00235	59		 pop	 ecx

; 125  :     UINT8 * eip = (UINT8 *)Context->Eip;

  00236	8b 45 d4	 mov	 eax, DWORD PTR _Context$[ebp]
  00239	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0023c	89 45 f4	 mov	 DWORD PTR _eip$[ebp], eax

; 126  :     BlVideoPrintf("  %p:", eip);

  0023f	ff 75 f4	 push	 DWORD PTR _eip$[ebp]
  00242	68 00 00 00 00	 push	 OFFSET ??_C@_05GOOEJNEL@?5?5?$CFp?3?$AA@
  00247	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  0024c	59		 pop	 ecx
  0024d	59		 pop	 ecx

; 127  :     for (int i = 0; i < 12; i++) {

  0024e	83 65 dc 00	 and	 DWORD PTR _i$3337[ebp], 0
  00252	eb 07		 jmp	 SHORT $LN5@BlTrapFata
$LN4@BlTrapFata:
  00254	8b 45 dc	 mov	 eax, DWORD PTR _i$3337[ebp]
  00257	40		 inc	 eax
  00258	89 45 dc	 mov	 DWORD PTR _i$3337[ebp], eax
$LN5@BlTrapFata:
  0025b	83 7d dc 0c	 cmp	 DWORD PTR _i$3337[ebp], 12 ; 0000000cH
  0025f	7d 18		 jge	 SHORT $LN3@BlTrapFata

; 128  :         BlVideoPrintf(" %02x", eip[i]);

  00261	8b 45 f4	 mov	 eax, DWORD PTR _eip$[ebp]
  00264	03 45 dc	 add	 eax, DWORD PTR _i$3337[ebp]
  00267	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  0026a	50		 push	 eax
  0026b	68 00 00 00 00	 push	 OFFSET ??_C@_05HAJCMBLP@?5?$CF02x?$AA@
  00270	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00275	59		 pop	 ecx
  00276	59		 pop	 ecx

; 129  :     }

  00277	eb db		 jmp	 SHORT $LN4@BlTrapFata
$LN3@BlTrapFata:

; 130  : 
; 131  :     BlVideoPrintf("\n");

  00279	68 00 00 00 00	 push	 OFFSET ??_C@_01EEMJAFIK@?6?$AA@
  0027e	e8 00 00 00 00	 call	 ?BlVideoPrintf@@YAEPBDZZ ; BlVideoPrintf
  00283	59		 pop	 ecx
$LN2@BlTrapFata:

; 132  : 
; 133  : #elif defined(BOOT_X64)
; 134  : 
; 135  :     BlVideoPrintf("  rip=%p rfl=%p cs=%2x num=%02x\n",
; 136  :                   Context->Rip, Context->Rfl, (UINT32)Context->Cs0, (UINT32)Context->Num);
; 137  :     BlVideoPrintf("  rsp=%p rbp=%p cr2=%p\n",
; 138  :                   Context->Rsp, Context->Rbp, Context->Cr2);
; 139  :     BlVideoPrintf("  rax=%p rbx=%p rcx=%p\n",
; 140  :                   Context->Rax, Context->Rbx, Context->Rcx);
; 141  :     BlVideoPrintf("  rdx=%p rsi=%p rdi=%p\n",
; 142  :                   Context->Rdx, Context->Rsi, Context->Rdi);
; 143  :     BlVideoPrintf("  r08=%p r09=%p r10=%p\n",
; 144  :                   Context->R8, Context->R9, Context->R10);
; 145  :     BlVideoPrintf("  r11=%p r12=%p r13=%p\n",
; 146  :                   Context->R11, Context->R12, Context->R13);
; 147  :     BlVideoPrintf("  r14=%p r15=%p\n",
; 148  :                   Context->R14, Context->R15);
; 149  : 
; 150  :     ULONG_PTR * rbp = (ULONG_PTR *)Context->Rbp;
; 151  :     BlVideoPrintf("\n");
; 152  :     BlVideoPrintf("             Frame:             next           return             arg0\n");
; 153  :     for (int i = 0; i < 10; i++) {
; 154  :         if (rbp < (ULONG_PTR*)0x10000 || rbp > (ULONG_PTR*)0x7fffffff) {
; 155  :             BlVideoPrintf("  %p:\n", (ULONG_PTR)rbp);
; 156  :             break;
; 157  :         }
; 158  :         ULONG_PTR *end = (ULONG_PTR *)rbp[0];
; 159  :         if (end < rbp) {
; 160  :             end = rbp + 3;
; 161  :         }
; 162  : 
; 163  :         BlVideoPrintf("  %p: %p %p",
; 164  :                       (ULONG_PTR)rbp, rbp[0], rbp[1]);
; 165  :         for (int i = 2; i < 3 && rbp + i < end; i++) {
; 166  :             BlVideoPrintf(" %p", rbp[i]);
; 167  :         }
; 168  :         BlVideoPrintf("\n");
; 169  : 
; 170  :         rbp = (ULONG_PTR *)rbp[0];
; 171  :     }
; 172  : 
; 173  :     BlVideoPrintf("\n");
; 174  :     ULONG_PTR * rsp = (ULONG_PTR *)(Context->Rsp);
; 175  :     for (int i = 0; i < 6; i++) {
; 176  :         BlVideoPrintf("  %p: %p %p %p\n", rsp, rsp[0], rsp[1], rsp[2]);
; 177  :         rsp += 3;
; 178  :     }
; 179  :     BlVideoPrintf("\n");
; 180  : 
; 181  :     rsp = (ULONG_PTR *)(Context);
; 182  :     for (int i = 0; i < 6; i++) {
; 183  :         BlVideoPrintf("  %p: %p %p %p\n", rsp, rsp[0], rsp[1], rsp[2]);
; 184  :         rsp += 3;
; 185  :     }
; 186  : 
; 187  :     BlVideoPrintf("\n");
; 188  :     UINT8 * rip = (UINT8 *)Context->Rip;
; 189  :     BlVideoPrintf("  %p:", rip);
; 190  :     for (int i = 0; i < 12; i++) {
; 191  :         BlVideoPrintf(" %02x", rip[i]);
; 192  :     }
; 193  : 
; 194  :     BlVideoPrintf("\n");
; 195  : 
; 196  : #endif
; 197  : 
; 198  :     for (;;);

  00284	eb fe		 jmp	 SHORT $LN2@BlTrapFata

; 199  : }

  00286	c9		 leave
  00287	c3		 ret	 0
?BlTrapFatal@@YIXKPAU_BL_TRAP_CONTEXT@@@Z ENDP		; BlTrapFatal
_TEXT	ENDS
END
