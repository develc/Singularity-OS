; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Boot\SingLdrPc\blsmap.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlSystemMemoryMap@@3U_BL_SMAP@@A		; BlSystemMemoryMap
_BSS	SEGMENT
?BlSystemMemoryMap@@3U_BL_SMAP@@A DB 0c08H DUP (?)	; BlSystemMemoryMap
_BSS	ENDS
PUBLIC	??_C@_0BL@MFOMDCLF@SMAP?3?5INT?515?1E820?5failed?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0L@NPJEFNNA@blsmap?4cpp?$AA@		; `string'
PUBLIC	?BlGetBeb@@YIPAU_BEB@@XZ			; BlGetBeb
PUBLIC	?BlSmapInitialize@@YIXXZ			; BlSmapInitialize
EXTRN	?BlRtlHaltInternal@@YIXPBDK@Z:PROC		; BlRtlHaltInternal
EXTRN	?BlRtlPrintf@@YAEPBDZZ:PROC			; BlRtlPrintf
EXTRN	?BlRtlCallLegacyInterruptService@@YIXEPAU_BL_LEGACY_CALL_CONTEXT@@0@Z:PROC ; BlRtlCallLegacyInterruptService
EXTRN	?BlRtlZeroMemory@@YIXPAXK@Z:PROC		; BlRtlZeroMemory
EXTRN	?BlRtlAssertFailed@@YIXPBDK@Z:PROC		; BlRtlAssertFailed
EXTRN	?BlRtlCopyMemory@@YIXPAXPBXK@Z:PROC		; BlRtlCopyMemory
;	COMDAT ??_C@_0BL@MFOMDCLF@SMAP?3?5INT?515?1E820?5failed?$CB?6?$AA@
; File c:\users\cc\source\repos\singularity-os\base\boot\singldrpc\blsmap.cpp
CONST	SEGMENT
??_C@_0BL@MFOMDCLF@SMAP?3?5INT?515?1E820?5failed?$CB?6?$AA@ DB 'SMAP: INT'
	DB	' 15/E820 failed!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NPJEFNNA@blsmap?4cpp?$AA@
CONST	SEGMENT
??_C@_0L@NPJEFNNA@blsmap?4cpp?$AA@ DB 'blsmap.cpp', 00H	; `string'
; Function compile flags: /Odsp
CONST	ENDS
;	COMDAT ?BlSmapInitialize@@YIXXZ
_TEXT	SEGMENT
_Context$3289 = -64					; size = 36
_Address$3288 = -28					; size = 4
_ContinuationValue$3290 = -24				; size = 4
_pn$3284 = -20						; size = 4
_cb$3280 = -16						; size = 4
_pb$3278 = -12						; size = 4
_Beb$ = -8						; size = 4
_Index$ = -4						; size = 4
?BlSmapInitialize@@YIXXZ PROC				; BlSmapInitialize, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 40	 sub	 esp, 64			; 00000040H

; 89   :     UINT32 Index;
; 90   :     PBEB Beb;
; 91   : 
; 92   :     Beb = BlGetBeb();

  00006	e8 00 00 00 00	 call	 ?BlGetBeb@@YIPAU_BEB@@XZ ; BlGetBeb
  0000b	89 45 f8	 mov	 DWORD PTR _Beb$[ebp], eax

; 93   : 
; 94   :     if (Beb->SmapAddr != 0) {

  0000e	8b 45 f8	 mov	 eax, DWORD PTR _Beb$[ebp]
  00011	83 78 0c 00	 cmp	 DWORD PTR [eax+12], 0
  00015	74 65		 je	 SHORT $LN11@BlSmapInit

; 95   :         PUINT8 pb = (PUINT8)Beb->SmapAddr;

  00017	8b 45 f8	 mov	 eax, DWORD PTR _Beb$[ebp]
  0001a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0001d	89 45 f4	 mov	 DWORD PTR _pb$3278[ebp], eax

; 96   :         UINT32 cb = Beb->SmapSize;

  00020	8b 45 f8	 mov	 eax, DWORD PTR _Beb$[ebp]
  00023	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00026	89 45 f0	 mov	 DWORD PTR _cb$3280[ebp], eax

; 97   : 
; 98   :         for (Index = 0; Index < cb / 20; Index++) {

  00029	83 65 fc 00	 and	 DWORD PTR _Index$[ebp], 0
  0002d	eb 07		 jmp	 SHORT $LN10@BlSmapInit
$LN9@BlSmapInit:
  0002f	8b 45 fc	 mov	 eax, DWORD PTR _Index$[ebp]
  00032	40		 inc	 eax
  00033	89 45 fc	 mov	 DWORD PTR _Index$[ebp], eax
$LN10@BlSmapInit:
  00036	8b 45 f0	 mov	 eax, DWORD PTR _cb$3280[ebp]
  00039	33 d2		 xor	 edx, edx
  0003b	6a 14		 push	 20			; 00000014H
  0003d	59		 pop	 ecx
  0003e	f7 f1		 div	 ecx
  00040	39 45 fc	 cmp	 DWORD PTR _Index$[ebp], eax
  00043	73 2a		 jae	 SHORT $LN8@BlSmapInit

; 99   :             PUINT8 pn = pb + Index * 20;

  00045	8b 45 fc	 mov	 eax, DWORD PTR _Index$[ebp]
  00048	6b c0 14	 imul	 eax, 20			; 00000014H
  0004b	03 45 f4	 add	 eax, DWORD PTR _pb$3278[ebp]
  0004e	89 45 ec	 mov	 DWORD PTR _pn$3284[ebp], eax

; 100  :             BlRtlCopyMemory((PVOID)&BlSystemMemoryMap.Entry[Index],
; 101  :                             (PVOID)(pb + Index * 20), 20);

  00051	6a 14		 push	 20			; 00000014H
  00053	8b 55 fc	 mov	 edx, DWORD PTR _Index$[ebp]
  00056	6b d2 14	 imul	 edx, 20			; 00000014H
  00059	03 55 f4	 add	 edx, DWORD PTR _pb$3278[ebp]
  0005c	8b 4d fc	 mov	 ecx, DWORD PTR _Index$[ebp]
  0005f	6b c9 18	 imul	 ecx, 24			; 00000018H
  00062	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?BlSystemMemoryMap@@3U_BL_SMAP@@A ; BlSystemMemoryMap
  00068	e8 00 00 00 00	 call	 ?BlRtlCopyMemory@@YIXPAXPBXK@Z ; BlRtlCopyMemory

; 102  : #if 0
; 103  :             BlVideoPrintf("%4d: %p %p %8x\n",
; 104  :                           Index,
; 105  :                           ((UINT64 *)(pn + 0))[0],
; 106  :                           ((UINT64 *)(pn + 8))[0],
; 107  :                           ((UINT32 *)(pn + 16))[0]);
; 108  : #endif
; 109  :         }

  0006d	eb c0		 jmp	 SHORT $LN9@BlSmapInit
$LN8@BlSmapInit:

; 110  :         BlSystemMemoryMap.EntryCount = Index;

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _Index$[ebp]
  00072	a3 00 0c 00 00	 mov	 DWORD PTR ?BlSystemMemoryMap@@3U_BL_SMAP@@A+3072, eax

; 111  :     }
; 112  :     else {

  00077	e9 bf 00 00 00	 jmp	 $LN12@BlSmapInit
$LN11@BlSmapInit:

; 113  :         ULONG_PTR Address;
; 114  :         BL_LEGACY_CALL_CONTEXT Context;
; 115  :         UINT32 ContinuationValue;
; 116  : 
; 117  :         Index = 0;

  0007c	83 65 fc 00	 and	 DWORD PTR _Index$[ebp], 0

; 118  :         ContinuationValue = 0;

  00080	83 65 e8 00	 and	 DWORD PTR _ContinuationValue$3290[ebp], 0
$LN6@BlSmapInit:

; 119  : 
; 120  :         for (;;) {
; 121  : 
; 122  :             BLASSERT(Index < (sizeof(BlSystemMemoryMap.Entry) / sizeof(BlSystemMemoryMap.Entry[0])));

  00084	81 7d fc 80 00
	00 00		 cmp	 DWORD PTR _Index$[ebp], 128 ; 00000080H
  0008b	72 0d		 jb	 SHORT $LN4@BlSmapInit
  0008d	6a 7a		 push	 122			; 0000007aH
  0008f	5a		 pop	 edx
  00090	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@NPJEFNNA@blsmap?4cpp?$AA@
  00095	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN4@BlSmapInit:

; 123  : 
; 124  :             BlRtlZeroMemory(&Context, sizeof(Context));

  0009a	6a 24		 push	 36			; 00000024H
  0009c	5a		 pop	 edx
  0009d	8d 4d c0	 lea	 ecx, DWORD PTR _Context$3289[ebp]
  000a0	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 125  : 
; 126  :             Context.eax = 0xE820;

  000a5	c7 45 c0 20 e8
	00 00		 mov	 DWORD PTR _Context$3289[ebp], 59424 ; 0000e820H

; 127  :             Context.edx = 0x534D4150;    // 'SMAP'

  000ac	c7 45 cc 50 41
	4d 53		 mov	 DWORD PTR _Context$3289[ebp+12], 1397571920 ; 534d4150H

; 128  :             Context.ebx = ContinuationValue;

  000b3	8b 45 e8	 mov	 eax, DWORD PTR _ContinuationValue$3290[ebp]
  000b6	89 45 c4	 mov	 DWORD PTR _Context$3289[ebp+4], eax

; 129  :             Context.ecx = 20;

  000b9	c7 45 c8 14 00
	00 00		 mov	 DWORD PTR _Context$3289[ebp+8], 20 ; 00000014H

; 130  : 
; 131  :             Address = (ULONG_PTR) &BlSystemMemoryMap.Entry[Index];

  000c0	8b 45 fc	 mov	 eax, DWORD PTR _Index$[ebp]
  000c3	6b c0 18	 imul	 eax, 24			; 00000018H
  000c6	05 00 00 00 00	 add	 eax, OFFSET ?BlSystemMemoryMap@@3U_BL_SMAP@@A ; BlSystemMemoryMap
  000cb	89 45 e4	 mov	 DWORD PTR _Address$3288[ebp], eax

; 132  :             Context.es = (UINT32) (Address >> 4);

  000ce	8b 45 e4	 mov	 eax, DWORD PTR _Address$3288[ebp]
  000d1	c1 e8 04	 shr	 eax, 4
  000d4	89 45 dc	 mov	 DWORD PTR _Context$3289[ebp+28], eax

; 133  :             Context.edi = (UINT32) (Address & 0xF);

  000d7	8b 45 e4	 mov	 eax, DWORD PTR _Address$3288[ebp]
  000da	83 e0 0f	 and	 eax, 15			; 0000000fH
  000dd	89 45 d4	 mov	 DWORD PTR _Context$3289[ebp+20], eax

; 134  : 
; 135  :             BlRtlCallLegacyInterruptService(0x15,
; 136  :                                             &Context,
; 137  :                                             &Context);

  000e0	8d 45 c0	 lea	 eax, DWORD PTR _Context$3289[ebp]
  000e3	50		 push	 eax
  000e4	8d 55 c0	 lea	 edx, DWORD PTR _Context$3289[ebp]
  000e7	b1 15		 mov	 cl, 21			; 00000015H
  000e9	e8 00 00 00 00	 call	 ?BlRtlCallLegacyInterruptService@@YIXEPAU_BL_LEGACY_CALL_CONTEXT@@0@Z ; BlRtlCallLegacyInterruptService

; 138  : 
; 139  :             if (((Context.eflags & RFLAGS_CF) != 0) || (Context.eax != 0x534D4150)) {

  000ee	8b 45 e0	 mov	 eax, DWORD PTR _Context$3289[ebp+32]
  000f1	83 e0 01	 and	 eax, 1
  000f4	75 09		 jne	 SHORT $LN2@BlSmapInit
  000f6	81 7d c0 50 41
	4d 53		 cmp	 DWORD PTR _Context$3289[ebp], 1397571920 ; 534d4150H
  000fd	74 1a		 je	 SHORT $LN3@BlSmapInit
$LN2@BlSmapInit:

; 140  : 
; 141  :                 BlRtlPrintf("SMAP: INT 15/E820 failed!\n");

  000ff	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@MFOMDCLF@SMAP?3?5INT?515?1E820?5failed?$CB?6?$AA@
  00104	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  00109	59		 pop	 ecx

; 142  :                 BlRtlHalt();

  0010a	ba 8e 00 00 00	 mov	 edx, 142		; 0000008eH
  0010f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@NPJEFNNA@blsmap?4cpp?$AA@
  00114	e8 00 00 00 00	 call	 ?BlRtlHaltInternal@@YIXPBDK@Z ; BlRtlHaltInternal
$LN3@BlSmapInit:

; 143  :             }
; 144  : 
; 145  :             Index += 1;

  00119	8b 45 fc	 mov	 eax, DWORD PTR _Index$[ebp]
  0011c	40		 inc	 eax
  0011d	89 45 fc	 mov	 DWORD PTR _Index$[ebp], eax

; 146  : 
; 147  :             ContinuationValue = Context.ebx;

  00120	8b 45 c4	 mov	 eax, DWORD PTR _Context$3289[ebp+4]
  00123	89 45 e8	 mov	 DWORD PTR _ContinuationValue$3290[ebp], eax

; 148  : 
; 149  :             if (ContinuationValue == 0) {

  00126	83 7d e8 00	 cmp	 DWORD PTR _ContinuationValue$3290[ebp], 0
  0012a	75 02		 jne	 SHORT $LN1@BlSmapInit

; 150  : 
; 151  :                 break;

  0012c	eb 05		 jmp	 SHORT $LN5@BlSmapInit
$LN1@BlSmapInit:

; 152  :             }
; 153  :         }

  0012e	e9 51 ff ff ff	 jmp	 $LN6@BlSmapInit
$LN5@BlSmapInit:

; 154  : 
; 155  :         BlSystemMemoryMap.EntryCount = Index;

  00133	8b 45 fc	 mov	 eax, DWORD PTR _Index$[ebp]
  00136	a3 00 0c 00 00	 mov	 DWORD PTR ?BlSystemMemoryMap@@3U_BL_SMAP@@A+3072, eax
$LN12@BlSmapInit:

; 156  :     }
; 157  : 
; 158  : #if SMAP_VERBOSE
; 159  : 
; 160  :     BlRtlPrintf("SMAP: %u entries\n", BlSystemMemoryMap.EntryCount);
; 161  : 
; 162  :     for (Index = 0; Index < BlSystemMemoryMap.EntryCount; Index += 1) {
; 163  : 
; 164  :         BlRtlPrintf("SMAP:  %016I64x ... %016I64x %s\n",
; 165  :                     BlSystemMemoryMap.Entry[Index].Base,
; 166  :                     BlSystemMemoryMap.Entry[Index].Base + BlSystemMemoryMap.Entry[Index].Size - 1,
; 167  :                     BlSmapTypeString(BlSystemMemoryMap.Entry[Index].Type));
; 168  :     }
; 169  : 
; 170  : #endif
; 171  : 
; 172  :     return;
; 173  : }

  0013b	c9		 leave
  0013c	c3		 ret	 0
?BlSmapInitialize@@YIXXZ ENDP				; BlSmapInitialize
; Function compile flags: /Odsp
; File c:\users\cc\source\repos\singularity-os\base\boot\singldrpc\bl.h
_TEXT	ENDS
;	COMDAT ?BlGetBeb@@YIPAU_BEB@@XZ
_TEXT	SEGMENT
?BlGetBeb@@YIPAU_BEB@@XZ PROC				; BlGetBeb, COMDAT

; 355  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 356  :     return ((PBEB) BEB_BASE);

  00003	b8 00 f0 02 00	 mov	 eax, 192512		; 0002f000H

; 357  : }

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?BlGetBeb@@YIPAU_BEB@@XZ ENDP				; BlGetBeb
_TEXT	ENDS
END
