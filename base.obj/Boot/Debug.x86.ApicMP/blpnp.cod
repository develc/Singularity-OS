; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	C:\Users\cc\source\repos\Singularity-OS\base\Boot\SingLdrPc\blpnp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?BlPnpSystemDeviceNodeListSize@@3KA		; BlPnpSystemDeviceNodeListSize
PUBLIC	?BlPnpNodeData@@3PAEA				; BlPnpNodeData
PUBLIC	?BlPnpIsaConfiguration@@3U_PNP_ISA_CONFIGURATION@@A ; BlPnpIsaConfiguration
PUBLIC	?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A ; BlPnpSystemDeviceNodeList
PUBLIC	?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
PUBLIC	?BlPnpHandle@@3EA				; BlPnpHandle
PUBLIC	?BlPnpCallFrame@@3PAGA				; BlPnpCallFrame
PUBLIC	?BlPnpNodeSize@@3KA				; BlPnpNodeSize
PUBLIC	?BlPnpNumberOfNodes@@3EA			; BlPnpNumberOfNodes
_BSS	SEGMENT
?BlPnpSystemDeviceNodeListSize@@3KA DD 01H DUP (?)	; BlPnpSystemDeviceNodeListSize
?BlPnpNodeData@@3PAEA DB 01000H DUP (?)			; BlPnpNodeData
	ALIGN	8

?BlPnpIsaConfiguration@@3U_PNP_ISA_CONFIGURATION@@A DF 01H DUP (?) ; BlPnpIsaConfiguration
	ALIGN	4

?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A DD 01H DUP (?) ; BlPnpSystemDeviceNodeList
?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A DD 01H DUP (?) ; BlPnpBiosInformation
?BlPnpHandle@@3EA DB 01H DUP (?)			; BlPnpHandle
	ALIGN	4

?BlPnpCallFrame@@3PAGA DW 010H DUP (?)			; BlPnpCallFrame
?BlPnpNodeSize@@3KA DD 01H DUP (?)			; BlPnpNodeSize
?BlPnpNumberOfNodes@@3EA DB 01H DUP (?)			; BlPnpNumberOfNodes
_BSS	ENDS
PUBLIC	?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z ; BlPnpGetNumberOfSystemDeviceNodes
EXTRN	?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z:PROC ; BlRtlCallLegacyFunction
EXTRN	?BlRtlZeroMemory@@YIXPAXK@Z:PROC		; BlRtlZeroMemory
EXTRN	?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z:PROC ; BlRtlConvertLinearPointerToFarPointer
; Function compile flags: /Odsp
; File c:\users\cc\source\repos\singularity-os\base\boot\singldrpc\blpnp.cpp
;	COMDAT ?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z
_TEXT	SEGMENT
_NodeSize$ = -44					; size = 4
_NumberOfNodes$ = -40					; size = 4
_Context$ = -36						; size = 36
_BiosSelector$ = 8					; size = 2
?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z PROC	; BlPnpGetNumberOfSystemDeviceNodes, COMDAT
; _NumberOfNodes$ = ecx
; _NodeSize$ = edx

; 80   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 55 d4	 mov	 DWORD PTR _NodeSize$[ebp], edx
  00009	89 4d d8	 mov	 DWORD PTR _NumberOfNodes$[ebp], ecx

; 81   :     BL_LEGACY_CALL_CONTEXT Context;
; 82   : 
; 83   :     BlPnpNumberOfNodes = 0;

  0000c	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?BlPnpNumberOfNodes@@3EA, 0 ; BlPnpNumberOfNodes

; 84   :     BlPnpNodeSize = 0;

  00013	83 25 00 00 00
	00 00		 and	 DWORD PTR ?BlPnpNodeSize@@3KA, 0 ; BlPnpNodeSize

; 85   : 
; 86   :     BlPnpCallFrame[0] = 0;

  0001a	66 83 25 00 00
	00 00 00	 and	 WORD PTR ?BlPnpCallFrame@@3PAGA, 0

; 87   :     BlRtlConvertLinearPointerToFarPointer(&BlPnpNumberOfNodes, (PFAR_POINTER) &BlPnpCallFrame[1]);

  00022	ba 02 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+2
  00027	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpNumberOfNodes@@3EA ; BlPnpNumberOfNodes
  0002c	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 88   :     BlRtlConvertLinearPointerToFarPointer(&BlPnpNodeSize, (PFAR_POINTER) &BlPnpCallFrame[3]);

  00031	ba 06 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+6
  00036	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpNodeSize@@3KA ; BlPnpNodeSize
  0003b	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 89   :     BlPnpCallFrame[5] = BiosSelector;

  00040	66 8b 45 08	 mov	 ax, WORD PTR _BiosSelector$[ebp]
  00044	66 a3 0a 00 00
	00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+10, ax

; 90   : 
; 91   :     BlRtlZeroMemory(&Context, sizeof(BL_LEGACY_CALL_CONTEXT));

  0004a	6a 24		 push	 36			; 00000024H
  0004c	5a		 pop	 edx
  0004d	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00050	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 92   : 
; 93   :     BlRtlCallLegacyFunction(BlPnpBiosInformation->RealModeCodeSegment16,
; 94   :                             BlPnpBiosInformation->RealModeCodeOffset16,
; 95   :                             BlPnpCallFrame,
; 96   :                             6 * sizeof(UINT16),
; 97   :                             &Context,
; 98   :                             &Context);

  00055	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  00058	50		 push	 eax
  00059	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  0005c	50		 push	 eax
  0005d	6a 0c		 push	 12			; 0000000cH
  0005f	68 00 00 00 00	 push	 OFFSET ?BlPnpCallFrame@@3PAGA
  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  00069	66 8b 50 0d	 mov	 dx, WORD PTR [eax+13]
  0006d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  00072	66 8b 48 0f	 mov	 cx, WORD PTR [eax+15]
  00076	e8 00 00 00 00	 call	 ?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z ; BlRtlCallLegacyFunction

; 99   : 
; 100  :     if ((PNP_STATUS) Context.eax == PNP_STATUS_SUCCESS) {

  0007b	0f b7 45 dc	 movzx	 eax, WORD PTR _Context$[ebp]
  0007f	85 c0		 test	 eax, eax
  00081	75 16		 jne	 SHORT $LN1@BlPnpGetNu

; 101  : 
; 102  :         *NumberOfNodes = BlPnpNumberOfNodes;

  00083	8b 45 d8	 mov	 eax, DWORD PTR _NumberOfNodes$[ebp]
  00086	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?BlPnpNumberOfNodes@@3EA ; BlPnpNumberOfNodes
  0008c	88 08		 mov	 BYTE PTR [eax], cl

; 103  :         *NodeSize = BlPnpNodeSize;

  0008e	8b 45 d4	 mov	 eax, DWORD PTR _NodeSize$[ebp]
  00091	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BlPnpNodeSize@@3KA ; BlPnpNodeSize
  00097	89 08		 mov	 DWORD PTR [eax], ecx
$LN1@BlPnpGetNu:

; 104  :     }
; 105  : 
; 106  :     return (PNP_STATUS) Context.eax;

  00099	66 8b 45 dc	 mov	 ax, WORD PTR _Context$[ebp]

; 107  : }

  0009d	c9		 leave
  0009e	c2 04 00	 ret	 4
?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z ENDP	; BlPnpGetNumberOfSystemDeviceNodes
_TEXT	ENDS
PUBLIC	??_C@_09CDGHECLD@blpnp?4cpp?$AA@		; `string'
PUBLIC	?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ; BlPnpGetSystemDeviceNode
EXTRN	?BlRtlCopyMemory@@YIXPAXPBXK@Z:PROC		; BlRtlCopyMemory
EXTRN	?BlRtlAssertFailed@@YIXPBDK@Z:PROC		; BlRtlAssertFailed
;	COMDAT ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
CONST	SEGMENT
??_C@_09CDGHECLD@blpnp?4cpp?$AA@ DB 'blpnp.cpp', 00H	; `string'
; Function compile flags: /Odsp
CONST	ENDS
;	COMDAT ?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z
_TEXT	SEGMENT
_Node$ = -44						; size = 4
_Handle$ = -40						; size = 4
_Context$ = -36						; size = 36
_NodeSize$ = 8						; size = 4
_Control$ = 12						; size = 2
_BiosSelector$ = 16					; size = 2
?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z PROC ; BlPnpGetSystemDeviceNode, COMDAT
; _Handle$ = ecx
; _Node$ = edx

; 144  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	89 55 d4	 mov	 DWORD PTR _Node$[ebp], edx
  00009	89 4d d8	 mov	 DWORD PTR _Handle$[ebp], ecx

; 145  :     BL_LEGACY_CALL_CONTEXT Context;
; 146  : 
; 147  :     BLASSERT(NodeSize > 0);

  0000c	83 7d 08 00	 cmp	 DWORD PTR _NodeSize$[ebp], 0
  00010	77 0f		 ja	 SHORT $LN4@BlPnpGetSy
  00012	ba 93 00 00 00	 mov	 edx, 147		; 00000093H
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  0001c	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN4@BlPnpGetSy:

; 148  : 
; 149  :     BLASSERT(NodeSize <= sizeof(BlPnpNodeData));

  00021	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR _NodeSize$[ebp], 4096 ; 00001000H
  00028	76 0f		 jbe	 SHORT $LN3@BlPnpGetSy
  0002a	ba 95 00 00 00	 mov	 edx, 149		; 00000095H
  0002f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  00034	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN3@BlPnpGetSy:

; 150  : 
; 151  :     BlPnpHandle = *Handle;

  00039	8b 45 d8	 mov	 eax, DWORD PTR _Handle$[ebp]
  0003c	8a 00		 mov	 al, BYTE PTR [eax]
  0003e	a2 00 00 00 00	 mov	 BYTE PTR ?BlPnpHandle@@3EA, al ; BlPnpHandle

; 152  : 
; 153  :     BlPnpCallFrame[0] = 1;

  00043	66 c7 05 00 00
	00 00 01 00	 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA, 1

; 154  :     BlRtlConvertLinearPointerToFarPointer(&BlPnpHandle, (PFAR_POINTER) &BlPnpCallFrame[1]);

  0004c	ba 02 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+2
  00051	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpHandle@@3EA ; BlPnpHandle
  00056	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 155  :     BlRtlConvertLinearPointerToFarPointer(BlPnpNodeData, (PFAR_POINTER) &BlPnpCallFrame[3]);

  0005b	ba 06 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+6
  00060	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpNodeData@@3PAEA ; BlPnpNodeData
  00065	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 156  :     BlPnpCallFrame[5] = Control;

  0006a	66 8b 45 0c	 mov	 ax, WORD PTR _Control$[ebp]
  0006e	66 a3 0a 00 00
	00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+10, ax

; 157  :     BlPnpCallFrame[6] = BiosSelector;

  00074	66 8b 45 10	 mov	 ax, WORD PTR _BiosSelector$[ebp]
  00078	66 a3 0c 00 00
	00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+12, ax

; 158  : 
; 159  :     BlRtlZeroMemory(&Context, sizeof(BL_LEGACY_CALL_CONTEXT));

  0007e	6a 24		 push	 36			; 00000024H
  00080	5a		 pop	 edx
  00081	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00084	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 160  : 
; 161  :     BlRtlCallLegacyFunction(BlPnpBiosInformation->RealModeCodeSegment16,
; 162  :                             BlPnpBiosInformation->RealModeCodeOffset16,
; 163  :                             BlPnpCallFrame,
; 164  :                             7 * sizeof(UINT16),
; 165  :                             &Context,
; 166  :                             &Context);

  00089	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  0008c	50		 push	 eax
  0008d	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  00090	50		 push	 eax
  00091	6a 0e		 push	 14			; 0000000eH
  00093	68 00 00 00 00	 push	 OFFSET ?BlPnpCallFrame@@3PAGA
  00098	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  0009d	66 8b 50 0d	 mov	 dx, WORD PTR [eax+13]
  000a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  000a6	66 8b 48 0f	 mov	 cx, WORD PTR [eax+15]
  000aa	e8 00 00 00 00	 call	 ?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z ; BlRtlCallLegacyFunction

; 167  : 
; 168  :     if ((PNP_STATUS) Context.eax == PNP_STATUS_SUCCESS) {

  000af	0f b7 45 dc	 movzx	 eax, WORD PTR _Context$[ebp]
  000b3	85 c0		 test	 eax, eax
  000b5	75 3b		 jne	 SHORT $LN2@BlPnpGetSy

; 169  : 
; 170  :         *Handle = BlPnpHandle;

  000b7	8b 45 d8	 mov	 eax, DWORD PTR _Handle$[ebp]
  000ba	8a 0d 00 00 00
	00		 mov	 cl, BYTE PTR ?BlPnpHandle@@3EA ; BlPnpHandle
  000c0	88 08		 mov	 BYTE PTR [eax], cl

; 171  : 
; 172  :         BLASSERT(((PPNP_SYSTEM_DEVICE_NODE) BlPnpNodeData)->Size <= NodeSize);

  000c2	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlPnpNodeData@@3PAEA
  000c9	3b 45 08	 cmp	 eax, DWORD PTR _NodeSize$[ebp]
  000cc	76 0f		 jbe	 SHORT $LN1@BlPnpGetSy
  000ce	ba ac 00 00 00	 mov	 edx, 172		; 000000acH
  000d3	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  000d8	e8 00 00 00 00	 call	 ?BlRtlAssertFailed@@YIXPBDK@Z ; BlRtlAssertFailed
$LN1@BlPnpGetSy:

; 173  : 
; 174  :         BlRtlCopyMemory(Node,
; 175  :                         BlPnpNodeData,
; 176  :                         ((PPNP_SYSTEM_DEVICE_NODE) BlPnpNodeData)->Size);

  000dd	0f b7 05 00 00
	00 00		 movzx	 eax, WORD PTR ?BlPnpNodeData@@3PAEA
  000e4	50		 push	 eax
  000e5	ba 00 00 00 00	 mov	 edx, OFFSET ?BlPnpNodeData@@3PAEA ; BlPnpNodeData
  000ea	8b 4d d4	 mov	 ecx, DWORD PTR _Node$[ebp]
  000ed	e8 00 00 00 00	 call	 ?BlRtlCopyMemory@@YIXPAXPBXK@Z ; BlRtlCopyMemory
$LN2@BlPnpGetSy:

; 177  :     }
; 178  : 
; 179  :     return (PNP_STATUS) Context.eax;

  000f2	66 8b 45 dc	 mov	 ax, WORD PTR _Context$[ebp]

; 180  : }

  000f6	c9		 leave
  000f7	c2 0c 00	 ret	 12			; 0000000cH
?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ENDP ; BlPnpGetSystemDeviceNode
_TEXT	ENDS
PUBLIC	?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z ; BlPnpGetIsaConfiguration
; Function compile flags: /Odsp
;	COMDAT ?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z
_TEXT	SEGMENT
_BiosSelector$ = -44					; size = 2
_IsaConfiguration$ = -40				; size = 4
_Context$ = -36						; size = 36
?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z PROC ; BlPnpGetIsaConfiguration, COMDAT
; _IsaConfiguration$ = ecx
; _BiosSelector$ = dx

; 206  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 2c	 sub	 esp, 44			; 0000002cH
  00006	66 89 55 d4	 mov	 WORD PTR _BiosSelector$[ebp], dx
  0000a	89 4d d8	 mov	 DWORD PTR _IsaConfiguration$[ebp], ecx

; 207  :     BL_LEGACY_CALL_CONTEXT Context;
; 208  : 
; 209  :     BlRtlZeroMemory(IsaConfiguration, sizeof(PNP_ISA_CONFIGURATION));

  0000d	6a 06		 push	 6
  0000f	5a		 pop	 edx
  00010	8b 4d d8	 mov	 ecx, DWORD PTR _IsaConfiguration$[ebp]
  00013	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 210  : 
; 211  :     IsaConfiguration->Revision = 1;

  00018	8b 45 d8	 mov	 eax, DWORD PTR _IsaConfiguration$[ebp]
  0001b	c6 00 01	 mov	 BYTE PTR [eax], 1

; 212  : 
; 213  :     BlPnpCallFrame[0] = 0x40;

  0001e	66 c7 05 00 00
	00 00 40 00	 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA, 64 ; 00000040H

; 214  :     BlRtlConvertLinearPointerToFarPointer(IsaConfiguration, (PFAR_POINTER) &BlPnpCallFrame[1]);

  00027	ba 02 00 00 00	 mov	 edx, OFFSET ?BlPnpCallFrame@@3PAGA+2
  0002c	8b 4d d8	 mov	 ecx, DWORD PTR _IsaConfiguration$[ebp]
  0002f	e8 00 00 00 00	 call	 ?BlRtlConvertLinearPointerToFarPointer@@YIXPAXPAU_FAR_POINTER@@@Z ; BlRtlConvertLinearPointerToFarPointer

; 215  :     BlPnpCallFrame[3] = BiosSelector;

  00034	66 8b 45 d4	 mov	 ax, WORD PTR _BiosSelector$[ebp]
  00038	66 a3 06 00 00
	00		 mov	 WORD PTR ?BlPnpCallFrame@@3PAGA+6, ax

; 216  : 
; 217  :     BlRtlZeroMemory(&Context, sizeof(BL_LEGACY_CALL_CONTEXT));

  0003e	6a 24		 push	 36			; 00000024H
  00040	5a		 pop	 edx
  00041	8d 4d dc	 lea	 ecx, DWORD PTR _Context$[ebp]
  00044	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 218  : 
; 219  :     BlRtlCallLegacyFunction(BlPnpBiosInformation->RealModeCodeSegment16,
; 220  :                             BlPnpBiosInformation->RealModeCodeOffset16,
; 221  :                             BlPnpCallFrame,
; 222  :                             4 * sizeof(UINT16),
; 223  :                             &Context,
; 224  :                             &Context);

  00049	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  0004c	50		 push	 eax
  0004d	8d 45 dc	 lea	 eax, DWORD PTR _Context$[ebp]
  00050	50		 push	 eax
  00051	6a 08		 push	 8
  00053	68 00 00 00 00	 push	 OFFSET ?BlPnpCallFrame@@3PAGA
  00058	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  0005d	66 8b 50 0d	 mov	 dx, WORD PTR [eax+13]
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A ; BlPnpBiosInformation
  00066	66 8b 48 0f	 mov	 cx, WORD PTR [eax+15]
  0006a	e8 00 00 00 00	 call	 ?BlRtlCallLegacyFunction@@YIXGGPAXKPAU_BL_LEGACY_CALL_CONTEXT@@1@Z ; BlRtlCallLegacyFunction

; 225  : 
; 226  :     return (PNP_STATUS) Context.eax;

  0006f	66 8b 45 dc	 mov	 ax, WORD PTR _Context$[ebp]

; 227  : }

  00073	c9		 leave
  00074	c3		 ret	 0
?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z ENDP ; BlPnpGetIsaConfiguration
_TEXT	ENDS
PUBLIC	?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ ; BlPnpLocateBios
EXTRN	?BlRtlComputeChecksum8@@YIEPBXK@Z:PROC		; BlRtlComputeChecksum8
; Function compile flags: /Odsp
;	COMDAT ?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ
_TEXT	SEGMENT
_End$ = -12						; size = 4
_Pnp$ = -8						; size = 4
_Start$ = -4						; size = 4
?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ PROC	; BlPnpLocateBios, COMDAT

; 247  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 248  :     ULONG_PTR End;
; 249  :     PPNP_INSTALLATION_CHECK Pnp;
; 250  :     ULONG_PTR Start;
; 251  : 
; 252  :     Start = 0xF0000;

  00006	c7 45 fc 00 00
	0f 00		 mov	 DWORD PTR _Start$[ebp], 983040 ; 000f0000H

; 253  :     End = 0x100000;

  0000d	c7 45 f4 00 00
	10 00		 mov	 DWORD PTR _End$[ebp], 1048576 ; 00100000H
$LN3@BlPnpLocat:

; 254  : 
; 255  :     while (Start != End) {

  00014	8b 45 fc	 mov	 eax, DWORD PTR _Start$[ebp]
  00017	3b 45 f4	 cmp	 eax, DWORD PTR _End$[ebp]
  0001a	74 73		 je	 SHORT $LN2@BlPnpLocat

; 256  : 
; 257  :         Pnp = (PPNP_INSTALLATION_CHECK) Start;

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _Start$[ebp]
  0001f	89 45 f8	 mov	 DWORD PTR _Pnp$[ebp], eax

; 258  : 
; 259  :         if ((Pnp->Signature[0] == '$') &&
; 260  :             (Pnp->Signature[1] == 'P') &&
; 261  :             (Pnp->Signature[2] == 'n') &&
; 262  :             (Pnp->Signature[3] == 'P') &&
; 263  :             (Pnp->Version == 0x10) &&
; 264  :             (Pnp->Length == 0x21) &&
; 265  :             (BlRtlComputeChecksum8(Pnp, Pnp->Length) == 0)
; 266  :             ) {

  00022	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00025	0f be 00	 movsx	 eax, BYTE PTR [eax]
  00028	83 f8 24	 cmp	 eax, 36			; 00000024H
  0002b	75 57		 jne	 SHORT $LN1@BlPnpLocat
  0002d	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00030	0f be 40 01	 movsx	 eax, BYTE PTR [eax+1]
  00034	83 f8 50	 cmp	 eax, 80			; 00000050H
  00037	75 4b		 jne	 SHORT $LN1@BlPnpLocat
  00039	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  0003c	0f be 40 02	 movsx	 eax, BYTE PTR [eax+2]
  00040	83 f8 6e	 cmp	 eax, 110		; 0000006eH
  00043	75 3f		 jne	 SHORT $LN1@BlPnpLocat
  00045	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00048	0f be 40 03	 movsx	 eax, BYTE PTR [eax+3]
  0004c	83 f8 50	 cmp	 eax, 80			; 00000050H
  0004f	75 33		 jne	 SHORT $LN1@BlPnpLocat
  00051	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00054	0f b6 40 04	 movzx	 eax, BYTE PTR [eax+4]
  00058	83 f8 10	 cmp	 eax, 16			; 00000010H
  0005b	75 27		 jne	 SHORT $LN1@BlPnpLocat
  0005d	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00060	0f b6 40 05	 movzx	 eax, BYTE PTR [eax+5]
  00064	83 f8 21	 cmp	 eax, 33			; 00000021H
  00067	75 1b		 jne	 SHORT $LN1@BlPnpLocat
  00069	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  0006c	0f b6 50 05	 movzx	 edx, BYTE PTR [eax+5]
  00070	8b 4d f8	 mov	 ecx, DWORD PTR _Pnp$[ebp]
  00073	e8 00 00 00 00	 call	 ?BlRtlComputeChecksum8@@YIEPBXK@Z ; BlRtlComputeChecksum8
  00078	0f b6 c0	 movzx	 eax, al
  0007b	85 c0		 test	 eax, eax
  0007d	75 05		 jne	 SHORT $LN1@BlPnpLocat

; 267  : 
; 268  :             return Pnp;

  0007f	8b 45 f8	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00082	eb 0d		 jmp	 SHORT $LN4@BlPnpLocat
$LN1@BlPnpLocat:

; 269  :         }
; 270  : 
; 271  :         Start += 16;

  00084	8b 45 fc	 mov	 eax, DWORD PTR _Start$[ebp]
  00087	83 c0 10	 add	 eax, 16			; 00000010H
  0008a	89 45 fc	 mov	 DWORD PTR _Start$[ebp], eax

; 272  :     }

  0008d	eb 85		 jmp	 SHORT $LN3@BlPnpLocat
$LN2@BlPnpLocat:

; 273  : 
; 274  :     return NULL;

  0008f	33 c0		 xor	 eax, eax
$LN4@BlPnpLocat:

; 275  : }

  00091	c9		 leave
  00092	c3		 ret	 0
?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ ENDP	; BlPnpLocateBios
_TEXT	ENDS
PUBLIC	??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@ ; `string'
PUBLIC	?BlPnpInitialize@@YIXXZ				; BlPnpInitialize
EXTRN	?BlRtlHaltInternal@@YIXPBDK@Z:PROC		; BlRtlHaltInternal
EXTRN	?BlRtlPrintf@@YAEPBDZZ:PROC			; BlRtlPrintf
EXTRN	?BlPoolFreeBlock@@YIXPAX@Z:PROC			; BlPoolFreeBlock
EXTRN	?BlPoolAllocateBlock@@YIPAXK@Z:PROC		; BlPoolAllocateBlock
;	COMDAT ??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@
CONST	SEGMENT
??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@ DB 'PNP: BlPnpGet'
	DB	'SystemDeviceNode failed with error %04x.', 0aH, 00H ; `string'
; Function compile flags: /Odsp
CONST	ENDS
;	COMDAT ?BlPnpInitialize@@YIXXZ
_TEXT	SEGMENT
_Pnp$ = -28						; size = 4
_Node$ = -24						; size = 4
_Result$ = -20						; size = 2
_Handle$ = -13						; size = 1
_NodeSize$ = -12					; size = 4
_NumberOfNodes$ = -5					; size = 1
_NodeListSize$ = -4					; size = 4
?BlPnpInitialize@@YIXXZ PROC				; BlPnpInitialize, COMDAT

; 290  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH

; 291  :     UINT8 Handle;
; 292  :     PPNP_SYSTEM_DEVICE_NODE Node;
; 293  :     UINT32 NodeListSize;
; 294  :     UINT32 NodeSize;
; 295  :     UINT8 NumberOfNodes;
; 296  :     PPNP_INSTALLATION_CHECK Pnp;
; 297  :     PNP_STATUS Result;
; 298  : 
; 299  :     //
; 300  :     // Initialize empty node list.
; 301  :     //
; 302  : 
; 303  :     BlPnpSystemDeviceNodeList = NULL;

  00006	83 25 00 00 00
	00 00		 and	 DWORD PTR ?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A, 0 ; BlPnpSystemDeviceNodeList

; 304  :     BlPnpSystemDeviceNodeListSize = 0;

  0000d	83 25 00 00 00
	00 00		 and	 DWORD PTR ?BlPnpSystemDeviceNodeListSize@@3KA, 0 ; BlPnpSystemDeviceNodeListSize

; 305  : 
; 306  :     //
; 307  :     // Locate PNP BIOS.
; 308  :     //
; 309  : 
; 310  :     Pnp = BlPnpLocateBios();

  00014	e8 00 00 00 00	 call	 ?BlPnpLocateBios@@YIPAU_PNP_INSTALLATION_CHECK@@XZ ; BlPnpLocateBios
  00019	89 45 e4	 mov	 DWORD PTR _Pnp$[ebp], eax

; 311  : 
; 312  :     if (Pnp == NULL) {

  0001c	83 7d e4 00	 cmp	 DWORD PTR _Pnp$[ebp], 0
  00020	75 05		 jne	 SHORT $LN10@BlPnpIniti

; 313  : 
; 314  : #if PNP_VERBOSE
; 315  : 
; 316  :         BlRtlPrintf("PNP: PNP BIOS not found!\n");
; 317  : 
; 318  : #endif
; 319  : 
; 320  :         return;

  00022	e9 40 01 00 00	 jmp	 $LN11@BlPnpIniti
$LN10@BlPnpIniti:

; 321  :     }
; 322  : 
; 323  : #if PNP_VERBOSE
; 324  : 
; 325  :     BlRtlPrintf("PNP: PNP BIOS detected @ %p\n", Pnp);
; 326  : 
; 327  : #endif
; 328  : 
; 329  :     BlPnpBiosInformation = Pnp;

  00027	8b 45 e4	 mov	 eax, DWORD PTR _Pnp$[ebp]
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?BlPnpBiosInformation@@3PAU_PNP_INSTALLATION_CHECK@@A, eax ; BlPnpBiosInformation

; 330  : 
; 331  : #if PNP_VERBOSE
; 332  : 
; 333  :     BlRtlPrintf("PNP:   Real-Mode Code: %04x:%04x\n",
; 334  :                 Pnp->RealModeCodeSegment16,
; 335  :                 Pnp->RealModeCodeOffset16);
; 336  : 
; 337  :     BlRtlPrintf("PNP:   Real-Mode Data: %04x:\n", Pnp->RealModeDataSegment16);
; 338  : 
; 339  : #endif
; 340  : 
; 341  :     //
; 342  :     // Build PNP system device node list.
; 343  :     //
; 344  : 
; 345  :     Result = BlPnpGetNumberOfSystemDeviceNodes(&NumberOfNodes,
; 346  :                                                &NodeSize,
; 347  :                                                Pnp->RealModeDataSegment16);

  0002f	8b 45 e4	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00032	66 8b 40 1b	 mov	 ax, WORD PTR [eax+27]
  00036	50		 push	 eax
  00037	8d 55 f4	 lea	 edx, DWORD PTR _NodeSize$[ebp]
  0003a	8d 4d fb	 lea	 ecx, DWORD PTR _NumberOfNodes$[ebp]
  0003d	e8 00 00 00 00	 call	 ?BlPnpGetNumberOfSystemDeviceNodes@@YIGPAEPAKG@Z ; BlPnpGetNumberOfSystemDeviceNodes
  00042	66 89 45 ec	 mov	 WORD PTR _Result$[ebp], ax

; 348  : 
; 349  :     if (Result != PNP_STATUS_SUCCESS) {

  00046	0f b7 45 ec	 movzx	 eax, WORD PTR _Result$[ebp]
  0004a	85 c0		 test	 eax, eax
  0004c	74 05		 je	 SHORT $LN9@BlPnpIniti

; 350  : 
; 351  : #if PNP_VERBOSE
; 352  : 
; 353  :         BlRtlPrintf("PNP: BlPnpGetNumberOfSystemDeviceNodes failed with error %04x.\n", Result);
; 354  : 
; 355  : #endif
; 356  : 
; 357  :         return;

  0004e	e9 14 01 00 00	 jmp	 $LN11@BlPnpIniti
$LN9@BlPnpIniti:

; 358  :     }
; 359  : 
; 360  : #if PNP_VERBOSE
; 361  : 
; 362  :     BlRtlPrintf("PNP: %u node(s), %u bytes in largest node.\n",
; 363  :                 NumberOfNodes,
; 364  :                 NodeSize);
; 365  : 
; 366  : #endif
; 367  : 
; 368  :     Node = (PPNP_SYSTEM_DEVICE_NODE) BlPoolAllocateBlock(NodeSize);

  00053	8b 4d f4	 mov	 ecx, DWORD PTR _NodeSize$[ebp]
  00056	e8 00 00 00 00	 call	 ?BlPoolAllocateBlock@@YIPAXK@Z ; BlPoolAllocateBlock
  0005b	89 45 e8	 mov	 DWORD PTR _Node$[ebp], eax

; 369  : 
; 370  :     NodeListSize = 0;

  0005e	83 65 fc 00	 and	 DWORD PTR _NodeListSize$[ebp], 0

; 371  : 
; 372  :     Handle = 0;

  00062	c6 45 f3 00	 mov	 BYTE PTR _Handle$[ebp], 0
$LN8@BlPnpIniti:

; 373  : 
; 374  :     for (;;) {
; 375  : 
; 376  :         BlRtlZeroMemory(Node, sizeof(*Node));

  00066	6a 0c		 push	 12			; 0000000cH
  00068	5a		 pop	 edx
  00069	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  0006c	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 377  : 
; 378  :         Result = BlPnpGetSystemDeviceNode(&Handle,
; 379  :                                           Node,
; 380  :                                           NodeSize,
; 381  :                                           1,
; 382  :                                           Pnp->RealModeDataSegment16);

  00071	8b 45 e4	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00074	66 8b 40 1b	 mov	 ax, WORD PTR [eax+27]
  00078	50		 push	 eax
  00079	6a 01		 push	 1
  0007b	ff 75 f4	 push	 DWORD PTR _NodeSize$[ebp]
  0007e	8b 55 e8	 mov	 edx, DWORD PTR _Node$[ebp]
  00081	8d 4d f3	 lea	 ecx, DWORD PTR _Handle$[ebp]
  00084	e8 00 00 00 00	 call	 ?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ; BlPnpGetSystemDeviceNode
  00089	66 89 45 ec	 mov	 WORD PTR _Result$[ebp], ax

; 383  : 
; 384  :         if (Result != PNP_STATUS_SUCCESS) {

  0008d	0f b7 45 ec	 movzx	 eax, WORD PTR _Result$[ebp]
  00091	85 c0		 test	 eax, eax
  00093	74 0d		 je	 SHORT $LN6@BlPnpIniti

; 385  : 
; 386  : #if PNP_VERBOSE
; 387  : 
; 388  :             BlRtlPrintf("PNP: BlPnpGetSystemDeviceNode failed with error %04x.\n", Result);
; 389  : 
; 390  : #endif
; 391  : 
; 392  :             BlPoolFreeBlock(Node);

  00095	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  00098	e8 00 00 00 00	 call	 ?BlPoolFreeBlock@@YIXPAX@Z ; BlPoolFreeBlock

; 393  : 
; 394  :             return;

  0009d	e9 c5 00 00 00	 jmp	 $LN11@BlPnpIniti
$LN6@BlPnpIniti:

; 395  :         }
; 396  : 
; 397  :         NodeListSize += Node->Size;

  000a2	8b 45 e8	 mov	 eax, DWORD PTR _Node$[ebp]
  000a5	0f b7 00	 movzx	 eax, WORD PTR [eax]
  000a8	03 45 fc	 add	 eax, DWORD PTR _NodeListSize$[ebp]
  000ab	89 45 fc	 mov	 DWORD PTR _NodeListSize$[ebp], eax

; 398  : 
; 399  :         if (Handle == PNP_NO_MORE_NODES) {

  000ae	0f b6 45 f3	 movzx	 eax, BYTE PTR _Handle$[ebp]
  000b2	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  000b7	75 02		 jne	 SHORT $LN5@BlPnpIniti

; 400  : 
; 401  :             break;

  000b9	eb 02		 jmp	 SHORT $LN7@BlPnpIniti
$LN5@BlPnpIniti:

; 402  :         }
; 403  :     }

  000bb	eb a9		 jmp	 SHORT $LN8@BlPnpIniti
$LN7@BlPnpIniti:

; 404  : 
; 405  :     BlPnpSystemDeviceNodeList = (PPNP_SYSTEM_DEVICE_NODE)BlPoolAllocateBlock(NodeListSize);

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR _NodeListSize$[ebp]
  000c0	e8 00 00 00 00	 call	 ?BlPoolAllocateBlock@@YIPAXK@Z ; BlPoolAllocateBlock
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A, eax ; BlPnpSystemDeviceNodeList

; 406  :     BlPnpSystemDeviceNodeListSize = NodeListSize;

  000ca	8b 45 fc	 mov	 eax, DWORD PTR _NodeListSize$[ebp]
  000cd	a3 00 00 00 00	 mov	 DWORD PTR ?BlPnpSystemDeviceNodeListSize@@3KA, eax ; BlPnpSystemDeviceNodeListSize

; 407  : 
; 408  :     Node = BlPnpSystemDeviceNodeList;

  000d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BlPnpSystemDeviceNodeList@@3PAU_PNP_SYSTEM_DEVICE_NODE@@A ; BlPnpSystemDeviceNodeList
  000d7	89 45 e8	 mov	 DWORD PTR _Node$[ebp], eax

; 409  : 
; 410  :     Handle = 0;

  000da	c6 45 f3 00	 mov	 BYTE PTR _Handle$[ebp], 0
$LN4@BlPnpIniti:

; 411  : 
; 412  :     for (;;) {
; 413  : 
; 414  :         BlRtlZeroMemory(Node, sizeof(*Node));

  000de	6a 0c		 push	 12			; 0000000cH
  000e0	5a		 pop	 edx
  000e1	8b 4d e8	 mov	 ecx, DWORD PTR _Node$[ebp]
  000e4	e8 00 00 00 00	 call	 ?BlRtlZeroMemory@@YIXPAXK@Z ; BlRtlZeroMemory

; 415  : 
; 416  :         Result = BlPnpGetSystemDeviceNode(&Handle,
; 417  :                                           Node,
; 418  :                                           NodeSize,
; 419  :                                           1,
; 420  :                                           Pnp->RealModeDataSegment16);

  000e9	8b 45 e4	 mov	 eax, DWORD PTR _Pnp$[ebp]
  000ec	66 8b 40 1b	 mov	 ax, WORD PTR [eax+27]
  000f0	50		 push	 eax
  000f1	6a 01		 push	 1
  000f3	ff 75 f4	 push	 DWORD PTR _NodeSize$[ebp]
  000f6	8b 55 e8	 mov	 edx, DWORD PTR _Node$[ebp]
  000f9	8d 4d f3	 lea	 ecx, DWORD PTR _Handle$[ebp]
  000fc	e8 00 00 00 00	 call	 ?BlPnpGetSystemDeviceNode@@YIGPAEPAU_PNP_SYSTEM_DEVICE_NODE@@KGG@Z ; BlPnpGetSystemDeviceNode
  00101	66 89 45 ec	 mov	 WORD PTR _Result$[ebp], ax

; 421  : 
; 422  :         if (Result != PNP_STATUS_SUCCESS) {

  00105	0f b7 45 ec	 movzx	 eax, WORD PTR _Result$[ebp]
  00109	85 c0		 test	 eax, eax
  0010b	74 20		 je	 SHORT $LN2@BlPnpIniti

; 423  : 
; 424  :             BlRtlPrintf("PNP: BlPnpGetSystemDeviceNode failed with error %04x.\n", Result);

  0010d	0f b7 45 ec	 movzx	 eax, WORD PTR _Result$[ebp]
  00111	50		 push	 eax
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0DH@ODPGOPBA@PNP?3?5BlPnpGetSystemDeviceNode?5fa@
  00117	e8 00 00 00 00	 call	 ?BlRtlPrintf@@YAEPBDZZ	; BlRtlPrintf
  0011c	59		 pop	 ecx
  0011d	59		 pop	 ecx

; 425  :             BlRtlHalt();

  0011e	ba a9 01 00 00	 mov	 edx, 425		; 000001a9H
  00123	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09CDGHECLD@blpnp?4cpp?$AA@
  00128	e8 00 00 00 00	 call	 ?BlRtlHaltInternal@@YIXPBDK@Z ; BlRtlHaltInternal
$LN2@BlPnpIniti:

; 426  :         }
; 427  : 
; 428  :         if (Handle == PNP_NO_MORE_NODES) {

  0012d	0f b6 45 f3	 movzx	 eax, BYTE PTR _Handle$[ebp]
  00131	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  00136	75 02		 jne	 SHORT $LN1@BlPnpIniti

; 429  : 
; 430  :             break;

  00138	eb 1c		 jmp	 SHORT $LN3@BlPnpIniti
$LN1@BlPnpIniti:

; 431  :         }
; 432  : 
; 433  :         Node = (PPNP_SYSTEM_DEVICE_NODE) (((ULONG_PTR) Node) + Node->Size);

  0013a	8b 45 e8	 mov	 eax, DWORD PTR _Node$[ebp]
  0013d	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00140	03 45 e8	 add	 eax, DWORD PTR _Node$[ebp]
  00143	89 45 e8	 mov	 DWORD PTR _Node$[ebp], eax

; 434  :         NodeSize -= Node->Size;

  00146	8b 45 e8	 mov	 eax, DWORD PTR _Node$[ebp]
  00149	0f b7 00	 movzx	 eax, WORD PTR [eax]
  0014c	8b 4d f4	 mov	 ecx, DWORD PTR _NodeSize$[ebp]
  0014f	2b c8		 sub	 ecx, eax
  00151	89 4d f4	 mov	 DWORD PTR _NodeSize$[ebp], ecx

; 435  :     }

  00154	eb 88		 jmp	 SHORT $LN4@BlPnpIniti
$LN3@BlPnpIniti:

; 436  : 
; 437  : #if PNP_VERBOSE
; 438  : 
; 439  :     BlRtlPrintf("PNP: DeviceNodeList: %p ... %p\n",
; 440  :                 BlPnpSystemDeviceNodeList,
; 441  :                 (ULONG_PTR) BlPnpSystemDeviceNodeList + BlPnpSystemDeviceNodeListSize - 1);
; 442  : 
; 443  : #endif
; 444  : 
; 445  :     //
; 446  :     // Query PNP ISA configuration.
; 447  :     //
; 448  : 
; 449  :     BlPnpGetIsaConfiguration(&BlPnpIsaConfiguration, Pnp->RealModeDataSegment16);

  00156	8b 45 e4	 mov	 eax, DWORD PTR _Pnp$[ebp]
  00159	66 8b 50 1b	 mov	 dx, WORD PTR [eax+27]
  0015d	b9 00 00 00 00	 mov	 ecx, OFFSET ?BlPnpIsaConfiguration@@3U_PNP_ISA_CONFIGURATION@@A ; BlPnpIsaConfiguration
  00162	e8 00 00 00 00	 call	 ?BlPnpGetIsaConfiguration@@YIGPAU_PNP_ISA_CONFIGURATION@@G@Z ; BlPnpGetIsaConfiguration
$LN11@BlPnpIniti:

; 450  : 
; 451  : #if PNP_VERBOSE
; 452  : 
; 453  :     BlRtlPrintf("PNP: ISA Configuration:\n"
; 454  :                 "PNP:   Revision                 : %u\n"
; 455  :                 "PNP:   # of Card Select Numbers : %u\n"
; 456  :                 "PNP:   Data read port           : %04x\n",
; 457  :                 BlPnpIsaConfiguration.Revision,
; 458  :                 BlPnpIsaConfiguration.NumberOfCardSelectNumbers,
; 459  :                 BlPnpIsaConfiguration.DataReadPort);
; 460  : 
; 461  : #endif
; 462  : 
; 463  :     return;
; 464  : }

  00167	c9		 leave
  00168	c3		 ret	 0
?BlPnpInitialize@@YIXXZ ENDP				; BlPnpInitialize
_TEXT	ENDS
END
